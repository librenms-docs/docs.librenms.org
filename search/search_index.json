{
    "docs": [
        {
            "location": "/", 
            "text": "Installing\n\n              \n\n            \n\n            \n\n            \nUbuntu 16.04 + Nginx\n\n            \nCentOS 7 + Nginx\n\n            \nMigrating from Observium\n\n            \nMore...\n\n        \n\n    \n\n    \n\n        \n\n            \n\n                \n\n                \n Setup\n\n            \n\n            \n\n            \nAuto Discovery\n\n            \nOxidized\n\n            \nRRDCached\n\n            \nMore...\n\n        \n\n    \n\n    \n\n        \n\n            \n\n              \n\n                \n\n                \n Alerting\n\n              \n\n            \n\n            \n\n            \nRules\n\n            \nTemplates\n\n            \nTransports\n\n            \nMore...\n\n        \n\n    \n\n\n\n\n\n    \n\n        \n\n            \n\n              \n\n                \n\n                \n API\n\n              \n\n            \n\n            \n\n            \nUsing the API\n\n            \nAPI Endpoints\n\n            \n\n            \n\n        \n\n    \n\n    \n\n        \n\n            \n\n              \n\n                \n\n                \n Support\n\n              \n\n            \n\n            \n\n            \nFAQ\n\n            \nInstall validation\n\n            \nPerformance tweaks\n\n            \nMore...\n\n        \n\n    \n\n    \n\n        \n\n            \n\n              \n\n                \n\n                \n Developing\n\n              \n\n            \n\n            \n\n            \nCode Guidelines\n\n            \nValidating Code\n\n            \nUsing Git\n\n            \nMore...", 
            "title": "Home"
        }, 
        {
            "location": "/General/Acknowledgement/", 
            "text": "LibreNMS wouldn't be what it is today without the use of some other amazing projects.\nWe list below what we make use of including the license compliance. \n\n\n3rd Party GPLv3 Compliant\n\n\n\n\nBootstrap\n: MIT\n\n\nFont Awesome\n: MIT License\n\n\nJquery Bootgrid\n: MIT License\n\n\nPace\n: Open License\n\n\nTwitter typeahead\n: Open License\n\n\nVis\n: MIT / Apache 2.0\n\n\nTCPDF\n: LGPLv3\n\n\nBootstrap 3 Datepicker\n: MIT\n\n\nBootstrap Dropdown Hover Plugin\n: MIT\n\n\nBootstrap Switch \n: Apache 2.0\n\n\nHandlebars\n: Open License\n\n\nCycle2\n: MIT/GPL\n\n\nJquery\n: MIT\n\n\nJquery UI\n: MIT\n\n\nJquery QRCode\n: MIT\n\n\nMktree\n: Open License\n\n\nMoment\n: MIT\n\n\nTag Manager\n: MIT\n\n\nTW Sack\n: GPLv3\n\n\nGridster\n: MIT\n\n\nPure PHP radius class\n: GPLv3\n\n\nGeSHi - Generic Syntax Highlighter\n: GPLv2+\n\n\nMalaysiaMap.svg - By Exiang [CC BY 3.0 (http://creativecommons.org/licenses/by/3.0)], via Wikimedia Commons\n\n\nCode for UBNT Devices Mark Gibbons \n Initial code base submitted via PR721\n\n\nJquery LazyLoad\n: MIT License\n\n\ninfluxdb-php\n: MIT License\n\n\nHTML Purifier\n: LGPL v2.1\n\n\nSymfony Yaml\n: MIT\n\n\nPHPMailer\n: LGPL v2.1\n\n\npbin\n: GPLv2 (or later - see script header)\n\n\nCorsSlim\n: MIT\n\n\nConfluence HTTP Authenticator\n\n\nGraylog SSO Authentication Plugin\n\n\nSelect2\n: MIT License\n\n\nJustGage\n: MIT\n\n\n\n\n3rd Party GPLv3 Non-compliant\n\n\n\n\nJpGraph (html/includes/jpgraph): QPL 1.0 license\n\n\nMIBS (mibs): unknown/various\n\n\nhtml/graph-realtime.php: BSD (original?)\n\n\nhtml/includes/collectd/: GPLv2 only\n\n\noverLIB (html/js/overlib_mini.js): modified Artistic 1.0?", 
            "title": "Acknowledgements"
        }, 
        {
            "location": "/General/Acknowledgement/#3rd-party-gplv3-compliant", 
            "text": "Bootstrap : MIT  Font Awesome : MIT License  Jquery Bootgrid : MIT License  Pace : Open License  Twitter typeahead : Open License  Vis : MIT / Apache 2.0  TCPDF : LGPLv3  Bootstrap 3 Datepicker : MIT  Bootstrap Dropdown Hover Plugin : MIT  Bootstrap Switch  : Apache 2.0  Handlebars : Open License  Cycle2 : MIT/GPL  Jquery : MIT  Jquery UI : MIT  Jquery QRCode : MIT  Mktree : Open License  Moment : MIT  Tag Manager : MIT  TW Sack : GPLv3  Gridster : MIT  Pure PHP radius class : GPLv3  GeSHi - Generic Syntax Highlighter : GPLv2+  MalaysiaMap.svg - By Exiang [CC BY 3.0 (http://creativecommons.org/licenses/by/3.0)], via Wikimedia Commons  Code for UBNT Devices Mark Gibbons   Initial code base submitted via PR721  Jquery LazyLoad : MIT License  influxdb-php : MIT License  HTML Purifier : LGPL v2.1  Symfony Yaml : MIT  PHPMailer : LGPL v2.1  pbin : GPLv2 (or later - see script header)  CorsSlim : MIT  Confluence HTTP Authenticator  Graylog SSO Authentication Plugin  Select2 : MIT License  JustGage : MIT", 
            "title": "3rd Party GPLv3 Compliant"
        }, 
        {
            "location": "/General/Acknowledgement/#3rd-party-gplv3-non-compliant", 
            "text": "JpGraph (html/includes/jpgraph): QPL 1.0 license  MIBS (mibs): unknown/various  html/graph-realtime.php: BSD (original?)  html/includes/collectd/: GPLv2 only  overLIB (html/js/overlib_mini.js): modified Artistic 1.0?", 
            "title": "3rd Party GPLv3 Non-compliant"
        }, 
        {
            "location": "/General/Changelog/", 
            "text": "1.35\n\n\n(2017-12-20)\n\n\nFeatures\n\n\n\n\nGeneric discovery and poller tests (\n#7873\n)\n\n\nFreeRADIUS application monitoring (\n#7818\n)\n\n\nSave application metrics to db for alerting (\n#7828\n)\n\n\nAdded Entity State polling (\n#7625\n)\n\n\nAdded manage_bills.php script to scripts directory (\n#7633\n) \n\n\nAdded Host dependencies support for alerting (\n#7332\n)\n\n\n\n\nBugfixes\n\n\n\n\nAgent tries to insert processes data that is too long (\n#7891\n)\n\n\nRemove faulty memcached code (not related to distributed polling) (\n#7881\n)\n\n\nRe-added peeringdb back into daily.sh (\n#7884\n)\n\n\nDon't work around bad implementations in snmpwalk_group (\n#7876\n)\n\n\nSome graphs broke due to stacked graphs, remove that change (\n#7848\n)\n\n\nFixed UPS time remaining in Mikrotik RouterOs (\n#7803\n)\n\n\nFixed get_all_ports() for api not returning ports on admin tokens (\n#7829\n)\n\n\nValidate ifHighSpeed is \n 0 in selected port polling (\n#7885\n)\n\n\nAdded user level to getUser for LDAP authentication (\n#7896\n) \n\n\nipmi sensors sending the wrong tags to influxdb (\n#7906\n)\n\n\n\n\nDocumentation\n\n\n\n\nMinor fix to device sensors doc (\n#7874\n)\n\n\nCreate device sensor help doc. (\n#7868\n)\n\n\nUpdated sensor state doc (\n#7822\n)\n\n\nBuild new Cleanup Options doc (\n#7798\n)\n\n\n\n\nRefactoring\n\n\n\n\nStop sending emails to \"NOC\" for default_email target (\n#7917\n)\n\n\nRefactor alert transports to classes (\n#7844\n)\n\n\nUpdate all applications to store metrics (\n#7853\n) \n\n\n\n\nDevices\n\n\n\n\nAdded state sensor support for HPE MSA devices (\n#7808\n)\n\n\nAdded temp and humidity sesors + serial for websensor (renamed from cometsystem-p85xx) (\n#7854\n)\n\n\nAdded Mikrotik POE sensors (\n#7883\n)\n\n\nAdded Mikrotik LLDP discovery (\n#7901\n)\n\n\nUpdate wireless sensors for Ray and Alcoma devices (\n#7820\n)\n\n\nAdded support EdgeCore ECS4120-28T (\n#7880\n)\n\n\nAdded Junos dwdm interface sensor support (\n#7714\n)\n\n\nAdded detection for Cisco FTD devices (\n#7887\n)\n\n\n\n\nWebUI\n\n\n\n\nTimezone support for graylog (\n#7799\n)\n\n\nAdded support for stacked graphs (\n#7725\n)\n\n\nAdded ability to mark all notifications as read (\n#7489\n)\n\n\nDisabled page refresh on Add services page (\n#7804\n)\n\n\nAdded diskusage to top devices widget (\n#7903\n)\n\n\n\n\nAPI\n\n\n\n\nAdded Retrieve BGP sessions by ID (\n#7825\n)\n\n\nFixed disabling tokens (\n#7833\n)\n\n\nAdded support for wireless sensors (\n#7846\n)\n\n\nAdded API method to rename devices (\n#7895\n) \n\n\n\n\nAlerting\n\n\n\n\nValidate email addresses used in alerting (\n#7830\n)\n\n\nAdded generic alerting for state sensors (\n#7812\n)\n\n\n\n\n\n\n1.34\n\n\n(2017-11-26)\n\n\nFeatures\n\n\n\n\nAdded additional sensors for ups-nut\n\n\nTrack rrdtool time for poller (\n#7706\n)\n\n\nImplement snmp_getnext() (\n#7678\n)\n\n\nLDAP auth update: alerts, api, remember me (\n#7335\n)\n\n\nSupport a wider range of link speeds in network maps (\n#7533\n)\n\n\nAllow snmpget in os discovery yaml (\n#7587\n)\n\n\nCheck cli timezone from the validation webpage (\n#7648\n)\n\n\nSelected ports polling per OS (\n#7674\n)\n\n\nAdded purge-port scipt to allow deleting of ports from the CLI. (\n#7528\n)\n\n\nExtra fping checks in validation (\n#7651\n)\n\n\nAdded support for setting php memory_limit in config.php (\n#7704\n)\n\n\nScript to collect port polling data and compare full walk vs selective port polling (\n#7626\n)\n\n\nAllow discovery to check if devices are down before skipping (\n#7780\n)\n\n\n\n\nBugfixes\n\n\n\n\nFixed precache data (\n#7782\n)\n\n\nAuthentication on CentOS6 (\n#7771\n)\n\n\nFixed empty group query for devices (\n#7760\n)\n\n\nNotification read count doesn't decrement in menu bar (\n#7750\n)\n\n\nDo not add invalid Cisco senors seen in IOS 15.6(3)M1 (\n#7629\n)\n\n\nRevert to two gets for sysDescr and sysObjectID (\n#7741\n)\n\n\nFixed Brocade ironware processor precision (\n#7730\n)\n\n\nBasic input validation for screen width and height (\n#7713\n)\n\n\nBetter sanity checks of fping options.\n\n\nDevices detected as ibmtl or generic (\n#7618\n)\n\n\nAdded primary key to perf_times to improve DELETE performance on replicas using ROW based replication (\n#7493\n)\n\n\nFail isPingable() if fping fails, take 2 (\n#7585\n)\n\n\nUpdate ifIndex update on polling when ifIndex is not the port association mode (\n#7574\n) (\n#7575\n)\n\n\nFix Services container alignment (\n#7583\n)\n\n\nAvailability-map showed ping devices as warning (\n#7592\n)\n\n\ndiscovery.php -h all stops working after ping only device (\n#7593\n)\n\n\nImprove poller validation (\n#7586\n)\n\n\nOnly show the neighbour tab if there are neighbors to show (\n#7591\n)\n\n\nUpdated hpe iPdu to remove power and fix load values (\n#7596\n)\n\n\nFunction snmp_get delete quotes in snmp query (\n#7467\n)\n\n\nBetter sanity check of hostname when adding device. (\n#7582\n)\n\n\ngithub-apply sometimes fails on PRs with lots of commits (\n#7604\n)\n\n\nPING fails on servers that don't set PATH in cron (\n#7603\n)\n\n\nCorrect sensor ID when removing device. (\n#7611\n)\n\n\nFixed status services up/down inverse values (\n#7657\n)\n\n\nBetter validation on callback url for Pagerduty integration (\n#7658\n)\n\n\nFixed number comparisons in alerts and device groups (\n#7695\n)\n\n\nFallback to snmpgetnext if db is unavailable (\n#7698\n)\n\n\nErrors with missing posix extension (\n#7666\n)\n\n\nFixed component status log (\n#7723\n)\n\n\nFixed bgpPeers_cbgp discovery for junos (\n#7743\n)\n\n\nFixed incorrect mail validation if (\n#7755\n)\n\n\nFixed discovery-wrapper.py discovery.nodes can sometimes be None when not master (\n#7747\n)\n\n\nFixed bgp-peers fails when ip parsing fails (\n#7773\n)\n\n\nFixed poller-wrapper.py keeps running when a poller takes too long (\n#7722\n)\n\n\nUse correct entity columns for sensors (\n#7775\n)\n\n\nDiscovery os changes weren't properly reflected if os changed (\n#7779\n)\n\n\n\n\nDocumentation\n\n\n\n\nMinor changes and fixes to Alert Rules (\n#7789\n)\n\n\nAdded Web UI rename device. (\n#7769\n)\n\n\nSNMP config for Mac OSX (\n#7767\n)\n\n\nContinue to reorganize docs (\n#7762\n)\n\n\nFix for rule mapping (\n#7751\n)\n\n\nAdded sudo guidelines for Proxmox (\n#7739\n)\n\n\nAdded sudo suggestion for SMART monitoring (\n#7738\n)\n\n\nVM images recommended user update (\n#7737\n)\n\n\nInstall Docs Update for min PHP ver (\n#7630\n)\n\n\nAdded video link showing how to add ping only device (\n#7711\n)\n\n\nFix layout changes to dashboard. (\n#7693\n)\n\n\nCreate new docs on using dashboards (\n#7688\n)\n\n\nAdded Ping Only Device (\n#7687\n)\n\n\nAdded allow graphs without login (\n#7675\n)\n\n\nAdded device-troubleshooting page (\n#7638\n)\n\n\nAdded WebUI to Validate docs (\n#7635\n)\n\n\nMinor spelling fix for device-troubleshooting (\n#7689\n)\n\n\nFix for VM images doc. (\n#7740\n)\n\n\nAdded syslog cleanup option (\n#7581\n)\n\n\nHow to add Weathermaps to Dashboards (\n#7636\n)\n\n\nAdded command to fetch shell script for DHCP Stats (\n#7736\n)\n\n\nAdded ports template to alert rules doc (\n#7763\n) \n\n\n\n\nRefactoring\n\n\n\n\nBetter default temperature sensor limits (\n#7754\n)\n\n\nSwitch to using discovery-wrapper.py by default (\n#7661\n)\n\n\nRewrite a bit of the irc bot (\n#7667\n)\n\n\nAdded the Nvidia SM average as app_status (\n#7671\n)\n\n\nRefactored authorizers to classes (\n#7497\n)\n\n\nOnly update sensor/bgp tables when values are changed (\n#7707\n)\n\n\n\n\nDevices\n\n\n\n\nUpdated Checkpoint Gaia detection and added storage (\n#7656\n)\n\n\nAdded additional APC rPDU2 Sensors (\n#7490\n)\n\n\nInitial detection for Arris Cable Modem devices (\n#7677\n)\n\n\nRemoved unused poller/discovery modules for Arista EOS (\n#7709\n)\n\n\nUpdate hwg-ste and add hwg-ste-plus support (\n#7610\n)\n\n\nAdded state sensors for Palo Alto Networks firewall (\n#7482\n)\n\n\nAdded additional sensors for logmaster Os\n\n\nAdded Temp and Humidity support for ServersCheck devices (\n#7588\n)\n\n\nAdded support for Avtech RoomAlert 32E/W and RoomAlert 11E (\n#7614\n)\n\n\nAdded support for Eltek enexus (\n#7552\n)\n\n\nAdded support for Stormshield devices (\n#7646\n)\n\n\nAdded support for Asentria SiteBoss (\n#7655\n)\n\n\nAdded humidity sensors for hwg-ste (\n#7728\n)\n\n\nAddedd sensor support for UPS NUT devices (\n#7622\n)\n\n\n\n\nWebUI\n\n\n\n\nDon't disable the applications check boxes in settings if the discovery module is disabled. (\n#7615\n)\n\n\nAdded toner support in health metrics list (\n#7595\n)\n\n\nHide rediscover button for ping only devices (\n#7594\n)\n\n\nAdded Health/sensor view for specific device/ports/port (\n#7684\n)\n\n\nUpdated poll-log page to honour force_ip_to_sysname (\n#7712\n)\n\n\nExpose pollers link to show total poll time for all devices per poller (\n#7699\n)\n\n\nUpdated sensors overview header to be consistent with others (\n#7761\n)\n\n\nAllow deletion of dead poller nodes (\n#7721\n)\n\n\n\n\nAPI\n\n\n\n\nAdded support for Oxidized asking for a single host (\n#7705\n)\n\n\nValidate columns parameter against fields in table (\n#7717\n)\n\n\nStop list_logs skipping first row (\n#7772\n)\n\n\n\n\nAlerting\n\n\n\n\nAdded in dell server sensors alert rules to the collection (\n#7647\n)\n\n\n\n\n\n\n1.33\n\n\n(2017-10-29)\n\n\nFeatures\n\n\n\n\nSupport for up/down detection of ping only devices.\n\n\nImprove Device Neighbour WebUI (\n#7487\n)\n\n\nConfigurable 95th percentile (\n#7442\n)\n\n\nAdded AD support nested groups (resubmit #7175) (\n#7259\n)\n\n\nAdded configurable 95th percentile for graphs (\n#7442\n)\n\n\nAdded  sysname as filtering group for oxidized (\n#7485\n)\n\n\nCDP matching incorrect ports (\n#7491\n)\n\n\nIssue warning notification if php version is less than 5.6.4 (\n#7418\n)\n\n\nAdded Web validation support (\n#7474\n)\n\n\nSupport for up/down detection of ping only devices (\n#7323\n)\n\n\n\n\nBugfixes\n\n\n\n\nrfc1628 state sensor translations (\n#7416\n)\n\n\nsnmpwalk_group tables not using entries (\n#7427\n)\n\n\nImprove accuracy of is_valid_hostname() (\n#7435\n)\n\n\nsnmp_get_multi returns no data if the oid doesn't contain a period (\n#7456\n)\n\n\nFixed clickatell alert transport (\n#7446\n)\n\n\nEscape sql credentials during install (\n#7494\n)\n\n\nFixed OEM ipmi sensors that returns unreadable values (\n#7518\n)\n\n\nFixed ospf polling not removing stale data (\n#7503\n)\n\n\nLLDP discovery change local port resolution (\n#7443\n)\n\n\n\n\nDocumentation\n\n\n\n\nInclude Freeswitch in applications doc (\n#7556\n)\n\n\nAdded more example hardware (\n#7542\n)\n\n\nUpdate syslog docs to prevent dates in the future/past (\n#7519\n)\n\n\nAlerts glues (\n#7480\n)\n\n\nImprove CentOS 7 and Ubuntu 16 rrdcached installation instructions (\n#7473\n)\n\n\nRe-organize install docs (\n#7424\n)\n\n\nAdded HipChat V2 WebUI Config Example (\n#7486\n)\n\n\nAlert rules, added in the alert rules videos (\n#7512\n)\n\n\nUpdated references for ##librenms to discord (\n#7523\n)\n\n\nDocument discovery and poller module enable/disable support (\n#7505\n)\n\n\nOpenManage including info for windows (\n#7534\n)\n\n\nAdded SSL config for CentOS 7 with Apache (\n#7529\n)\n\n\nAdded Dynamic Configuration UI for Network-Map.md (\n#7540\n)\n\n\nNew doc for weathermap (\n#7536\n)\n\n\n\n\nDevices\n\n\n\n\nAlways allow empty ifDescr on fortigate (\n#7547\n)\n\n\nAdded temperature sensor to datacom switches. (\n#7522\n)\n\n\nAdded more Procera interfaces (\n#7422\n)\n\n\nAdded firewall graphs for Palo Alto Networks firewall (\n#7483\n)\n\n\nAdded support for Alcoma wireless devices (\n#7476\n)\n\n\nAdded detection for SmartOptics T-Series devices (\n#7433\n)\n\n\nAdded more support for Avocent devices (\n#7444\n)\n\n\nAdded Dlink dap2660 add processors and mempools (\n#7428\n)\n\n\nAdded additional zywall-usg support (\n#7405\n)\n\n\nAdded Dlink dap2660 processors and mempools (\n#7428\n)\n\n\nAdded technicolor TG650S and TG670S (\n#7420\n)\n\n\nAdded support for alternate Equallogic SNMP sysObjectId (\n#7394\n)\n\n\nAdded zyxelnwa storage, mempools and wireless metrics (\n#7441\n)\n\n\nAdded Storage, Memory pools, new status (Array Controller, Logical Drive) for HP ILO4 (\n#7436\n)\n\n\nAdded Support for ApsoluteOS / Defense Pro Hw (\n#7440\n)\n\n\nAdded support for Huawei OceanStor devices (\n#7445\n)\n\n\nAdded detection for Racom OS RAy (#\n7466\n) \n\n\nImproved Zhone MXK Discovery (\n#7488\n)\n\n\nAdded support for EATON-ATS devices (\n#7448\n)\n\n\nAdded support for Alcoma devices (\n#7476\n)\n\n\nAdded support for zywall usg vpn state and flash usage (\n#7500\n)\n\n\nAdded Brocade IronWare interface dBm sensor support (\n#7434\n)\n\n\nAdded Unifi AC HD detection (\n#7516\n)\n\n\nAdded initial detection for netmodule NB1600 (\n#7514\n)\n\n\nAdded support for new Fiberhome OLT Models (\n#7499\n)\n\n\nAdded support for logmaster(ups vendors) os/devices (\n#7524\n)\n\n\nAdded poller modules to ceraos (\n#7470\n)\n\n\nAdded more detection for IgniteNet FusionSwitch (\n#7384\n)\n\n\nAdded Mitel Standard Linux OS Support (\n#7513\n)\n\n\nUpdated Cisco WAP detection and merged in ciscosmblinux OS (\n#7447\n)\n\n\nAdded detection for Proxmox (\n#7543\n) \n\n\n\n\nAlerting\n\n\n\n\nAdded alert rules for RFC1628 UPS to the collection (\n#7415\n)\n\n\nAdded HP iLo and OS-updates rules to the collection (\n#7423\n)\n\n\nAdded more simple rules for the alert collection (\n#7430\n)\n\n\n\n\nRefactor\n\n\n\n\nDiscovery protocols re-write (\n#7380\n)\n\n\n\n\nWebUI\n\n\n\n\nShow only authorized services in availability map (\n#7498\n)\n\n\nAllow user to display ok/warning/critical alerts only (\n#7484\n)\n\n\n\n\nSecurity\n\n\n\n\nStop accepting other variables in install that we do not use (\n#7511\n)\n\n\n\n\n\n\nsource: General/Changelog.md\n\n\n1.32\n\n\n(2017-10-01)\n\n\nFeatures\n\n\n\n\nAdded more rules to the collection of alert rules (\n#7363\n)\n\n\nAllow ignore_mount, ignore_mount_string, ignore_mount_regex per OS (\n#7304\n)\n\n\nAdded script to generate config for new OS (\n#7161\n)\n\n\nAdded Syslog hook for ASA support (\n#7268\n)\n\n\n\n\nBugfixes\n\n\n\n\nIf session save path is \"\", php will use /tmp (\n#7359\n)\n\n\nrfc1628 runtime - allow os quirks (\n#7340\n)\n\n\nSmall error when checking ios for wireless rssi (\n#7300\n)\n\n\nUse Netscaler vserver full names (\n#7279\n)\n\n\nSlower hardware can hit the schema update response timeout (\n#7296\n)\n\n\nDo not issue non-master warning if on the release update channel (\n#7297\n)\n\n\nFixed quotes breaking powerdns app data (\n#7111\n)\n\n\nUpdated graph_types table so graph_subtype has no default value (\n#7285\n)\n\n\nFixed IPv6 host renaming (\n#7275\n)\n\n\nFixed Comware Processor Discovery \n Hardware Info (\n#7206\n)\n\n\nAdded Extreme OS mapping to 'gen_rancid' (\n#7261\n)\n\n\nReverted previous active directory changes \n#7254\n (\n#7257\n)\n\n\nFixed Avtech sensor discovery (\n#7244\n)\n\n\nCorrected variable for timeout messages in unix-agent.inc.php (\n#7246\n)\n\n\nUpdate notification for users with updates disabled (\n#7253\n)\n\n\nFixed the empty() vlan detection check (\n#7241\n)\n\n\nRe-added changes for \n#6959\n removed by accident in \n#7128\n (\n#7240\n)\n\n\nIssues with Geist Watchdog sensors\n\n\nIssues with Geist Watchdog miss-named variable in sensor pre-caching internal humidity and temperature was discovered twice humidity was mis-spelled in yaml discovery temperature and current had incorrect divisor in yaml\n\n\n\n\nDocumentation\n\n\n\n\nAdded new faq Why would alert un-mute itself? (\n#7403\n)\n\n\nAdded performance suggestion for 1min polling documentation\n\n\nUpdated Distributed poller doc as rrdcached needs -R to work properly (\n#7393\n)\n\n\nUpdated docs to include installing xml php modules + updated validate (\n#7349\n)\n\n\nReorganize authentication documentation (\n#7329\n)\n\n\nUpdate RRDCached.md to clarify version for client/server (\n#7320\n)\n\n\nElaborated on permission issues with dmidecode for snmp (\n#7288\n)\n\n\nUpdate Distributed-Poller.md to remove distributed_poller_host\n\n\nAdded debug to services.md (\n#7238\n)\n\n\nFixed API-Docs Link in webui (\n#7242\n)\n\n\nUpdated Services.md include chmod +x (\n#7230\n)\n\n\n\n\nRefactoring\n\n\n\n\nRewrite is_valid_port() (\n#7360\n)\n\n\nrfc1628 sensor tidy up (\n#7341\n)\n\n\nAdded detection of vlan name changes (\n#7348\n)\n\n\nRewrite is_valid_port() (\n#7337\n)\n\n\nUse the Config class includes/discovery (\n#7299\n)\n\n\nUpdated ldap auth to allow configurable uidnumber field (\n#7302\n)\n\n\nImprove yaml state discovery (\n#7221\n)\n\n\nAdded IOS-XR Bundle-Ether shortened/corrected forms (\n#7283\n)\n\n\n\n\nDevices\n\n\n\n\nAdded basic detection for  hanwha techwin devices (\n#7397\n)\n\n\nAdded sensor detection for APC In Row RD devices (\n#7385\n)\n\n\nAdded better hardware and version identification for SAF (\n#7378\n)\n\n\nAdded basic os for EricssonLG ES switches (\n#7289\n)\n\n\nUpdated Engenius OS detection (\n#7365\n)\n\n\nAdded detection for DPS Telecom NetGuardian (\n#7326\n)\n\n\nAdded support for Alpha FXM UPS devices (\n#7324\n)\n\n\nAdded detection for IgniteNet FusionSwitch devices\n\n\nAdded support for A10 ACOS devices (\n#7327\n)\n\n\nAdded more detection for Cisco SB devices\n\n\nAdded support for routeros to pull UPS info\n\n\nAdded additional detection for Cisco small business switches (\n#7317\n)\n\n\nAdded sensor support for Himoinsa Gensets (\n#7315\n)\n\n\nAdded support for SmartOptics M-Series (\n#7314\n)\n\n\nAdded DHCP Leases Graph for Mikrotik (\n#7333\n)\n\n\nAdded support for Toshiba RemotEye4 devices (\n#7312\n)\n\n\nAdded additional Quanta detection (\n#7316\n)\n\n\nAdded additional detection for Calix devices (\n#7325\n)\n\n\nAdded detection for Himoinsa Gensets (\n#7295\n)\n\n\nAdded detection for ServerChecks (\n#7308\n)\n\n\nAdded support for Saf Integra Access points (\n#7292\n)\n\n\nAdded basic Open-E detection (\n#7301\n)\n\n\nUpdated Arista entity-physical support to use high/low values from device (\n#7156\n)\n\n\nAdded support for Mimosa A5 (\n#7287\n)\n\n\nUpdated state sensor code for Netonix\n\n\nAdded support for Radware / AlteonOS OS/Mem/Proc (\n#7220\n)\n\n\nAdded support for DragonWave Horizon (\n#7264\n)\n\n\n\n\nWebUI\n\n\n\n\nUpdated alert rule collection to be table (\n#7371\n)\n\n\nShow how long a device has been down if it is down (\n#7336\n)\n\n\nMakes the .availability-label border-radius fit in with the border a bit better\n\n\nAdded device description to overview page (\n#7328\n)\n\n\nGreatly reduces application memory leak for dashboard (\n#7215\n)\n\n\n\n\nAPI\n\n\n\n\nAdded ability to supports CORS for API (\n#7357\n)\n\n\nAdded simple OSPF API route (\n#7298\n)\n\n\n\n\n\n\n1.31\n\n\n(2017-08-26)\n\n\nFeatures\n\n\n\n\nNotify about failed updates, block detectable bad updates (\n#7188\n)\n\n\nImprove install process (\n#7223\n)\n\n\nActive Directory user in nested groups (\n#7175\n)\n\n\nsysV init script for the IRC bot (\n#7170\n)\n\n\nCreate librenms-irc.service (\n#7087\n)\n\n\nForced OS Cache rebuild for unit tests (\n#7163\n)\n\n\nNew IP parsing classes.  Removes usage of Pear Net_IPv4 and Net_IPv6. (\n#7106\n)\n\n\nAdded support to cisco sensors to link them to ports + macro/docs for alerting (\n#6959\n)\n\n\nsnmp exec support (\n#7126\n)\n\n\n\n\nBugfixes\n\n\n\n\nUpdated dump_db_schema() to use default 0 if available (\n#7225\n)\n\n\nComware dBm Limits \n Comware Sensor Descr (\n#7216\n)\n\n\nUpdate gen_rancid.php to the correct arista os name (\n#7214\n)\n\n\nUse Correct Comware dBm Limits (\n#7207\n)\n\n\nCorrect memory calculation for screenos (\n#7191\n)\n\n\nCambium ePMP CPU reporting fix (\n#7182\n)\n\n\nSend zero for fields without values for graphite (\n#7176\n)\n\n\nSanitize metric name before sending via graphite (\n#7173\n)\n\n\nFixed dump_db_schema / validate to work with newer versions of MariaDB (\n#7162\n)\n\n\nEscape sensor_descr_fixed in dBm sensors graph (\n#7146\n)\n\n\nFixed issue with column size of ifTrunk (\n#7125\n)\n\n\nBug in ipv62snmp function (\n#7135\n)\n\n\nFixed Raspberry Pi sensors (\n#7131\n)\n\n\nCheck session directory is writable before install.php (\n#7103\n)\n\n\nRaritan CPU temperature discovery (\n#7130\n)\n\n\nStrip \" and / from snmpwalk_cache_oid() (\n#7063\n)\n\n\nFixed Raspberry Pi sensors support (\n#7068\n)\n\n\nAdded missing get_group_list() to ldap-authorization auth method (\n#7102\n)\n\n\nService warning/critical alert rules (\n#7105\n)\n\n\nAdded device status reason to up messages. (\n#7085\n)\n\n\nFix string quoting in snmp trim (\n#7120\n)\n\n\nFix missed call to removed is_ip function (\n#7132\n)\n\n\nfix bugs introduced to address-search (\n#7138\n)\n\n\nUpdate avaya-ers.inc.php (\n#7139\n)\n\n\nFix RPI frequency/voltage sensors (\n#7144\n)\n\n\nAttempt to fix repeated sql issue we come across (\n#7123\n)\n\n\nmultiple fixes under agentStpSwitchConfigGroup in EdgeSwitch-SWITCHIN (\n#7180\n)\n\n\nFixed typo Predicated -\n Predicted (2 instances) (\n#7222\n)\n\n\n\n\nDocumentation\n\n\n\n\nUpdated index page for new alerting structure (\n#7226\n)\n\n\nUpdated some old links for alerting (\n#7211\n)\n\n\nUpdated CentOS 7 + Nginx install docs (\n#7209\n)\n\n\nUpdate CentOS 7 + Nginx install docs to set SCRIPT_FILENAME (\n#7200\n)\n\n\nUpdate Component.md  (\n#7196\n)\n\n\nUpdate Two-Factor-Auth formatting (\n#7194\n)\n\n\nUpdate IRC-Bot for systemd use  (\n#7084\n)\n\n\nUpdated API docs formatting (\n#7187\n)\n\n\nUpdated alerting docs / formatting (\n#7185\n)\n\n\nSwap mdx_del_ins with pymdownx.tilde (\n#7186\n)\n\n\nCentralised the Metric storage docs (\n#7109\n)\n\n\nAllow host renames with selinux enforcing for CentOS installs (\n#7136\n)\n\n\nUpdate Using-Git.md (\n#7178\n)\n\n\n\n\nRefactoring\n\n\n\n\nUse anonymous functions for debug error_handler and shutdown_function in index.php (\n#7219\n)\n\n\nUpdated validate.php to only warn users the install is out of date if \n 24 hours (\n#7208\n)\n\n\nUdated edgecos OS polling (\n#7149\n)\n\n\nAbility to edit default alert template (\n#7121\n)\n\n\nReplace escapeshellcmd with Purifier in service checks (\n#7118\n)\n\n\nUse ifName if ifDescr is blank \n#7079\n\n\n\n\nDevices\n\n\n\n\nStop discoverying frequencies on Raritan devices that do not exist + added voltage (\n#7195\n)\n\n\nAdded FDB and ARP support for edgeswitch devices (\n#7199\n)\n\n\nAdded additional sensor support for Sentry4 devices (\n#7198\n)\n\n\nAdded additional vlan support for Juniper devices (\n#7203\n)\n\n\nAdded Kemp LoadMaster Version Info (\n#7205\n)\n\n\nUpdated fans/temp detection for Brocade VDX devices(\n#7183\n)\n\n\nAdded further sensor support for Geist Watchdog (\n#7143\n)\n\n\nAdded detection for Hitachi Data Systems SAN (\n#7160\n)\n\n\nUdated edgecos OS polling to include more models\n\n\nUpdated AKCP sensorProbe detection (\n#7152\n)\n\n\nAdded additional sensor support for Cisco ONS (\n#7096\n)\n\n\nAdded RSSI Support for Cisco IOS wireless devices (\n#7147\n)\n\n\nAdded support for Gude ETS devices (\n#7145\n)\n\n\nAdded support for Trango Apex Lynx OS (\n#7142\n)\n\n\nAdded dry contact state support for AKCP devices (\n#7124\n)\n\n\nAdded fan and temp sensor state discovery Avaya ERS (\n#7134\n)\n\n\nAdded support for Emerson energy systems (\n#7128\n)\n\n\nAdded detection for Alteon OS (\n#7088\n)\n\n\nAdded additional sensors for Microsemi PowerDsine PoE Switches (\n#7114\n)\n\n\nAdded detection for NEC Univerge devices (\n#7108\n)\n\n\nAdded VLAN discovery support for Avaya ERS devices (\n#7098\n) \n\n\nAdded ROS support for state sensors and system temps\n\n\nRemoved check for switch model or firmware version for Avaya ERS switches\n\n\nUpdated QNAP to include CPU temps (\n#7110\n)\n\n\nAdded basic VLAN disco support for Avaya-ERS switches (\n#7098\n)\n\n\nUpdate ees.yaml to use correct overview graphs (\n#7137\n)\n\n\nUpdate edgecos OS polling to include more models (\n#7153\n)\n\n\nAdded Raspbian Logo (\n#7201\n)\n\n\n\n\nWebUI\n\n\n\n\nAdded ability for users to configure selectable times for graphs  (\n#7193\n)\n\n\nUpdated pi-hole graphs for better grouping (\n#7179\n)\n\n\nRemoved ability to use OR for generating rules (\n#7150\n)\n\n\nUpdate avaya-ers to use ifName for displaying (\n#7113\n)\n\n\n\n\nSecurity\n\n\n\n\nSecurity Patch to deal with reported vulnerabilties (\n#7164\n)\n\n\n\n\n\n\n1.30\n\n\n(2017-07-27)\n\n\nFeatures\n\n\n\n\nAdded script to test alerts (\n#7050\n)\n\n\nConfig helper to simplify config access (\n#7066\n)\n\n\nAdd timeout to AD auth, default is 5s (\n#6967\n)\n\n\nIgnore web server log files ownership in validate (\n#6943\n)\n\n\nAdded new parallel snmp-scan.py to replace snmp-scan.php (\n#6889\n)\n\n\nAdd a new locking framework that uses flock. (\n#6858\n)\n\n\nSupport fdb table on generic devices (\n#6902\n)\n\n\nAdded support for sensors to be discovered from yaml (\n#6859\n)\n\n\nImproved install experience (\n#6915\n)\n\n\nUpdated validate to detect lower case tables + added support for checking mariadb 10.2 timestamps (\n#6928\n)\n\n\nAdded support for sending metrics to OpenTSDB (\n#7022\n)\n\n\nFurther improvements and detection added to validate (\n#6973\n)\n\n\nAdded JIRA transport for alerts (\n#7040\n)\n\n\nLog event if device polling takes too long (\n#7065\n)\n\n\n\n\nBugfixes\n\n\n\n\nAllow discovery of IAP radios on Aruba Virtual Controller\n\n\nNetbotz state sensors using wrong value (\n#7027\n)\n\n\nFixed Rittal LCP sensor divisors (\n#7014\n)\n\n\nSet event type alert for alert log entries (\n#7013\n)\n\n\nFixed netman voltage and load divisor values (\n#6905\n)\n\n\nFixed the index for sentry3 current + updated mibs (\n#6911\n)\n\n\nFixed checks for $entPhysicalIndex/$hrDeviceIndex being numeric (\n#6907\n)\n\n\nFixed perf_times cleanup so it actually runs (\n#6908\n)\n\n\nUpdated sed commands to allow rrdstep.php to be used to increase and decrease values (\n#6941\n)\n\n\nFixed FabOS state sensors (\n#6947\n)\n\n\nFixed FDB tables multiple IPs and IPs from other devices adding extra rows (\n#6930\n)\n\n\nFixed bug get_graph_by_port_hostname() only searching hostnames (\n#6936\n)\n\n\nInclude state descriptions in eventlog (\n#6977\n)\n\n\nEltek Valere initial detection (\n#6979\n)\n\n\nFixed all mib errors in base mib directory (\n#7002\n)\n\n\nShow fatal config.php errors on the web page. (\n#7023\n)\n\n\nDefine standard ups-mib divisors properly (\n#6942\n)\n\n\nWhen force adding, use the provided snmp details rather than from $config (\n#7004\n)\n\n\nChange .htaccess to compensate for Apache bug (\n#6971\n)\n\n\nUse the correct high/high warn thresholds for junos dbm sensors (\n#7056\n)\n\n\nStop loading all oses when we have no db connection (\n#7003\n)\n\n\nRestore old junos version code as a fallback (\n#6945\n)\n\n\n\n\nDocumentation\n\n\n\n\nUpdated SNMP configuration Documentation  (\n#7017\n)\n\n\nA couple of small fixes to the dynamic sensor docs (\n#6922\n)\n\n\nUpdate Rancid Integration\n\n\n\n\nRefactoring\n\n\n\n\nUse the new locks for schema updates (\n#6931\n)\n\n\nFinish logic and definition separation for auth (\n#6883\n)\n\n\nAdded ability specify options for sensors yaml discovery (\n#6985\n)\n\n\nReturn more descriptive error when adding duplicate devices on sysName (\n#7019\n)\n\n\n\n\nDevices\n\n\n\n\nAdded additional PBN detection\n\n\nAdded more support for APC sensors (\n#7039\n)\n\n\nAdded sensors for Mikrotik using mtxrOpticalTable + updated MIB (\n#7037\n)\n\n\nAdded additional sensors support for HP ILO4 (\n#7053\n)\n\n\nAdded wireless sensors for SAF Tehnika (\n#6975\n)\n\n\nAdded Calix AXOS/E5-16F Detection (\n#6926\n)\n\n\nAdded more sensor support for raritan devices (\n#6929\n)\n\n\nAdded ExtremeWireless support (\n#6819\n)\n\n\nAdded Rittal LCP Liquid Cooling Package (\n#6626\n)\n\n\nAdded Detect for Toshiba Tec e-Studio printers (\n#6984\n)\n\n\nAdded Valere system sensors and os detection (\n#6981\n)\n\n\nAdded Savin printer support (\n#6982\n)\n\n\nAdded sensor support for APC IRRP 100/500 devices (\n#7024\n)\n\n\nAdded additional sensors for APC IRRP100 Air Conditionner series (\n#7006\n)\n\n\nAdded detection for Gestetner printers (\n#7038\n)\n\n\nAdded FDB support for IOS-XE devices (\n#7044\n)\n\n\nAdded detection for Siemens Ruggedcom Switches (\n#7052\n)\n\n\nAdded CiscoSB Port Suspended Status Info (\n#7064\n)\n\n\nAdded CiscoSB DOM Support (\n#7072\n)\n\n\nAdded support for temp and processor discovery on Avaya ERS3500 (\n#7070\n)\n\n\nAdded detection for TSC Barcode printer (\n#7074\n)\n\n\nAdded state sensor for HPE MSL (\n#7058\n)\n\n\nAdded PBN AIMA3000 detection (\n#7083\n)\n\n\nUpdated UBNT Airos type to wireless (\n#6867\n)\n\n\nUpdated IOS-XE detection for 3000 series devices (like 3850) (\n#6983\n)\n\n\nUpdated JunOS os polling to detect version correctly (\n#6904\n)\n\n\nUpdated Radwin detection (\n#6918\n)\n\n\nUpdated Gamatronic ups use sysObjectID for os discovery (\n#6940\n)\n\n\nUpdated HPE MSM Support (\n#7026\n)\n\n\nUpdated powerwalker sensor discovery to use custom mib (\n#7020\n)\n\n\nUpdated Cisco IOS XE Version Parsing (\n#7073\n)\n\n\n\n\nWebUI\n\n\n\n\nFacelift for alert templates, also added bootgrid (\n#7041\n)\n\n\nSet correct button text when editing an alert template (\n#6916\n)\n\n\nMinor visual changes in schedule maintenance window and its modal (\n#6934\n)\n\n\nFixed issues with http-auth when the guest user is created before the intended user (\n#7000\n)\n\n\nDelhost: Added an empty option for device selection, and a minor db performance fix (\n#7018\n)\n\n\nLoading speed improvement when viewing syslogs for specific device (\n#7062\n)\n\n\n\n\nSecurity\n\n\n\n\nEnable support for secure cookies (\n#6868\n)\n\n\n\n\nAPI\n\n\n\n\nAdded api routes for eventlog, syslog, alertlog, authlog (\n#7071\n)\n\n\n\n\n\n\n1.29\n\n\n(2017-06-24)\n\n\nFeatures\n\n\n\n\nNew snmpwalk_group() function (\n#6865\n)\n\n\nAdded support for passing state to alert templates test \n\n\nAdded option to specify transport when testing a template (\n#6755\n)\n\n\nAdded support to use IP addresses for NfSen filenames (\n#6824\n)\n\n\nAdded pi-hole application support (\n#6782\n)\n\n\nAdded some more coloring and make it easier to colorize messages for irc bot (\n#6759\n)\n\n\nAdded syslog auth failure to alert_rules.json (\n#6847\n)\n\n\nAdded support to use IP addresses for NfSen filenames (\n#6824\n)\n\n\nAdded Irc host authentication (\n#6757\n)\n\n\nAdded Syslog hooks for Oxidized integration (and more) (\n#6785\n)\n\n\n\n\nBugfixes\n\n\n\n\nconfig_to_json.php does not pull in database configuration settings (\n#6884\n)\n\n\nUpdated sysObjectId column in devices table to varchar(128) (\n#6832\n)\n\n\nStrip \" from rPi temp sensor discovery (\n#6815\n)\n\n\nCheck for ifHCInOctets and ifHighSpeed before falling back to if\u2026 (\n#6777\n)\n\n\nUpdated Raspberry Pi Temp sensor discovery (\n#6804\n)\n\n\nFix bad Cisco dBm discovery on some IOS versions (\n#6789\n)\n\n\nIrcbot - reformatted strikethrough for recovered alerts (\n#6756\n)\n\n\nEnsure rrdtool web settings aren't overwrote by defaults (\n#6698\n)\n\n\nAdd column title under device bgp tab (\n#6747\n)\n\n\nCustom config.php os settings (\n#6850\n)\n\n\nFix for syslog-messages from zywall (USG series) (\n#6838\n)\n\n\n\n\nDocumentation\n\n\n\n\nReorganised alerting docs + added some clarifications (\n#6869\n)\n\n\nUpdate Ubuntu and CentOS nginx install doc with a better nginx config (\n#6836\n)\n\n\nAdded note to configure mod_status for Apache application (\n#6810\n)\n\n\nUpdated ask people to contribute documentation (\n#6739\n)\n\n\nReorganize auto-discovery docs and add a little info (\n#6875\n)\n\n\n\n\nDevices\n\n\n\n\nAdded support for Radwin 5000 Series (\n#6876\n)\n\n\nAdded support for Chatsworth PDU (legacy old pdus not sure model number) (\n#6833\n)\n\n\nAdded detection for Microsemi PowerDsine PoE Midspans (\n#6843\n)\n\n\nAdded additional sensors to Axis camera (\n#6827\n)\n\n\nAdded Quanta lb6m device support (\n#6816\n)\n\n\nAdded hardware and version from AirOS 8.x (\n#6802\n)\n\n\nAdded support for processor and memory for 3com devices (\n#6823\n)\n\n\nAdded state sensors to HP Procurve (\n#6814\n)\n\n\nAdded detection for Atal Ethernetprobe (\n#6778\n)\n\n\nUpdated vmware vcsa hardware/version detection  (\n#6783\n)\n\n\nAdded C.H.I.P. power monitor (\n#6763\n)\n\n\nUpdated cisco-iospri to check for numeric + named ifType and included new cisco mibs (\n#6776\n)\n\n\nAdded detection for Arris C4c (\n#6662\n)\n\n\nAdded Current Connections Graph for Cisco WSA (\n#6734\n)\n\n\nAdded detection for AXIS Audio Appliances (\n#6830\n)\n\n\nAdded basic support for CradlePoint WiPipe Cellular Broadband Routers (\n#6695\n)\n\n\nAdded Avaya VSP Temperature Support (\n#6692\n)\n\n\nAdded support for ADVA FSP150CC and FSP3000R7 Series (\n#6696\n)\n\n\nUpdated Oracle ILOM detection (\n#6779\n)\n\n\nAdded Cisco ASR, Nexus, etc. PSU State sensor (\n#6790\n)\n\n\nUpdated Cisco NX-OS detection (\n#6796\n)\n\n\nAdded more detection for Bintec smart devices (\n#6780\n)\n\n\nAdded support for Schneider PowerLogic (\n#6809\n)\n\n\nUpdated Cisco Unified CM detection and renamed to ucos (\n#6813\n)\n\n\nAdded basic Support for Benu OS (\n#6857\n)\n\n\n\n\nWebUI\n\n\n\n\nAdded \"system name\" for the \"Services list\" (\n#6873\n)\n\n\nAllow editing and deleting of lapsed alert schedules (\n#6878\n)\n\n\nAdd bootgrid for authlog page, and fix poll-log searchbar layout on smaller screens (\n#6805\n)\n\n\nUpdated all tables to have the same set number of items showing (\n#6798\n)\n\n\nAllow iframe in notes widget (\n#6773\n)\n\n\nLoad google maps js library only if globe map widget is used\n\n\nAdded service alert rules (\n#6772\n)\n\n\nAdded syslog auth failure to alert_rules.json (\n#6847\n)\n\n\nFixed dashboard slowness with offline browser (\n#6718\n)\n\n\nUpdate graphs to use safer RRD check (\n#6781\n)\n\n\nPopulate a sorted device list (\n#6781\n)\n\n\n\n\nAlerts\n\n\n\n\nAdded elasticsearch transport and docs (\n#6797\n)\n\n\nUpdate irc transport to use templates (\n#6758\n)\n\n\n\n\nAPI\n\n\n\n\nAdded search by os to list_devices (\n#6861\n)\n\n\n\n\nRefactor\n\n\n\n\nDiscovery code cleanups (\n#6856\n)\n\n\n\n\n\n\n1.28\n\n\n(2017-05-28)\n\n\nFeatures\n\n\n\n\nUpdate Juniper MSS Support (\n#6565\n)\n\n\nAdded ability to whitelist ifDescr values from being ignored with good_if (\n#6584\n)\n\n\nAdded additional Unbound chart for query cache info (\n#6574\n)\n\n\nWireless Sensors Overhaul (\n#6471\n)\n\n\nUpdated BIND application (\n#6218\n)\n\n\nAdded script (scripts/test-template.php) to test alert templates (\n#6631\n)\n\n\nImprove Juniper MSS Support (\n#6565\n)\n\n\n\n\nBugfixes\n\n\n\n\nAdded dell to mib_dir for windows / linux (\n#6726\n)\n\n\nFix marking invalid ports as deleted in discovery (\n#6665\n)\n\n\nImprove authentication load time and security (\n#6615\n)\n\n\nPage/graph load speed: part 1 (\n#6611\n)\n\n\nFixed radius debug mode (\n#6623\n)\n\n\nActives PRI calls on Cisco can be an array (\n#6607\n)\n\n\nMySQL app graphs with rrdcached (\n#6608\n)\n\n\nFix issue with wireless sensors when there are too many oids (\n#6578\n)\n\n\nFix GE UPS voltage factor (\n#6558\n)\n\n\nTry to fix load for eaton-mgeups (\n#6566\n)\n\n\nValidate prefer capabilities over suid for fping (\n#6644\n)\n\n\nWhen force adding devices with v3, actually store the details (\n#6691\n)\n\n\nFixed uptime detection (\n#6705\n)\n\n\n\n\nDocumentation\n\n\n\n\nCreate code of conduct page (\n#6640\n)\n\n\nAdd all current wireless types. (\n#6603\n)\n\n\nAdded seconds is the time unit. (\n#6589\n)\n\n\n\n\nRefactoring\n\n\n\n\nAdded lock support to ./discovery.php -h new to prevent overlap (\n#6568\n)\n\n\nOS discovery tests are now dynamic (\n#6555\n)\n\n\nDB Updates will now file level lock to stop duplicate updates (\n#6469\n)\n\n\nIncreased speed of loading syslog pages (\n#6433\n)\n\n\nMoved default alert rules into the collection (\n#6621\n)\n\n\nModest speedup to database config population (\n#6636\n)\n\n\nPretty mysql for alerts breaks regex rules (\n#6614\n)\n\n\nUpdated vlan discovery to support JunOS (\n#6597\n)\n\n\n\n\nDevices\n\n\n\n\nAdded Wireless Support For Cisco IOS-XE(\n#6724\n)\n\n\nImprove Aerohive Support (\n#6721\n)\n\n\nAdded support for Halon Gateway (\n#6716\n)\n\n\nAdded basic HPE OpenVMS detection (\n#6706\n)\n\n\nAdded additional sensor state sysCmSyncStatusId for F5\n\n\nAdded more health information for APC units (\n#6619\n)\n\n\nUpdated Lancom LCOS detection (\n#6651\n)\n\n\nAdded 3 Phase APC UPS Support \n#2733\n \n \n#5504\n (\n#5558\n)\n\n\nAdded FWSM recognition to PIX OS (\n#6569\n)\n\n\nAruba Instant AP wireless sensor support (Freq, NoiseFloor, Power, Util) (\n#6564\n)\n\n\nAdded CPU and Memory pool for BDCom Switchs (\n#6523\n)\n\n\nAdded support for Aruba ClearPass devices (\n#6528\n)\n\n\nAdded support for Cisco's AsyncOS (\n#6545\n)\n\n\nAdded support for AKCP SecurityProbe (\n#6550\n)\n\n\nAdded support for GE UPS (#6549) (\n#6553\n)\n\n\nImprove Extremeware and XOS detection (\n#6554\n)\n\n\nAdded more sensors for Exalt ExtendAir devices (\n#6531\n)\n\n\nAdded support for Terra sti410C (\n#6598\n)\n\n\nMake TiMOS detection more generic, rebrand to Nokia (\n#6645\n)\n\n\nAdded HPE RT3000 UPS support (\n#6638\n)\n\n\nAdded Enhance Barracuda NG Firewall Detection (\n#6658\n)\n\n\nAdded support for Geist PDU (\n#6646\n)\n\n\nImproved Lancom LCOS detection, added LCOS-MIB (\n#6651\n)\n\n\nAdded Basic Cisco SCE Support (\n#6666\n)\n\n\nAdded support for MRV OptiDriver Optical Transport Platform (\n#6656\n)\n\n\nUpdate comware version and serial number polling (\n#6686\n)\n\n\nAdded TiMOS temperature and power supply state sensors (\n#6657\n)\n\n\nAdded state support FAN and Power Supply for Avaya VSP (\n#6693\n)\n\n\nAdded detection for Cisco EPC devices (\n#6690\n)\n\n\nAdded Wireless Support For Cisco IOS-XE (\n#6724\n)\n\n\n\n\nWebUI\n\n\n\n\nMake login form more mobile-friendly (\n#6707\n)\n\n\nUpdated link to peeringdb to use asn (\n#6625\n)\n\n\nDisabled settings button for Shared (read) dashboards if you are not the owner (\n#6596\n)\n\n\nSplit apart max and min sensor limits, allows sorting (\n#6592\n)\n\n\nLoad device list for dropdowns using Ajax (\n#6557\n)\n\n\nUpdated remaining display options where we do not show sysName if hostname is IP (\n#6585\n)\n\n\n\n\nSecurity\n\n\n\n\nRemove possibility of xss in Oxidized and RIPE searches (\n#6595\n)\n\n\n\n\nAlerting\n\n\n\n\nAdded option to enable/disable option for sending alerts to normal users (\n#6590\n)\n\n\nAdded HipChat v2 API + Color Changes (\n#6669\n)\n\n\n\n\n\n\n1.27\n\n\n(2017-04-29)\n\n\nFeatures\n\n\n\n\nAdded sdfsinfo application support (\n#6494\n)\n\n\nAllow _except suffix in yaml os discovery (\n#6444\n)\n\n\nAdded check_mssql_health.inc.php for service checks (\n#6415\n)\n\n\nAdded rrdtool version check to compare installed version with defined version (\n#6381\n)\n\n\nAdded ability to validate database schema (\n#6303\n)\n\n\nSupport powerdns-recursor SNMP extend (\n#6290\n)\n\n\nAdded cisco-vpdn to poller modules (\n#6300\n)\n\n\nSupport non-standard unix socket (\n#5724\n)\n\n\nAdded multi DB support to the Postgres app (\n#6222\n)\n\n\nAdded opengridscheduler job tracker (\n#6419\n)\n\n\nAdded location map regex replace pattern only (\n#6485\n)\n\n\nAdded nfs-server application (\n#6320\n)\n\n\nAdded support for Active Directory bind user (\n#6255\n)\n\n\n\n\nBugfixes\n\n\n\n\nActually reload oxidized when we should not when we think we should (\n#6515\n)\n\n\nDon't run ipmitool without knowing a type  (\n#6504\n)\n\n\nUpdated ipv4/ipv6 discovery to exclude IPs with invalid port_ids (\n#6495\n)\n\n\nUpdated enterasys mempools disco/polling to support multiple ram devices (\n#6458\n)\n\n\nService filenames are snipped when longer than 16 characters (\n#6459\n)\n\n\nUpdated use of ifNameDescr() to cleanPort() (\n#6454\n)\n\n\nAllow line returns in snmprec files with the 4x data type (\n#6443\n)\n\n\nUpdate Shebangs and daily.sh for FreeBSD compatibility (\n#6413\n)\n\n\nCisco Entity Sensor Threshold's returns 0 (\n#6440\n)\n\n\nUpdated enterasys proc discovery by setting correct index (\n#6422\n)\n\n\nAllow unit tests without a sql server (\n#6398\n)\n\n\nFix broken mysql application polling (\n#6317\n)\n\n\nMove user preferences dashboard and twofactor out of users table (\n#6286\n)\n\n\nFixed CPU/Mem polling for Cyberoam-UTM devices (\n#6315\n)\n\n\nFixed F5 ports not using hc counters (\n#6294\n)\n\n\nAdded semicolons in build.sql schema file (\n#6284\n)\n\n\nFixed height of widget boxes (\n#6282\n)\n\n\nUpdate applications poller to use numeric oid instead of nsExtendOutputFull (\n#6277\n)\n\n\nCompare existing device ip to host lookup like for like (\n#6316\n)\n\n\nFix whitespace display on RRDTool Command (\n#6345\n)\n\n\nVlan port mappings not removed (\n#6423\n)\n\n\nFix alerts not honouring interval over 5m (\n#6438\n)\n\n\nImprove CiscoSB polling time (\n#6447\n)\n\n\nUpdated cisco and juniper component macros to exclude disabled sensors (\n#6493\n)\n\n\nAdded more safety checking into create_state_index() (\n#6516\n)\n\n\nFixed inconsistent device discovery (\n#6518\n)\n\n\nFixed notifications by email to Active Directory admins (\n#6134\n)\n\n\nFixed API token for Active Directory admins (\n#6255\n)\n\n\n\n\nDocumentation\n\n\n\n\nAdded FAQ on what disabled/ignored means for devices\n\n\nUpdated install docs + perf to support compressing file types and using http/2 (\n#6466\n)\n\n\nUpdate install docs to remove deprecated GRANT usage\n\n\nUpdate to remove the old method of signing the CLA (\n#6479\n)\n\n\nUpdated Support-New-OS doc to provide clearer information (\n#6492\n)\n\n\n\n\nRefactoring\n\n\n\n\nUse sysDescr to simplify the vyatta detection (\n#6455\n)\n\n\nMove siklu os detection to yaml (\n#6431\n)\n\n\nMove rfc1628_compat into os yaml (\n#6424\n)\n\n\nMove Engenius discovery to yaml (\n#6428\n)\n\n\nMove cometsystem-p85xx (\n#6427\n)\n\n\nUpdate some snmpwalks for ports polling to improve speed (\n#6341\n)\n\n\nMoved ifLabel -\n cleanPort and updated the usage (\n#6288\n)\n\n\nUpdate ucd-diskio discovery to use index + descr as unique identifies \n#4670\n (\n#6270\n)\n\n\nChanged MGE UPS to APC UPS (mgeups -\n apc) (\n#6260\n)\n\n\nChange Cisco UCM category from tele to collaboration (\n#6297\n)\n\n\nMove aos discovery to yaml (\n#6425\n)\n\n\nMove the rest of avaya os detection to yaml (\n#6426\n)\n\n\nMove cometsystem-p85xx to yaml (\n#6427\n)\n\n\nMove Engenius discovery to yaml (\n#6428\n)\n\n\nAdded 'Video' device group and moved Axis cameras to this group' (\n#6397\n)\n\n\nRemove unecessary OS checks in proc / mem polling (\n#6414\n)\n\n\nOnly run pre-cache for the current OS (\n#6453\n)\n\n\nMove ios detection to yaml using new sysDescr_except (\n#6460\n)\n\n\nEaton/MGE UPS reorganization (\n#6388\n)\n\n\n\n\nDevices\n\n\n\n\nAdded more health sensors for c\nc power commanders (\n#6517\n)\n\n\nAdded support for Tycon Systems TPDIN units (\n#6506\n)\n\n\nAdded basic detection for Packetflux SiteMonitor (\n#6498\n)\n\n\nAdded detection for Ericsson UPC devices (\n#6472\n)\n\n\nAdded basic detection for Geist Watchdog (\n#6467\n)\n\n\nAdded support for enLogic PDUs (\n#6464\n)\n\n\nAdded support for Eltex OLT devices (\n#6457\n)\n\n\nAdded Etherwan managed switches (\n#6488\n)\n\n\nAdded signal sensor for opengear devices (\n#6401\n)\n\n\nAdded support for Teradici PCoIP card (\n#6347\n)\n\n\nAdded basic support for Omnitron iConverters (\n#6336\n)\n\n\nAdded support for AvediaStream Encoder (\n#6306\n)\n\n\nAdded ArubaOS PowerConnect detection (\n#6463\n)\n\n\nAdded HPE iPDU detection (\n#6334\n)\n\n\nMoved dnos health disco to powerconnect (\n#6331\n)\n\n\nAdded Nokia (Alcatel-Lucent) SAS-Sx 7210 support (\n#6344\n)\n\n\nAdded Opengear ACM7008 detection (\n#6349\n)\n\n\nAdded detection fro Juniper MSS (\n#6335\n)\n\n\nAdded sensors + additional info for HPE iPDU (\n#6382\n)\n\n\nAdded Basic Ciena (Cyan) Z-Series detection (\n#6385\n)\n\n\nAdded Coriant Network Hardware Page. (\n#6187\n)\n\n\nAdded support for Vanguard ApplicationsWare (\n#6387\n)\n\n\nAdded ICT Digital Power Supply support (\n#6369\n)\n\n\nAdded ICT DC Distribution Panel support (\n#6379\n)\n\n\nAdded more detection for Comware (\n#6386\n)\n\n\nAdded Multi-lane optics on Juniper equipment (\n#6377\n)\n\n\nAdded detection and sensor support for EMC OneFS v8 (\n#6416\n)\n\n\nAdded detection for IgniteNet HeliOS (\n#6417\n)\n\n\nAdded basic detection for Tandberg Magnum tape units (\n#6421\n)\n\n\nAdded detection for Ciena packet switches (\n#6462\n)\n\n\nAdded Cisco SG355-10P support (\n#6477\n)\n\n\nAdded mem/cpu support for TiMOS (\n#6483\n)\n\n\nAdded support for C\nC Commander Plus units (\n#6478\n)\n\n\nAdded Equallogic add disk status (\n#6497\n)\n\n\n\n\nWebUI\n\n\n\n\nUpdated bgp table to use bootstrap properly (\n#6406\n)\n\n\nUpdate poller_modules_perf to not show OS disabled module graphs (\n#6276\n)\n\n\nSelect the correct dashboard when there are no defaults. (\n#6339\n)\n\n\nFix redirect on login for instances behind reverse proxies (\n#6371\n)\n\n\nFixed the display date for the current version (\n#6474\n)\n\n\n\n\nAPI\n\n\n\n\nAllow cidr network searches of the ARP table (\n#6378\n)\n\n\n\n\n\n\n1.26\n\n\n(2017-03-25)\n\n\nFeatures\n\n\n\n\nAdded syslog alert transport (\n#6246\n)\n\n\nSend collected data to graphite server (\n#6201\n)\n\n\nAdded SMART application support (\n#6181\n)\n\n\nPeeringdb integration to show the Exchanges and peers for your AS' (\n#6178\n)\n\n\nAdded support for sending alerts to Telegram \n#2114\n (\n#6202\n)\n\n\nAdded pbin.sh to upload text to p.libren.ms (\n#6175\n)\n\n\nAdded better BGP support for Arista (\n#6046\n)\n\n\nAdded rrd step conversion script (\n#6081\n)\n\n\nStore the username in eventlog for any entries created through the Webui (\n#6032\n)\n\n\nAdded Nvidia GPU  application support (\n#6024\n)\n\n\nAdded Squid application support (\n#6011\n)\n\n\nAdded FreeBSD NFS Client/Server application support (\n#6008\n)\n\n\nAdded get_disks function (\n#6058\n)\n\n\nUpdated Nfsen integration support (\n#6003\n)\n\n\nAdded Basic Oxidized Node List (\n#6017\n)\n\n\nAdded support for dynamic interfaces in ifAlias script (\n#6005\n)\n\n\nAdded support Postfix application (\n#6002\n)\n\n\nAdded Postgres application support (\n#6004\n)\n\n\nAdded ability to show links to fixes for validate (\n#6054\n)\n\n\nAdded FreeBSD NFS Client/Server application support (\n#6008\n)\n\n\nAdded Squid application support (\n#6011\n)\n\n\nAdded Nvidia GPU application support (\n#6024\n)\n\n\nAdded app_state support for applications #5068 (\n#6061\n)\n\n\nSend default mail when no email destinations found (\n#6165\n)\n\n\nAdded new alert rules to collection (\n#6166\n)\n\n\nAdded SMART app support (\n#6181\n)\n\n\nAdded Application discovery (\n#6143\n)\n\n\nAdded syslog alert transport and docs (\n#6246\n)\n\n\n\n\nBugfixes\n\n\n\n\nClear out stale alerts (\n#6268\n)\n\n\nRemove min value for ntp* graphs \n#6240\n\n\nAlerts that worsen or get better will now record updated info \n#4323\n (\n#6203\n)\n\n\nDo not show overview graphs when user only has port permissions for device (\n#6230\n)\n\n\nYaml files for edgeos and edgeswitch (\n#6208\n)\n\n\nFix Liebert humidity and temp sensors \n#6196\n (\n#6198\n)\n\n\nGraphs $auth check was too strict (\n#6195\n)\n\n\nAlter the database to set the proper character set and collation (\n#6189\n)\n\n\nWrong NetBotz file location (\n#6188\n)\n\n\nChange rfc1628 'state' (est. runtime and on battery) to runtime (\n#6158\n)\n\n\nFix the displaying of alert info for historical alerts \n#6092\n (\n#6107\n)\n\n\nRecord actual sensor value for unix-agent hddtemp \n#5904\n (\n#6089\n)\n\n\nPing perf is in milliseconds, not seconds (\n#6140\n)\n\n\nSVG scaling issues in Internet Explorer (\n#6021\n)\n\n\nOld / duplicate sensors would never be removed, this is fixed by setting the $type correctly \n#6044\n (\n#6079\n)\n\n\nRefactor ipoman cache code to use pre-cache in sensors \n#5881\n (\n#5983\n)\n\n\nFixed the previous graphs for diskio/bits \n#6077\n (\n#6083\n)\n\n\nUpdate OSTicket transport to use the from email address \n#5739\n (\n#5927\n)\n\n\nDo not try and only include files once when they are needed again! (\n#5881\n)\n\n\nCorrect the use of GetContacts() #5012 (\n#6059\n)\n\n\nNetonix: properly set default fanspeed limits (\n#6144\n)\n\n\nFix Generex load sensor divisor (\n#6155\n)\n\n\nSensors not being removed from database (\n#6169\n)\n\n\nUpdated http-auth to work with nginx http auth #6102 (\n#6174\n)\n\n\nChange rfc1628 'state' (est. runtime and on battery) to runtime (\n#6158\n)\n\n\n\n\nDocumentation\n\n\n\n\nRenamed the mysql extend script to just mysql (\n#6126\n)\n\n\n\n\nRefactoring\n\n\n\n\nMove some DNOS detection to PowerConnect \n#6150\n (\n#6206\n)\n\n\nRename check_domain_expire.inc.php to check_domain.inc.php (\n#6238\n)\n\n\nFurther speed improvements to port poller (\n#6037\n)\n\n\n\n\nDevices\n\n\n\n\nAdded Rx levels on Ubiquiti Airfibre (\n#6160\n)\n\n\nAdded detection for Hirschmann Railswitch \n#6161\n (\n#6207\n)\n\n\nSupport for Netscaler SDX appliances (\n#6249\n)\n\n\nAdded discovery of Cyclades ACS (\n#6234\n)\n\n\nAdded additional sensors for Liebert / Vertiv \n#5369\n (\n#6123\n)\n\n\nAdded state detection for Dell TL4k \n#2752\n\n\nAdded support for Cyberpower PDU (\n#6013\n)\n\n\nAdded support for Digipower PDU (\n#6014\n)\n\n\nBasic Lantronix UDS support (\n#6042\n)\n\n\nAdded detection for more Dell switches (\n#6048\n)\n\n\nAdded HPE Comware Processor Discovery (\n#6029\n)\n\n\nAdded Basic FortiWLC Support (\n#6016\n)\n\n\nAdded support for F5 Traffic Management Module mempool (\n#6076\n)\n\n\nAdded new Planet switch (\n#6085\n)\n\n\nAdded state detection for Dell TL4k (\n#6094\n)\n\n\nAdded extrahop detection (\n#6097\n)\n\n\nUpdated 3com switch detection (\n#6114\n)\n\n\nImproved APC NetBotz Support (\n#6157\n)\n\n\nAdded state support for HP servers #5113 (\n#6124\n)\n\n\nAdded Coriant support (\n#6026\n)\n\n\nBasic Zebra Print Server detection (\n#6162\n)\n\n\nAdded state sensor support for RFC1628 UPS (\n#6153\n)\n\n\nAdded APC NetBotz State Sensor Support (\n#6167\n)\n\n\nUpdated Sonus SBC os detection #6241 (\n#6243\n)\n\n\nAdded discovery of Cyclades ACS 6000 (\n#6234\n)\n\n\n\n\nWebUI\n\n\n\n\nDo not show disabled devices in alerts list as they stale \n#6213\n (\n#6263\n)\n\n\nCreate correct link for BGP peers \n#5958\n\n\nUpdate device overview to not show hostname when certain conditions match \n#5984\n (\n#6091\n)\n\n\nDisplay sysnames/hostnames instead of ip addresses \n#4155\n\n\nFix BGP Icon for global search \n#6031\n\n\nGenerex: more helpful overview graphs (\n#6154\n)\n\n\nAdded ability to set warning percentage for CPU and mempools (\n#5901\n)\n\n\nStop autorefresh on bill edit page #6182 (\n#6193\n)\n\n\nAllow remember_token to be null (\n#6231\n)\n\n\nSet the from / to for graphs in the devices list #6262 (\n#6264\n)\n\n\n\n\nSecurity\n\n\n\n\nStop multiport_bits_separate graphs for showing regardless of auth \n#6101\n (\n#6109\n)\n\n\n\n\nAPI\n\n\n\n\nExpose ports in API requests for bills (\n#6069\n)\n\n\nAdded new route for multiport bit graphs + asn list_bgp filter (\n#6129\n)\n\n\n\n\n\n\n1.25\n\n\n(2017-02-26)\n\n\nFeatures\n\n\n\n\nAdd fail2ban application support (\n#5924\n)\n\n\nAdd additional service checks (\n#5941\n)\n\n\nAdded phpunit db setup tests (\n#5594\n)\n\n\nUpdated rrdcached stats app to support Fedora/Centos (\n#5768\n)\n\n\nAdded Cisco Spark Transport \n#3182\n\n\nRancid config file generator (\n#5689\n)\n\n\nAdded Rocket.Chat transport \n#5427\n\n\nAdded SMSEagle transport \n#5989\n\n\nAdded generic hardware rewrite function\n\n\nCollect sysDescr and sysObjectID for stats to improve os detection (\n#5510\n)\n\n\nUpdate Debian's guestId for VMware (\n#5669\n)\n\n\nAllow customisation of rrd step/heartbeat when creating new rrd files (\n#5947\n)\n\n\nAdded ability to output graphs as svg (\n#5959\n) \n\n\nImprove ports polling when ports are still down or marked deleted (\n#5805\n) \n\n\n\n\nBugfixes\n\n\n\n\nSyslog, pull out pam program source (\n#5942\n)\n\n\nLoad wifi module for sub10 OS (\n#5963\n)\n\n\nShow sysName on network map when ip_to_sysname enabled (\n#5962\n)\n\n\nExim queue graph (\n#5945\n)\n\n\nUpdated qnap sensor code to be more generic \n#5910\n (\n#5925\n)\n\n\nRemove the non-functional buttons for non-admins in devices/services (\n#5856\n)\n\n\nVarious variables will all be updated if they are blank \n#5811\n (\n#5836\n)\n\n\nPatch generic_multi graph to fix legend overflow \n#5766\n\n\nUpdate lmsensors temp sensors to support 0c values so they do not get removed \n#5363\n (\n#5823\n)\n\n\nUpdate macros with / in to have spaces (\n#5741\n)\n\n\nAdded the service parameter to checks that were missing it (\n#5753\n)\n\n\nIgnore ports where we only have two entries in the array, this signals bad data \n#1366\n (\n#5722\n)\n\n\nFixed system temperature from ipmi descr including a space at the end\n\n\nIncorrect hostname in the mouse-over of the services in the availability-map \n#5734\n\n\nMono theme panel headers black (\n#5705\n)\n\n\nMake about page toggle look better for zoomed in browsers \n#5219\n (\n#5680\n)\n\n\nIgnore toners with values -2 which is unknown \n#5637\n (\n#5654\n)\n\n\nCheck lat/lng are numeric rather than !empty \n#5585\n (\n#5657\n)\n\n\nFix device edit health update icons (\n#5996\n)\n\n\nService module has conflicted configuration files (\n#5903\n)\n\n\naddhost.php throw proper exception when database add fails (\n#5972\n)\n\n\nFix snmpbulkwalk in ifAlias script (\n#5547\n)\n\n\nArista watts to dbm conversion (\n#5773\n)\n\n\nPoll DCN stats using OIDS (\n#5785\n)\n\n\nUpdated qnap sensor code to be more generic (\n#5229\n)\n\n\n\n\nDocumentation\n\n\n\n\nUpdate Applications to use correct link for exim-stats (\n#5876\n)\n\n\nAdded info on using munin scripts \n#2916\n (\n#5871\n)\n\n\nConfiguring  SNMPv3 on Linux\n\n\nUpdated example for using bad_if_regexp \n#1878\n (\n#5825\n)\n\n\nUpdate Oxidized integration to show example of SELinux setup\n\n\nUpdate Graylog docs to clarify ssl and hostname use\n\n\n\n\nRefactoring\n\n\n\n\nCentralise device up/down check and use in disco \n#5862\n (\n#5897\n)\n\n\nConvert Hikvision discovery to yaml (\n#5781\n)\n\n\nVarious Code Cleanup (\n#5777\n)\n\n\nUpdated storing of sensors data to be used in unix-agent \n#5904\n\n\nRefactor sensor discovery (\n#5550\n)\n\n\n\n\nDevices\n\n\n\n\nAdd Eaton UPS Charge Sensor (\n#6001\n)\n\n\nAdded CPU and memory for Entera devices \n#5974\n\n\nAdded SEOS CPU discovery \n#5917\n\n\nAdded further detection for CiscoSB (ex Linksys) devices (\n#5922\n)\n\n\nUpdated ibmnos support for Lenovo branded devices \n#5894\n (\n#5920\n)\n\n\nInitial discovery for Vubiq Haulpass V60s\n#5745\n\n\nAdded further QNAP Turbo NAS detection \n#5229\n (\n#5804\n)\n\n\nAdded support for Fujitsu NAS devices \n#5309\n (\n#5816\n)\n\n\nAdded proc, mem and sensor support for FabricOS \n#5295\n (\n#5815\n)\n\n\nAdded further support for Zynos / Zyxell devices \n#5292\n (\n#5814\n)\n\n\nAdded more Netgear detection \n#5789\n\n\nUpdated DCN serial/hardware/version detection \n#5785\n\n\nAdd F5 Hardware and S/N detection (\n#5797\n)\n\n\nImproved Xerox discovery (\n#5780\n)\n\n\nImproved Mikrotik RouterOS and SwOS detection (\n#5772\n)\n\n\nImproved Pulse Secure detection (\n#5770\n)\n\n\nImproved Lancom device detection (\n#5758\n)\n\n\nimproved Brocade Network OS detection (\n#5756\n)\n\n\nimproved Dell PowerConnect discovery (\n#5761\n)\n\n\nImproved HPE Procurve/OfficeConnect discovery (\n#5763\n)\n\n\nImproved Zyxel IES detection (\n#5751\n)\n\n\nImproved Fortinet Fortiswitch detection (\n#5747\n)\n\n\nImproved Brocade Fabric OS detection (\n#5746\n)\n\n\nAdded support for HPE ILO 4 (\n#5726\n)\n\n\nAdded serial, model and version support for HPE MSL (\n#5667\n)\n\n\nAdded support for Kemp Loadbalancers (\n#5668\n)\n\n\nAdditional TPLink JetStream support (\n#5909\n)\n\n\nAdditional detection for Dasan devices (\n#5711\n)\n\n\nAdded initial support for Meinberg LANTIME OS v6 (\n#5719\n)\n\n\nAdded support for Zyxel XS (\n#5730\n)\n\n\nAdded support for Exterity AvediaPlayer (\n#5732\n)\n\n\nAdded detection for OpenGear (\n#5744\n)\n\n\nImproved support for TiMOS (Alcatel-Lucent) switches (\n#5533\n)\n\n\nImproved Raritan detection (\n#5771\n)\n\n\nAdded Kyocera Mita support (\n#5782\n)\n\n\nAdded detection for Toshiba TEC printer's (\n#5792\n) \n\n\nAdded support for Cyberoam UTM devices (\n#5542\n)\n\n\nImproved hardware detection for Xerox (\n#5831\n)\n\n\nAdded further sensor support for APC units (\n#2732\n)\n\n\nAdded detction for Mellanox i5035 infiniband switch (\n#5887\n)\n\n\nAdded detection for Powerconnect M8024-k (\n#5905\n)\n\n\nAdded detection for HPE MSA storage (\n#5907\n)\n\n\n\n\nWebUI\n\n\n\n\nUpdate services pages\n\n\nNew Cumulus Logo (\n#5954\n)\n\n\nAdded link to APs for alert details \n#5878\n (\n#5898\n)\n\n\nSet the device logo and cell to have a max width (\n#5700\n)\n\n\nNew eventlog severity classification (\n#5830\n)\n\n\nUpdate Zyxel image (os/logos to .svg) (\n#5855\n)\n\n\nRemove the non-functional buttons for non-admins in services (\n#5833\n)\n\n\nRemove the ability to activate statistics for non-admins (\n#5829\n)\n\n\nAdd SVG logo/os icon for Generex UPS (\n#5827\n)\n\n\nurldecode device notes \n#5110\n (\n#5824\n)\n\n\nReplace Ntp with NTP in Apps menu (\n#5791\n)\n\n\nAdding text logo to HPE logo (\n#5728\n)\n\n\nOnly show sysName once if force_ip_to_sysname is enabled \n#5600\n (\n#5656\n)\n\n\nAdd $config['title_image'] in doc and use it also for login screen (\n#5683\n)\n\n\nUpdate create bill link to list bill or list bills depending on if port exists in bills \n#5616\n (\n#5653\n)\n\n\nRemove ifIndex for ports list but add debug button to show port info (\n#5679\n)\n\n\n\n\nAPI\n\n\n\n\nAdded the ability to list devices by location in the api (\n#5693\n)\n\n\nIP and Port API additions (\n#5784\n)\n\n\nLimit get_graph_by_port_hostname() to one port and exclude deleted (\n#5936\n)\n\n\n\n\n\n\n1.24\n\n\n(2017-01-28)\n\n\nFeatures\n\n\n\n\nBasic Draytek Support (\n#5625\n)\n\n\nAdded additional information to Radwin discovery. (\n#5591\n)\n\n\nAdded Serial number support for Mikrotik Devices (\n#5590\n)\n\n\nSupport large vendor logos (\n#5573\n)\n\n\nAdded pre-commit git script to support failing fast\n\n\nAdded basic recurring maintenance for alerts \n#4480\n\n\nAdded check for if git executable (\n#5444\n)\n\n\nOxidized basic config search (\n#5333\n)\n\n\nAdd support for SVG images (\n#5275\n)\n\n\nAdd mysql failed query logging + fixed queries that break ONLY_FULL_GROUP_BY (\n#5327\n)\n\n\n\n\nBugfixes\n\n\n\n\nLogo scalling to support squarish logos (\n#5647\n)\n\n\ntop-devices widget now will honour for ip to sysName config \n#5388\n (\n#5643\n)\n\n\nRemove duplicate hostnames in arp search box \n#5631\n (\n#5641\n)\n\n\nAlert templates designer now fixed \n#5636\n (\n#5638\n)\n\n\nUpdate ifAlias script to deal with GRE interfaces (\n#5546\n)\n\n\nAllow invalid hostnames during discovery when discovery_by_ip enabled \n#5525\n\n\nStop creating dashboards when user has a default that no longer exists \n#5610\n (\n#5613\n)\n\n\nFix Riverbed optimization polling (\n#5622\n)\n\n\nHtml purify init wasn't done always when it was used (\n#5626\n)\n\n\nFixed FreeNAS detection \n#5518\n (\n#5608\n)\n\n\nAdd extra check to Junos DOM discovery (\n#5582\n)\n\n\nHTML Purifier would create tmp caches within the vendor folder, moved to users tmp dir \n#5561\n (\n#5596\n)\n\n\nPHP 7.1 function usages with too few parameters (\n#5588\n)\n\n\nFixed graphs for services not working (\n#5569\n)\n\n\nFix broken netstats ip forward polling (\n#5575\n)\n\n\nSupport hosts added by ipv6 without DNS \n#5567\n\n\nChanging device type now is persistant (\n#5529\n)\n\n\nFixed JunOS bgpPeers_cbgp mistakenly removed + better support for mysql strict mode \n#5531\n (\n#5536\n)\n\n\nAllow overlib_link to accept a null class \n#5522\n\n\nStop flattening config options added in config.php  (\n#5493\n)\n\n\nStop flattening config options added in config.php (\n#5491\n)\n\n\nospf polling, revert set_numeric use (\n#5480\n)\n\n\nUpdated prestiage detection \n#5453\n (\n#5470\n)\n\n\nValidate suid is set for fping (\n#5474\n)\n\n\nAdd missing ups-apcups application poller \n#5428\n\n\nLinux detect by oid too (\n#5439\n)\n\n\nAPC -1 Humidity Sensor Value \n#5325\n (\n#5375\n)\n\n\nFix sql errors due to incorrect cef table name \n#5362\n\n\nDetection blank or unknown device types and update \n#5412\n (\n#5414\n)\n\n\nUnifi switch detection (\n#5407\n)\n\n\nDetect device type changes and update \n#5271\n (\n#5390\n)\n\n\nTypo in IBM icon definition (\n#5395\n)\n\n\nDon't support unifi clients that don't report data (\n#5383\n)\n\n\nFix Oxidized Config Search Output (\n#5382\n)\n\n\nAdded support for autotls in mail transport \n#5314\n\n\nvalidate mysql queries (\n#5365\n)\n\n\nOS type and group not being set (\n#5357\n)\n\n\nStop logging when a vm no longer is on the host being polled (\n#5346\n)\n\n\nDark/mono logo was incorrect (\n#5342\n)\n\n\nSpecify specific mkdocs version (\n#5339\n)\n\n\nCorrect icon for ciscosb (\n#5331\n)\n\n\nCorrection on addHost function to handle the force_add parameter in api (\n#5329\n)\n\n\nMikrotik cpu detection (\n#5306\n)\n\n\nDo not use generic icon by default (\n#5303\n)\n\n\nUpdate jpgraph source file to remove check for imageantialias() \n#5282\n (\n#5284\n)\n\n\nAPC PDU2 Voltage Discovery (\n#5276\n)\n\n\nEmpty mac adds an entry to the arp table (\n#5270\n)\n\n\nRestrict inventory api calls to the device requested (\n#5267\n)\n\n\n\n\nDocumentation\n\n\n\n\nMikrotik SNMP configuration example (\n#5628\n)\n\n\nAdd logrotate config and update install docs (\n#5520\n)\n\n\nAdded an example hardware doc for people to show what they have (\n#5532\n)\n\n\nAdded faq info on realStorageUnits (\n#5513\n)\n\n\nUpdate Installation-Ubuntu-1604-Nginx.md to remove default nginx site config\n\n\nUpdated RRDCached doc for Debain Jessie installation (\n#5380\n)\n\n\nUpdated os update application\n\n\nAdded more info in to the github issue template (\n#5370\n)\n\n\nUpdate Installation-Ubuntu-1604-Nginx.md to correct snmpd.conf location\n\n\nUpdate installation documentation on Ubuntu 16.x and CentOS 7 to use systemd (\n#5324\n)\n\n\nUpdate Centos 7 nginx install steps (\n#5316\n)\n\n\nAdded section on smokeping and rrdcached use\n\n\n\n\nRefactoring\n\n\n\n\nUpdate collectd functions.php to use non-conflict rrd_info function \n#5478\n (\n#5642\n)\n\n\nUpdated some default disco/poller modules to be disabled/enabled (\n#5564\n)\n\n\nAdded config option for database port (\n#5517\n)\n\n\nMove HTMLPurifier init to init.php so we only create one object. (\n#5601\n)\n\n\nDisable unused Cisco WAAS modules (\n#5574\n)\n\n\nSome more os definition changes (\n#5527\n)\n\n\nChanged Redback to SEOS, and added logo and temperature discovery \n#5181\n\n\nMove some os from linux and freebsd discovery files to yaml (\n#5429\n)\n\n\nMySQL strict and query fixes (\n#5338\n)\n\n\nSophos discovery to yaml (\n#5416\n)\n\n\nMove include based discovery after yaml discovery (\n#5401\n)\n\n\nMoved simple os discovery into yaml config (\n#5313\n)\n\n\nMove mib based polling into yaml config files (\n#5234\n)\n\n\nUse Composer to manage php dependencies (\n#5216\n)\n\n\n\n\nDevices\n\n\n\n\nAdded further support for Canon printers \n#5637\n (\n#5650\n)\n\n\nUpdated generex ups support \n#5634\n (\n#5640\n)\n\n\nAdded detection for Exinda \n#5297\n (\n#5605\n)\n\n\nAdded additional sensor support for PowerWalker devices \n#5080\n (\n#5552\n)\n\n\nAdded support for Brocade 200E (\n#5617\n)\n\n\nImprove CiscoSB detection \n#5511\n\n\nAdded further detection for DCN devices \n#5519\n (\n#5609\n)\n\n\nAdded support for Zhone MXK devices \n#5554\n (\n#5611\n)\n\n\nAdded more detection for Procurve devices \n#5422\n (\n#5607\n)\n\n\nUpdated detection for Dasan NOS devices \n#5359\n (\n#5606\n)\n\n\nAdded support MGEUPS EX2200 \n#3364\n (\n#5602\n)\n\n\nImprove Cisco ISE detection (\n#5578\n)\n\n\nUpdated akcp discovery definition \n#5396\n (\n#5501\n)\n\n\nAdd detection for radwin devices\n\n\nUpdate zywall and zyxelnwa detection \n#5343\n\n\nAdded support for Ericsson ES devices \n#5195\n (\n#5479\n)\n\n\nAdd support for DocuPrint M225 (\n#5484\n)\n\n\nAdded Dell B5460dn and B3460dn printer support (\n#5482\n)\n\n\nAdded signal support for RouterOS (\n#5498\n)\n\n\nAdded additional sensor support for Huawei VRP \n#4279\n\n\nAdded loadbalancer information from F5 LTM (\n#5205\n)\n\n\nAPC Environmental monitoring units \n#5140\n\n\nAdd support for KTI switches (\n#5413\n)\n\n\nDetect all CTC Union devices (\n#5489\n)\n\n\nAdd addition riverbed information \n#5170\n\n\nAdded support for CTC Union devices (\n#5402\n)\n\n\nAdd wifi clients for Deliberant DLB APC Button, DLB APC Button AF and DLB APC 2mi \n#5456\n\n\nAdded Tomato and AsusWRT-Merlin OS \n#5254\n (\n#5398\n)\n\n\nDetect Fiberhome AN5516-04B\n\n\nImprove Checkpoint Discovery (\n#5334\n)\n\n\nAPC in-row coolers\n\n\nAdded additional detection for Dell UPS (\n#5322\n)\n\n\nadded more support for dasan-nos (\n#5298\n)\n\n\nAdded support for Dasan NOS \n#5179\n + disco change (\n#5255\n)\n\n\nEdge core OS ECS3510-52T (\n#5286\n)\n\n\nBasic Dell UPS Support \n#5258\n\n\nBasic Fujitsu DX Support \n#5260\n\n\n\n\nWebUI\n\n\n\n\nFinal Font Awesome conversion (\n#5652\n)\n\n\nAdded ?ver=X to LibreNMS style sheets so we can force refreshes in future (\n#5651\n)\n\n\nNew generic os SVG icon (\n#5645\n)\n\n\nNew LibreNMS logo assets (\n#5629\n)\n\n\nCenter device icons.  Keep device actions at two rows (\n#5627\n)\n\n\nAdditional Font Awesome icons (\n#5572\n)\n\n\nAllows one to view a map of the SNMP location set for a device (\n#5495\n)\n\n\nUpdate health menu icons\n\n\nUpdated icons to use Font Awesome (\n#5468\n)\n\n\nAllow billing to use un-auth graphs (\n#5449\n)\n\n\nUpdate Font Awesome to 4.7.0 (\n#5476\n)\n\n\nUpdate add/edit user page to use their instead of his \n#5457\n (\n#5460\n)\n\n\nFix Ports Table AdminDown Search (\n#5426\n)\n\n\nDisabled editing device notes for non-admin users (\n#5341\n)\n\n\nSmall Best Practice Fixes\n\n\n\n\n\n\n1.23\n\n\n(2017-01-01)\n\n\nFeatures\n\n\n\n\nAdd nagios check_procs support (\n#5214\n)\n\n\nAdded support for sending email notifications to default_contact if updating fails (\n#5026\n)\n\n\nEnable override of $config values set in includes/definitions.inc.php (\n#5096\n)\n\n\nAdd APC UPS battery replacement status \n#5088\n\n\n\n\nBugfixes\n\n\n\n\nAPC PDU2 Voltage Discovery (\n#5276\n)\n\n\nEmpty mac adds an entry to the arp table (\n#5270\n)\n\n\nRestrict inventory api calls to the device requested (\n#5267\n)\n\n\nUpdate any IP fields using inet6_ntop()  \n#5207\n\n\nFixed passing of data to load_all_os() function (\n#5235\n)\n\n\nSupport columns filter in get_port_stats_by_port_hostname api call (\n#5230\n)\n\n\nRestore usage of -i -n in polling (\n#5228\n)\n\n\nEmpty routing menu where only CEF is present (\n#5225\n)\n\n\nAdded service params for check_smtp (\n#5223\n)\n\n\nMisc warning fixes in mib polling (\n#5222\n)\n\n\nAdded service params for check_imap (\n#5213\n)\n\n\nExecute commands using the numeric conventions of the C locale. (\n#5192\n)\n\n\nRemove usage of -CI, it is not allowed for snmpbulkwalk \n#5164\n\n\nUpdate F5 fanspeed discovery (\n#5200\n)\n\n\nFix state_indexes for state overview sensors (\n#5191\n)\n\n\nBetter Cisco hardware formatting (\n#5184\n)\n\n\nCisco hardware name detection (\n#5167\n)\n\n\nChanged sql query for state sensors on device overview page to ignore null sensor_id (\n#5180\n)\n\n\ndaily.sh install path (\n#5152\n)\n\n\nCleanup printing ifAlias (\n#4874\n)\n\n\nFixed broken http-auth auth module \n#5053\n (\n#5146\n)\n\n\nFix get_port_stats_by_port_hostname() to only return non-deleted ports \n#5131\n\n\nStop openbsd using snmpEngineTime (\n#5111\n)\n\n\nUpdate raspberrypi sensor discover to check for sensor data (\n#5114\n)\n\n\nAdd check for differently named Cisco Power sensor (\n#5119\n)\n\n\nAbility to detect Cisco ASA version when polling a security context (\n#5098\n)\n\n\nFixed setting userlevel for  LDAP auth \n#5090\n\n\nArp-table uses array_column() breaking discovery on php \n=5.4 (\n#5099\n)\n\n\nAllow html but not script, head and html tags in notes widget \n#4898\n (\n#5006\n)\n\n\n\n\nDocumentation\n\n\n\n\nUpdated rrdcached docs to include Ubuntu 16.x (\n#5263\n)\n\n\nUpdated Oxidized.md (\n#5224\n)\n\n\nRemoved mailing list in various places + small improvements to docs (\n#5154\n)\n\n\nAdded Remote monitoring using tinc VPN (\n#5122\n)\n\n\nAdded documentation on securing rrdcached. (\n#5093\n)\n\n\nAdding how to configure HPE 3PAR to documentation (\n#5087\n)\n\n\nFixed example timezones (\n#5083\n)\n\n\n\n\nRefactoring\n\n\n\n\nRemoved and moved more mibs (\n#5232\n)\n\n\nMove OS definitions into yaml files (\n#5189\n)\n\n\nUpdated Ups nut support\n\n\nMibs E-G (\n#5190\n)\n\n\nMoved / deleted mibs A-D (\n#5173\n)\n\n\nUpdated location of mibs starting with S (\n#5142\n)\n\n\nUpdate some devices to disable poller/disco modules by default (\n#5010\n)\n\n\nMore Cisco ASA Polling Performance Improvements (\n#5104\n)\n\n\nMoved mibs T-U (or removed) where possible (\n#5013\n)\n\n\n\n\nDevices\n\n\n\n\nLancom wireless devices (\n#5237\n)\n\n\nAdded additional detection for Cisco WAP 321 \n#5172\n (\n#5248\n)\n\n\nAdded support for TPLink JetStream \n#5194\n (\n#5249\n)\n\n\nAdded HPE MSL support \n#5072\n (\n#5239\n)\n\n\nAdded support for DCN switches \n#5031\n (\n#5238\n)\n\n\nAdded support for Cisco APIC devices (\n#5236\n)\n\n\nZyxel ZyWALL Improvement \n#5185\n\n\nAdded CPU detection for Zyxel GS2200-24 (\n#5218\n)\n\n\nremoved all references to 'multimatics' and instead added generex OS\n\n\nAdded additional support for F5 BigIP LTM objects\n\n\nAdded additional support for Synology dsm (\n#5145\n)\n\n\nAdd OS Detection support for Alcatel-Lucent/Nokia ESS 7450 Ethernet service switch \n#5187\n\n\nAdded Bluecoat ProxySG Support (\n#5165\n)\n\n\nAdded support for Arris CMTS (\n#5143\n)\n\n\nAdded os Discovery for Brocade NOS V4.X and below. (\n#5158\n)\n\n\nAdded support for Mirth OS \n#2639\n\n\nJuniper SA support \n#4328\n\n\nAdded support for Zyxel MES3528 (\n#5120\n)\n\n\nAdd more Edge core switches\n\n\nAdd support for Ubiquiti EdgePoint Switch models (\n#5079\n)\n\n\n\n\nWebUI\n\n\n\n\nStandardised all rowCount parameters for tables (\n#5067\n)\n\n\n\n\nSecurity\n\n\n\n\nUpdate PHPMailer to version 5.2.19 (\n#5253\n)\n\n\n\n\n\n\nv1.22.01\n\n\n(2016-11-30)\n\n\nBugfixes\n\n\n\n\narp-table uses array_column() breaking discovery on php \n=5.4 (\n#5099\n)\n\n\n\n\n\n\nv1.22\n\n\n(2016-11-25)\n\n\nFeatures\n\n\n\n\nvalidate list devices that have not been polled in the last 5 minutes or took more than 5 minutes to poll (\n#5037\n)\n\n\nAdd Microsoft Teams Alert Transport (\n#5023\n)\n\n\nAdded formatted uptime value for alert templates \n#4983\n\n\nAdds support for enabling / disabling modules per OS (\n#4963\n)\n\n\nImprove Dell OpenManage Discovery (\n#4957\n)\n\n\nAdded the option to select alert rules from a collection\n\n\n\n\nBugfixes\n\n\n\n\nuse password type for SMTP Auth \n#5051\n\n\nAdded alert init module to ajax_form \n#5058\n\n\neventlog type variable collision (\n#5046\n)\n\n\nFixed loaded modules for ajax search (\n#5043\n)\n\n\ntimos6-7 snmprec file error (\n#5035\n)\n\n\nStrip out \" returned from Proxmox application \n#4908\n (\n#5003\n)\n\n\nUsed correct variable for displaying total email count in alert capture (\n#5022\n)\n\n\nCisco ASA Sensor Discovery, use correct variable (\n#5021\n)\n\n\nStop service modal form disabling services for read-only admin (\n#4994\n)\n\n\ndbUpdate calls now check if it is 0 or above (\n#4996\n)\n\n\nLinks on devices graphs page to take users straight to specific graph page (\n#5001\n)\n\n\nFixed poweralert discovery, check is now case insensitive (\n#5000\n)\n\n\nDaily.sh log_dir failed when install_dir and log_dir were not set (\n#4992\n)\n\n\nMerge pull request \n#4939\n from laf/issue-4937\n\n\nRemove service type from uniform display (\n#4974\n)\n\n\nFixed check for VRFs, so this runs on routers without any VRFs defined (\n#4972\n)\n\n\nApi rate percent calculation incorrect (\n#4956\n)\n\n\nCorrects path to proxmox script in docs (\n#4949\n)\n\n\nUpdate debug output in service check (\n#4933\n)\n\n\nFujitsu PRIMERGY 10Gbe switches are now detected correctly (\n#4923\n)\n\n\nToner graphs with invalid chars\n\n\nUpdated syslog table to use display() for msg output (\n#4859\n)\n\n\nAdded support for https links in alerts procedure url (\n#4872\n)\n\n\nUpdated check to use != in daily.sh (\n#4916\n)\n\n\nRemove escape characters for services form / display \n#4891\n\n\nOnly update components if data exists in cimc entity-physical discovery \n#4902\n\n\nRenamed hp3par os polling file to informos (\n#4861\n)\n\n\nUpdated Cisco ASA state sensors descr to be a bit more verbose\n\n\n\n\nDocumentation\n\n\n\n\nAdded FAQ on why EdgeRouters might not be detected (\n#4985\n)\n\n\nUpdate freenode links (\n#4935\n)\n\n\nIssue template to ask people to use irc / community for creating issues\n\n\n\n\nRefactoring\n\n\n\n\nRewrite arp-table discovery (\n#5048\n)\n\n\nCollection and output of db and snmp stats (\n#5049\n)\n\n\nDisable modules for pbn-cp and multimatic os\n\n\nCentralize includes and initialization (\n#4991\n)\n\n\nRemove inappropriate usages of truncate() (\n#5028\n)\n\n\nWatchguard Fireware cleanup (\n#5015\n)\n\n\nTidy up mibs V-Z (\n#4979\n)\n\n\nLimit perf array index length to 19 characters due to limitation in ds-name rrdtool (\n#4731\n)\n\n\nDaily.sh updated (\n#4920\n)\n\n\nDefault to only using mysqli (\n#4915\n)\n\n\nStart of cleaning up mibs\n\n\nUpdate wifi clients polling to support more than 2 radios (\n#4913\n)\n\n\nRefactored and added support for $config['log_dir'] to daily.sh\n\n\nImprove Cisco ASA Polling Performance (\n#4999\n)\n\n\n\n\nDevices\n\n\n\n\nUpdated edge-core to edgecos and added further detection (\n#5024\n)\n\n\nAdded basic support for Ceragon devices\n\n\nAdded support for Dell PowerConnect 6024\n\n\nAdded PBN-CP devices.\n\n\nAdded support for Edgerouter devices \n#4936\n\n\nAdded support for Dell Remote consoles \n#4881\n\n\nAdded support for FortiSwitch \n#4852\n (\n#4858\n)\n\n\n\n\nWebUI\n\n\n\n\nAvailability map compact view, use square tiles instead of rectangles (\n#5038\n)\n\n\nAdd link to recently added device (\n#5032\n)\n\n\nDo not show Config tab for devices set to be excluded from oxidized \n#4592\n (\n#5029\n)\n\n\nUpdate Availability-Map Widget to use sysName when IPs used and config enabled (\n#4968\n)\n\n\nAdded support for skipping snmp check on edit snmp page for devices (\n#4896\n)\n\n\nUpdate wifi_clients graph (\n#4846\n)\n\n\nFurther decouple the avail-map page from the widget (\n#4887\n)\n\n\n\n\n\n\nv1.21\n\n\n(2016-10-30)\n\n\nFeatures\n\n\n\n\nAdded support for global max repeaters for snmp (\n#4880\n)\n\n\nAdded custom css and include directories which are ignored by git (\n#4871\n)\n\n\nAdd an option for ad authentication to have a default level (\n#4801\n)\n\n\nAdd ping and RxLevel for SAF devices (\n#4840\n)\n\n\nAdded ability to exclude devices from xDP disco based on sysdescr, sysname or platform\n\n\nAdd Extra Mimosa Discovery (\n#4831\n)\n\n\nAdd support for NX-OS fan status (\n#4824\n)\n\n\nAdd osTicket Alert Transport (\n#4791\n)\n\n\nAdd SonicWALL Sessions \n#1686\n\n\nUpdated libvirt-vminfo to support oVirt\n\n\nEnhance Unifi Wireless Client count for multiple VAPs (\n#4794\n)\n\n\nAdded CEF Display page (\n#3978\n)\n\n\nAdded CPU detection for Synology DSM \n#2081\n (\n#4756\n)\n\n\nAdded CPU detection for Synology DSM \n#2081\n\n\nStop displaying sensitive info in the settings page (\n#4724\n)\n\n\nAdded Cisco Integrated Management Console inventory and sensor support \n#4454\n\n\nAdded support for show faults array in recovery alerts (\n#4708\n)\n\n\nAdd description and notes to be used in alerts templates (\n#4706\n)\n\n\nvalidate.php: check poller and discovery status (\n#4663\n)\n\n\nAdded GlobalProtect sessions to PANOS\n\n\n\n\nBugfixes\n\n\n\n\nReplace \\\\l with \\l on GPRINT lines (\n#4882\n)\n\n\nfix missing config entries on global settings page \n#4884\n\n\nFix the detection of NX-OS fan names (\n#4864\n)\n\n\nAPI call to services only returned first one\n\n\nChange the wording for the create default rules button\n\n\nincomplete polling on aruba controllers\n\n\nFixed wifi clients not reporting when value 0\n\n\nZyWALL Fixes for OS and mem polling \n#1652\n\n\nFix irc bot user level (\n#4833\n)\n\n\nUpdated min/max values for ubnt graphs (\n#4811\n)\n\n\nFix Riverbed temperature discovery (\n#4832\n)\n\n\nonly poll cipsec for cisco devices. (\n#4819\n)\n\n\nZywall Fixes \n#1652\n\n\ndo not show fail if running as the librenms user + slightly less false positives (\n#4821\n)\n\n\nDo not create rrd folder when -r is specified for poller (\n#4812\n)\n\n\nDelete all port_id references \n#4684\n\n\nUsed dos2unix on all mibs to prevent .index issue (\n#4803\n)\n\n\navailability map multiple instances (\n#4773\n)\n\n\ntop widget multiple instances (\n#4757\n)\n\n\nUpdated bin/bash to use env in cronic script (\n#4752\n)\n\n\nskip ip_exists function when we force add (\n#4738\n)\n\n\nStopped showing sub menus when empty \n#4713\n\n\nSamsun ML typo, remove need for hex_string translation (\n#4788\n)\n\n\napc load, runtime and current sensors (\n#4780\n)\n\n\nPrevent accidental anonymous binds (\n#4784\n)\n\n\nUpdate brocade fanspeed description\n\n\nqnap temperature sensors \n#4586\n\n\nStop displaying sensitive info in the settings page (\n#4724\n)\n\n\nIgnore meraki bad_uptime \n#4691\n\n\nFixed trying to map devices to alert rules\n\n\nRe-enable the edit device groups button (\n#4726\n)\n\n\nRaise version size for packages table to 255 char  (\n#4656\n)\n\n\nAdjusted padding based on screen width to fit all icons (\n#4711\n)\n\n\nfixed count test for cisco-otv poller module (\n#4714\n)\n\n\nFall back to ipNetToMediaPhysAddress when ipNetToPhysicalPhysAddress not available \n#4559\n\n\nipmi poller, run with USER rights and surround username and password with '' \n#4710\n\n\nWrapped ipmi user / pass in quotes \n#4686\n and \n#4702\n\n\nUse snmpv3 username even when NoAuthNoPriv is selected \n#4677\n\n\n\n\nDocumentation\n\n\n\n\nhomepage headers: vertical align, match color, add spacing (\n#4870\n)\n\n\nAdded FAQ on moving install to another server\n\n\nUpdated index page to make it look more attractive (\n#4855\n)\n\n\nAdding setup of distro script for Linux (snmpd) configuration\n\n\nAdded doc on security and vulnerabilities\n\n\nUpdate Graylog.md (\n#4717\n)\n\n\n\n\nRefactoring\n\n\n\n\npopulate native vlans in the ports_vlan table for cisco devices too (\n#4805\n)\n\n\nSmall poller improvements, removes unecessary queries / execs (\n#4741\n)\n\n\nCleanup poller include files (\n#4751\n)\n\n\nUpdate alert rules to generate sql query and store in db (\n#4748\n)\n\n\ntoner support (\n#4795\n)\n\n\nUpdated and added more options for http proxy support (\n#4718\n)\n\n\nsmall fixes for cisco-voice code (\n#4719\n)\n\n\nImprove sensors polling for performance increase (\n#4725\n)\n\n\nImprove sensors polling for performance increase\n\n\nRewrite for qnap fanspeeds (\n#4590\n)\n\n\nedituser page to allow user selection of a default dashboard (\n#4551\n)\n\n\nsnmp cleanup (\n#4683\n)\n\n\n\n\nDevices\n\n\n\n\nAdded support for Megatec NetAgent II\n\n\nAdd UniFi Wireless MIB polling for Capacity \n#4266\n\n\nAdded support for Sinetica UPS \u00a24613\n\n\nAdded additional support for Synology DSM devices \n#2738\n\n\nAdd additional F5 sensor support (\n#4642\n)\n\n\nAdded Unifi Wireless Client statistics \n#4772\n\n\nAdditional support for Hikvision products\n\n\nMore dnos additions \n#4745\n (\n#4749\n)\n\n\nAdditional support for Hikvision products (\n#4750\n)\n\n\nAdd support for Moxa \n#4733\n\n\nAdd additional features to SAF Tehnika (\n#4666\n)\n\n\nAdd support for more Pulse Secure devices \n#4680\n\n\nAdd support for more DNOS devices \n#4627\n\n\nAdded support for Sinetica UPS\n\n\nAdd support for Mimosa Wireless \n#4676\n\n\nAdd support for Mimosa Wireless \n#4676\n\n\n\n\nWebUI\n\n\n\n\nAllow users to set their default dashboard from preferences page\n\n\nUpdated devices view (\n#4700\n)\n\n\nDisable page refresh on the search pages.  Users can manually hit the refresh on the grid. (\n#4787\n)\n\n\nDisplay vlans for all devices. \n#4349\n, \n#3059\n\n\nAdded sorting and poller time support to top-devices widget \n#4668\n\n\n\n\n\n\nRelease: 201609\n\n\nSeptember 2016\n\n\nFeatures\n\n\n\n\nAdded alerts output to capture system (\n#4574\n)\n\n\nAdd support for ups-apcups via snmp\n\n\nAdd snmpsim to Travis automated testing. Update to check new setting for true and isset\n\n\nuse snmpsim for testing fallback feature so we don't have to run snmpsim on devel computers, should be adequate for now ./scripts/pre-commit.php -u -snmpsim will start an snmpsimd.py process automatically\n\n\nImproved readability for snmp debug output\n\n\nAdd last changed, connected, and mtu to all ports data\n\n\nAdd temp \n state sensors to Riverbed\n\n\nAdded support for all OS tests\n\n\nAdded Runtime support for APC ups \n\n\nCapture device troubleshooting info (discovery, poller, snmpwalk)\n\n\nAdd temp \n state sensors to Riverbed\n\n\nAdd more state sensors to Dell iDrac\n\n\nAllow scripts to be run from any working directory (\n#4437\n)\n\n\nNew app: ups-nut (\n#4386\n)\n\n\nAdded new discovery-wrapper.py script to replicate poller-wrapper.py (\n#4351\n)\n\n\nExtended graphing for sla - icmp-jitter \n#4341\n\n\nAdded Cisco Stackwise Support \n#4301\n\n\nAdd Cisco WAAS Optimized TCP Connections Graph (\n#4645\n)\n\n\n\n\nBugfixes\n\n\n\n\nToner nrg os capacity (\n#4177\n)\n\n\nFixed swos detection \n#4533\n\n\nUpdated edit snmp to set default poller_group (\n#4694\n)\n\n\nFixed SQL query for bgpPeers check to remove stale sessions (\n#4697\n)\n\n\nNetonix version display (\n#4672\n)\n\n\nFreeBSD variants (\n#4661\n)\n\n\nunix-agent handling of reported time values from check_mk \n#4652\n\n\nAdd checks for devices with no uptime over snmp \n#4587\n\n\nstop qnap discovery from running for every device\n\n\nFixed the old port rrd migration code to work with new rrdtool functions (\n#4616\n)\n\n\nRun cleanup for ipmi sensor discovery (\n#4582\n)\n\n\nNumerous availability-map bug fixes\n\n\nAD auth stop alerts being generated\n\n\nPossible additional fix for non-terminating rrdtool processes.\n\n\nAD auth stop alerts being generated\n\n\nAPC runtime graph missing in device\nhealth\noverview\n\n\nLibreNMS/Proc improvements Should fix sending rrdtool the quit command without a newline at the end. (not sure if this is an issue)\n\n\nPort ifLastChange polling now usable (\n#4541\n)\n\n\nbrother toner levels (\n#4526\n)\n\n\npoweralert ups divisor\n\n\nUpdate Fortinet Logo\n\n\nChange CiscoSB devices to use ifEntry\n\n\nDisable refreshing on window resize when $no_refresh is set.\n\n\nFix quota bills showing 0/0 for in/out (\n#4462\n)\n\n\nThis removes stale entries in the mac_ipv4 table (\n#4444\n)\n\n\nSwos os discovery fixes \n#3593\n\n\nVyos discovery fix \n#4486\n\n\nToner descr that contain invalid characters \n#4464\n\n\nAlert statics not showing data\n\n\nUbnt bad edgeswitch uptime \n#4470\n\n\nNew installs would have multiple entries in dbSchema table (\n#4460\n)\n\n\nForce add now ignores all snmp queries\n\n\nClean up errors in the webui (\n#4438\n)\n\n\nReduce mib graph queries (\n#4439\n)\n\n\nPorts page includes disabled, ignored, and deleted ports (\n#4419\n)\n\n\nRRDTool call was always being done to check for local files (\n#4427\n)\n\n\nMikroTik OS detection \n#3593\n\n\nAdded cisco886Va to bad_ifXEntry for cisco os (\n#4374\n)\n\n\nStop irc bot crashing on .reload \n#4353\n\n\nQuanta blade switches are now being correctly detected as Quanta switches (\n#4358\n)\n\n\nAdded options to make temperature graphs display y-axis correctly \n#4350\n\n\nAdded options to make voltage graphs display y-axis correctly \n#4326\n\n\nCalling rrdtool_pipe_open() instead of rrdtool_initialize(); (\n#4343\n)\n\n\nEnterasys use ifname for port names \n#3263\n\n\nRicoh/nrg toner levels \n#4177\n\n\nAvailability map device box reverted to original size, fixes for device groups (\n#4334\n)\n\n\nRemove Cisco remote access stats graph transparency (\n#4331\n)\n\n\nCisco remote access stats bugfix \n#4293\n (\n#4309\n)\n\n\nAdded ability to force devices to use ifEntry instead of ifXEntry (\n#4100\n)\n\n\nDon\u2019t add Cisco VSS sensors if VSS is not running \n#4111\n\n\nAlways validate the default dashboard_id to make sure it still exists\n\n\nNRG Toner detection \n#4250\n\n\nMissing variable in services api call\n\n\nAdded influxdb options to check-services.php\n\n\n\n\nDocumentation\n\n\n\n\nInclude PHP Install instructions for MySQL app\n\n\nAdded FAQ for why interfaces are missing from overall traffic graphs (\n#4696\n)\n\n\nUpdated Applications to clarify apache setup\n\n\nUpdate apache applications to detail testing and additional requirements.md\n\n\nUpdated release doc with more information on stable / dev branches\n\n\nCorrected the rsyslog documentation to be compatible with logrotate\n\n\nFixed centos snmp path\n\n\nUpdated to include info on how to use git hook to validate code (\n#4484\n)\n\n\nAdded info on how to perform unit testing\n\n\nAdded faq to explain why devices show as warning (\n#4449\n)\n\n\nStandardize snmp extend script location to /etc/snmp/ (\n#4418\n)\n\n\nAdded NFSen docs + update general config docs (\n#4412\n)\n\n\nClarify install docs to run validate as root \n#4286\n \n\n\nAdded example to alerting doc for using variables of similar name \n#4264\n\n\nAdded docs + file changes to support creating new releases/changelog\n\n\nUpdate snmpd setup in Installation-Ubuntu-1604 docs \n#4243\n\n\n\n\nRefactoring\n\n\n\n\nCentralize MIB include directory specification (\n#4603\n)\n\n\nOS discovery files (a-z)\n\n\nF5 device discovery cleanup + test unit\n\n\nRemove external uses of GenGroupSQL()\n\n\nconsolidate snmpcmd generation\n\n\nconsolidate snmpcmd generation I needed to generate an snmpcmd for an upcoming PR, so I figured I'd save a little code duplication.\n\n\nRefactored new helper functions for case sensitivity \n#4283\n \n\n\nFinal PSR2 cleanup\n\n\nMoved IRCBot class to LibreNMS namespace \n#4246\n \n\n\nUpdate code in /includes to be psr2 compliant \n#4220\n\n\n\n\nDevices\n\n\n\n\nSamsung Printer Discovery \n#4251\n (\n#4258\n)\n\n\nHP 1820 Discovery \n#3933\n (\n#4259\n)\n\n\nAdded support for Cisco Callmanager\n\n\nEdge Core ES3528M - base support\n\n\nAdded support for Cisco IPS (\n#4561\n)\n\n\nAdded MGE detection\n\n\nNetonix switch data collection update\n\n\nEaton PowerXpert\n\n\nAdded Datacom Dbm Support\n\n\nUpdated Edgerouter lite detection\n\n\nAdded support for Cisco Callmanager\n\n\nProcurve 5400R series \n#4375\n\n\nhp online admin cpu and mem \n#4327\n\n\nAdded support for Foundry Networks \n#4311\n\n\nAdded Cisco Stackwise Support \n#4301\n\n\nAdded support for PLANET Networking \n Communication switches (\n#4308\n)\n\n\nAdded support for Fujitsu Primergy switches \n#4277\n (\n#4280\n)\n\n\nAdded support for Lanier printers \n#4267\n \n\n\nAdded Temp and State support for EdgeSwitch OS \n#4265\n \n\n\nAdded support for DDN Storage \n#2737\n (\n#4261\n)\n\n\nImproved support for UBNT EdgeSwitch OS \n#4249\n\n\nImproved support for Avaya VSP \n#4237\n\n\nAdded support for macOS Sierra (\n#4557\n)\n\n\nImprove BDCOM detection (\n#4329\n)\n\n\n\n\nWebUI\n\n\n\n\ntop devices enhancement \n#4447\n\n\nIndividual devices now use bootgrid syslog (\n#4584\n)\n\n\nadded amazon server icon\n\n\nUpdate all glyphicon to font awesome\n\n\nRelocate Alerts menu\n\n\nUpdated force add option for addhost.php to be present in all instances (\n#4428\n)\n\n\nAdd check to display make bill on port page only if billing is enabled (\n#4361\n)\n\n\nAdded Pagination and server side search via Ajax to NTP (\n#4330\n)\n\n\n\n\n\n\nAugust 2016\n\n\nBug fixes\n\n\n\n\nWebUI\n\n\nFix Infoblox dhcp messages graph (\nPR3898\n)\n\n\nFix version_info output in Safari (\nPR3914\n)\n\n\nAdded missing apps to Application page (\nPR3964\n)\n\n\n\n\n\n\nDiscovery / Polling\n\n\nClear our stale IPSEC sessions from the DB (\nPR3904\n)\n\n\nFixed some InfluxDB bugs in check-services and ports (\nPR4031\n)\n\n\nFixed Promox and Ceph rrd's (\nPR4038\n, \nPR4037\n, \nPR4047\n, \nPR4041\n)\n\n\nFixed LLDP Remote port in discovery-protocols module (\nPR4070\n)\n\n\n\n\n\n\nBilling\n\n\nCheck if ifSpeed is returned for calculating billing (\nPR3921\n)\n\n\n\n\n\n\nApplications\n\n\nNFS-V3 stats fixed (\nPR3963\n)\n\n\n\n\n\n\nMisc\n\n\nDell Equallogic storage fix (\nPR3956\n)\n\n\nFix syslog bug where entries would log to the wrong device (\nPR3996\n)\n\n\n\n\n\n\n\n\nImprovements\n\n\n\n\nAdded / improved detection for:\n\n\nCisco WAAS / WAVE (\nPR3899\n)\n\n\nMaipu MyPower (\nPR3909\n)\n\n\nTPLink Switches (\nPR3919\n)\n\n\nDell N3024 (\nPR3941\n)\n\n\nCisco FXOS (\nPR3943\n)\n\n\nBrocade FABOS (\nPR3959\n, \nPR3988\n)\n\n\nJunOS (\nPR3976\n)\n\n\nDell PowerConnect (\nPR3998\n, \nPR4007\n)\n\n\nComware (\nPR3967\n)\n\n\nCalix E5 (\nPR3864\n)\n\n\nRaisecom (\nPR3992\n)\n\n\nCisco ISE (\nPR4063\n)\n\n\nAcano (\nPR4064\n)\n\n\nMcAfee SIEM Nitro (\nPR4066\n)\n\n\nHP Bladesystem C3000/C7000 OA (\nPR4035\n)\n\n\nCisco VCS (Expressway) (\nPR4086\n)\n\n\nCisco Telepresence Conductor (\nPR4087\n)\n\n\nAvaya VSP (\nPR4048\n)\n\n\nCisco/Tandberg Video Conferencing (\nPR4065\n)\n\n\nCisco Prime Infrastructure (\nPR4088\n)\n\n\nHWGroup STE2 (\nPR4116\n)\n\n\nHP 2530 Procurve / Arube (\nPR4119\n)\n\n\nBrother Printers (\nPR4141\n)\n\n\nHytera Repeater (\nPR4163\n)\n\n\nSonus (\nPR4176\n)\n\n\nFreeswitch (\nPR4203\n)\n\n\n\n\n\n\nWebUI\n\n\nImproved OSPF display (\nPR3908\n)\n\n\nImproved Apps overview page (\nPR3954\n)\n\n\nImproved Syslog page (\nPR3955\n, \nPR3971\n)\n\n\nRewrite availability map (\nPR4043\n)\n\n\nAdd predicted usage to billing overview (\nPR4049\n)\n\n\n\n\n\n\nAPI\n\n\nAdded services calls to API (\nPR4215\n)\n\n\n\n\n\n\nDiscovery / Polling\n\n\nAdded CPU detection for Dell PowerConnect 8024F (\nPR3966\n)\n\n\nCisco VSS state discovery (\nPR3977\n)\n\n\nRefactor of BGP Discovery and Polling (mainly JunOS) (\nPR3938\n)\n\n\nAdded Sensors for Brocade NOS (\nPR3969\n)\n\n\nCisco ASA HA States (\nPR4012\n)\n\n\nImproved IPSLA Support (\nPR4006\n)\n\n\nAdded support for CISCO-NTP-MIB (\nPR4005\n)\n\n\nImproved toner support for Ricoh devices (\nPR4180\n)\n\n\n\n\n\n\nDocumentation\n\n\nNew doc site live http://docs.librenms.org/\n\n\nAdded rsyslog 5 example to syslog docs (\nPR3912\n)\n\n\nApplication doc updates (\nPR3928\n)\n\n\n\n\n\n\nApplications\n\n\nApp OS Updates support (\nPR3935\n)\n\n\nPowerDNS Recursor improvements (\nPR3932\n)\n\n\nAdd DHCP Stats support (\nPR3970\n)\n\n\nAdded snmp support to Memcached (\nPR3949\n)\n\n\nAdded Unbound support (\nPR4074\n)\n\n\nAdded snmp support to Proxmox (\nPR4052\n)\n\n\nAdded Raspberry Pi Sensor support (\nPR4057\n)\n\n\nUpdated NTPD support (\nPR4077\n)\n\n\n\n\n\n\nMisc\n\n\nAdded cleanup of old RRD files to daily.sh (\nPR3907\n)\n\n\nRefactored addHost event logs (\nPR3929\n, \nPR3997\n)\n\n\nRefactored RRD Functions (\nPR3800\n, \nPR4081\n)\n\n\nAdded support for nets-exclude in snmp-scan (\nPR4000\n)\n\n\nRefactored files in html (Libraries and PSR2 style (\nPR4071\n, \nPR4101\n, \nPR4117\n)\n\n\nVarious IRC updates and fixes (\nPR4200\n, \nPR4204\n, \nPR4201\n)\n\n\n\n\n\n\n\n\nJuly 2016\n\n\nBug fixes\n\n\n\n\nAPI\n\n\nStop outputting vrf lite and IP info when device doesn't exist (\nPR3785\n)\n\n\n\n\n\n\nWebUI\n\n\nAdded force refresh for generic image widget (\nPR3817\n)\n\n\nFixed NFSen tab not showing in all cases (\nPR3857\n)\n\n\n\n\n\n\nDiscovery / Polling\n\n\nFixed incorrect IBM-AMM thresholds (\nPR3866\n)\n\n\nFixed Pulse OS whitespace in polling (\nPR3883\n)\n\n\n\n\n\n\nMisc\n\n\nFixed device group search (\nPR3788\n)\n\n\nFixed sporadic device delete (\nPR3805\n)\n\n\nRetry creation of two tables (\nPR3848\n)\n\n\n\n\n\n\n\n\nImprovements\n\n\n\n\nAdded / improved detection for:\n\n\nTelco systems (\nPR3773\n, \nPR3804\n)\n\n\nCisco ACS (\nPR3786\n)\n\n\nAdtran AOS (\nPR3787\n, \nPR3799\n)\n\n\nLantronix SLC (\nPR3797\n)\n\n\nPBN Sensor support (\nPR3820\n)\n\n\nIronware VRF discovery (\nPR3827\n)\n\n\nComware sensors discovery (\nPR3881\n, \nPR3889\n, \nPR3896\n)\n\n\nBrocade VDX detection (\nPR3888\n)\n\n\nCheckpoint GAiA (\nPR3890\n)\n\n\nCisco ASA-X Hardware detection (\nPR3897\n)\n\n\n\n\n\n\nWebUI\n\n\nAdded sysName to global search if != hostname (\nPR3815\n)\n\n\nImproved look of device SLA panel (\nPR3831\n)\n\n\nAdded more colours to Cisco CBQOS graphs (\nPR3842\n)\n\n\nImproved look of Cisco IPSEC Tunnels page (\nPR3874\n)\n\n\n\n\n\n\nDiscovery / Polling\n\n\nAdded ability to set Max repeaters per device (\nPR3781\n)\n\n\n\n\n\n\nApplications\n\n\nMoved all application scripts to librenms/librenms-agent repo (\nPR3865\n, \nPR3886\n)\n\n\nAdded NFS stats (\nPR3792\n, \nPR3853\n)\n\n\nAdded PowerDNS Recursor (\nPR3869\n)\n\n\n\n\n\n\nAlerting\n\n\nUpdated format for Slack alerts (\nPR3852\n)\n\n\nAdded support for multiple emails in sysContact and users table (\nPR3885\n)\n\n\nAdded ability to use uptime in alert templates (\nPR3893\n)\n\n\n\n\n\n\nMisc\n\n\nAdded date to git version info (\nPR3782\n)\n\n\nAdded logging of versions when upgrading (\nPR3807\n)\n\n\nAdded ability to lookup device from IP for syslog (\nPR3812\n)\n\n\nUpdated component system (\nPR3821\n)\n\n\nImprovements to validate script (\nPR3840\n, \nPR3868\n)\n\n\n\n\n\n\n\n\nJune 2016\n\n\nBug fixes\n\n\n\n\nWebUI:\n\n\nRename $ds to $ldap_connection for auth modules (\nPR3596\n)\n\n\nFix the display of custom snmp ports (\nPR3646\n)\n\n\nFix bugs in Create new / edit alert templates (\nPR3651\n)\n\n\nFixed ajax_ calls for use with base_url (\nPR3661\n)\n\n\nUpdated old frontpage to use new services format (\nPR3691\n)\n\n\nOrder alerts by state to indicate which alerts are open (\nPR3692\n)\n\n\nFixed maintenance windows showing as lapsed (\nPR3704\n)\n\n\nRemoved duplicated dbInsert from dashboard creation (\nPR3761\n)\n\n\nFixed 95th for graphs (\nPR3762\n)\n\n\n\n\n\n\nPolling / Discovery:\n\n\nUpdated Poweralert divisor to 10 for sensors (\nPR3645\n)\n\n\nFixed NX-OS version polling (\nPR3688\n)\n\n\nFixed STP log spam from Mikrotik device (\nPR3689\n)\n\n\nRemoved \" from ZyWall version number (\nPR3693\n)\n\n\nUpdated register_mib to use d_echo (\nPR3739\n)\n\n\nFixed invalid SQL for BGP Discovery (\nPR3742\n)\n\n\n\n\n\n\nAlerting:\n\n\nUnacknowledged alerts will now continue to send alerts (\nPR3667\n)\n\n\n\n\n\n\nMisc:\n\n\nFix smokeping path in gen_smokeping (\nPR3577\n)\n\n\nFix full include path in includes/polling/functions.inc.php (\nPR3614\n)\n\n\nAdded port_id to tune_port.php query (\nPR3753\n)\n\n\nUpdated port schema to support \n 17.1 Gbs for _rate values (\nPR3754\n)\n\n\n\n\n\n\n\n\nImprovements\n\n\n\n\nAdded / improved detection for:\n\n\nHPE 3Par (\nPR3578\n)\n\n\nBuffalo TeraStation (\nPR3587\n)\n\n\nSamsung C printers (\nPR3598\n)\n\n\nRoomalert3e (\nPR3599\n)\n\n\nAvtech Switches (\nPR3611\n)\n\n\nIBM Bladecenter switches (\nPR3623\n)\n\n\nHWg support (\nPR3624\n)\n\n\nIBM IMM (\nPR3625\n)\n\n\nServerTech Sentry4 PDUs (\nPR3659\n)\n\n\nSwOS (\nPR3662\n)\n\n\nSophos (R3678, \nPR3679\n, \nPR3736\n)\n\n\nOSX El Capitan (\nPR3690\n)\n\n\nDNOS (\nPR3703\n, \nPR3730\n)\n\n\nCisco SB SG200 (\nPR3705\n)\n\n\nEMC FlareOS (\nPR3712\n)\n\n\nEnhance Brocade Fabric OS (\nPR3712\n)\n\n\nHuawei SmartAX (\nPR3737\n)\n\n\n\n\n\n\nPolling / Discovery:\n\n\nUse lsb_release in distro script (\nPR3580\n)\n\n\nAllow lmsensors fanspeeds of 0 to be discovered (\nPR3616\n)\n\n\nAdded support for rrdcached application monitoring (\nPR3627\n)\n\n\nImprove the output of polling/debug to make it easier to see modules (\nPR3694\n)\n\n\n\n\n\n\nWebUI:\n\n\nResolve some reported security issues (\nPR3586\n) With thanks to https://twitter.com/wireghoul\n\n\nOrder apps list alphabetically (\nPR3600\n)\n\n\nNetwork map improvements (\nPR3602\n)\n\n\nAdded support for varying hostname formats in Oxidized integration (\nPR3617\n)\n\n\nAdded device hw/location on hover in alerts table (\nPR3621\n)\n\n\nUpdated unpolled notification to link directly to those devices (\nPR3696\n)\n\n\nAdded ability to search via IP for Graylog integration (\nPR3697\n)\n\n\nOptimised network map SQL (\nPR3715\n)\n\n\nAdded support for wildcards in custom graph groups (\nPR3722\n)\n\n\nAdded ability to override ifSpeed for ports (\nPR3752\n)\n\n\nAdded sysName to global search (\nPR3757\n)\n\n\n\n\n\n\nAlerting:\n\n\nAdded ability to use location in alert templates (\nPR3652\n)\n\n\n\n\n\n\nDocumentation:\n\n\nAdded docs on Auto discovery (\nPR3671\n)\n\n\nUpdated InfluxDB docs (\nPR3673\n)\n\n\nUpdated distributed polling docs (\nPR3675\n)\n\n\nUpdated FAQs (\nPR3677\n)\n\n\n\n\n\n\nMisc:\n\n\nAdded pivot table for device groups ready for V2 (\nPR3589\n)\n\n\nAdded device_id column to eventlog (\nPR3682\n)\n\n\nCleanup sensors and related tables + added constraints (\nPR3745\n)\n\n\n\n\n\n\n\n\nMay 2016\n\n\nBug fixes\n\n\n\n\nWebUI:\n\n\nFixed broken performance charts using VisJS (\nPR3479\n)\n\n\nFixed include path to file in create alert item (\nPR3480\n)\n\n\nUpdated services box on front page to utilise the new services (\nPR3481\n)\n\n\nPotential fix for intermittent logouts (\nPR3372\n)\n\n\nUpdated sensors hostname to use correct variable (\nPR3485\n)\n\n\n\n\n\n\nPolling / Discovery:\n\n\nOnly poll AirMAX if device supports the MIB (\nPR3486\n)\n\n\n\n\n\n\nAlerting:\n\n\nDon't alert unless the sensor value surpasses the threshold (\nPR3507\n)\n\n\n\n\n\n\n\n\nImprovements\n\n\n\n\nAdded / improved detection for:\n\n\nMicrosemo timing devices (\nPR3453\n)\n\n\nBintec smart routers (\nPR3454\n)\n\n\nPoweWalker support (\nPR3456\n)\n\n\nBDCom support (\nPR3459\n)\n\n\nCisco WAPs (\nPR3460\n)\n\n\nEMC Data domain (\nPR3461\n)\n\n\nXerox support (\nPR3462\n)\n\n\nCalix support (\nPR3463\n)\n\n\nIsilon OneFS (\nPR3482\n)\n\n\nRicoh printers (\nPR3483\n)\n\n\nHP Virtual Connect (\nPR3487\n)\n\n\nEquallogic arrays + Dell servers (\nPR3519\n)\n\n\nAlcatel-Lucent SR + SAR (\nPR3535\n, \nPR3553\n)\n\n\nXirrus Wireless Access Points (\nPR3543\n)\n\n\n\n\n\n\nPolling / Discovery:\n\n\nAdd config option to stop devices with duplicate sysName's being added (\nPR3473\n)\n\n\nEnable discovery support of CDP neighbours by IP (\nPR3561\n)\n\n\n\n\n\n\nAlerting:\n\n\nAdded ability to use sysName in templates (\nPR3470\n)\n\n\nSend Slack alerts as pure JSON (\nPR3522\n)\n\n\nApply colour to HipChat messages (\nPR3539\n)\n\n\n\n\n\n\nWebUI:\n\n\nAdded ability to filter alerts by state (\nPR3471\n)\n\n\nAdded support for using local openstreet map tiles (\nPR3472\n)\n\n\nAdded ability to show services on availability map (\nPR3496\n)\n\n\nAdded combined auth module for http auth and AD auth (\nPR3531\n)\n\n\nList services alphabetically (\nPR3538\n)\n\n\nAdded support for scrollable widgets (\nPR3565\n)\n\n\n\n\n\n\nGraphs:\n\n\nAdded Hit/Misses for memcached graphs (\nPR3499\n)\n\n\n\n\n\n\nAPI:\n\n\nUpdate get_graph_generic_by_hostname to use device_id as well (\nPR3494\n)\n\n\n\n\n\n\nDocs:\n\n\nAdded configuration for SNMP Proxy support (\nPR3528\n)\n\n\n\n\n\n\nMisc:\n\n\nAdded purge for alert log (\nPR3469\n)\n\n\n\n\n\n\n\n\nApril 2016\n\n\nBug fixes\n\n\n\n\nDiscovery / Polling:\n\n\nFix poweralert OS detection (\nPR3414\n)\n\n\n\n\n\n\nWebUI:\n\n\nFixed headers for varying ajax calls (\nPR3432\n, \nPR3433\n, \nPR3434\n, \nPR3435\n)\n\n\n\n\n\n\nMisc:\n\n\nUpdate syslog to support incorrect time (\nPR3348\n)\n\n\nFixed InfluxDB to send data as int/float (\nPR3354\n)\n\n\nSmall bug fixes to the services update (\nPR3366\n, \nPR3396\n, \nPR3425\n, \nPR3426\n, \nPR3427\n)\n\n\nFix bug with obtaining data for new bills in some scenarios (\nPR3404\n)\n\n\nImproved PHP 7 support (\nPR3417\n)\n\n\nFix urls within billing section for sub dir support (\nPR3442\n)\n\n\n\n\n\n\n\n\nImprovements\n\n\n\n\nWebUI:\n\n\nUpdate rancid file detection (\nPR3341\n)\n\n\nMake graphs in widgets clickable (\nPR3355\n)\n\n\nAdd config option to set the typeahead results (\nPR3363\n)\n\n\nAdd config option to set min graph height (\nPR3410\n)\n\n\n\n\n\n\nDiscovery / Polling:\n\n\nUpdated Infoblox mibs and logo (\nPR3340\n)\n\n\nUpdated arp discovery to support vrf lite (\nPR3359\n)\n\n\nAdded RSSI and MNC for Cisco WWAN routers (\nPR3371\n)\n\n\nUpdated DNOS and added CPU, Memory and Temp (\nPR3391\n, \nPR3393\n, \nPR3395\n)\n\n\nAdded PoE state support for Netonix devices (\nPR3416\n)\n\n\nAdded ability to exclude ports via ifName and ifAlias regex (\nPR3439\n)\n\n\n\n\n\n\nAdded detection for:\n\n\nViprenet routers (\nPR3365\n)\n\n\nFreeBSD via distro script (\nPR3399\n)\n\n\n\n\n\n\nDocumentation:\n\n\nUpdated nginx install docs (\nPR3397\n)\n\n\nAdded FAQ on renaming hosts (\nPR3444\n)\n\n\n\n\n\n\nAPI:\n\n\nAdded call for IPsec tunnels (\nPR3411\n)\n\n\n\n\n\n\nMisc:\n\n\nAdded check_mk FreeBSD agent support (\nPR3406\n)\n\n\nAdded suggestion to fix files not owned by correct user to validate.php (\nPR3415\n)\n\n\nAdded detection for missing timezone to validate.php (\nPR3428\n)\n\n\nAdded detection for install_dir config and local git repo issues to validate.php (\nPR3440\n)\n\n\n\n\n\n\n\n\nMarch 2016\n\n\nBug fixes\n\n\n\n\nWebUI:\n\n\nSkip authentication check in graph.php if unauth graphs is enabled (\nPR3019\n)\n\n\nStop double escaping notes for devices (\nPR3149\n)\n\n\nCorrected aggregate graph on smokeping page (\nPR3177\n)\n\n\nFix non-admin syslog queries (\nPR3191\n)\n\n\nFix services SQL (\nPR3205\n)\n\n\n\n\n\n\nDiscovery / Polling:\n\n\nRevert arp discovery to pre-vrf lite support (\nPR3126\n)\n\n\nFix IOS-XR DBM sensors (\nPR3291\n)\n\n\n\n\n\n\nAlerting:\n\n\nFix alert failure response from transports (\nPR3283\n)\n\n\n\n\n\n\nMisc:\n\n\nFix data in bills if counters doesn't change (\nPR3132\n)\n\n\nImprove performance of billing poller (\nPR3129\n)\n\n\nFix API tokens when using LDAP auth (\nPR3178\n)\n\n\nImport notifications with original datetime (\nPR3200\n)\n\n\nAdd sysName for top-interfaces widget (\nPR3201\n)\n\n\nFix Cisco syslog parsing when logging timestamp enabled (\nPR3203\n)\n\n\n\n\n\n\n\n\nImprovements\n\n\n\n\nWebUI:\n\n\nAdded ability to show device group specific maps (\nPR3018\n)\n\n\nUpdated Billing UI (\nPR3194\n, \nPR3195\n, \nPR3216\n, \nPR3239\n, \nPR3240\n)\n\n\nAdded Juniper\n\n\nAdded config option for HTML emails in mail transport (\nPR3221\n)\n\n\n\n\n\n\nDiscovery / Polling:\n\n\nAdded Juniper state support (\nPR3121\n)\n\n\nAdded Ironware state support (\nPR3160\n)\n\n\nCheck sysObjectID before detecting ILO temp sensors (\nPR3204\n)\n\n\nImproved Avtech support (\nPR3207\n)\n\n\nImproved Dell NOS detection (\nPR3213\n)\n\n\nAdded Juniper alarm state monitoring (\nPR3226\n)\n\n\nUpdated Drac state support (\nPR3228\n)\n\n\nImproved serial # detection for Brocade Ironware devices (\nPR3292\n)\n\n\n\n\n\n\nAdded detection for:\n\n\nDevelop Ineo printers (\nPR3224\n)\n\n\nCumulus Linux (\nPR3237\n)\n\n\nDeliberant WiFi (\nPR3246\n)\n\n\nJuniper EX2500 (\nPR3254\n)\n\n\nCambium devices (\nPR3279\n)\n\n\n\n\n\n\nAlerting:\n\n\nAdded Canopsis alerting transport (\nPR3299\n)\n\n\n\n\n\n\nMisc:\n\n\nImproved syslog support (\nPR3171\n, \nPR3172\n, \nPR3173\n)\n\n\nAdded Nginx install docs for Debian/Ubuntu (\nPR3301\n)\n\n\nUpdated InfluxDB php module (\nPR3302\n)\n\n\nUpdated Component API (\nPR3304\n)\n\n\n\n\n\n\n\n\nFebruary 2016\n\n\nBug fixes\n\n\n\n\nDiscovery / Polling:\n\n\nQuote snmp v2c community (\nPR2927\n)\n\n\nFor entity-sensor, changed variable name again (\nPR2948\n)\n\n\nFix some issues with/introduced by port association mode configuration (\nPR2923\n)\n\n\nDeal with 0 value sensors better (\nPR2972\n, \nPR2973\n)\n\n\nReverted Fortigate CPU change from Dec 2015 (\nPR2990\n)\n\n\nReverted bgp code from vrf lite support (\nPR3010\n, \nPR3011\n, \nPR3028\n, \nPR3050\n)\n\n\nAdd icon to database (\nPR3076\n)\n\n\nDiscovery updated to check for distributed polling group (\nPR3086\n)\n\n\n\n\n\n\nWebUI:\n\n\nFix ceph graps (\nPR2909\n, \nPR2942\n)\n\n\nBGP Overlib (\nPR2915\n)\n\n\nAdded \napplication/json\n headers where json is returned (\nPR2936\n, \nPR2961\n)\n\n\nStop realtime graph page from auto refreshing (\nPR2939\n)\n\n\nUpdated parsing of alert rules to allow \n|\n (\nPR2917\n)\n\n\nFix IP Display (\nPR2951\n)\n\n\nAdded missing from email config option (\nPR2986\n)\n\n\nIgnore devices that do not provide an uptime statistic (\nPR3009\n)\n\n\nAdded unique id for alert widget (\nPR3034\n)\n\n\n\n\n\n\nMisc:\n\n\nUpdated \ndevice_by_id_cache()\n to convert IP column (\nPR2940\n)\n\n\nFixed auto updating if not enabled (\nPR3063\n)\n\n\n\n\n\n\nDocumentation:\n\n\nRemoved devloping doc as none of the info is current (\nPR2911\n)\n\n\n\n\n\n\n\n\nImprovements\n\n\n\n\nWebUI:\n\n\nMerged device option links to dropdown (\nPR2955\n)\n\n\nAdded ability to configure # results for global search (\nPR2957\n)\n\n\nAdded ability to show / hide line numbers for config for devices (\nPR2988\n)\n\n\nAdded support for showing diff for Oxidized configs (\nPR2994\n)\n\n\nUpdated visjs to 4.14.0 (\nPR3031\n)\n\n\nUpdated apps layout to use panels (\nPR3117\n)\n\n\n\n\n\n\nDiscovery / Polling:\n\n\nAdded VRF Lite support (\nPR2820\n)\n\n\nAdded ability to ignore device sensors from entity mib (\nPR2862\n)\n\n\nAdded \nifOperStatus_prev\n and \nifAdminStatus_prev\n values to db (\nPR2912\n)\n\n\nImproved bgpPolling efficiency (\nPR2967\n)\n\n\nUse raw timeticks for uptime (\nPR3021\n)\n\n\nIntroduced state monitoring (\nPR3102\n)\n\n\n\n\n\n\nAdded detection for:\n\n\nDell Networking N2048 (\nPR2949\n)\n\n\nCalix E7 devices (\nPR2958\n)\n\n\nImproved support for Netonix (\nPR2959\n)\n\n\nImproved detection for Windows 10 (\nPR2962\n)\n\n\nImproved support for FortiOS (\nPR2991\n)\n\n\nBarracuda Spam firewall support (\nPR2998\n)\n\n\nImproved sysDescr parsing for Unifi Switches (\nPR3020\n)\n\n\nCanon iR (\nPR3045\n)\n\n\nCisco SF500 (\nPR3057\n)\n\n\nEaton UPS (\nPR3066\n, \nPR3067\n, \nPR3070\n, \nPR3071\n)\n\n\nServerIron / ServerIron ADX (\nPR3074\n)\n\n\nAdditional Qnap sensors (\nPR3088\n, \nPR3089\n)\n\n\nAvtech environment sensors (\nPR3091\n)\n\n\n\n\n\n\nMisc:\n\n\nAdded check for rrd vadility (\nPR2908\n)\n\n\nAdd systemd unit file for the python poller service (\nPR2913\n)\n\n\nAdded more detection to validate for bad installs (\nPR2985\n)\n\n\nSyslog cleanup (\nPR3036\n, \nPR3093\n, \nPR3099\n)\n\n\n\n\n\n\nDocumentation:\n\n\nAdded description of AD configuration options (\nPR2910\n)\n\n\nAdd description to mibbases polling (\nPR2919\n)\n\n\n\n\n\n\n\n\nJanuary 2016\n\n\nBug fixes\n\n\n\n\nDiscovery / Polling:\n\n\nIgnore HC Broadcast and Multicast counters for Cisco SB (\nPR2552\n)\n\n\nFix Cisco temperature discovery (\nPR2765\n)\n\n\n\n\n\n\nWebUI:\n\n\nFix ajax_search.php returning null instead of [] (\nPR2695\n)\n\n\nFix notification links (\nPR2721\n)\n\n\nFix wrong suggestion to install PEAR in Web installer (\nPR2727\n)\n\n\nFixed mysqli support for Web installer (\nPR2730\n)\n\n\n\n\n\n\nMisc:\n\n\nFix deleting device_perf entries (\nPR2755\n)\n\n\nFix for schema updates to device table when poller is running (\nPR2825\n)\n\n\n\n\n\n\n\n\nImprovements\n\n\n\n\nWebUI:\n\n\nConverted arp pages to use bootgrid (\nPR2669\n)\n\n\nUpdated VMWare listing page (\nPR2684\n)\n\n\nUpdated typeahead.js (\nPR2698\n)\n\n\nAdded ability to set notes for ports (\nPR2688\n)\n\n\nUse browser width to scale CPU and Bandwidth graphs (\nPR2537\n, \nPR2633\n)\n\n\nRemoved onClick from ports list (\nPR2744\n)\n\n\nAdded support for showing sysName when hostname is IP (\nPR2796\n)\n\n\nUpdated rancid support for different hostnames (\nPR2807\n)\n\n\nAdded combined HTTP Auth and LDAP Auth authentication module (\nPR2835\n)\n\n\nAdded ability to filter alerts using widgets (\nPR2834\n)\n\n\n\n\n\n\nDiscovery / Polling:\n\n\nPrint runtime info per poller/discovery modules (\nPR2713\n)\n\n\nImproved polling/discovery vmware module performance (\nPR2696\n)\n\n\nAdded STP/RSTP support (\nPR2690\n)\n\n\nMoved system poller module to core module (\nPR2637\n)\n\n\nAdded lookup of IP for devices with hostname (\nPR2798\n)\n\n\nCentralised sensors module file structure (\nPR2794\n)\n\n\nGraph poller module run times (\nPR2849\n)\n\n\nUpdated vlan support using IEEE8021-Q-BRIDGE-MIB (\nPR2851\n)\n\n\n\n\n\n\nAdded detection for:\n\n\nAdded support for Samsung printers (\nPR2680\n)\n\n\nAdded support for Canon printers (\nPR2687\n)\n\n\nAdded support for Sub10 support (\nPR2469\n)\n\n\nAdded support for Zyxel GS range (\nPR2729\n)\n\n\nAdded support for HWGroup Poseidon (\nPR2742\n)\n\n\nAdded support for Samsung SCX printers (\nPR2760\n)\n\n\nAdded additional support for HP MSM (\nPR2766\n, \nPR2768\n)\n\n\nAdded additional support for Cisco ASA and RouterOS (\nPR2784\n)\n\n\nAdded support for Lenovo EMC NAS (\nPR2795\n)\n\n\nAdded support for Infoblox (\nPR2801\n)\n\n\n\n\n\n\nAPI:\n\n\nAdded support for Oxidized groups (\nPR2745\n)\n\n\n\n\n\n\nMisc:\n\n\nAdded option to specify Smokeping ping value (\nPR2676\n)\n\n\nAdded backend support for InfluxDB (\nPR2208\n)\n\n\nAlpha2 release of MIB Polling released (\nPR2536\n, \nPR2763\n)\n\n\nCentralised version info (\nPR2697\n)\n\n\nAdded username support for libvirt over SSH (\nPR2728\n)\n\n\nAdded Oxidized reload call when adding device (\nPR2792\n)\n\n\nAdded components system to centralize data in MySQL (\nPR2623\n)\n\n\n\n\n\n\n\n\nDecember 2015\n\n\nBug fixes\n\n\n\n\nWebUI:\n\n\nFixed regex for negative lat/lng coords (\nPR2524\n)\n\n\nFixed map page looping due to device connected to itself (\nPR2545\n)\n\n\nFixed PATH_INFO for nginx (\nPR2551\n)\n\n\nurlencode the custom port types (\nPR2597\n)\n\n\nStop non-admin users from being able to get to settings pages (\nPR2627\n)\n\n\nFix JpGraph php version compare (\nPR2631\n)\n\n\n\n\n\n\nDiscovery / Polling:\n\n\nPointed snmp calls for Huawei to correct MIB folder (\nPR2541\n)\n\n\nFixed Ceph unix-agent support. (\nPR2588\n)\n\n\nMoved memory graphs from storage to memory polling (\nPR2616\n)\n\n\nMask alert_log mysql output when debug is enabled to stop console crashes (\nPR2618\n)\n\n\nStop Quanta devices being detected as Ubiquiti (\nPR2632\n)\n\n\nFix MySQL unix-agent graphs (\nPR2645\n)\n\n\nAdded MTA-MIB and NETWORK-SERVICES-MIB to stop warnings printed in poller debug (\nPR2653\n)\n\n\n\n\n\n\nServices:\n\n\nFix SSL check for PHP 7 (\nPR2647\n)\n\n\n\n\n\n\nAlerting:\n\n\nFix glue-expansion for alerts (\nPR2522\n)\n\n\nFix HipChat transport (\nPR2586\n)\n\n\n\n\n\n\nDocumentation:\n\n\nRemoved duplicate mysql-client install from Debian/Ubuntu install docs (\nPR2543\n)\n\n\n\n\n\n\nMisc:\n\n\nUpdate daily.sh to ignore issues writing to log file (\nPR2595\n)\n\n\n\n\n\n\n\n\nImprovements\n\n\n\n\nWebUI:\n\n\nConverted sensors page to use bootgrid (\nPR2531\n)\n\n\nAdded new widgets for dashboard. Notes (\nPR2582\n), Generic image (\nPR2617\n)\n\n\nAdded config option to disable lazy loading of images (\nPR2589\n)\n\n\nVisual update to Navbar. (\nPR2593\n)\n\n\nUpdate alert rules to show actual alert rule ID (\nPR2603\n)\n\n\nInitial support added for per user default dashboard (\nPR2620\n)\n\n\nUpdated Worldmap to show clusters in red if one device is down (\nPR2621\n)\n\n\nCleaned up Billing pages (\nPR2671\n)\n\n\n\n\n\n\nDiscovery / Polling\n\n\nAdded traffic bits as default for Cambium devices (\nPR2525\n)\n\n\nOverwrite eth0 port data from UniFi MIBs for AirFibre devices (\nPR2544\n)\n\n\nAdded lastupdate column to sensors table for use with alerts (\nPR2590\n,\nPR2592\n)\n\n\nUpdated auto discovery via lldp to check for devices that use mac address in lldpRemPortId (\nPR2591\n)\n\n\nUpdated auto discovery via lldp with absent lldpRemSysName (\nPR2619\n)\n\n\n\n\n\n\nAPI:\n\n\nAdded ability to filter devices by type and os for Oxidized API call (\nPR2539\n)\n\n\nAdded ability to update device information (\nPR2585\n)\n\n\nAdded support for returning device groups (\nPR2611\n)\n\n\nAdded ability to select port graphs based on ifDescr (\nPR2648\n)\n\n\n\n\n\n\nDocumentation:\n\n\nImproved alerting docs explaining more options (\nPR2560\n)\n\n\nAdded Docs for Ubuntu/Debian Smokeping integration (\nPR2610\n)\n\n\n\n\n\n\nAdded detection for:\n\n\nUpdated Netonix switch MIBs (\nPR2523\n)\n\n\nUpdated Fotinet MIBs (\nPR2529\n, \nPR2534\n)\n\n\nCisco SG500 (\nPR2609\n)\n\n\nUpdated processor support for Fortigate (\nPR2613\n)\n\n\nAdded CPU / Memory support for PBN (\nPR2672\n)\n\n\n\n\n\n\nMisc:\n\n\nUpdated validation to check for php extension and classes required (\nPR2602\n)\n\n\nAdded Radius Authentication support (\nPR2615\n)\n\n\nRemoved distinct() from alerts query to use indexes (\nPR2649\n)\n\n\n\n\n\n\n\n\nNovember 2015\n\n\nBug fixes\n\n\n\n\nWebUI:\n\n\ngetRates should return in and out average rates (\nPR2375\n)\n\n\nFix 95th percent lines in negative range (\nPR2405\n)\n\n\nFix percentage bar for billing pages (\nPR2419\n)\n\n\nUse HC counters first in realtime graphs (\nPR2420\n)\n\n\nFix netcmd.php URI for sub dir installations (\nPR2428\n)\n\n\nFixed Oxidized fetch config with groups (\nPR2501\n)\n\n\nFixed background colour to white for some graphs (\nPR2516\n)\n\n\nAdded missing Service description on services page (\nPR2679\n)\n\n\n\n\n\n\nAPI:\n\n\nAdded missing quotes for MySQL queries (\nPR2382\n)\n\n\n\n\n\n\nDiscovery / Polling:\n\n\nSpecified MIB used when polling ntpd-server (\nPR2418\n)\n\n\nAdded missing fields when inserting data into applications table (\nPR2445\n)\n\n\nFix auto-discovery failing (\nPR2457\n)\n\n\nJuniper hardware inventory fix (\nPR2466\n)\n\n\nFix discovery of Cisco PIX running PixOS 8.0 (\nPR2480\n)\n\n\nFix bug in Proxmox support if only one VM was detected (\nPR2490\n, \nPR2547\n)\n\n\n\n\n\n\nAlerting:\n\n\nStrip \n and || from query for device-groups (\nPR2476\n)\n\n\nFix transports being triggered when empty keys set (\nPR2491\n)\n  Misc:\n\n\nUpdated device_traffic_descr config to stop graphs failing (\nPR2386\n)\n\n\n\n\n\n\n\n\nImprovements\n\n\n\n\nWebUI:\n\n\nStatus column now sortable for /devices/ (\nPR2397\n)\n\n\nUpdate Gridster library to be responsive (\nPR2414\n)\n\n\nImproved rrdtool 1.4/1.5 compatibility (\nPR2430\n)\n\n\nUse event_id in query for Eventlog (\nPR2437\n)\n\n\nAdd graph selector to devices overview (\nPR2438\n)\n\n\nImproved Navbar for varying screen sizes (\nPR2450\n)\n\n\nAdded RIPE NCC API support for lookups (\nPR2455\n, \nPR2474\n)\n\n\nImproved ports page for device with large number of neighbours (\nPR2460\n)\n\n\nMerged all CPU graphs into one on overview page (\nPR2470\n)\n\n\nAdded support for sorting by traffic on device port page (\nPR2508\n)\n\n\nAdded support for dynamic graph sizes based on browser size (\nPR2510\n)\n\n\nMade device location clickable in device header (\nPR2515\n)\n\n\nVisual improvements to bills page (\nPR2519\n)\n\n\n\n\n\n\nDiscovery / Polling:\n\n\nUpdated Cisco SB discovery (\nPR2396\n)\n\n\nAdded Ceph support via Applications (\nPR2412\n)\n\n\nAdded support for per device unix-agent port (\nPR2439\n)\n\n\nAdded ability to select up/down devices on worldmap (\nPR2441\n)\n\n\nAllow powerdns app to be set for Unix Agent (\nPR2489\n)\n\n\nAdded SLES detection to distro script (\nPR2502\n)\n\n\n\n\n\n\nAdded detection for:\n\n\nAdded CPU + Memory usage for Ubiquiti UniFi (\nPR2421\n)\n\n\nAdded support for LigoWave Infinity AP's (\nPR2456\n)\n\n\n\n\n\n\nAlerting:\n\n\nAdded ability to globally disable sending alerts (\nPR2385\n)\n\n\nAdded support for Clickatell, PlaySMS and VictorOps (\nPR24104\n, \nPR2443\n)\n\n\n\n\n\n\nDocumentation:\n\n\nImproved CentOS install docs (\nPR2462\n)\n\n\nImproved Proxmox setup docs (\nPR2483\n)\n\n\n\n\n\n\nMisc:\n\n\nProvide InnoDB config for buffer size issues (\nPR2401\n)\n\n\nAdded AD Authentication support (\nPR2411\n, \nPR2425\n, \nPR2432\n, \nPR2434\n)\n\n\nAdded Features document (\nPR2436\n, \nPR2511\n, \nPR2513\n)\n\n\nCentralised innodb buffer check and added to validate (\nPR2482\n)\n\n\nUpdated and improved daily.sh (\nPR2487\n)\n\n\n\n\n\n\n\n\nOctober 2015\n\n\nBug fixes\n\n\n\n\nDiscovery / Polling:\n\n\nCheck file exists via rrdcached before creating new files on 1.5 (\nPR2041\n)\n\n\nFix Riverbed discovery (\nPR2133\n)\n\n\nFixes issue where snmp_get would not return the value 0 (\nPR2134\n)\n\n\nFixed powerdns snmp checks (\nPR2176\n)\n\n\nDe-dupe checks for hostname when adding hosts (\nPR2189\n)\n\n\n\n\n\n\nWebUI:\n\n\nSoft fail if PHP Pear not installed (\nPR2036\n)\n\n\nEscape quotes for ifAlias in overlib calls (\nPR2072\n)\n\n\nFix table name for access points (\nPR2075\n)\n\n\nRemoved STACK text in graphs (\nPR2097\n)\n\n\nEnable multiple ifDescr overrides to be done per device (\nPR2099\n)\n\n\nRemoved ping + performance graphs and tab if skip ping check (\nPR2175\n)\n\n\nFixed services -\n Alerts menu link + page (\nPR2173\n)\n\n\nFix percent bar also for quota bills (\nPR2198\n)\n\n\nFix new Bill (\nPR2199\n)\n\n\nChange default solver to hierarchicalRepulsion in vis.js (\nPR2202\n)\n\n\nFix: setting user port permissions fails (\nPR2203\n)\n\n\nUpdated devices Graphs links to use non-static time references (\nPR2211\n)\n\n\nRemoved ignored,deleted and disabled ports from query (\nPR2213\n)\n\n\n\n\n\n\nAPI:\n\n\nFixed API call for alert states (\nPR2076\n)\n\n\nFixed nginx rewrite for api (\nPR2112\n)\n\n\nChange on the add_edit_rule to modify a rule without modify the name (\nPR2159\n)\n\n\nFixed list_bills function when using :bill_id (\nPR2212\n)\n\n\n\n\n\n\n\n\nImprovements\n\n\n\n\nWebUI:\n\n\nUpdated Bootstrap to 3.3.5 (\nPR2015\n)\n\n\nAdded billing graphs to graphs widget (\nPR2027\n)\n\n\nLock widgets by default so they can't be moved (\nPR2042\n)\n\n\nMoved Device Groups menu (\nPR2049\n)\n\n\nShow Config tab only if device isn't excluded from oxidized (\nPR2118\n)\n\n\nSimplify adding config options to WebUI (\nPR2120\n)\n\n\nMove red map markers to foreground (\nPR2127\n)\n\n\nStyled the two factor auth token prompt (\nPR2151\n)\n\n\nUpdate Font Awesome (\nPR2167\n)\n\n\nAllow user to influence when devices are grouped on world map (\nPR2170\n)\n\n\nCentralised the date selector for graphs for re-use (\nPR2183\n)\n\n\nDon't show dashboard settings if \n/bare=yes/\n (\nPR2364\n)\n\n\n\n\n\n\nAPI:\n\n\nAdded unmute alert function to API (\nPR2082\n)\n\n\n\n\n\n\nDiscovery / Polling:\n\n\nAdded additional support for some UPS' based on Multimatic cards (\nPR2046\n)\n\n\nImproved WatchGuard OS detection (\nPR2048\n)\n\n\nTreat Dell branded Wifi controllers as ArubaOS (\nPR2065\n)\n\n\nAdded discovery option for OS or Device type (\nPR2088\n)\n\n\nUpdated pfSense to firewall type (\nPR2096\n)\n\n\nAdded ability to turn off icmp checks globally or per device (\nPR2131\n)\n\n\nReformat check a bit to make it easier for adding additional oids in (\nPR2135\n)\n\n\nUpdated to disable auto-discovery by ip (\nPR2182\n)\n\n\nUpdated to use env in distro script (\nPR2204\n)\n\n\n\n\n\n\nAdded detection for:\n\n\nPulse Secure OS (\nPR2053\n)\n\n\nRiverbed Steelhead support (\nPR2107\n)\n\n\nOpenBSD sensors (\nPR2113\n)\n\n\nAdditional comware detection (\nPR2162\n)\n\n\nVersion from Synology MIB (\nPR2163\n)\n\n\nVCSA as VMWare (\nPR2185\n)\n\n\nSAF Lumina radios (\nPR2361\n)\n\n\nTP-Link detection (\nPR2362\n)\n\n\n\n\n\n\nDocumentation:\n\n\nImproved RHEL/CentOS install docs (\nPR2043\n)\n\n\nUpdate Varnish Docs (\nPR2116\n, \nPR2126\n)\n\n\nAdded passworded channels for the IRC-Bot (\nPR2122\n)\n\n\nUpdated Two-Factor-Auth.md RE: Google Authenticator (\nPR2146\n)\n\n\n\n\n\n\nGeneral:\n\n\nAdded colour support to IRC bot (\nPR2059\n)\n\n\nFixed IRC bot reconnect if socket dies (\nPR2061\n)\n\n\nUpdated default crons (\nPR2177\n)\n\n\n\n\n\n\nReverts:\n\n\n\"Removed what appears to be unnecessary STACK text\" (\nPR2128\n)\n\n\n\n\n\n\n\n\nSeptember 2015\n\n\nBug fixes\n\n\n\n\nAlerting:\n\n\nProcess followups if there are changes (\nPR1817\n)\n\n\nTypo in alert_window setting (\nPR1841\n)\n\n\nIssue alert-trigger as test object (\nPR1850\n)\n\n\n\n\n\n\nWebUI:\n\n\nFix permissions for World-map widget (\nPR1866\n)\n\n\nClean up Global / World Map name mixup (\nPR1874\n)\n\n\nRemoved required flag for community when adding new hosts (\nPR1961\n)\n\n\nStop duplicate devices showing in map (\nPR1963\n)\n\n\nFix adduser bug storing users real name (\nPR1990\n)\n\n\nStop alerts top-menu being clickable (\nPR1995\n)\n\n\n\n\n\n\nServices:\n\n\nHonour IP field for DNS checks (\nPR1933\n)\n\n\n\n\n\n\nDiscovery / Poller:\n\n\nFix Huawei VRP os detection (\nPR1931\n)\n\n\nSet empty processor descr for *nix processors (\nPR1951\n)\n\n\nEnsure udp6/tcp6 snmp devices use fping6 (\nPR1959\n)\n\n\nFix RRD creation parameters (\nPR2010\n)\n\n\n\n\n\n\nGeneral:\n\n\nRemove 'sh' from cronjob (\nPR1818\n)\n\n\nRemove MySQL Locks (\nPR1822\n,\nPR1826\n,\nPR1829\n,\nPR1836\n)\n\n\nChange DB config options to use single quotes to allow $ (\nPR1948\n)\n\n\n\n\n\n\n\n\nImprovements\n\n\n\n\nWebUI:\n\n\nAbility to edit ifAlias (\nPR1811\n)\n\n\nHonour Mouseout/Mouseleave on map widget (\nPR1814\n)\n\n\nMake syslog/eventlog responsive (\nPR1816\n)\n\n\nReformat Proxmox UI (\nPR1825\n,\nPR1827\n)\n\n\nMisc Changes (\nPR1828\n,\nPR1830\n,\nPR1875\n,\nPR1885\n,\nPR1886\n,\nPR1887\n,\nPR1891\n,\nPR1896\n,\nPR1901\n,\nPR1913\n,\nPR1944\n)\n\n\nAdded support for Oxidized versioning (\nPR1842\n)\n\n\nAdded graph widget + settings for widgets (\nPR1835\n,\nPR1861\n,\nPR1968\n)\n\n\nAdded Support for multiple dashboards (\nPR1869\n)\n\n\nAdded settings page for Worldmap widget (\nPR1872\n)\n\n\nAdded uptime to availability widget (\nPR1881\n)\n\n\nAdded top devices and ports widgets (\nPR1903\n)\n\n\nAdded support for saving notes for devices (\nPR1927\n)\n\n\nAdded fullscreen mobile support (\nPR2022\n)\n\n\n\n\n\n\nAdded detection for:\n\n\nFortiOS (\nPR1815\n)\n\n\nHP MSM (\nPR1953\n)\n\n\n\n\n\n\nDiscovery / Poller:\n\n\nAdded Proxmox support (\nPR1789\n)\n\n\nAdded CPU/Mem support for SonicWALL (\nPR1957\n)\n\n\nUpdated distro script to support Arch Linux + fall back to lsb-release (\nPR1978\n)\n\n\n\n\n\n\nDocumentation:\n\n\nAdd varnish docs (\nPR1809\n)\n\n\nAdded CentOS 7 RRCached docs (\nPR1893\n)\n\n\nImproved description of fping options (\nPR1952\n)\n\n\n\n\n\n\nAlerting:\n\n\nAdded RegEx support for alert rules and device groups (\nPR1998\n)\n\n\n\n\n\n\nGeneral:\n\n\nMake installer more responsive (\nPR1832\n)\n\n\nUpdate fping millisec option to 200 default (\nPR1833\n)\n\n\nReduced cleanup of device_perf (\nPR1837\n)\n\n\nAdded support for negative values in munin-plugins (\nPR1907\n)\n\n\nAdded default librenms user to config for use in validate.php (\nPR1956\n)\n\n\nAdded working memcache support (\nPR2007\n)\n\n\n\n\n\n\n\n\nAugust 2015\n\n\nBug fixes\n\n\n\n\nWebUI:\n\n\nFix web_mouseover not honoured on All Devices page (\nPR1592\n)\n\n\nFixed bug with edit/create alert template to clear out previous values (\nPR1636\n)\n\n\nInitialise $port_count in devices list (\nPR1640\n)\n\n\nFixed Web installer due to code tidying update (\nPR1644\n)\n\n\nUpdated gridster variable names to make unique (\nPR1646\n)\n\n\nFixed issues with displaying devices with ' in location (\nPR1655\n)\n\n\nFixes updating snmpv3 details in webui (\nPR1727\n)\n\n\nCheck for user perms before listing neighbour ports (\nPR1749\n)\n\n\nFixed Test-Transport button (\nPR1772\n)\n\n\n\n\n\n\nDB:\n\n\nAdded proper indexes on device_perf table (\nPR1621\n)\n\n\nFixed multiple mysql strict issues (\nPR1638\n, \nPR1659\n)\n\n\nConvert bgpPeerRemoteAs to bigint (\nPR1691\n)\n\n\n\n\n\n\nDiscovery / Poller:\n\n\nFixed Synology system temps (\nPR1649\n)\n\n\nFixed discovery-arp not running since code formatting update (\nPR1671\n)\n\n\nCorrect the DSM upgrade OID (\nPR1696\n)\n\n\nFix MySQL agent host variable usage (\nPR1710\n)\n\n\nPass snmp-auth parameters enclosed by single-quotes (\nPR1730\n)\n\n\nRevert change which skips over down ports (\nPR1742\n)\n\n\nStop PoE polling for each port (\nPR1747\n)\n\n\nUse ifHighSpeed if ifSpeed equals 0 (\nPR1750\n)\n\n\nKeep PHP Backwards compatibility (\nPR1766\n)\n\n\nFalse identification of Zyxel as Cisco (\nPR1776\n)\n\n\nFix MySQL statement in poller-service.py (\nPR1794\n)\n\n\nFix upstart script for poller-service.py (\nPR1812\n)\n\n\n\n\n\n\nGeneral:\n\n\nFixed path to defaults.inc.php in config.php.default (\nPR1673\n)\n\n\nStrip '::ffff:' from syslog input (\nPR1734\n)\n\n\nFix RRA (\nPR1791\n)\n\n\n\n\n\n\n\n\nImprovements\n\n\n\n\nWebUI Updates:\n\n\nAdded support for Google API key in Geo coding (\nPR1594\n)\n\n\nAdded ability to updated storage % warning (\nPR1613\n)\n\n\nUpdated eventlog page to allow filtering by type (\nPR1623\n)\n\n\nHide logo and plugins text on smaller windows (\nPR1624\n)\n\n\nAdded poller group name to poller groups table (\nPR1634\n)\n\n\nUpdated Customers page to use Bootgrid (\nPR1658\n)\n\n\nAdded basic Graylog integration support (\nPR1665\n)\n\n\nAdded support for running under sub-directory (\nPR1667\n)\n\n\nUpdated vis.js to latest version (\nPR1708\n)\n\n\nAdded border on availability map (\nPR1713\n)\n\n\nMake new dashboard the default (\nPR1719\n)\n\n\nRearrange about page (\nPR1735\n,\nPR1743\n)\n\n\nCenter/Cleanup graphs (\nPR1736\n)\n\n\nAdded Hover-Effect on devices table (\nPR1738\n)\n\n\nShow Test-Transport result (\nPR1777\n)\n\n\nAdd arrows to the network map (\nPR1787\n)\n\n\nAdd errored ports to summary widget (\nPR1788\n)\n\n\nShow message if no Device-Groups exist (\nPR1796\n)\n\n\nMisc UI fixes (Titles, Headers, ...) (\nPR1797\n,\nPR1798\n,\nPR1800\n,\nPR1801\n,\nPR1802\n,\nPR1803\n,\nPR1804\n,\nPR1805\n)\n\n\nMove packages to overview dropdown (\nPR1810\n)\n\n\n\n\n\n\nAPI Updates:\n\n\nImproved billing support in API (\nPR1599\n)\n\n\nExtended support for list devices to support mac/ipv4 and ipv6 filtering (\nPR1744\n)\n\n\n\n\n\n\nAdded detection for:\n\n\nPerle Media convertors (\nPR1607\n)\n\n\nMac OSX 10 (\nPR1774\n)\n\n\n\n\n\n\nImproved detection for:\n\n\nWindows devices (\nPR1639\n)\n\n\nZywall CPU, Version and Memory (\nPR1660\n,\nPR1784\n)\n\n\nAdded LLDP support for PBN devices (\nPR1705\n)\n\n\nNetgear GS110TP (\nPR1751\n)\n\n\n\n\n\n\nAdditional Sensors:\n\n\nAdded Compressor state for PCOWEB (\nPR1600\n)\n\n\nAdded dbm support for IOS-XR (\nPR1661\n)\n\n\nAdded temperature support for DNOS (\nPR1782\n)\n\n\n\n\n\n\nDiscovery / Poller:\n\n\nUpdated autodiscovery function to log new type (\nPR1623\n)\n\n\nImprove application polling (\nPR1724\n)\n\n\nImprove debug output (\nPR1756\n)\n\n\n\n\n\n\nDB:\n\n\nAdded MySQLi support (\nPR1647\n)\n\n\n\n\n\n\nDocumentation:\n\n\nAdded docs on MySQL strict mode (\nPR1635\n)\n\n\nUpdated billing docs to use librenms user in cron (\nPR1676\n)\n\n\nUpdated LDAP docs to indicate php-ldap module needs installing (\nPR1716\n)\n\n\nTypo/Spellchecks (\nPR1731\n,\nPR1806\n)\n\n\nImproved Alerting and Device-Groups (\nPR1781\n)\n\n\n\n\n\n\nAlerting:\n\n\nReformatted eventlog message to show state for alerts (\nPR1685\n)\n\n\nAdd basic Pushbullet transport (\nPR1721\n)\n\n\nAllow custom titles (\nPR1807\n)\n\n\n\n\n\n\nGeneral:\n\n\nAdded more debugging and checks to discovery-protocols (\nPR1590\n)\n\n\nCleanup debug statements (\nPR1725\n,\nPR1737\n)\n\n\n\n\n\n\n\n\nJuly 2015\n\n\nBug fixes\n\n\n\n\nWebUI:\n\n\nFixed API not functioning. (\nPR1367\n)\n\n\nFixed API not storing alert rule names (\nPR1372\n)\n\n\nFixed datetimepicker use (\nPR1376\n)\n\n\nAdded 'running' status for BGP peers as up (\nPR1412\n)\n\n\nFixed the remove search link in devices (\nPR1413\n)\n\n\nFixed clicking anywhere in a search result will now take you to where you want (\nPR1472\n)\n\n\nFixed inventory page not displaying results (\nPR1488\n)\n\n\nFixed buggy alert templating in WebUI (\nPR1527\n)\n\n\nFixed bug in creating api tokens in Firefox (\nPR1530\n)\n\n\n\n\n\n\nDiscovery / Poller:\n\n\nDo not allow master to rejoin itself. (\nPR1377\n)\n\n\nFixed poller group query in discovery (\nPR1433\n)\n\n\nFixed ARMv5 detection (\nPR1522\n)\n\n\nFixed pfSense detection (\nPR1567\n)\n\n\n\n\n\n\nSensors:\n\n\nFixed bug in EqualLogic sensors (\nPR1513\n)\n\n\nFixed bug in DRAC voltage sensor (\nPR1521\n)\n\n\nFixed bug in APC bank detection (\nPR1560\n)\n\n\n\n\n\n\nDocumentation:\n\n\nFixed Nginx config file (\nPR1389\n)\n\n\n\n\n\n\nGeneral:\n\n\nFixed a number of permission issues (\nPR1411\n)\n\n\n\n\n\n\n\n\nImprovements\n\n\n\n\nAdded detection for:\n\n\nMeraki (\nPR1402\n)\n\n\nBrocade (\nPR1404\n)\n\n\nDell iDrac (\nPR1419\n,\nPR1420\n,\nPR1423\n,\nPR1427\n)\n\n\nDell Networking OS (\nPR1474\n)\n\n\nNetonix (\nPR1476\n)\n\n\nIBM Tape Library (\nPR1519\n,\nPR1550\n)\n\n\nAerohive (\nPR1546\n)\n\n\nCisco Voice Gateways (\nPR1565\n)\n\n\n\n\n\n\nImproved detection for:\n\n\nRouterOS RB260GS (\nPR1545\n)\n\n\nDell PowerConnect (\nPR1452\n,\nPR1517\n)\n\n\nBrocade (\nPR1548\n)\n\n\nRielo UPS (\nPR1381\n)\n\n\nCisco IPSLAs (\nPR1586\n)\n\n\n\n\n\n\nAdditional Sensors:\n\n\nAdded power, temperature and fan speed support for XOS (\nPR1493\n,\nPR1494\n,\nPR1496\n)\n\n\n\n\n\n\nWebUI Updates:\n\n\nAdded missing load and state icons (\nPR1392\n)\n\n\nAdded ability to update users passwords in WebUI (\nPR1440\n)\n\n\nDefault to two days performance data being shown (\nPR1442\n)\n\n\nImproved sensors page for mobile view (\nPR1454\n)\n\n\nImprovements to network map (\nPR1455\n,\nPR1470\n,\nPR1486\n,\nPR1528\n,\nPR1557\n)\n\n\nAdded availability map (\nPR1464\n)\n\n\nUpdated edit ports page to use Bootstrap (\nPR1498\n)\n\n\nAdded new World Map and support for lat/lng lookup (\nPR1501\n,\nPR1552\n)\n\n\nAdded sysName to overview page for device (\nPR1520\n)\n\n\nAdded New Overview dashboard uilising Widgets (\nPR1523\n,\nPR1580\n)\n\n\nAdded new config option to disable Device groups (\nPR1569\n)\n\n\n\n\n\n\nDiscovery / Poller Updates:\n\n\nUpdated discovery of IP based devices (\nPR1406\n)\n\n\nAdded using cronic for poller-wrapper.py to allow cron to send emails (\nPR1408\n,\nPR1531\n)\n\n\nUpdated Cisco MIBs to latest versions (\nPR1436\n)\n\n\nImprove performance of unix-agent processes DB code (\nPR1447\n,\nPR1460\n)\n\n\nAdded BGP discovery code (\nPR1414\n)\n\n\nUse snmpEngineTime as a fallback to uptime (\nPR1477\n)\n\n\nAdded fallback support for devices not reporting ifAlias (\nPR1479\n)\n\n\nGit pull and schema updates will now pause if InnoDB buffers overused (\nPR1563\n)\n\n\n\n\n\n\nDocumentation:\n\n\nUpdated Unix-Agent docs to use LibreNMS repo for scripts (\nPR1568\n,\nPR1570\n,\nPR1573\n)\n\n\nAdded info on using MariaDB (\nPR1585\n)\n\n\n\n\n\n\nAlerting:\n\n\nAdded Boxcar (www.boxcar.io) transport for alerting (\nPR1481\n)\n\n\nRemoved old alerting code (\nPR1581\n)\n\n\n\n\n\n\nGeneral:\n\n\nCode cleanup and formatting (\nPR1415\n,\nPR1416\n,\nPR1431\n,\nPR1434\n,\nPR1439\n,\nPR1444\n,\nPR1450\n)\n\n\nAdded support for CollectD flush (\nPR1463\n)\n\n\nAdded support for LDAP pure DN member groups (\nPR1516\n)\n\n\nUpdated validate.php to check for distributed poller setup issues (\nPR1526\n)\n\n\nImproved service check support (\nPR1385\n,\nPR1386\n,\nPR1387\n,\nPR1388\n)\n\n\nAdded SNMP Scanner to discover devices within subnets and docs (\nPR1577\n)\n\n\n\n\n\n\n\n\nJune 2015\n\n\nBug fixes\n\n\n\n\nFixed services list SQL issue (\nPR1181\n)\n\n\nFixed negative values for storage when volume is \n 2TB (\nPR1185\n)\n\n\nFixed visual display for input fields on /syslog/ (\nPR1193\n)\n\n\nFixed fatal php issue in shoutcast.php (\nPR1203\n)\n\n\nFixed percent bars in /bills/ (\nPR1208\n)\n\n\nFixed item count in memory and storage pages (\nPR1210\n)\n\n\nFixed syslog not loading (\nPR1219\n)\n\n\nFixed fatal on reload in IRC bot (\nPR1218\n)\n\n\nAlter Windows CPU description when unknown (\nPR1226\n)\n\n\nFixed rfc1628 current calculation (\nPR1256\n)\n\n\nFixed alert mapping not working (\nPR1280\n)\n\n\nFixed legend ifLabels (\nPR1296\n)\n\n\nFixed bug causing map to not load when stale link data was present (\nPR1297\n)\n\n\nFixed javascript issue preventing removal of alert rules (\nPR1312\n)\n\n\nFixed removal of IPs before ports are deleted (\nPR1329\n)\n\n\nFixed JS issue when removing ports from bills (\nPR1330\n)\n\n\nFixed adding --daemon a second time to collectd Graphs (\nPR1342\n)\n\n\nFixed CollectD DS names (\nPR1347\n,\nPR1349\n,\nPR1368\n)\n\n\nFixed graphing issues when rrd contains special chars (\nPR1350\n)\n\n\nFixed regex for device groups (\nPR1359\n)\n\n\nAdded HOST-RESOURCES-MIB into Synology detection (RP1360)\n\n\nFix health page graphs showing the first graph for all (\nPR1363\n)\n\n\n\n\nImprovements\n\n\n\n\nUpdated Syslog docs to include syslog-ng 3.5.1 updates (\nPR1171\n)\n\n\nAdded Pushover Transport (\nPR1180\n, \nPR1191\n)\n\n\nConverted processors and memory table to bootgrid (\nPR1188\n, \nPR1192\n)\n\n\nIssued alerts and transport now logged to eventlog (\nPR1194\n)\n\n\nAdded basic support for Enterasys devices (\nPR1211\n)\n\n\nAdded dynamic config to configure alerting (\nPR1153\n)\n\n\nAdded basic support for Multimatic USV (\nPR1215\n)\n\n\nDisabled and ignored ports no longer show by default on /ports/ (\nPR1228\n,\nPR1301\n)\n\n\nAdded additional graphs to menu on devices page (\nPR1229\n)\n\n\nAdded Docs on configuring Globe front page (\nPR1231\n)\n\n\nAdded robots.txt to html folder to disallow indexing (\nPR1234\n)\n\n\nAdded additional support for Synology units (\nPR1235\n,\nPR1244\n,\nPR1269\n)\n\n\nAdded IP check to autodiscovery code (\nPR1248\n)\n\n\nUpdated HP ProCurve detection (\nPR1249\n)\n\n\nAdded basic detection for Alcatel-Lucent OmniSwitch (\nPR1253\n, \nPR1282\n)\n\n\nAdded additional metrics for rfc1628 UPS (\nPR1258\n, \nPR1268\n)\n\n\nAllow multiple discovery modules to be specified on command line (\nPR1263\n)\n\n\nUpdated docs on using libvirt (\nPR1264\n)\n\n\nUpdated Ruckus detection (\nPR1267\n)\n\n\nInitial release of MIB based polling (\nPR1273\n)\n\n\nAdded support for CISCO-BGP4-MIB (\nPR1184\n)\n\n\nAdded support for Dell EqualLogic units (\nPR1283\n,\nPR1309\n)\n\n\nAdded logging of success/ failure for alert transports (\nPR1286\n)\n\n\nUpdated VyOS detection (\nPR1299\n)\n\n\nAdded primary serial number detection for Cisco units (\nPR1300\n)\n\n\nAdded support for specifying MySQL port number in config.php (\nPR1302\n)\n\n\nUpdated alert subject to use rule name not ID (\nPR1310\n)\n\n\nAdded macro %macros.sensor (\nPR1311\n)\n\n\nAdded WebUI support for Pushover (\nPR1313\n)\n\n\nUpdated path check for Oxidized config (\nPR1316\n)\n\n\nAdded Multimatic UPS to rfc1628 detection (\nPR1317\n)\n\n\nAdded timeout for Unix agent (\nPR1319\n)\n\n\nAdded support for a poller to use more than one poller group (\nPR1323\n)\n\n\nAdded ability to use Plugins on device overview page (\nPR1325\n)\n\n\nAdded latency loss/avg/max/min results to DB and Graph (\nPR1326\n)\n\n\nAdded recording of device down (snmp/icmp) (\nPR1326\n)\n\n\nAdded debugging output for when invalid SNMPv3 options used (\nPR1331\n)\n\n\nAdded load and state output to device overview page (\nPR1333\n)\n\n\nAdded load sensors to RFC1628 Devices (\nPR1336\n)\n\n\nAdded support for WebPower Pro II UPS Cards (\nPR1338\n)\n\n\nNo longer rewrite server-status in .htaccess (\nPR1339\n)\n\n\nAdded docs for setting up Service extensions (\nPR1354\n)\n\n\nAdded additional info from pfsense devices (\nPR1356\n)\n\n\n\n\nMay 2015\n\n\nBug fixes\n\n\n\n\nUpdated nested addHosts to use variables passed (\nPR889\n)\n\n\nFixed map drawing issue (\nPR907\n)\n\n\nFixed sensors issue where APC load sensors overwrote current (\nPR912\n)\n\n\nFixed devices location filtering (\nPR917\n, \nPR921\n)\n\n\nMinor fix to rrdcached_dir handling (\nPR940\n)\n\n\nNow set defaults for AddHost on XDP discovery (\nPR941\n)\n\n\nFix web installer to generate config correctly if possible (\nPR954\n)\n\n\nFix inverse option for graphs (\nPR955\n)\n\n\nFix ifAlias parsing (\nPR960\n)\n\n\nRewrote rrdtool_escape to fix graph formatting issues (\nPR961\n, \nPR965\n)\n\n\nUpdated ports check to include ifAdminStatus (\nPR962\n)\n\n\nFixed custom sensors high / low being overwritten on discovery (\nPR977\n)\n\n\nFixed APC powerbar phase limit discovery (\nPR981\n)\n\n\nFix for 4 digit cpu% for Datacom (\nPR984\n)\n\n\nFix SQL query for restricted users in /devices/ (\nPR990\n)\n\n\nFix for post-formatting time-macros (\nPR1006\n)\n\n\nHonour disabling alerts for hosts (\nPR1051\n)\n\n\nMake OSPF and ARP discovery independent xDP (\nPR1053\n)\n\n\nFixed ospf_nbrs lookup to use device_id (\nPR1088\n)\n\n\nRemoved trailing / from some urls (\nPR1089\n / \nPR1100\n)\n\n\nFix to device search for Device type and location (\nPR1101\n)\n\n\nStop non-device boxes on overview appearing when device is down (\nPR1106\n)\n\n\nFixed nfsen directory checks (\nPR1123\n)\n\n\nRemoved lower limit for sensor graphs so negative values show (\nPR1124\n)\n\n\nAdded fallback for poller_group if empty when adding devices (\nPR1126\n)\n\n\nFixed processor graphs tooltips (\nPR1127\n)\n\n\nFixed /poll-log/ count (\nPR1130\n)\n\n\nFixed ARP search graph type reference (\nPR1131\n)\n\n\nFixed showing state=X in device list (\nPR1144\n)\n\n\nRemoved ability for demo user to delete users (\nPR1151\n)\n\n\nFixed user / port perms for top X front page boxes (\nPR1156\n)\n\n\nFixed truncating UTF-8 strings (\nPR1166\n)\n\n\nFixed attaching templates due to JS issue (\nPR1167\n)\n\n\n\n\nImprovements\n\n\n\n\nAdded loading bar to top nav (\nPR893\n)\n\n\nAdded load and current for APC units (\nPR888\n)\n\n\nImproved web installer (\nPR887\n)\n\n\nUpdated alerts status box (\nPR875\n)\n\n\nUpdated syslog page (\nPR862\n)\n\n\nAdded temperature polling for IBM Flexsystem (\nPR894\n)\n\n\nUpdated typeahead libraries and relevant forms (\nPR882\n)\n\n\nAdded docs showing configuration options and how to use them (\nPR910\n)\n\n\nAdded docs on discovery / poller and how to debug (\nPR911\n)\n\n\nUpdated docs for MySQL / Nginx / Bind use in Unix agent (\nPR916\n)\n\n\nUpdate development docs (\nPR919\n)\n\n\nUpdated install docs to advise about whitespace in config.php (\nPR920\n)\n\n\nAdded docs on authentication modules (\nPR922\n)\n\n\nAdded support for Oxidized config archival (\nPR927\n)\n\n\nAdded API to feed devices to Oxidized (\nPR928\n)\n\n\nAdded support for per OS bad_iftype, bad_if and bad_if_regexp (\nPR930\n)\n\n\nEnable alerting on tables with relative / indirect glues (\nPR932\n)\n\n\nAdded bills support in rulesuggest and alert system (\nPR934\n)\n\n\nAdded detection for Sentry Smart CDU (\nPR938\n)\n\n\nAdded basic detection for Netgear devices (\nPR942\n)\n\n\naddhost.php now uses distributed_poller_group config if set (\nPR944\n)\n\n\nAdded port rewrite function (\nPR946\n)\n\n\nAdded basic detection for Ubiquiti Edgeswitch (\nPR947\n)\n\n\nAdded support for retrieving email address from LDAP (\nPR949\n)\n\n\nUpdated JunOS logo (\nPR952\n)\n\n\nAdd aggregates on multi_bits_separate graphs (\nPR956\n)\n\n\nFix port name issue for recent snmp versions on Linux (\nPR957\n)\n\n\nAdded support for quick access to devices via url (\nPR958\n)\n\n\nAdded work around for PHP creating zombie processes on certain distros (\nPR959\n)\n\n\nAdded detection support for NetApp + disks + temperature (\nPR967\n, \nPR971\n)\n\n\nDefine defaults for graphs (\nPR968\n)\n\n\nAdded docs for migrating from Observium (\nPR974\n)\n\n\nAdded iLo temperature support (\nPR982\n)\n\n\nAdded disk temperature for Synology DSM (\nPR986\n)\n\n\nAdded ICMP, TLS/SSL and Domain expiry service checks (\nPR987\n, \nPR1040\n, \nPR1041\n)\n\n\nAdded IPMI detection (\nPR988\n)\n\n\nMikrotik MIB update (\nPR991\n)\n\n\nSet better timeperiod for caching graphs (\nPR992\n)\n\n\nAdded config option to disable port relationship in ports list (\nPR996\n)\n\n\nAdded support for custom customer description parse (\nPR998\n)\n\n\nAdded hardware and MySQL version stats to callback (\nPR999\n)\n\n\nAdded support for alerting to PagerDuty (\nPR1004\n)\n\n\nNow send ack notifications for alerts that are acked (\nPR1008\n)\n\n\nUpdated contributing docs and added placeholder (\nPR1024\n, \nPR1025\n)\n\n\nUpdated globe.php overview page with updated map support (\nPR1029\n)\n\n\nConverted storage page to use Bootgrid (\nPR1030\n)\n\n\nAdded basic FibreHome detection (\nPR1031\n)\n\n\nShow details of alerts in alert log (\nPR1043\n)\n\n\nAllow a user-defined windows to add tolerance for alerting (\nPR1044\n)\n\n\nAdded inlet support for Raritan PX iPDU (\nPR1045\n)\n\n\nUpdated MIBS for Cisco SB (\nPR1058\n)\n\n\nAdded error checking for build-base on install (\nPR1059\n)\n\n\nAdded fan and raid state for Dell OpenManage (\nPR1062\n)\n\n\nUpdated MIBS for Ruckus ZoneDirectors (\nPR1067\n)\n\n\nAdded check for ./rename.php (\nPR1069\n)\n\n\nAdded install instructions to use librenms user (\nPR1071\n)\n\n\nHonour sysContact over riding for alerts (\nPR1073\n)\n\n\nAdded services page for adding/deleting and editing services (\nPR1076\n)\n\n\nAdded more support for Mikrotik devices (\nPR1080\n)\n\n\nAdded better detection for Cisco ASA 5585-SSP40 (\nPR1082\n)\n\n\nAdded CPU dataplane support for JunOS (\nPR1086\n)\n\n\nRemoved requirement for hostnames on add device (\nPR1087\n)\n\n\nAdded config option to exclude sysContact from alerts (\nPR1093\n)\n\n\nAdded config option to regenerate contacts on alerts (\nPR1109\n)\n\n\nAdded validation tool to help fault find issues with installs (\nPR1112\n)\n\n\nAdded CPU support for EdgeOS (\nPR1114\n)\n\n\nAdded ability to customise transit/peering/core descriptions (\nPR1125\n)\n\n\nShow ifName in ARP search if devices are set to use this (\nPR1133\n)\n\n\nAdded FibreHome CPU and Mempool support (\nPR1134\n)\n\n\nAdded config options for region and resolution on globe map (\nPR1137\n)\n\n\nAdded RRDCached example docs (\nPR1148\n)\n\n\nUpdated support for additional NetBotz models (\nPR1152\n)\n\n\nUpdated /iftype/ page to include speed/circuit/notes (\nPR1155\n)\n\n\nAdded detection for PowerConnect 55XX devices (\nPR1165\n)\n\n\n\n\nApr 2015\n\n\nBug fixes\n\n\n\n\nFixed ack of worse/better alerts (\nPR720\n)\n\n\nFixed ORIG_PATH_INFO warnings (\nPR727\n)\n\n\nAdded missing CPU id for Cisco SB (\nPR744\n)\n\n\nChanged Processors table name to lower case in processors discovery (\nPR751\n)\n\n\nFixed alerts path issue (\nPR756\n, \nPR760\n)\n\n\nSuppress further port alerts when interface goes down (\nPR745\n)\n\n\nFixed login so redirects via 303 when POST data sent (\nPR775\n)\n\n\nFixed missing link to errored or ignored ports (\nPR787\n)\n\n\nUpdated alert log query for performance improvements (\nPR783\n)\n\n\nHonour alert_rules.disabled field (\nPR784\n)\n\n\nStop page debug if user not logged in (\nPR785\n)\n\n\nAdded text filtering for new tables (\nPR797\n)\n\n\nFixed VMWare VM detection + hardware / serial support (\nPR799\n)\n\n\nFix links from /health/processor (\nPR810\n)\n\n\nHide divider if no plugins installed (\nPR811\n)\n\n\nAdded Nginx fix for using debug option (\nPR823\n)\n\n\nBug fixes for device groups SQL (\nPR840\n)\n\n\nFixed path issue when using rrdcached (\nPR839\n)\n\n\nFixed JS issues when deleting alert maps / poller groups / device groups (\nPR846\n,\nPR848\n,\nPR877\n)\n\n\nFixed links and popover for /health/metric=storage/ (\nPR847\n)\n\n\nFixed lots of user permission issues (\nPR855\n)\n\n\nFixed search ip / arp / mac pages (\nPR845\n)\n\n\nAdded missing charge icon (\nPR878\n)\n\n\n\n\nImprovements\n\n\n\n\nNew theme support added (light,dark and mono) (\nPR682\n,\nPR683\n,\nPR701\n)\n\n\nTables being converted to Jquery Bootgrid (\nPR693\n,\nPR706\n,\nPR716\n)\n\n\nDetect Cisco ASA Hardware and OS Version (\nPR708\n)\n\n\nUpdate LDAP support (\nPR707\n)\n\n\nUpdated APC powernet MIB (\nPR713\n)\n\n\nUpdate to Foritgate support (\nPR709\n)\n\n\nAdded support for UBNT AirOS and AirFibre (\nPR721\n,\nPR730\n,\nPR731\n)\n\n\nAdded support device groups + alerts to be mapped to devices or groups (\nPR722\n)\n\n\nAdded basic Cambium support (\nPR738\n)\n\n\nAdded basic F5 support (\nPR670\n)\n\n\nShorten interface names on map (\nPR752\n)\n\n\nAdded PowerCode support (\nPR762\n)\n\n\nAdded Autodiscovery via OSPF (\nPR772\n)\n\n\nAdded visual graph of alert log (\nPR777\n, \nPR809\n)\n\n\nAdded Callback system to send anonymous stats (\nPR768\n)\n\n\nMore tables converted to use bootgrid (\nPR729\n, \nPR761\n)\n\n\nNew Global Cache to store common queries added (\nPR780\n)\n\n\nAdded proxy support for submitting stats (\nPR791\n)\n\n\nMinor APC Polling change (\nPR800\n)\n\n\nUpdated to HP switch detection (\nPR802\n)\n\n\nAdded Datacom basic detection (\nPR816\n)\n\n\nUpdated Cisco detection (\nPR815\n)\n\n\nAdded CSV export system + ability to export ports (\nPR818\n)\n\n\nAdded basic detection for PacketLogic devices (\nPR773\n)\n\n\nAdded fallback support for IBM switches for Serial / Version (\nPR822\n)\n\n\nAdded Juniper Inventory support (\nPR825\n)\n\n\nSharpen graphs produced (\nPR826\n)\n\n\nUpdated map to show device overview graphs and port graphs (\nPR826\n)\n\n\nAdded hostname to API call for list_alerts (\nPR834\n)\n\n\nAdded ability to schedule maintenance (\nPR835\n,\nPR841\n)\n\n\nAdded ability to expand alert triggers for more details (\nPR857\n)\n\n\nAdded support for XTM/FBX Watchguard devices (\nPR849\n)\n\n\nUpdated Juniper MIBS and hardware rewrite (\nPR838\n)\n\n\nUpdated OpenBSD detection (\nPR860\n)\n\n\nAdded Macro support for alerting system (\nPR863\n)\n\n\nAdded support for tcp connections on rrdcached (\nPR866\n)\n\n\nAdded config option to enable / disable mouseover graphs (\nPR873\n)\n\n\nGeneral cleanup of files / folders permissions (\nPR874\n)\n\n\nAdded window size detection for map (\nPR884\n)\n\n\nAdded text to let users know refresh is disabled (\nPR883\n)\n\n\n\n\nMar 2015\n\n\nBug fixes\n\n\n\n\nUpdates to alert rules split (\nPR550\n)\n\n\nUpdated get_graphs() for API to resolve graph names (\nPR613\n)\n\n\nFixed use of REMOTE_ADDR to use X_FORWARDED_FOR if available (\nPR620\n)\n\n\nAdded yocto support from entPhySensorScale (\nPR632\n)\n\n\nEventlog search fixed (\nPR644\n)\n\n\nAdded missing OS discovery to default list (\nPR660\n)\n\n\nFixed logging issue when description of a port was removed (\nPR673\n)\n\n\nFixed logging issue when ports changed status (\nPR675\n)\n\n\nShortened interface names for graph display (\nPR676\n)\n\n\n\n\nImprovements\n\n\n\n\nVisual updates to alert logs (\nPR541\n)\n\n\nAdded temperature support for APC AC units (\nPR545\n)\n\n\nAdded ability to pause and resume page refresh (\nPR557\n)\n\n\nAdded polling support for NXOS (\nPR562\n)\n\n\nAdded discovery support for 3Com switches (\nPR568\n)\n\n\nUpdated Comware support (\nPR583\n)\n\n\nAdded new logo (\nPR584\n)\n\n\nAdded dynamic removal of device data when removing device (\nPR592\n)\n\n\nUpdated alerting to use fifo (\nPR607\n)\n\n\nAdded distributed poller support (\nPR609\n and \nPR610\n)\n\n\nAdded PowerConnect 55xx (\nPR635\n)\n\n\nAdded inventory API endpoint (\nPR640\n)\n\n\nAdded serial number detection for ASA firewalls (\nPR642\n)\n\n\nAdded missing MKTree library for inventory support (\nPR646\n)\n\n\nAdded support for exporting Alert logs to PDF (\nPR653\n)\n\n\nAdded basic Ubiquiti support (\nPR659\n)\n\n\nNumerous docs update (\nPR662\n, \nPR663\n, \nPR677\n, \nPR694\n)\n\n\nAdded Polling information page (\nPR664\n)\n\n\nAdded HipChat notification support (\nPR669\n)\n\n\nImplemented Jquery Bootgrid support (\nPR671\n)\n\n\nAdded new map to show xDP discovered links and devices (\nPR679\n + \nPR680\n)\n\n\n\n\nFeb 2015\n\n\nBug fixes\n\n\n\n\nRemoved header redirect causing page load delays (\nPR436\n)\n\n\nFixed stale alerting data (\nPR475\n)\n\n\nFixed api call for port stats to use device_id / hostname (\nPR478\n)\n\n\nWork started on ensuring MySQL strict mode is supported (\nPR521\n)\n\n\n\n\nImprovements\n\n\n\n\nAdded support for Cisco Wireless Controllers (\nPR422\n)\n\n\nUpdated IRC Bot to support alerting system (\nPR434\n)\n\n\nAdded new message box to alert when a device hasn't polled for 15 minutes or more (\nPR435\n)\n\n\nAdded quick links on device list page to quickly access common pages (\nPR440\n)\n\n\nAlerting docs updated to cover new features (\nPR446\n)\n\n\nIBM NOS Support added (\nPR454\n)\n\n\nAdded basic Barracuda Loadbalancer support (\nPR456\n)\n\n\nSmall change to the search results to add port desc / alias (\nPR457\n)\n\n\nAdded Device sub menu to access devices category directly (\nPR465\n)\n\n\nAdded basic Ruckus Wireless support (\nPR466\n)\n\n\nAdded support for a demo user (\nPR471\n)\n\n\nMany small visual updates\n\n\nAdded additional support for Cisco SB devices (\nPR487\n)\n\n\nAdded support to default home page for printing alerts (\nPR488\n)\n\n\nTidied up Alert menubar into sub menu (\nPR489\n)\n\n\nAdded historical alerts page (\nPR495\n)\n\n\nAdded battery charge monitoring for (\nPR519\n)\n\n\nAdded Slack support for alert system (\nPR525\n)\n\n\nAdded new debug for php / sql option to page footer (\nPR484\n)\n\n\n\n\nJan 2015\n\n\nBug fixes\n\n\n\n\nReverted chmod to make poller.php executable again (\nPR394\n)\n\n\nFixed duplicate port listing (\nPR396\n)\n\n\nFixed create bill from port page (\nPR404\n)\n\n\nFixed autodiscovery to use $config['mydomain'] correctly (\nPR423\n)\n\n\nFixed mute bug for alerts (\nPR428\n)\n\n\n\n\nImprovements\n\n\n\n\nUpdated login page visually (\nPR391\n)\n\n\nAdded Hikvision support (\nPR393\n)\n\n\nAdded ability to search for packages using unix agent (\nPR395\n)\n\n\nUpdated ifAlias support for varying distributions (\nPR398\n)\n\n\nUpdated visually Global Settings page (\nPR401\n)\n\n\nAdded missing default nginx graphs (\nPR403\n)\n\n\nUpdated check_mk_agent to latest git version (\nPR409\n)\n\n\nAdded support for recording process list with unix agent (\nPR410\n)\n\n\nAdded support for named/bind9/TinyDNS application using unix agent (\nPR413\n, \nPR416\n)\n\n\nAbout page tidied up (\nPR414\n, \nPR425\n)\n\n\nUpdated progress bars to use bootstrap (\nPR42\n)\n\n\nUpdated install docs to cover CentOS7 (\nPR424\n)\n\n\nAlerting system updated with more features (\nPR429\n, \nPR430\n)\n\n\n\n\nDec 2014\n\n\nBug fixes\n\n\n\n\nFixed Global Search box bootstrap (\nPR357\n)\n\n\nFixed display issues when calculating CDR in billing system (\nPR359\n)\n\n\nFixed API route order to resolve get_port_graphs working (\nPR364\n)\n\n\n\n\nImprovements\n\n\n\n\nAdded new API route to retrieve list of graphs for a device (\nPR355\n)\n\n\nAdded new API route to retrieve list of port for a device (\nPR356\n)\n\n\nAdded new API route to retrieve billing info (\nPR360\n)\n\n\nAdded alerting system (\nPR370\n, \nPR369\n, \nPR367\n)\n\n\nAdded dbSchema version to about page (\nPR377\n)\n\n\nAdded git log link to about page (\nPR378\n)\n\n\nAdded Two factor authentication (\nPR383\n)\n\n\n\n\nNov 2014\n\n\nBug fixes\n\n\n\n\nUpdated Alcatel-Lucent OmniSwitch detection (\nPR340\n)\n\n\nAdded fix for DLink port detection (\nPR347\n)\n\n\nFixed BGP session count (\nPR334\n)\n\n\nFixed errors with BGP polling and storing data in RRD (\nPR346\n)\n\n\n\n\nImprovements\n\n\n\n\nAdded option to clean old perf_times table entries (\nPR343\n)\n\n\nAdded nginx+php-fpm instructions (\nPR345\n)\n\n\nAdded BGP route to API (\nPR335\n)\n\n\nUpdated check_mk to new version + removed Observium branding (\nPR311\n)\n\n\nUpdated Edit SNMP settings page for device to only show relevant SNMP options (\nPR317\n)\n\n\nEventlog page now uses paged results (\nPR336\n)\n\n\nAdded new API route to show peering, transit and core graphs (\nPR349\n)\n\n\nAdded VyOS and EdgeOS detection (\nPR351\n / \nPR352\n)\n\n\nDocumentation style and markdown updates (\nPR353\n)\n\n\n\n\nOct 2014\n\n\nBug fixes\n\n\n\n\nFixed displaying device image in device list (\nPR296\n)\n\n\nFixed placement of popups (\nPR297\n)\n\n\nUpdated authToken response code in API to 401 (\nPR310\n)\n\n\nRemoved trailing / from v0 part of API url (\nPR312\n)\n\n\nAdded correct response code for API call get_vlans (\nPR313\n)\n\n\nUpdated yearly graphs to fix year variable being passed (\nPR316\n)\n\n\nUpdated transport list to be generated from $config (\nPR318\n)\n\n\nMoved addhost button on add host page as it was hidden (\nPR319\n)\n\n\nAdded stripslashes to hrdevice page (\nPR321\n)\n\n\nFixed web installer issue due to variable name change (\nPR325\n)\n\n\nUpdated disabled field in api tokens (\nPR327\n)\n\n\nFixed daily.sh not running from outside install directory (cron) (\nPR328\n)\n\n\nRemoved --no-edit from daily.php git pull (\nPR309\n)\n\n\n\n\nImprovements\n\n\n\n\nAdded ability to create api tokens (\nPR294\n)\n\n\nAdded icmp and poller graphs for devices (\nPR295\n)\n\n\nAdded urldecode/urlencode support for interface names in API (\nPR298\n)\n\n\nAdded new library to support on screen notifications (\nPR300\n)\n\n\nAdded authlog purge function and improved efficiency in clearing syslog table (\nPR301\n)\n\n\nUpdated addhost page to show relevant snmp options (\nPR303\n)\n\n\nAdded limit $config for front page boxes (\nPR305\n)\n\n\nUpdated http-auth adding user to check if user already exists (\nPR307\n)\n\n\nAdded names to all API routes (\nPR314\n)\n\n\nAdded route to call list of API endpoints (\nPR315\n)\n\n\nAdded options to $config to specify fping retry and timeout (\nPR323\n)\n\n\nAdded icmp / snmp to device down alerts for debugging (\nPR324\n)\n\n\nAdded function to page results for large result pages (\nPR333\n)\n\n\n\n\nSep 2014\n\n\nBug fixes\n\n\n\n\nUpdated vtpversion check to fix vlan discovery issues (\nPR289\n)\n\n\nFixed mac address change false positives (\nPR292\n)\n\n\n\n\nImprovements\n\n\n\n\nHide snmp passwords on edit snmp form (\nPR290\n)\n\n\nUpdates to API (\nPR291\n)\n\n\n\n\nAug 2014\n\n\nBug fixes\n\n\n\n\nDisk % not showing in health view (\nPR284\n)\n\n\nFixed layout issue for ports list (\nPR286\n)\n\n\nRemoved session regeneration (\nPR287\n)\n\n\nUpdated edit button on edit user screen (\nPR288\n)\n\n\n\n\nImprovements\n\n\n\n\nAdded email field for add user form (\nPR278\n)\n\n\nV0 of API release (\nPR282\n)\n\n\n\n\nJul 2014\n\n\nBug fixes\n\n\n\n\nFixed RRD creation using MAX twice (\nPR266\n)\n\n\nFixed variables leaking in poller run (\nPR267\n)\n\n\nFixed links to health graphs (\nPR271\n)\n\n\nFixed install docs to remove duplicate snmpd on install (\nPR276\n)\n\n\n\n\nImprovements\n\n\n\n\nAdded support for Cisco ASA connection graphs (\nPR268\n)\n\n\nUpdated delete device page (\nPR270\n)\n\n\n\n\nJun 2014\n\n\nBug fixes\n\n\n\n\nFixed a couple of DB queries (\nPR222\n)\n\n\nFixes to make interface more mobile friendly (\nPR227\n)\n\n\nFixed link to device on overview apps page (\nPR228\n)\n\n\nFixed missing backticks on SQL queries (\nPR253\n / \nPR254\n)\n\n\nFixed user permissions page (\nPR265\n)\n\n\n\n\nImprovements\n\n\n\n\nUpdated index page (\nPR224\n)\n\n\nUpdated global search visually (\nPR223\n)\n\n\nAdded contributors agreement (\nPR225\n)\n\n\nAdded ability to update health values (\nPR226\n)\n\n\nTidied up search box on devices list page (\nPR229\n)\n\n\nUpdated port search box and port table list (\nPR230\n)\n\n\nRemoved some unused javascript libraries (\nPR231\n)\n\n\nUpdated year and column for vertical status summary (\nPR232\n)\n\n\nTidied up the delete user page (\nPR235\n)\n\n\nAdded snmp port to $config (\nPR237\n)\n\n\nAdded documentation for lighttpd (\nPR238\n)\n\n\nUpdated all device edit pages (\nPR239\n)\n\n\nAdded IPv6 only host support (\nPR241\n)\n\n\nAdded public status page (\nPR246\n)\n\n\nAdded validate_device_id function (\nPR257\n)\n\n\nAdded auto detect of install location (\nPR259\n)\n\n\n\n\nMar 2014\n\n\nBug fixes\n\n\n\n\nRemoved link to pdf in billing history (\nPR146\n)\n\n\nlibrenms logs now saved in correct location (\nPR163\n)\n\n\nUpdated pfsense detection (\nPR182\n)\n\n\nFixed health page mini cpu (\nPR195\n)\n\n\nUpdated install docs to include php5-json (\nPR196\n)\n\n\nFixed Dlink interface names (\nPR200\n / \nPR203\n)\n\n\nStop shortening IP in shorthost function (\nPR210\n)\n\n\nFixed status box overlapping (\nPR211\n)\n\n\nFixed top port overlay issue (\nPR212\n)\n\n\nUpdated docs and daily.sh to update DB schemas (\nPR215\n)\n\n\nUpdated hardware detection for RouterOS (\nPR217\n)\n\n\nRestore _GET variables for logging in (\nPR218\n)\n\n\n\n\nImprovements\n\n\n\n\nUpdated inventory page to use bootstrap (\nPR141\n)\n\n\nUpdated mac / arp pages to use bootstrap (\nPR147\n)\n\n\nUpdated devices page to use bootstrap (\nPR149\n)\n\n\nUpdated delete host page to use bootstrap (\nPR151\n)\n\n\nUpdated print_error function to use bootstrap (\nPR153\n)\n\n\nUpdated install docs for Apache 2.3 \n (\nPR161\n)\n\n\nUpgraded PHPMailer (\nPR169\n)\n\n\nAdded send_mail function using PHPMailer (\nPR170\n)\n\n\nAdded new and awesome IRC Bot (\nPR171\n)\n\n\nAdded Gentoo detection and logo (\nPR174\n / \nPR179\n)\n\n\nAdded Engenius detection (\nPR186\n)\n\n\nUpdated edit user to enable editing (\nPR187\n)\n\n\nAdded EAP600 engenius support (\nPR188\n)\n\n\nAdded Plugin system (\nPR189\n)\n\n\nMySQL calls updated to use dbFacile (\nPR190\n)\n\n\nAdded support for Dlink devices (\nPR193\n)\n\n\nAdded Windows 2012 polling support (\nPR201\n)\n\n\nAdded purge options for syslog / eventlog (\nPR204\n)\n\n\nAdded BGP to global search box (\nPR205\n)\n\n\n\n\nFeb 2014\n\n\nBug fixes\n\n\n\n\nSet poller-wrapper.py to be executable (\nPR89\n)\n\n\nFix device/port down boxes (\nPR99\n)\n\n\nPorts set to be ignored honoured for threshold alerts (\nPR104\n)\n\n\nAdded PasswordHash.php to adduser.php (\nPR119\n)\n\n\nbuild-base.php update to run DB updates (\nPR128\n)\n\n\n\n\nImprovements\n\n\n\n\nAdded web based installer (\nPR75\n)\n\n\nUpdated login page design (\nPR78\n)\n\n\nAbility to enable / disable topX boxes (\nPR100\n)\n\n\nAdded PHPPass support for MySQL auth logins (\nPR101\n)\n\n\nUpdated to Bootstrap 3.1 (\nPR106\n)\n\n\nindex.php tidied up (\nPR107\n)\n\n\nUpdated device overview page design (\nPR113\n)\n\n\nUpdated print_optionbar* to use bootstrap (\nPR115\n)\n\n\nUpdated device/port/services box to use bootstrap (\nPR117\n)\n\n\nUpdated eventlog / syslog to use bootstrap (\nPR132\n / \nPR134\n)\n\n\n\n\nJan 2014\n\n\nBug fixes\n\n\n\n\nMoved location redirect for logout (\nPR55\n)\n\n\nRemove debug statements from process_syslog (\nPR57\n)\n\n\nStop print-syslog.inc.php from shortening hostnames (\nPR62\n)\n\n\nMoved some variables from defaults.inc.php to definitions.inc.php (\nPR66\n)\n\n\nFixed title being set correctly (\nPR73\n)\n\n\nAdded documentation to enable billing module (\nPR74\n)\n\n\n\n\nImprovements\n\n\n\n\nDeleting devices now asks for confirmation (\nPR53\n)\n\n\nAdded ARP discovered device name and IP to eventlog (\nPR54\n)\n\n\nInitial updated design release (\nPR59\n)\n\n\nAdded ifAlias script (\nPR70\n)\n\n\nAdded console ui (\nPR72\n)\n\n\n\n\nNov 2013\n\n\nBug fixes\n\n\n\n\nUpdates to fix arp discovery\n\n\n\n\nImprovements\n\n\n\n\nAdded poller-wrapper (f8debf4)\n\n\nDocumentation####Improvements and additions\n\n\nAdded auto update feature\n\n\nVisual updates\n\n\nLicense tidy up started\n\n\n\n\nOct 2013\n\n\n\n\nInitial release", 
            "title": "Changelog"
        }, 
        {
            "location": "/General/Changelog/#135", 
            "text": "(2017-12-20)", 
            "title": "1.35"
        }, 
        {
            "location": "/General/Changelog/#features", 
            "text": "Generic discovery and poller tests ( #7873 )  FreeRADIUS application monitoring ( #7818 )  Save application metrics to db for alerting ( #7828 )  Added Entity State polling ( #7625 )  Added manage_bills.php script to scripts directory ( #7633 )   Added Host dependencies support for alerting ( #7332 )", 
            "title": "Features"
        }, 
        {
            "location": "/General/Changelog/#bugfixes", 
            "text": "Agent tries to insert processes data that is too long ( #7891 )  Remove faulty memcached code (not related to distributed polling) ( #7881 )  Re-added peeringdb back into daily.sh ( #7884 )  Don't work around bad implementations in snmpwalk_group ( #7876 )  Some graphs broke due to stacked graphs, remove that change ( #7848 )  Fixed UPS time remaining in Mikrotik RouterOs ( #7803 )  Fixed get_all_ports() for api not returning ports on admin tokens ( #7829 )  Validate ifHighSpeed is   0 in selected port polling ( #7885 )  Added user level to getUser for LDAP authentication ( #7896 )   ipmi sensors sending the wrong tags to influxdb ( #7906 )", 
            "title": "Bugfixes"
        }, 
        {
            "location": "/General/Changelog/#documentation", 
            "text": "Minor fix to device sensors doc ( #7874 )  Create device sensor help doc. ( #7868 )  Updated sensor state doc ( #7822 )  Build new Cleanup Options doc ( #7798 )", 
            "title": "Documentation"
        }, 
        {
            "location": "/General/Changelog/#refactoring", 
            "text": "Stop sending emails to \"NOC\" for default_email target ( #7917 )  Refactor alert transports to classes ( #7844 )  Update all applications to store metrics ( #7853 )", 
            "title": "Refactoring"
        }, 
        {
            "location": "/General/Changelog/#devices", 
            "text": "Added state sensor support for HPE MSA devices ( #7808 )  Added temp and humidity sesors + serial for websensor (renamed from cometsystem-p85xx) ( #7854 )  Added Mikrotik POE sensors ( #7883 )  Added Mikrotik LLDP discovery ( #7901 )  Update wireless sensors for Ray and Alcoma devices ( #7820 )  Added support EdgeCore ECS4120-28T ( #7880 )  Added Junos dwdm interface sensor support ( #7714 )  Added detection for Cisco FTD devices ( #7887 )", 
            "title": "Devices"
        }, 
        {
            "location": "/General/Changelog/#webui", 
            "text": "Timezone support for graylog ( #7799 )  Added support for stacked graphs ( #7725 )  Added ability to mark all notifications as read ( #7489 )  Disabled page refresh on Add services page ( #7804 )  Added diskusage to top devices widget ( #7903 )", 
            "title": "WebUI"
        }, 
        {
            "location": "/General/Changelog/#api", 
            "text": "Added Retrieve BGP sessions by ID ( #7825 )  Fixed disabling tokens ( #7833 )  Added support for wireless sensors ( #7846 )  Added API method to rename devices ( #7895 )", 
            "title": "API"
        }, 
        {
            "location": "/General/Changelog/#alerting", 
            "text": "Validate email addresses used in alerting ( #7830 )  Added generic alerting for state sensors ( #7812 )", 
            "title": "Alerting"
        }, 
        {
            "location": "/General/Changelog/#134", 
            "text": "(2017-11-26)", 
            "title": "1.34"
        }, 
        {
            "location": "/General/Changelog/#features_1", 
            "text": "Added additional sensors for ups-nut  Track rrdtool time for poller ( #7706 )  Implement snmp_getnext() ( #7678 )  LDAP auth update: alerts, api, remember me ( #7335 )  Support a wider range of link speeds in network maps ( #7533 )  Allow snmpget in os discovery yaml ( #7587 )  Check cli timezone from the validation webpage ( #7648 )  Selected ports polling per OS ( #7674 )  Added purge-port scipt to allow deleting of ports from the CLI. ( #7528 )  Extra fping checks in validation ( #7651 )  Added support for setting php memory_limit in config.php ( #7704 )  Script to collect port polling data and compare full walk vs selective port polling ( #7626 )  Allow discovery to check if devices are down before skipping ( #7780 )", 
            "title": "Features"
        }, 
        {
            "location": "/General/Changelog/#bugfixes_1", 
            "text": "Fixed precache data ( #7782 )  Authentication on CentOS6 ( #7771 )  Fixed empty group query for devices ( #7760 )  Notification read count doesn't decrement in menu bar ( #7750 )  Do not add invalid Cisco senors seen in IOS 15.6(3)M1 ( #7629 )  Revert to two gets for sysDescr and sysObjectID ( #7741 )  Fixed Brocade ironware processor precision ( #7730 )  Basic input validation for screen width and height ( #7713 )  Better sanity checks of fping options.  Devices detected as ibmtl or generic ( #7618 )  Added primary key to perf_times to improve DELETE performance on replicas using ROW based replication ( #7493 )  Fail isPingable() if fping fails, take 2 ( #7585 )  Update ifIndex update on polling when ifIndex is not the port association mode ( #7574 ) ( #7575 )  Fix Services container alignment ( #7583 )  Availability-map showed ping devices as warning ( #7592 )  discovery.php -h all stops working after ping only device ( #7593 )  Improve poller validation ( #7586 )  Only show the neighbour tab if there are neighbors to show ( #7591 )  Updated hpe iPdu to remove power and fix load values ( #7596 )  Function snmp_get delete quotes in snmp query ( #7467 )  Better sanity check of hostname when adding device. ( #7582 )  github-apply sometimes fails on PRs with lots of commits ( #7604 )  PING fails on servers that don't set PATH in cron ( #7603 )  Correct sensor ID when removing device. ( #7611 )  Fixed status services up/down inverse values ( #7657 )  Better validation on callback url for Pagerduty integration ( #7658 )  Fixed number comparisons in alerts and device groups ( #7695 )  Fallback to snmpgetnext if db is unavailable ( #7698 )  Errors with missing posix extension ( #7666 )  Fixed component status log ( #7723 )  Fixed bgpPeers_cbgp discovery for junos ( #7743 )  Fixed incorrect mail validation if ( #7755 )  Fixed discovery-wrapper.py discovery.nodes can sometimes be None when not master ( #7747 )  Fixed bgp-peers fails when ip parsing fails ( #7773 )  Fixed poller-wrapper.py keeps running when a poller takes too long ( #7722 )  Use correct entity columns for sensors ( #7775 )  Discovery os changes weren't properly reflected if os changed ( #7779 )", 
            "title": "Bugfixes"
        }, 
        {
            "location": "/General/Changelog/#documentation_1", 
            "text": "Minor changes and fixes to Alert Rules ( #7789 )  Added Web UI rename device. ( #7769 )  SNMP config for Mac OSX ( #7767 )  Continue to reorganize docs ( #7762 )  Fix for rule mapping ( #7751 )  Added sudo guidelines for Proxmox ( #7739 )  Added sudo suggestion for SMART monitoring ( #7738 )  VM images recommended user update ( #7737 )  Install Docs Update for min PHP ver ( #7630 )  Added video link showing how to add ping only device ( #7711 )  Fix layout changes to dashboard. ( #7693 )  Create new docs on using dashboards ( #7688 )  Added Ping Only Device ( #7687 )  Added allow graphs without login ( #7675 )  Added device-troubleshooting page ( #7638 )  Added WebUI to Validate docs ( #7635 )  Minor spelling fix for device-troubleshooting ( #7689 )  Fix for VM images doc. ( #7740 )  Added syslog cleanup option ( #7581 )  How to add Weathermaps to Dashboards ( #7636 )  Added command to fetch shell script for DHCP Stats ( #7736 )  Added ports template to alert rules doc ( #7763 )", 
            "title": "Documentation"
        }, 
        {
            "location": "/General/Changelog/#refactoring_1", 
            "text": "Better default temperature sensor limits ( #7754 )  Switch to using discovery-wrapper.py by default ( #7661 )  Rewrite a bit of the irc bot ( #7667 )  Added the Nvidia SM average as app_status ( #7671 )  Refactored authorizers to classes ( #7497 )  Only update sensor/bgp tables when values are changed ( #7707 )", 
            "title": "Refactoring"
        }, 
        {
            "location": "/General/Changelog/#devices_1", 
            "text": "Updated Checkpoint Gaia detection and added storage ( #7656 )  Added additional APC rPDU2 Sensors ( #7490 )  Initial detection for Arris Cable Modem devices ( #7677 )  Removed unused poller/discovery modules for Arista EOS ( #7709 )  Update hwg-ste and add hwg-ste-plus support ( #7610 )  Added state sensors for Palo Alto Networks firewall ( #7482 )  Added additional sensors for logmaster Os  Added Temp and Humidity support for ServersCheck devices ( #7588 )  Added support for Avtech RoomAlert 32E/W and RoomAlert 11E ( #7614 )  Added support for Eltek enexus ( #7552 )  Added support for Stormshield devices ( #7646 )  Added support for Asentria SiteBoss ( #7655 )  Added humidity sensors for hwg-ste ( #7728 )  Addedd sensor support for UPS NUT devices ( #7622 )", 
            "title": "Devices"
        }, 
        {
            "location": "/General/Changelog/#webui_1", 
            "text": "Don't disable the applications check boxes in settings if the discovery module is disabled. ( #7615 )  Added toner support in health metrics list ( #7595 )  Hide rediscover button for ping only devices ( #7594 )  Added Health/sensor view for specific device/ports/port ( #7684 )  Updated poll-log page to honour force_ip_to_sysname ( #7712 )  Expose pollers link to show total poll time for all devices per poller ( #7699 )  Updated sensors overview header to be consistent with others ( #7761 )  Allow deletion of dead poller nodes ( #7721 )", 
            "title": "WebUI"
        }, 
        {
            "location": "/General/Changelog/#api_1", 
            "text": "Added support for Oxidized asking for a single host ( #7705 )  Validate columns parameter against fields in table ( #7717 )  Stop list_logs skipping first row ( #7772 )", 
            "title": "API"
        }, 
        {
            "location": "/General/Changelog/#alerting_1", 
            "text": "Added in dell server sensors alert rules to the collection ( #7647 )", 
            "title": "Alerting"
        }, 
        {
            "location": "/General/Changelog/#133", 
            "text": "(2017-10-29)", 
            "title": "1.33"
        }, 
        {
            "location": "/General/Changelog/#features_2", 
            "text": "Support for up/down detection of ping only devices.  Improve Device Neighbour WebUI ( #7487 )  Configurable 95th percentile ( #7442 )  Added AD support nested groups (resubmit #7175) ( #7259 )  Added configurable 95th percentile for graphs ( #7442 )  Added  sysname as filtering group for oxidized ( #7485 )  CDP matching incorrect ports ( #7491 )  Issue warning notification if php version is less than 5.6.4 ( #7418 )  Added Web validation support ( #7474 )  Support for up/down detection of ping only devices ( #7323 )", 
            "title": "Features"
        }, 
        {
            "location": "/General/Changelog/#bugfixes_2", 
            "text": "rfc1628 state sensor translations ( #7416 )  snmpwalk_group tables not using entries ( #7427 )  Improve accuracy of is_valid_hostname() ( #7435 )  snmp_get_multi returns no data if the oid doesn't contain a period ( #7456 )  Fixed clickatell alert transport ( #7446 )  Escape sql credentials during install ( #7494 )  Fixed OEM ipmi sensors that returns unreadable values ( #7518 )  Fixed ospf polling not removing stale data ( #7503 )  LLDP discovery change local port resolution ( #7443 )", 
            "title": "Bugfixes"
        }, 
        {
            "location": "/General/Changelog/#documentation_2", 
            "text": "Include Freeswitch in applications doc ( #7556 )  Added more example hardware ( #7542 )  Update syslog docs to prevent dates in the future/past ( #7519 )  Alerts glues ( #7480 )  Improve CentOS 7 and Ubuntu 16 rrdcached installation instructions ( #7473 )  Re-organize install docs ( #7424 )  Added HipChat V2 WebUI Config Example ( #7486 )  Alert rules, added in the alert rules videos ( #7512 )  Updated references for ##librenms to discord ( #7523 )  Document discovery and poller module enable/disable support ( #7505 )  OpenManage including info for windows ( #7534 )  Added SSL config for CentOS 7 with Apache ( #7529 )  Added Dynamic Configuration UI for Network-Map.md ( #7540 )  New doc for weathermap ( #7536 )", 
            "title": "Documentation"
        }, 
        {
            "location": "/General/Changelog/#devices_2", 
            "text": "Always allow empty ifDescr on fortigate ( #7547 )  Added temperature sensor to datacom switches. ( #7522 )  Added more Procera interfaces ( #7422 )  Added firewall graphs for Palo Alto Networks firewall ( #7483 )  Added support for Alcoma wireless devices ( #7476 )  Added detection for SmartOptics T-Series devices ( #7433 )  Added more support for Avocent devices ( #7444 )  Added Dlink dap2660 add processors and mempools ( #7428 )  Added additional zywall-usg support ( #7405 )  Added Dlink dap2660 processors and mempools ( #7428 )  Added technicolor TG650S and TG670S ( #7420 )  Added support for alternate Equallogic SNMP sysObjectId ( #7394 )  Added zyxelnwa storage, mempools and wireless metrics ( #7441 )  Added Storage, Memory pools, new status (Array Controller, Logical Drive) for HP ILO4 ( #7436 )  Added Support for ApsoluteOS / Defense Pro Hw ( #7440 )  Added support for Huawei OceanStor devices ( #7445 )  Added detection for Racom OS RAy (# 7466 )   Improved Zhone MXK Discovery ( #7488 )  Added support for EATON-ATS devices ( #7448 )  Added support for Alcoma devices ( #7476 )  Added support for zywall usg vpn state and flash usage ( #7500 )  Added Brocade IronWare interface dBm sensor support ( #7434 )  Added Unifi AC HD detection ( #7516 )  Added initial detection for netmodule NB1600 ( #7514 )  Added support for new Fiberhome OLT Models ( #7499 )  Added support for logmaster(ups vendors) os/devices ( #7524 )  Added poller modules to ceraos ( #7470 )  Added more detection for IgniteNet FusionSwitch ( #7384 )  Added Mitel Standard Linux OS Support ( #7513 )  Updated Cisco WAP detection and merged in ciscosmblinux OS ( #7447 )  Added detection for Proxmox ( #7543 )", 
            "title": "Devices"
        }, 
        {
            "location": "/General/Changelog/#alerting_2", 
            "text": "Added alert rules for RFC1628 UPS to the collection ( #7415 )  Added HP iLo and OS-updates rules to the collection ( #7423 )  Added more simple rules for the alert collection ( #7430 )", 
            "title": "Alerting"
        }, 
        {
            "location": "/General/Changelog/#refactor", 
            "text": "Discovery protocols re-write ( #7380 )", 
            "title": "Refactor"
        }, 
        {
            "location": "/General/Changelog/#webui_2", 
            "text": "Show only authorized services in availability map ( #7498 )  Allow user to display ok/warning/critical alerts only ( #7484 )", 
            "title": "WebUI"
        }, 
        {
            "location": "/General/Changelog/#security", 
            "text": "Stop accepting other variables in install that we do not use ( #7511 )    source: General/Changelog.md", 
            "title": "Security"
        }, 
        {
            "location": "/General/Changelog/#132", 
            "text": "(2017-10-01)", 
            "title": "1.32"
        }, 
        {
            "location": "/General/Changelog/#features_3", 
            "text": "Added more rules to the collection of alert rules ( #7363 )  Allow ignore_mount, ignore_mount_string, ignore_mount_regex per OS ( #7304 )  Added script to generate config for new OS ( #7161 )  Added Syslog hook for ASA support ( #7268 )", 
            "title": "Features"
        }, 
        {
            "location": "/General/Changelog/#bugfixes_3", 
            "text": "If session save path is \"\", php will use /tmp ( #7359 )  rfc1628 runtime - allow os quirks ( #7340 )  Small error when checking ios for wireless rssi ( #7300 )  Use Netscaler vserver full names ( #7279 )  Slower hardware can hit the schema update response timeout ( #7296 )  Do not issue non-master warning if on the release update channel ( #7297 )  Fixed quotes breaking powerdns app data ( #7111 )  Updated graph_types table so graph_subtype has no default value ( #7285 )  Fixed IPv6 host renaming ( #7275 )  Fixed Comware Processor Discovery   Hardware Info ( #7206 )  Added Extreme OS mapping to 'gen_rancid' ( #7261 )  Reverted previous active directory changes  #7254  ( #7257 )  Fixed Avtech sensor discovery ( #7244 )  Corrected variable for timeout messages in unix-agent.inc.php ( #7246 )  Update notification for users with updates disabled ( #7253 )  Fixed the empty() vlan detection check ( #7241 )  Re-added changes for  #6959  removed by accident in  #7128  ( #7240 )  Issues with Geist Watchdog sensors  Issues with Geist Watchdog miss-named variable in sensor pre-caching internal humidity and temperature was discovered twice humidity was mis-spelled in yaml discovery temperature and current had incorrect divisor in yaml", 
            "title": "Bugfixes"
        }, 
        {
            "location": "/General/Changelog/#documentation_3", 
            "text": "Added new faq Why would alert un-mute itself? ( #7403 )  Added performance suggestion for 1min polling documentation  Updated Distributed poller doc as rrdcached needs -R to work properly ( #7393 )  Updated docs to include installing xml php modules + updated validate ( #7349 )  Reorganize authentication documentation ( #7329 )  Update RRDCached.md to clarify version for client/server ( #7320 )  Elaborated on permission issues with dmidecode for snmp ( #7288 )  Update Distributed-Poller.md to remove distributed_poller_host  Added debug to services.md ( #7238 )  Fixed API-Docs Link in webui ( #7242 )  Updated Services.md include chmod +x ( #7230 )", 
            "title": "Documentation"
        }, 
        {
            "location": "/General/Changelog/#refactoring_2", 
            "text": "Rewrite is_valid_port() ( #7360 )  rfc1628 sensor tidy up ( #7341 )  Added detection of vlan name changes ( #7348 )  Rewrite is_valid_port() ( #7337 )  Use the Config class includes/discovery ( #7299 )  Updated ldap auth to allow configurable uidnumber field ( #7302 )  Improve yaml state discovery ( #7221 )  Added IOS-XR Bundle-Ether shortened/corrected forms ( #7283 )", 
            "title": "Refactoring"
        }, 
        {
            "location": "/General/Changelog/#devices_3", 
            "text": "Added basic detection for  hanwha techwin devices ( #7397 )  Added sensor detection for APC In Row RD devices ( #7385 )  Added better hardware and version identification for SAF ( #7378 )  Added basic os for EricssonLG ES switches ( #7289 )  Updated Engenius OS detection ( #7365 )  Added detection for DPS Telecom NetGuardian ( #7326 )  Added support for Alpha FXM UPS devices ( #7324 )  Added detection for IgniteNet FusionSwitch devices  Added support for A10 ACOS devices ( #7327 )  Added more detection for Cisco SB devices  Added support for routeros to pull UPS info  Added additional detection for Cisco small business switches ( #7317 )  Added sensor support for Himoinsa Gensets ( #7315 )  Added support for SmartOptics M-Series ( #7314 )  Added DHCP Leases Graph for Mikrotik ( #7333 )  Added support for Toshiba RemotEye4 devices ( #7312 )  Added additional Quanta detection ( #7316 )  Added additional detection for Calix devices ( #7325 )  Added detection for Himoinsa Gensets ( #7295 )  Added detection for ServerChecks ( #7308 )  Added support for Saf Integra Access points ( #7292 )  Added basic Open-E detection ( #7301 )  Updated Arista entity-physical support to use high/low values from device ( #7156 )  Added support for Mimosa A5 ( #7287 )  Updated state sensor code for Netonix  Added support for Radware / AlteonOS OS/Mem/Proc ( #7220 )  Added support for DragonWave Horizon ( #7264 )", 
            "title": "Devices"
        }, 
        {
            "location": "/General/Changelog/#webui_3", 
            "text": "Updated alert rule collection to be table ( #7371 )  Show how long a device has been down if it is down ( #7336 )  Makes the .availability-label border-radius fit in with the border a bit better  Added device description to overview page ( #7328 )  Greatly reduces application memory leak for dashboard ( #7215 )", 
            "title": "WebUI"
        }, 
        {
            "location": "/General/Changelog/#api_2", 
            "text": "Added ability to supports CORS for API ( #7357 )  Added simple OSPF API route ( #7298 )", 
            "title": "API"
        }, 
        {
            "location": "/General/Changelog/#131", 
            "text": "(2017-08-26)", 
            "title": "1.31"
        }, 
        {
            "location": "/General/Changelog/#features_4", 
            "text": "Notify about failed updates, block detectable bad updates ( #7188 )  Improve install process ( #7223 )  Active Directory user in nested groups ( #7175 )  sysV init script for the IRC bot ( #7170 )  Create librenms-irc.service ( #7087 )  Forced OS Cache rebuild for unit tests ( #7163 )  New IP parsing classes.  Removes usage of Pear Net_IPv4 and Net_IPv6. ( #7106 )  Added support to cisco sensors to link them to ports + macro/docs for alerting ( #6959 )  snmp exec support ( #7126 )", 
            "title": "Features"
        }, 
        {
            "location": "/General/Changelog/#bugfixes_4", 
            "text": "Updated dump_db_schema() to use default 0 if available ( #7225 )  Comware dBm Limits   Comware Sensor Descr ( #7216 )  Update gen_rancid.php to the correct arista os name ( #7214 )  Use Correct Comware dBm Limits ( #7207 )  Correct memory calculation for screenos ( #7191 )  Cambium ePMP CPU reporting fix ( #7182 )  Send zero for fields without values for graphite ( #7176 )  Sanitize metric name before sending via graphite ( #7173 )  Fixed dump_db_schema / validate to work with newer versions of MariaDB ( #7162 )  Escape sensor_descr_fixed in dBm sensors graph ( #7146 )  Fixed issue with column size of ifTrunk ( #7125 )  Bug in ipv62snmp function ( #7135 )  Fixed Raspberry Pi sensors ( #7131 )  Check session directory is writable before install.php ( #7103 )  Raritan CPU temperature discovery ( #7130 )  Strip \" and / from snmpwalk_cache_oid() ( #7063 )  Fixed Raspberry Pi sensors support ( #7068 )  Added missing get_group_list() to ldap-authorization auth method ( #7102 )  Service warning/critical alert rules ( #7105 )  Added device status reason to up messages. ( #7085 )  Fix string quoting in snmp trim ( #7120 )  Fix missed call to removed is_ip function ( #7132 )  fix bugs introduced to address-search ( #7138 )  Update avaya-ers.inc.php ( #7139 )  Fix RPI frequency/voltage sensors ( #7144 )  Attempt to fix repeated sql issue we come across ( #7123 )  multiple fixes under agentStpSwitchConfigGroup in EdgeSwitch-SWITCHIN ( #7180 )  Fixed typo Predicated -  Predicted (2 instances) ( #7222 )", 
            "title": "Bugfixes"
        }, 
        {
            "location": "/General/Changelog/#documentation_4", 
            "text": "Updated index page for new alerting structure ( #7226 )  Updated some old links for alerting ( #7211 )  Updated CentOS 7 + Nginx install docs ( #7209 )  Update CentOS 7 + Nginx install docs to set SCRIPT_FILENAME ( #7200 )  Update Component.md  ( #7196 )  Update Two-Factor-Auth formatting ( #7194 )  Update IRC-Bot for systemd use  ( #7084 )  Updated API docs formatting ( #7187 )  Updated alerting docs / formatting ( #7185 )  Swap mdx_del_ins with pymdownx.tilde ( #7186 )  Centralised the Metric storage docs ( #7109 )  Allow host renames with selinux enforcing for CentOS installs ( #7136 )  Update Using-Git.md ( #7178 )", 
            "title": "Documentation"
        }, 
        {
            "location": "/General/Changelog/#refactoring_3", 
            "text": "Use anonymous functions for debug error_handler and shutdown_function in index.php ( #7219 )  Updated validate.php to only warn users the install is out of date if   24 hours ( #7208 )  Udated edgecos OS polling ( #7149 )  Ability to edit default alert template ( #7121 )  Replace escapeshellcmd with Purifier in service checks ( #7118 )  Use ifName if ifDescr is blank  #7079", 
            "title": "Refactoring"
        }, 
        {
            "location": "/General/Changelog/#devices_4", 
            "text": "Stop discoverying frequencies on Raritan devices that do not exist + added voltage ( #7195 )  Added FDB and ARP support for edgeswitch devices ( #7199 )  Added additional sensor support for Sentry4 devices ( #7198 )  Added additional vlan support for Juniper devices ( #7203 )  Added Kemp LoadMaster Version Info ( #7205 )  Updated fans/temp detection for Brocade VDX devices( #7183 )  Added further sensor support for Geist Watchdog ( #7143 )  Added detection for Hitachi Data Systems SAN ( #7160 )  Udated edgecos OS polling to include more models  Updated AKCP sensorProbe detection ( #7152 )  Added additional sensor support for Cisco ONS ( #7096 )  Added RSSI Support for Cisco IOS wireless devices ( #7147 )  Added support for Gude ETS devices ( #7145 )  Added support for Trango Apex Lynx OS ( #7142 )  Added dry contact state support for AKCP devices ( #7124 )  Added fan and temp sensor state discovery Avaya ERS ( #7134 )  Added support for Emerson energy systems ( #7128 )  Added detection for Alteon OS ( #7088 )  Added additional sensors for Microsemi PowerDsine PoE Switches ( #7114 )  Added detection for NEC Univerge devices ( #7108 )  Added VLAN discovery support for Avaya ERS devices ( #7098 )   Added ROS support for state sensors and system temps  Removed check for switch model or firmware version for Avaya ERS switches  Updated QNAP to include CPU temps ( #7110 )  Added basic VLAN disco support for Avaya-ERS switches ( #7098 )  Update ees.yaml to use correct overview graphs ( #7137 )  Update edgecos OS polling to include more models ( #7153 )  Added Raspbian Logo ( #7201 )", 
            "title": "Devices"
        }, 
        {
            "location": "/General/Changelog/#webui_4", 
            "text": "Added ability for users to configure selectable times for graphs  ( #7193 )  Updated pi-hole graphs for better grouping ( #7179 )  Removed ability to use OR for generating rules ( #7150 )  Update avaya-ers to use ifName for displaying ( #7113 )", 
            "title": "WebUI"
        }, 
        {
            "location": "/General/Changelog/#security_1", 
            "text": "Security Patch to deal with reported vulnerabilties ( #7164 )", 
            "title": "Security"
        }, 
        {
            "location": "/General/Changelog/#130", 
            "text": "(2017-07-27)", 
            "title": "1.30"
        }, 
        {
            "location": "/General/Changelog/#features_5", 
            "text": "Added script to test alerts ( #7050 )  Config helper to simplify config access ( #7066 )  Add timeout to AD auth, default is 5s ( #6967 )  Ignore web server log files ownership in validate ( #6943 )  Added new parallel snmp-scan.py to replace snmp-scan.php ( #6889 )  Add a new locking framework that uses flock. ( #6858 )  Support fdb table on generic devices ( #6902 )  Added support for sensors to be discovered from yaml ( #6859 )  Improved install experience ( #6915 )  Updated validate to detect lower case tables + added support for checking mariadb 10.2 timestamps ( #6928 )  Added support for sending metrics to OpenTSDB ( #7022 )  Further improvements and detection added to validate ( #6973 )  Added JIRA transport for alerts ( #7040 )  Log event if device polling takes too long ( #7065 )", 
            "title": "Features"
        }, 
        {
            "location": "/General/Changelog/#bugfixes_5", 
            "text": "Allow discovery of IAP radios on Aruba Virtual Controller  Netbotz state sensors using wrong value ( #7027 )  Fixed Rittal LCP sensor divisors ( #7014 )  Set event type alert for alert log entries ( #7013 )  Fixed netman voltage and load divisor values ( #6905 )  Fixed the index for sentry3 current + updated mibs ( #6911 )  Fixed checks for $entPhysicalIndex/$hrDeviceIndex being numeric ( #6907 )  Fixed perf_times cleanup so it actually runs ( #6908 )  Updated sed commands to allow rrdstep.php to be used to increase and decrease values ( #6941 )  Fixed FabOS state sensors ( #6947 )  Fixed FDB tables multiple IPs and IPs from other devices adding extra rows ( #6930 )  Fixed bug get_graph_by_port_hostname() only searching hostnames ( #6936 )  Include state descriptions in eventlog ( #6977 )  Eltek Valere initial detection ( #6979 )  Fixed all mib errors in base mib directory ( #7002 )  Show fatal config.php errors on the web page. ( #7023 )  Define standard ups-mib divisors properly ( #6942 )  When force adding, use the provided snmp details rather than from $config ( #7004 )  Change .htaccess to compensate for Apache bug ( #6971 )  Use the correct high/high warn thresholds for junos dbm sensors ( #7056 )  Stop loading all oses when we have no db connection ( #7003 )  Restore old junos version code as a fallback ( #6945 )", 
            "title": "Bugfixes"
        }, 
        {
            "location": "/General/Changelog/#documentation_5", 
            "text": "Updated SNMP configuration Documentation  ( #7017 )  A couple of small fixes to the dynamic sensor docs ( #6922 )  Update Rancid Integration", 
            "title": "Documentation"
        }, 
        {
            "location": "/General/Changelog/#refactoring_4", 
            "text": "Use the new locks for schema updates ( #6931 )  Finish logic and definition separation for auth ( #6883 )  Added ability specify options for sensors yaml discovery ( #6985 )  Return more descriptive error when adding duplicate devices on sysName ( #7019 )", 
            "title": "Refactoring"
        }, 
        {
            "location": "/General/Changelog/#devices_5", 
            "text": "Added additional PBN detection  Added more support for APC sensors ( #7039 )  Added sensors for Mikrotik using mtxrOpticalTable + updated MIB ( #7037 )  Added additional sensors support for HP ILO4 ( #7053 )  Added wireless sensors for SAF Tehnika ( #6975 )  Added Calix AXOS/E5-16F Detection ( #6926 )  Added more sensor support for raritan devices ( #6929 )  Added ExtremeWireless support ( #6819 )  Added Rittal LCP Liquid Cooling Package ( #6626 )  Added Detect for Toshiba Tec e-Studio printers ( #6984 )  Added Valere system sensors and os detection ( #6981 )  Added Savin printer support ( #6982 )  Added sensor support for APC IRRP 100/500 devices ( #7024 )  Added additional sensors for APC IRRP100 Air Conditionner series ( #7006 )  Added detection for Gestetner printers ( #7038 )  Added FDB support for IOS-XE devices ( #7044 )  Added detection for Siemens Ruggedcom Switches ( #7052 )  Added CiscoSB Port Suspended Status Info ( #7064 )  Added CiscoSB DOM Support ( #7072 )  Added support for temp and processor discovery on Avaya ERS3500 ( #7070 )  Added detection for TSC Barcode printer ( #7074 )  Added state sensor for HPE MSL ( #7058 )  Added PBN AIMA3000 detection ( #7083 )  Updated UBNT Airos type to wireless ( #6867 )  Updated IOS-XE detection for 3000 series devices (like 3850) ( #6983 )  Updated JunOS os polling to detect version correctly ( #6904 )  Updated Radwin detection ( #6918 )  Updated Gamatronic ups use sysObjectID for os discovery ( #6940 )  Updated HPE MSM Support ( #7026 )  Updated powerwalker sensor discovery to use custom mib ( #7020 )  Updated Cisco IOS XE Version Parsing ( #7073 )", 
            "title": "Devices"
        }, 
        {
            "location": "/General/Changelog/#webui_5", 
            "text": "Facelift for alert templates, also added bootgrid ( #7041 )  Set correct button text when editing an alert template ( #6916 )  Minor visual changes in schedule maintenance window and its modal ( #6934 )  Fixed issues with http-auth when the guest user is created before the intended user ( #7000 )  Delhost: Added an empty option for device selection, and a minor db performance fix ( #7018 )  Loading speed improvement when viewing syslogs for specific device ( #7062 )", 
            "title": "WebUI"
        }, 
        {
            "location": "/General/Changelog/#security_2", 
            "text": "Enable support for secure cookies ( #6868 )", 
            "title": "Security"
        }, 
        {
            "location": "/General/Changelog/#api_3", 
            "text": "Added api routes for eventlog, syslog, alertlog, authlog ( #7071 )", 
            "title": "API"
        }, 
        {
            "location": "/General/Changelog/#129", 
            "text": "(2017-06-24)", 
            "title": "1.29"
        }, 
        {
            "location": "/General/Changelog/#features_6", 
            "text": "New snmpwalk_group() function ( #6865 )  Added support for passing state to alert templates test   Added option to specify transport when testing a template ( #6755 )  Added support to use IP addresses for NfSen filenames ( #6824 )  Added pi-hole application support ( #6782 )  Added some more coloring and make it easier to colorize messages for irc bot ( #6759 )  Added syslog auth failure to alert_rules.json ( #6847 )  Added support to use IP addresses for NfSen filenames ( #6824 )  Added Irc host authentication ( #6757 )  Added Syslog hooks for Oxidized integration (and more) ( #6785 )", 
            "title": "Features"
        }, 
        {
            "location": "/General/Changelog/#bugfixes_6", 
            "text": "config_to_json.php does not pull in database configuration settings ( #6884 )  Updated sysObjectId column in devices table to varchar(128) ( #6832 )  Strip \" from rPi temp sensor discovery ( #6815 )  Check for ifHCInOctets and ifHighSpeed before falling back to if\u2026 ( #6777 )  Updated Raspberry Pi Temp sensor discovery ( #6804 )  Fix bad Cisco dBm discovery on some IOS versions ( #6789 )  Ircbot - reformatted strikethrough for recovered alerts ( #6756 )  Ensure rrdtool web settings aren't overwrote by defaults ( #6698 )  Add column title under device bgp tab ( #6747 )  Custom config.php os settings ( #6850 )  Fix for syslog-messages from zywall (USG series) ( #6838 )", 
            "title": "Bugfixes"
        }, 
        {
            "location": "/General/Changelog/#documentation_6", 
            "text": "Reorganised alerting docs + added some clarifications ( #6869 )  Update Ubuntu and CentOS nginx install doc with a better nginx config ( #6836 )  Added note to configure mod_status for Apache application ( #6810 )  Updated ask people to contribute documentation ( #6739 )  Reorganize auto-discovery docs and add a little info ( #6875 )", 
            "title": "Documentation"
        }, 
        {
            "location": "/General/Changelog/#devices_6", 
            "text": "Added support for Radwin 5000 Series ( #6876 )  Added support for Chatsworth PDU (legacy old pdus not sure model number) ( #6833 )  Added detection for Microsemi PowerDsine PoE Midspans ( #6843 )  Added additional sensors to Axis camera ( #6827 )  Added Quanta lb6m device support ( #6816 )  Added hardware and version from AirOS 8.x ( #6802 )  Added support for processor and memory for 3com devices ( #6823 )  Added state sensors to HP Procurve ( #6814 )  Added detection for Atal Ethernetprobe ( #6778 )  Updated vmware vcsa hardware/version detection  ( #6783 )  Added C.H.I.P. power monitor ( #6763 )  Updated cisco-iospri to check for numeric + named ifType and included new cisco mibs ( #6776 )  Added detection for Arris C4c ( #6662 )  Added Current Connections Graph for Cisco WSA ( #6734 )  Added detection for AXIS Audio Appliances ( #6830 )  Added basic support for CradlePoint WiPipe Cellular Broadband Routers ( #6695 )  Added Avaya VSP Temperature Support ( #6692 )  Added support for ADVA FSP150CC and FSP3000R7 Series ( #6696 )  Updated Oracle ILOM detection ( #6779 )  Added Cisco ASR, Nexus, etc. PSU State sensor ( #6790 )  Updated Cisco NX-OS detection ( #6796 )  Added more detection for Bintec smart devices ( #6780 )  Added support for Schneider PowerLogic ( #6809 )  Updated Cisco Unified CM detection and renamed to ucos ( #6813 )  Added basic Support for Benu OS ( #6857 )", 
            "title": "Devices"
        }, 
        {
            "location": "/General/Changelog/#webui_6", 
            "text": "Added \"system name\" for the \"Services list\" ( #6873 )  Allow editing and deleting of lapsed alert schedules ( #6878 )  Add bootgrid for authlog page, and fix poll-log searchbar layout on smaller screens ( #6805 )  Updated all tables to have the same set number of items showing ( #6798 )  Allow iframe in notes widget ( #6773 )  Load google maps js library only if globe map widget is used  Added service alert rules ( #6772 )  Added syslog auth failure to alert_rules.json ( #6847 )  Fixed dashboard slowness with offline browser ( #6718 )  Update graphs to use safer RRD check ( #6781 )  Populate a sorted device list ( #6781 )", 
            "title": "WebUI"
        }, 
        {
            "location": "/General/Changelog/#alerts", 
            "text": "Added elasticsearch transport and docs ( #6797 )  Update irc transport to use templates ( #6758 )", 
            "title": "Alerts"
        }, 
        {
            "location": "/General/Changelog/#api_4", 
            "text": "Added search by os to list_devices ( #6861 )", 
            "title": "API"
        }, 
        {
            "location": "/General/Changelog/#refactor_1", 
            "text": "Discovery code cleanups ( #6856 )", 
            "title": "Refactor"
        }, 
        {
            "location": "/General/Changelog/#128", 
            "text": "(2017-05-28)", 
            "title": "1.28"
        }, 
        {
            "location": "/General/Changelog/#features_7", 
            "text": "Update Juniper MSS Support ( #6565 )  Added ability to whitelist ifDescr values from being ignored with good_if ( #6584 )  Added additional Unbound chart for query cache info ( #6574 )  Wireless Sensors Overhaul ( #6471 )  Updated BIND application ( #6218 )  Added script (scripts/test-template.php) to test alert templates ( #6631 )  Improve Juniper MSS Support ( #6565 )", 
            "title": "Features"
        }, 
        {
            "location": "/General/Changelog/#bugfixes_7", 
            "text": "Added dell to mib_dir for windows / linux ( #6726 )  Fix marking invalid ports as deleted in discovery ( #6665 )  Improve authentication load time and security ( #6615 )  Page/graph load speed: part 1 ( #6611 )  Fixed radius debug mode ( #6623 )  Actives PRI calls on Cisco can be an array ( #6607 )  MySQL app graphs with rrdcached ( #6608 )  Fix issue with wireless sensors when there are too many oids ( #6578 )  Fix GE UPS voltage factor ( #6558 )  Try to fix load for eaton-mgeups ( #6566 )  Validate prefer capabilities over suid for fping ( #6644 )  When force adding devices with v3, actually store the details ( #6691 )  Fixed uptime detection ( #6705 )", 
            "title": "Bugfixes"
        }, 
        {
            "location": "/General/Changelog/#documentation_7", 
            "text": "Create code of conduct page ( #6640 )  Add all current wireless types. ( #6603 )  Added seconds is the time unit. ( #6589 )", 
            "title": "Documentation"
        }, 
        {
            "location": "/General/Changelog/#refactoring_5", 
            "text": "Added lock support to ./discovery.php -h new to prevent overlap ( #6568 )  OS discovery tests are now dynamic ( #6555 )  DB Updates will now file level lock to stop duplicate updates ( #6469 )  Increased speed of loading syslog pages ( #6433 )  Moved default alert rules into the collection ( #6621 )  Modest speedup to database config population ( #6636 )  Pretty mysql for alerts breaks regex rules ( #6614 )  Updated vlan discovery to support JunOS ( #6597 )", 
            "title": "Refactoring"
        }, 
        {
            "location": "/General/Changelog/#devices_7", 
            "text": "Added Wireless Support For Cisco IOS-XE( #6724 )  Improve Aerohive Support ( #6721 )  Added support for Halon Gateway ( #6716 )  Added basic HPE OpenVMS detection ( #6706 )  Added additional sensor state sysCmSyncStatusId for F5  Added more health information for APC units ( #6619 )  Updated Lancom LCOS detection ( #6651 )  Added 3 Phase APC UPS Support  #2733     #5504  ( #5558 )  Added FWSM recognition to PIX OS ( #6569 )  Aruba Instant AP wireless sensor support (Freq, NoiseFloor, Power, Util) ( #6564 )  Added CPU and Memory pool for BDCom Switchs ( #6523 )  Added support for Aruba ClearPass devices ( #6528 )  Added support for Cisco's AsyncOS ( #6545 )  Added support for AKCP SecurityProbe ( #6550 )  Added support for GE UPS (#6549) ( #6553 )  Improve Extremeware and XOS detection ( #6554 )  Added more sensors for Exalt ExtendAir devices ( #6531 )  Added support for Terra sti410C ( #6598 )  Make TiMOS detection more generic, rebrand to Nokia ( #6645 )  Added HPE RT3000 UPS support ( #6638 )  Added Enhance Barracuda NG Firewall Detection ( #6658 )  Added support for Geist PDU ( #6646 )  Improved Lancom LCOS detection, added LCOS-MIB ( #6651 )  Added Basic Cisco SCE Support ( #6666 )  Added support for MRV OptiDriver Optical Transport Platform ( #6656 )  Update comware version and serial number polling ( #6686 )  Added TiMOS temperature and power supply state sensors ( #6657 )  Added state support FAN and Power Supply for Avaya VSP ( #6693 )  Added detection for Cisco EPC devices ( #6690 )  Added Wireless Support For Cisco IOS-XE ( #6724 )", 
            "title": "Devices"
        }, 
        {
            "location": "/General/Changelog/#webui_7", 
            "text": "Make login form more mobile-friendly ( #6707 )  Updated link to peeringdb to use asn ( #6625 )  Disabled settings button for Shared (read) dashboards if you are not the owner ( #6596 )  Split apart max and min sensor limits, allows sorting ( #6592 )  Load device list for dropdowns using Ajax ( #6557 )  Updated remaining display options where we do not show sysName if hostname is IP ( #6585 )", 
            "title": "WebUI"
        }, 
        {
            "location": "/General/Changelog/#security_3", 
            "text": "Remove possibility of xss in Oxidized and RIPE searches ( #6595 )", 
            "title": "Security"
        }, 
        {
            "location": "/General/Changelog/#alerting_3", 
            "text": "Added option to enable/disable option for sending alerts to normal users ( #6590 )  Added HipChat v2 API + Color Changes ( #6669 )", 
            "title": "Alerting"
        }, 
        {
            "location": "/General/Changelog/#127", 
            "text": "(2017-04-29)", 
            "title": "1.27"
        }, 
        {
            "location": "/General/Changelog/#features_8", 
            "text": "Added sdfsinfo application support ( #6494 )  Allow _except suffix in yaml os discovery ( #6444 )  Added check_mssql_health.inc.php for service checks ( #6415 )  Added rrdtool version check to compare installed version with defined version ( #6381 )  Added ability to validate database schema ( #6303 )  Support powerdns-recursor SNMP extend ( #6290 )  Added cisco-vpdn to poller modules ( #6300 )  Support non-standard unix socket ( #5724 )  Added multi DB support to the Postgres app ( #6222 )  Added opengridscheduler job tracker ( #6419 )  Added location map regex replace pattern only ( #6485 )  Added nfs-server application ( #6320 )  Added support for Active Directory bind user ( #6255 )", 
            "title": "Features"
        }, 
        {
            "location": "/General/Changelog/#bugfixes_8", 
            "text": "Actually reload oxidized when we should not when we think we should ( #6515 )  Don't run ipmitool without knowing a type  ( #6504 )  Updated ipv4/ipv6 discovery to exclude IPs with invalid port_ids ( #6495 )  Updated enterasys mempools disco/polling to support multiple ram devices ( #6458 )  Service filenames are snipped when longer than 16 characters ( #6459 )  Updated use of ifNameDescr() to cleanPort() ( #6454 )  Allow line returns in snmprec files with the 4x data type ( #6443 )  Update Shebangs and daily.sh for FreeBSD compatibility ( #6413 )  Cisco Entity Sensor Threshold's returns 0 ( #6440 )  Updated enterasys proc discovery by setting correct index ( #6422 )  Allow unit tests without a sql server ( #6398 )  Fix broken mysql application polling ( #6317 )  Move user preferences dashboard and twofactor out of users table ( #6286 )  Fixed CPU/Mem polling for Cyberoam-UTM devices ( #6315 )  Fixed F5 ports not using hc counters ( #6294 )  Added semicolons in build.sql schema file ( #6284 )  Fixed height of widget boxes ( #6282 )  Update applications poller to use numeric oid instead of nsExtendOutputFull ( #6277 )  Compare existing device ip to host lookup like for like ( #6316 )  Fix whitespace display on RRDTool Command ( #6345 )  Vlan port mappings not removed ( #6423 )  Fix alerts not honouring interval over 5m ( #6438 )  Improve CiscoSB polling time ( #6447 )  Updated cisco and juniper component macros to exclude disabled sensors ( #6493 )  Added more safety checking into create_state_index() ( #6516 )  Fixed inconsistent device discovery ( #6518 )  Fixed notifications by email to Active Directory admins ( #6134 )  Fixed API token for Active Directory admins ( #6255 )", 
            "title": "Bugfixes"
        }, 
        {
            "location": "/General/Changelog/#documentation_8", 
            "text": "Added FAQ on what disabled/ignored means for devices  Updated install docs + perf to support compressing file types and using http/2 ( #6466 )  Update install docs to remove deprecated GRANT usage  Update to remove the old method of signing the CLA ( #6479 )  Updated Support-New-OS doc to provide clearer information ( #6492 )", 
            "title": "Documentation"
        }, 
        {
            "location": "/General/Changelog/#refactoring_6", 
            "text": "Use sysDescr to simplify the vyatta detection ( #6455 )  Move siklu os detection to yaml ( #6431 )  Move rfc1628_compat into os yaml ( #6424 )  Move Engenius discovery to yaml ( #6428 )  Move cometsystem-p85xx ( #6427 )  Update some snmpwalks for ports polling to improve speed ( #6341 )  Moved ifLabel -  cleanPort and updated the usage ( #6288 )  Update ucd-diskio discovery to use index + descr as unique identifies  #4670  ( #6270 )  Changed MGE UPS to APC UPS (mgeups -  apc) ( #6260 )  Change Cisco UCM category from tele to collaboration ( #6297 )  Move aos discovery to yaml ( #6425 )  Move the rest of avaya os detection to yaml ( #6426 )  Move cometsystem-p85xx to yaml ( #6427 )  Move Engenius discovery to yaml ( #6428 )  Added 'Video' device group and moved Axis cameras to this group' ( #6397 )  Remove unecessary OS checks in proc / mem polling ( #6414 )  Only run pre-cache for the current OS ( #6453 )  Move ios detection to yaml using new sysDescr_except ( #6460 )  Eaton/MGE UPS reorganization ( #6388 )", 
            "title": "Refactoring"
        }, 
        {
            "location": "/General/Changelog/#devices_8", 
            "text": "Added more health sensors for c c power commanders ( #6517 )  Added support for Tycon Systems TPDIN units ( #6506 )  Added basic detection for Packetflux SiteMonitor ( #6498 )  Added detection for Ericsson UPC devices ( #6472 )  Added basic detection for Geist Watchdog ( #6467 )  Added support for enLogic PDUs ( #6464 )  Added support for Eltex OLT devices ( #6457 )  Added Etherwan managed switches ( #6488 )  Added signal sensor for opengear devices ( #6401 )  Added support for Teradici PCoIP card ( #6347 )  Added basic support for Omnitron iConverters ( #6336 )  Added support for AvediaStream Encoder ( #6306 )  Added ArubaOS PowerConnect detection ( #6463 )  Added HPE iPDU detection ( #6334 )  Moved dnos health disco to powerconnect ( #6331 )  Added Nokia (Alcatel-Lucent) SAS-Sx 7210 support ( #6344 )  Added Opengear ACM7008 detection ( #6349 )  Added detection fro Juniper MSS ( #6335 )  Added sensors + additional info for HPE iPDU ( #6382 )  Added Basic Ciena (Cyan) Z-Series detection ( #6385 )  Added Coriant Network Hardware Page. ( #6187 )  Added support for Vanguard ApplicationsWare ( #6387 )  Added ICT Digital Power Supply support ( #6369 )  Added ICT DC Distribution Panel support ( #6379 )  Added more detection for Comware ( #6386 )  Added Multi-lane optics on Juniper equipment ( #6377 )  Added detection and sensor support for EMC OneFS v8 ( #6416 )  Added detection for IgniteNet HeliOS ( #6417 )  Added basic detection for Tandberg Magnum tape units ( #6421 )  Added detection for Ciena packet switches ( #6462 )  Added Cisco SG355-10P support ( #6477 )  Added mem/cpu support for TiMOS ( #6483 )  Added support for C C Commander Plus units ( #6478 )  Added Equallogic add disk status ( #6497 )", 
            "title": "Devices"
        }, 
        {
            "location": "/General/Changelog/#webui_8", 
            "text": "Updated bgp table to use bootstrap properly ( #6406 )  Update poller_modules_perf to not show OS disabled module graphs ( #6276 )  Select the correct dashboard when there are no defaults. ( #6339 )  Fix redirect on login for instances behind reverse proxies ( #6371 )  Fixed the display date for the current version ( #6474 )", 
            "title": "WebUI"
        }, 
        {
            "location": "/General/Changelog/#api_5", 
            "text": "Allow cidr network searches of the ARP table ( #6378 )", 
            "title": "API"
        }, 
        {
            "location": "/General/Changelog/#126", 
            "text": "(2017-03-25)", 
            "title": "1.26"
        }, 
        {
            "location": "/General/Changelog/#features_9", 
            "text": "Added syslog alert transport ( #6246 )  Send collected data to graphite server ( #6201 )  Added SMART application support ( #6181 )  Peeringdb integration to show the Exchanges and peers for your AS' ( #6178 )  Added support for sending alerts to Telegram  #2114  ( #6202 )  Added pbin.sh to upload text to p.libren.ms ( #6175 )  Added better BGP support for Arista ( #6046 )  Added rrd step conversion script ( #6081 )  Store the username in eventlog for any entries created through the Webui ( #6032 )  Added Nvidia GPU  application support ( #6024 )  Added Squid application support ( #6011 )  Added FreeBSD NFS Client/Server application support ( #6008 )  Added get_disks function ( #6058 )  Updated Nfsen integration support ( #6003 )  Added Basic Oxidized Node List ( #6017 )  Added support for dynamic interfaces in ifAlias script ( #6005 )  Added support Postfix application ( #6002 )  Added Postgres application support ( #6004 )  Added ability to show links to fixes for validate ( #6054 )  Added FreeBSD NFS Client/Server application support ( #6008 )  Added Squid application support ( #6011 )  Added Nvidia GPU application support ( #6024 )  Added app_state support for applications #5068 ( #6061 )  Send default mail when no email destinations found ( #6165 )  Added new alert rules to collection ( #6166 )  Added SMART app support ( #6181 )  Added Application discovery ( #6143 )  Added syslog alert transport and docs ( #6246 )", 
            "title": "Features"
        }, 
        {
            "location": "/General/Changelog/#bugfixes_9", 
            "text": "Clear out stale alerts ( #6268 )  Remove min value for ntp* graphs  #6240  Alerts that worsen or get better will now record updated info  #4323  ( #6203 )  Do not show overview graphs when user only has port permissions for device ( #6230 )  Yaml files for edgeos and edgeswitch ( #6208 )  Fix Liebert humidity and temp sensors  #6196  ( #6198 )  Graphs $auth check was too strict ( #6195 )  Alter the database to set the proper character set and collation ( #6189 )  Wrong NetBotz file location ( #6188 )  Change rfc1628 'state' (est. runtime and on battery) to runtime ( #6158 )  Fix the displaying of alert info for historical alerts  #6092  ( #6107 )  Record actual sensor value for unix-agent hddtemp  #5904  ( #6089 )  Ping perf is in milliseconds, not seconds ( #6140 )  SVG scaling issues in Internet Explorer ( #6021 )  Old / duplicate sensors would never be removed, this is fixed by setting the $type correctly  #6044  ( #6079 )  Refactor ipoman cache code to use pre-cache in sensors  #5881  ( #5983 )  Fixed the previous graphs for diskio/bits  #6077  ( #6083 )  Update OSTicket transport to use the from email address  #5739  ( #5927 )  Do not try and only include files once when they are needed again! ( #5881 )  Correct the use of GetContacts() #5012 ( #6059 )  Netonix: properly set default fanspeed limits ( #6144 )  Fix Generex load sensor divisor ( #6155 )  Sensors not being removed from database ( #6169 )  Updated http-auth to work with nginx http auth #6102 ( #6174 )  Change rfc1628 'state' (est. runtime and on battery) to runtime ( #6158 )", 
            "title": "Bugfixes"
        }, 
        {
            "location": "/General/Changelog/#documentation_9", 
            "text": "Renamed the mysql extend script to just mysql ( #6126 )", 
            "title": "Documentation"
        }, 
        {
            "location": "/General/Changelog/#refactoring_7", 
            "text": "Move some DNOS detection to PowerConnect  #6150  ( #6206 )  Rename check_domain_expire.inc.php to check_domain.inc.php ( #6238 )  Further speed improvements to port poller ( #6037 )", 
            "title": "Refactoring"
        }, 
        {
            "location": "/General/Changelog/#devices_9", 
            "text": "Added Rx levels on Ubiquiti Airfibre ( #6160 )  Added detection for Hirschmann Railswitch  #6161  ( #6207 )  Support for Netscaler SDX appliances ( #6249 )  Added discovery of Cyclades ACS ( #6234 )  Added additional sensors for Liebert / Vertiv  #5369  ( #6123 )  Added state detection for Dell TL4k  #2752  Added support for Cyberpower PDU ( #6013 )  Added support for Digipower PDU ( #6014 )  Basic Lantronix UDS support ( #6042 )  Added detection for more Dell switches ( #6048 )  Added HPE Comware Processor Discovery ( #6029 )  Added Basic FortiWLC Support ( #6016 )  Added support for F5 Traffic Management Module mempool ( #6076 )  Added new Planet switch ( #6085 )  Added state detection for Dell TL4k ( #6094 )  Added extrahop detection ( #6097 )  Updated 3com switch detection ( #6114 )  Improved APC NetBotz Support ( #6157 )  Added state support for HP servers #5113 ( #6124 )  Added Coriant support ( #6026 )  Basic Zebra Print Server detection ( #6162 )  Added state sensor support for RFC1628 UPS ( #6153 )  Added APC NetBotz State Sensor Support ( #6167 )  Updated Sonus SBC os detection #6241 ( #6243 )  Added discovery of Cyclades ACS 6000 ( #6234 )", 
            "title": "Devices"
        }, 
        {
            "location": "/General/Changelog/#webui_9", 
            "text": "Do not show disabled devices in alerts list as they stale  #6213  ( #6263 )  Create correct link for BGP peers  #5958  Update device overview to not show hostname when certain conditions match  #5984  ( #6091 )  Display sysnames/hostnames instead of ip addresses  #4155  Fix BGP Icon for global search  #6031  Generex: more helpful overview graphs ( #6154 )  Added ability to set warning percentage for CPU and mempools ( #5901 )  Stop autorefresh on bill edit page #6182 ( #6193 )  Allow remember_token to be null ( #6231 )  Set the from / to for graphs in the devices list #6262 ( #6264 )", 
            "title": "WebUI"
        }, 
        {
            "location": "/General/Changelog/#security_4", 
            "text": "Stop multiport_bits_separate graphs for showing regardless of auth  #6101  ( #6109 )", 
            "title": "Security"
        }, 
        {
            "location": "/General/Changelog/#api_6", 
            "text": "Expose ports in API requests for bills ( #6069 )  Added new route for multiport bit graphs + asn list_bgp filter ( #6129 )", 
            "title": "API"
        }, 
        {
            "location": "/General/Changelog/#125", 
            "text": "(2017-02-26)", 
            "title": "1.25"
        }, 
        {
            "location": "/General/Changelog/#features_10", 
            "text": "Add fail2ban application support ( #5924 )  Add additional service checks ( #5941 )  Added phpunit db setup tests ( #5594 )  Updated rrdcached stats app to support Fedora/Centos ( #5768 )  Added Cisco Spark Transport  #3182  Rancid config file generator ( #5689 )  Added Rocket.Chat transport  #5427  Added SMSEagle transport  #5989  Added generic hardware rewrite function  Collect sysDescr and sysObjectID for stats to improve os detection ( #5510 )  Update Debian's guestId for VMware ( #5669 )  Allow customisation of rrd step/heartbeat when creating new rrd files ( #5947 )  Added ability to output graphs as svg ( #5959 )   Improve ports polling when ports are still down or marked deleted ( #5805 )", 
            "title": "Features"
        }, 
        {
            "location": "/General/Changelog/#bugfixes_10", 
            "text": "Syslog, pull out pam program source ( #5942 )  Load wifi module for sub10 OS ( #5963 )  Show sysName on network map when ip_to_sysname enabled ( #5962 )  Exim queue graph ( #5945 )  Updated qnap sensor code to be more generic  #5910  ( #5925 )  Remove the non-functional buttons for non-admins in devices/services ( #5856 )  Various variables will all be updated if they are blank  #5811  ( #5836 )  Patch generic_multi graph to fix legend overflow  #5766  Update lmsensors temp sensors to support 0c values so they do not get removed  #5363  ( #5823 )  Update macros with / in to have spaces ( #5741 )  Added the service parameter to checks that were missing it ( #5753 )  Ignore ports where we only have two entries in the array, this signals bad data  #1366  ( #5722 )  Fixed system temperature from ipmi descr including a space at the end  Incorrect hostname in the mouse-over of the services in the availability-map  #5734  Mono theme panel headers black ( #5705 )  Make about page toggle look better for zoomed in browsers  #5219  ( #5680 )  Ignore toners with values -2 which is unknown  #5637  ( #5654 )  Check lat/lng are numeric rather than !empty  #5585  ( #5657 )  Fix device edit health update icons ( #5996 )  Service module has conflicted configuration files ( #5903 )  addhost.php throw proper exception when database add fails ( #5972 )  Fix snmpbulkwalk in ifAlias script ( #5547 )  Arista watts to dbm conversion ( #5773 )  Poll DCN stats using OIDS ( #5785 )  Updated qnap sensor code to be more generic ( #5229 )", 
            "title": "Bugfixes"
        }, 
        {
            "location": "/General/Changelog/#documentation_10", 
            "text": "Update Applications to use correct link for exim-stats ( #5876 )  Added info on using munin scripts  #2916  ( #5871 )  Configuring  SNMPv3 on Linux  Updated example for using bad_if_regexp  #1878  ( #5825 )  Update Oxidized integration to show example of SELinux setup  Update Graylog docs to clarify ssl and hostname use", 
            "title": "Documentation"
        }, 
        {
            "location": "/General/Changelog/#refactoring_8", 
            "text": "Centralise device up/down check and use in disco  #5862  ( #5897 )  Convert Hikvision discovery to yaml ( #5781 )  Various Code Cleanup ( #5777 )  Updated storing of sensors data to be used in unix-agent  #5904  Refactor sensor discovery ( #5550 )", 
            "title": "Refactoring"
        }, 
        {
            "location": "/General/Changelog/#devices_10", 
            "text": "Add Eaton UPS Charge Sensor ( #6001 )  Added CPU and memory for Entera devices  #5974  Added SEOS CPU discovery  #5917  Added further detection for CiscoSB (ex Linksys) devices ( #5922 )  Updated ibmnos support for Lenovo branded devices  #5894  ( #5920 )  Initial discovery for Vubiq Haulpass V60s #5745  Added further QNAP Turbo NAS detection  #5229  ( #5804 )  Added support for Fujitsu NAS devices  #5309  ( #5816 )  Added proc, mem and sensor support for FabricOS  #5295  ( #5815 )  Added further support for Zynos / Zyxell devices  #5292  ( #5814 )  Added more Netgear detection  #5789  Updated DCN serial/hardware/version detection  #5785  Add F5 Hardware and S/N detection ( #5797 )  Improved Xerox discovery ( #5780 )  Improved Mikrotik RouterOS and SwOS detection ( #5772 )  Improved Pulse Secure detection ( #5770 )  Improved Lancom device detection ( #5758 )  improved Brocade Network OS detection ( #5756 )  improved Dell PowerConnect discovery ( #5761 )  Improved HPE Procurve/OfficeConnect discovery ( #5763 )  Improved Zyxel IES detection ( #5751 )  Improved Fortinet Fortiswitch detection ( #5747 )  Improved Brocade Fabric OS detection ( #5746 )  Added support for HPE ILO 4 ( #5726 )  Added serial, model and version support for HPE MSL ( #5667 )  Added support for Kemp Loadbalancers ( #5668 )  Additional TPLink JetStream support ( #5909 )  Additional detection for Dasan devices ( #5711 )  Added initial support for Meinberg LANTIME OS v6 ( #5719 )  Added support for Zyxel XS ( #5730 )  Added support for Exterity AvediaPlayer ( #5732 )  Added detection for OpenGear ( #5744 )  Improved support for TiMOS (Alcatel-Lucent) switches ( #5533 )  Improved Raritan detection ( #5771 )  Added Kyocera Mita support ( #5782 )  Added detection for Toshiba TEC printer's ( #5792 )   Added support for Cyberoam UTM devices ( #5542 )  Improved hardware detection for Xerox ( #5831 )  Added further sensor support for APC units ( #2732 )  Added detction for Mellanox i5035 infiniband switch ( #5887 )  Added detection for Powerconnect M8024-k ( #5905 )  Added detection for HPE MSA storage ( #5907 )", 
            "title": "Devices"
        }, 
        {
            "location": "/General/Changelog/#webui_10", 
            "text": "Update services pages  New Cumulus Logo ( #5954 )  Added link to APs for alert details  #5878  ( #5898 )  Set the device logo and cell to have a max width ( #5700 )  New eventlog severity classification ( #5830 )  Update Zyxel image (os/logos to .svg) ( #5855 )  Remove the non-functional buttons for non-admins in services ( #5833 )  Remove the ability to activate statistics for non-admins ( #5829 )  Add SVG logo/os icon for Generex UPS ( #5827 )  urldecode device notes  #5110  ( #5824 )  Replace Ntp with NTP in Apps menu ( #5791 )  Adding text logo to HPE logo ( #5728 )  Only show sysName once if force_ip_to_sysname is enabled  #5600  ( #5656 )  Add $config['title_image'] in doc and use it also for login screen ( #5683 )  Update create bill link to list bill or list bills depending on if port exists in bills  #5616  ( #5653 )  Remove ifIndex for ports list but add debug button to show port info ( #5679 )", 
            "title": "WebUI"
        }, 
        {
            "location": "/General/Changelog/#api_7", 
            "text": "Added the ability to list devices by location in the api ( #5693 )  IP and Port API additions ( #5784 )  Limit get_graph_by_port_hostname() to one port and exclude deleted ( #5936 )", 
            "title": "API"
        }, 
        {
            "location": "/General/Changelog/#124", 
            "text": "(2017-01-28)", 
            "title": "1.24"
        }, 
        {
            "location": "/General/Changelog/#features_11", 
            "text": "Basic Draytek Support ( #5625 )  Added additional information to Radwin discovery. ( #5591 )  Added Serial number support for Mikrotik Devices ( #5590 )  Support large vendor logos ( #5573 )  Added pre-commit git script to support failing fast  Added basic recurring maintenance for alerts  #4480  Added check for if git executable ( #5444 )  Oxidized basic config search ( #5333 )  Add support for SVG images ( #5275 )  Add mysql failed query logging + fixed queries that break ONLY_FULL_GROUP_BY ( #5327 )", 
            "title": "Features"
        }, 
        {
            "location": "/General/Changelog/#bugfixes_11", 
            "text": "Logo scalling to support squarish logos ( #5647 )  top-devices widget now will honour for ip to sysName config  #5388  ( #5643 )  Remove duplicate hostnames in arp search box  #5631  ( #5641 )  Alert templates designer now fixed  #5636  ( #5638 )  Update ifAlias script to deal with GRE interfaces ( #5546 )  Allow invalid hostnames during discovery when discovery_by_ip enabled  #5525  Stop creating dashboards when user has a default that no longer exists  #5610  ( #5613 )  Fix Riverbed optimization polling ( #5622 )  Html purify init wasn't done always when it was used ( #5626 )  Fixed FreeNAS detection  #5518  ( #5608 )  Add extra check to Junos DOM discovery ( #5582 )  HTML Purifier would create tmp caches within the vendor folder, moved to users tmp dir  #5561  ( #5596 )  PHP 7.1 function usages with too few parameters ( #5588 )  Fixed graphs for services not working ( #5569 )  Fix broken netstats ip forward polling ( #5575 )  Support hosts added by ipv6 without DNS  #5567  Changing device type now is persistant ( #5529 )  Fixed JunOS bgpPeers_cbgp mistakenly removed + better support for mysql strict mode  #5531  ( #5536 )  Allow overlib_link to accept a null class  #5522  Stop flattening config options added in config.php  ( #5493 )  Stop flattening config options added in config.php ( #5491 )  ospf polling, revert set_numeric use ( #5480 )  Updated prestiage detection  #5453  ( #5470 )  Validate suid is set for fping ( #5474 )  Add missing ups-apcups application poller  #5428  Linux detect by oid too ( #5439 )  APC -1 Humidity Sensor Value  #5325  ( #5375 )  Fix sql errors due to incorrect cef table name  #5362  Detection blank or unknown device types and update  #5412  ( #5414 )  Unifi switch detection ( #5407 )  Detect device type changes and update  #5271  ( #5390 )  Typo in IBM icon definition ( #5395 )  Don't support unifi clients that don't report data ( #5383 )  Fix Oxidized Config Search Output ( #5382 )  Added support for autotls in mail transport  #5314  validate mysql queries ( #5365 )  OS type and group not being set ( #5357 )  Stop logging when a vm no longer is on the host being polled ( #5346 )  Dark/mono logo was incorrect ( #5342 )  Specify specific mkdocs version ( #5339 )  Correct icon for ciscosb ( #5331 )  Correction on addHost function to handle the force_add parameter in api ( #5329 )  Mikrotik cpu detection ( #5306 )  Do not use generic icon by default ( #5303 )  Update jpgraph source file to remove check for imageantialias()  #5282  ( #5284 )  APC PDU2 Voltage Discovery ( #5276 )  Empty mac adds an entry to the arp table ( #5270 )  Restrict inventory api calls to the device requested ( #5267 )", 
            "title": "Bugfixes"
        }, 
        {
            "location": "/General/Changelog/#documentation_11", 
            "text": "Mikrotik SNMP configuration example ( #5628 )  Add logrotate config and update install docs ( #5520 )  Added an example hardware doc for people to show what they have ( #5532 )  Added faq info on realStorageUnits ( #5513 )  Update Installation-Ubuntu-1604-Nginx.md to remove default nginx site config  Updated RRDCached doc for Debain Jessie installation ( #5380 )  Updated os update application  Added more info in to the github issue template ( #5370 )  Update Installation-Ubuntu-1604-Nginx.md to correct snmpd.conf location  Update installation documentation on Ubuntu 16.x and CentOS 7 to use systemd ( #5324 )  Update Centos 7 nginx install steps ( #5316 )  Added section on smokeping and rrdcached use", 
            "title": "Documentation"
        }, 
        {
            "location": "/General/Changelog/#refactoring_9", 
            "text": "Update collectd functions.php to use non-conflict rrd_info function  #5478  ( #5642 )  Updated some default disco/poller modules to be disabled/enabled ( #5564 )  Added config option for database port ( #5517 )  Move HTMLPurifier init to init.php so we only create one object. ( #5601 )  Disable unused Cisco WAAS modules ( #5574 )  Some more os definition changes ( #5527 )  Changed Redback to SEOS, and added logo and temperature discovery  #5181  Move some os from linux and freebsd discovery files to yaml ( #5429 )  MySQL strict and query fixes ( #5338 )  Sophos discovery to yaml ( #5416 )  Move include based discovery after yaml discovery ( #5401 )  Moved simple os discovery into yaml config ( #5313 )  Move mib based polling into yaml config files ( #5234 )  Use Composer to manage php dependencies ( #5216 )", 
            "title": "Refactoring"
        }, 
        {
            "location": "/General/Changelog/#devices_11", 
            "text": "Added further support for Canon printers  #5637  ( #5650 )  Updated generex ups support  #5634  ( #5640 )  Added detection for Exinda  #5297  ( #5605 )  Added additional sensor support for PowerWalker devices  #5080  ( #5552 )  Added support for Brocade 200E ( #5617 )  Improve CiscoSB detection  #5511  Added further detection for DCN devices  #5519  ( #5609 )  Added support for Zhone MXK devices  #5554  ( #5611 )  Added more detection for Procurve devices  #5422  ( #5607 )  Updated detection for Dasan NOS devices  #5359  ( #5606 )  Added support MGEUPS EX2200  #3364  ( #5602 )  Improve Cisco ISE detection ( #5578 )  Updated akcp discovery definition  #5396  ( #5501 )  Add detection for radwin devices  Update zywall and zyxelnwa detection  #5343  Added support for Ericsson ES devices  #5195  ( #5479 )  Add support for DocuPrint M225 ( #5484 )  Added Dell B5460dn and B3460dn printer support ( #5482 )  Added signal support for RouterOS ( #5498 )  Added additional sensor support for Huawei VRP  #4279  Added loadbalancer information from F5 LTM ( #5205 )  APC Environmental monitoring units  #5140  Add support for KTI switches ( #5413 )  Detect all CTC Union devices ( #5489 )  Add addition riverbed information  #5170  Added support for CTC Union devices ( #5402 )  Add wifi clients for Deliberant DLB APC Button, DLB APC Button AF and DLB APC 2mi  #5456  Added Tomato and AsusWRT-Merlin OS  #5254  ( #5398 )  Detect Fiberhome AN5516-04B  Improve Checkpoint Discovery ( #5334 )  APC in-row coolers  Added additional detection for Dell UPS ( #5322 )  added more support for dasan-nos ( #5298 )  Added support for Dasan NOS  #5179  + disco change ( #5255 )  Edge core OS ECS3510-52T ( #5286 )  Basic Dell UPS Support  #5258  Basic Fujitsu DX Support  #5260", 
            "title": "Devices"
        }, 
        {
            "location": "/General/Changelog/#webui_11", 
            "text": "Final Font Awesome conversion ( #5652 )  Added ?ver=X to LibreNMS style sheets so we can force refreshes in future ( #5651 )  New generic os SVG icon ( #5645 )  New LibreNMS logo assets ( #5629 )  Center device icons.  Keep device actions at two rows ( #5627 )  Additional Font Awesome icons ( #5572 )  Allows one to view a map of the SNMP location set for a device ( #5495 )  Update health menu icons  Updated icons to use Font Awesome ( #5468 )  Allow billing to use un-auth graphs ( #5449 )  Update Font Awesome to 4.7.0 ( #5476 )  Update add/edit user page to use their instead of his  #5457  ( #5460 )  Fix Ports Table AdminDown Search ( #5426 )  Disabled editing device notes for non-admin users ( #5341 )  Small Best Practice Fixes", 
            "title": "WebUI"
        }, 
        {
            "location": "/General/Changelog/#123", 
            "text": "(2017-01-01)", 
            "title": "1.23"
        }, 
        {
            "location": "/General/Changelog/#features_12", 
            "text": "Add nagios check_procs support ( #5214 )  Added support for sending email notifications to default_contact if updating fails ( #5026 )  Enable override of $config values set in includes/definitions.inc.php ( #5096 )  Add APC UPS battery replacement status  #5088", 
            "title": "Features"
        }, 
        {
            "location": "/General/Changelog/#bugfixes_12", 
            "text": "APC PDU2 Voltage Discovery ( #5276 )  Empty mac adds an entry to the arp table ( #5270 )  Restrict inventory api calls to the device requested ( #5267 )  Update any IP fields using inet6_ntop()   #5207  Fixed passing of data to load_all_os() function ( #5235 )  Support columns filter in get_port_stats_by_port_hostname api call ( #5230 )  Restore usage of -i -n in polling ( #5228 )  Empty routing menu where only CEF is present ( #5225 )  Added service params for check_smtp ( #5223 )  Misc warning fixes in mib polling ( #5222 )  Added service params for check_imap ( #5213 )  Execute commands using the numeric conventions of the C locale. ( #5192 )  Remove usage of -CI, it is not allowed for snmpbulkwalk  #5164  Update F5 fanspeed discovery ( #5200 )  Fix state_indexes for state overview sensors ( #5191 )  Better Cisco hardware formatting ( #5184 )  Cisco hardware name detection ( #5167 )  Changed sql query for state sensors on device overview page to ignore null sensor_id ( #5180 )  daily.sh install path ( #5152 )  Cleanup printing ifAlias ( #4874 )  Fixed broken http-auth auth module  #5053  ( #5146 )  Fix get_port_stats_by_port_hostname() to only return non-deleted ports  #5131  Stop openbsd using snmpEngineTime ( #5111 )  Update raspberrypi sensor discover to check for sensor data ( #5114 )  Add check for differently named Cisco Power sensor ( #5119 )  Ability to detect Cisco ASA version when polling a security context ( #5098 )  Fixed setting userlevel for  LDAP auth  #5090  Arp-table uses array_column() breaking discovery on php  =5.4 ( #5099 )  Allow html but not script, head and html tags in notes widget  #4898  ( #5006 )", 
            "title": "Bugfixes"
        }, 
        {
            "location": "/General/Changelog/#documentation_12", 
            "text": "Updated rrdcached docs to include Ubuntu 16.x ( #5263 )  Updated Oxidized.md ( #5224 )  Removed mailing list in various places + small improvements to docs ( #5154 )  Added Remote monitoring using tinc VPN ( #5122 )  Added documentation on securing rrdcached. ( #5093 )  Adding how to configure HPE 3PAR to documentation ( #5087 )  Fixed example timezones ( #5083 )", 
            "title": "Documentation"
        }, 
        {
            "location": "/General/Changelog/#refactoring_10", 
            "text": "Removed and moved more mibs ( #5232 )  Move OS definitions into yaml files ( #5189 )  Updated Ups nut support  Mibs E-G ( #5190 )  Moved / deleted mibs A-D ( #5173 )  Updated location of mibs starting with S ( #5142 )  Update some devices to disable poller/disco modules by default ( #5010 )  More Cisco ASA Polling Performance Improvements ( #5104 )  Moved mibs T-U (or removed) where possible ( #5013 )", 
            "title": "Refactoring"
        }, 
        {
            "location": "/General/Changelog/#devices_12", 
            "text": "Lancom wireless devices ( #5237 )  Added additional detection for Cisco WAP 321  #5172  ( #5248 )  Added support for TPLink JetStream  #5194  ( #5249 )  Added HPE MSL support  #5072  ( #5239 )  Added support for DCN switches  #5031  ( #5238 )  Added support for Cisco APIC devices ( #5236 )  Zyxel ZyWALL Improvement  #5185  Added CPU detection for Zyxel GS2200-24 ( #5218 )  removed all references to 'multimatics' and instead added generex OS  Added additional support for F5 BigIP LTM objects  Added additional support for Synology dsm ( #5145 )  Add OS Detection support for Alcatel-Lucent/Nokia ESS 7450 Ethernet service switch  #5187  Added Bluecoat ProxySG Support ( #5165 )  Added support for Arris CMTS ( #5143 )  Added os Discovery for Brocade NOS V4.X and below. ( #5158 )  Added support for Mirth OS  #2639  Juniper SA support  #4328  Added support for Zyxel MES3528 ( #5120 )  Add more Edge core switches  Add support for Ubiquiti EdgePoint Switch models ( #5079 )", 
            "title": "Devices"
        }, 
        {
            "location": "/General/Changelog/#webui_12", 
            "text": "Standardised all rowCount parameters for tables ( #5067 )", 
            "title": "WebUI"
        }, 
        {
            "location": "/General/Changelog/#security_5", 
            "text": "Update PHPMailer to version 5.2.19 ( #5253 )", 
            "title": "Security"
        }, 
        {
            "location": "/General/Changelog/#v12201", 
            "text": "(2016-11-30)", 
            "title": "v1.22.01"
        }, 
        {
            "location": "/General/Changelog/#bugfixes_13", 
            "text": "arp-table uses array_column() breaking discovery on php  =5.4 ( #5099 )", 
            "title": "Bugfixes"
        }, 
        {
            "location": "/General/Changelog/#v122", 
            "text": "(2016-11-25)", 
            "title": "v1.22"
        }, 
        {
            "location": "/General/Changelog/#features_13", 
            "text": "validate list devices that have not been polled in the last 5 minutes or took more than 5 minutes to poll ( #5037 )  Add Microsoft Teams Alert Transport ( #5023 )  Added formatted uptime value for alert templates  #4983  Adds support for enabling / disabling modules per OS ( #4963 )  Improve Dell OpenManage Discovery ( #4957 )  Added the option to select alert rules from a collection", 
            "title": "Features"
        }, 
        {
            "location": "/General/Changelog/#bugfixes_14", 
            "text": "use password type for SMTP Auth  #5051  Added alert init module to ajax_form  #5058  eventlog type variable collision ( #5046 )  Fixed loaded modules for ajax search ( #5043 )  timos6-7 snmprec file error ( #5035 )  Strip out \" returned from Proxmox application  #4908  ( #5003 )  Used correct variable for displaying total email count in alert capture ( #5022 )  Cisco ASA Sensor Discovery, use correct variable ( #5021 )  Stop service modal form disabling services for read-only admin ( #4994 )  dbUpdate calls now check if it is 0 or above ( #4996 )  Links on devices graphs page to take users straight to specific graph page ( #5001 )  Fixed poweralert discovery, check is now case insensitive ( #5000 )  Daily.sh log_dir failed when install_dir and log_dir were not set ( #4992 )  Merge pull request  #4939  from laf/issue-4937  Remove service type from uniform display ( #4974 )  Fixed check for VRFs, so this runs on routers without any VRFs defined ( #4972 )  Api rate percent calculation incorrect ( #4956 )  Corrects path to proxmox script in docs ( #4949 )  Update debug output in service check ( #4933 )  Fujitsu PRIMERGY 10Gbe switches are now detected correctly ( #4923 )  Toner graphs with invalid chars  Updated syslog table to use display() for msg output ( #4859 )  Added support for https links in alerts procedure url ( #4872 )  Updated check to use != in daily.sh ( #4916 )  Remove escape characters for services form / display  #4891  Only update components if data exists in cimc entity-physical discovery  #4902  Renamed hp3par os polling file to informos ( #4861 )  Updated Cisco ASA state sensors descr to be a bit more verbose", 
            "title": "Bugfixes"
        }, 
        {
            "location": "/General/Changelog/#documentation_13", 
            "text": "Added FAQ on why EdgeRouters might not be detected ( #4985 )  Update freenode links ( #4935 )  Issue template to ask people to use irc / community for creating issues", 
            "title": "Documentation"
        }, 
        {
            "location": "/General/Changelog/#refactoring_11", 
            "text": "Rewrite arp-table discovery ( #5048 )  Collection and output of db and snmp stats ( #5049 )  Disable modules for pbn-cp and multimatic os  Centralize includes and initialization ( #4991 )  Remove inappropriate usages of truncate() ( #5028 )  Watchguard Fireware cleanup ( #5015 )  Tidy up mibs V-Z ( #4979 )  Limit perf array index length to 19 characters due to limitation in ds-name rrdtool ( #4731 )  Daily.sh updated ( #4920 )  Default to only using mysqli ( #4915 )  Start of cleaning up mibs  Update wifi clients polling to support more than 2 radios ( #4913 )  Refactored and added support for $config['log_dir'] to daily.sh  Improve Cisco ASA Polling Performance ( #4999 )", 
            "title": "Refactoring"
        }, 
        {
            "location": "/General/Changelog/#devices_13", 
            "text": "Updated edge-core to edgecos and added further detection ( #5024 )  Added basic support for Ceragon devices  Added support for Dell PowerConnect 6024  Added PBN-CP devices.  Added support for Edgerouter devices  #4936  Added support for Dell Remote consoles  #4881  Added support for FortiSwitch  #4852  ( #4858 )", 
            "title": "Devices"
        }, 
        {
            "location": "/General/Changelog/#webui_13", 
            "text": "Availability map compact view, use square tiles instead of rectangles ( #5038 )  Add link to recently added device ( #5032 )  Do not show Config tab for devices set to be excluded from oxidized  #4592  ( #5029 )  Update Availability-Map Widget to use sysName when IPs used and config enabled ( #4968 )  Added support for skipping snmp check on edit snmp page for devices ( #4896 )  Update wifi_clients graph ( #4846 )  Further decouple the avail-map page from the widget ( #4887 )", 
            "title": "WebUI"
        }, 
        {
            "location": "/General/Changelog/#v121", 
            "text": "(2016-10-30)", 
            "title": "v1.21"
        }, 
        {
            "location": "/General/Changelog/#features_14", 
            "text": "Added support for global max repeaters for snmp ( #4880 )  Added custom css and include directories which are ignored by git ( #4871 )  Add an option for ad authentication to have a default level ( #4801 )  Add ping and RxLevel for SAF devices ( #4840 )  Added ability to exclude devices from xDP disco based on sysdescr, sysname or platform  Add Extra Mimosa Discovery ( #4831 )  Add support for NX-OS fan status ( #4824 )  Add osTicket Alert Transport ( #4791 )  Add SonicWALL Sessions  #1686  Updated libvirt-vminfo to support oVirt  Enhance Unifi Wireless Client count for multiple VAPs ( #4794 )  Added CEF Display page ( #3978 )  Added CPU detection for Synology DSM  #2081  ( #4756 )  Added CPU detection for Synology DSM  #2081  Stop displaying sensitive info in the settings page ( #4724 )  Added Cisco Integrated Management Console inventory and sensor support  #4454  Added support for show faults array in recovery alerts ( #4708 )  Add description and notes to be used in alerts templates ( #4706 )  validate.php: check poller and discovery status ( #4663 )  Added GlobalProtect sessions to PANOS", 
            "title": "Features"
        }, 
        {
            "location": "/General/Changelog/#bugfixes_15", 
            "text": "Replace \\\\l with \\l on GPRINT lines ( #4882 )  fix missing config entries on global settings page  #4884  Fix the detection of NX-OS fan names ( #4864 )  API call to services only returned first one  Change the wording for the create default rules button  incomplete polling on aruba controllers  Fixed wifi clients not reporting when value 0  ZyWALL Fixes for OS and mem polling  #1652  Fix irc bot user level ( #4833 )  Updated min/max values for ubnt graphs ( #4811 )  Fix Riverbed temperature discovery ( #4832 )  only poll cipsec for cisco devices. ( #4819 )  Zywall Fixes  #1652  do not show fail if running as the librenms user + slightly less false positives ( #4821 )  Do not create rrd folder when -r is specified for poller ( #4812 )  Delete all port_id references  #4684  Used dos2unix on all mibs to prevent .index issue ( #4803 )  availability map multiple instances ( #4773 )  top widget multiple instances ( #4757 )  Updated bin/bash to use env in cronic script ( #4752 )  skip ip_exists function when we force add ( #4738 )  Stopped showing sub menus when empty  #4713  Samsun ML typo, remove need for hex_string translation ( #4788 )  apc load, runtime and current sensors ( #4780 )  Prevent accidental anonymous binds ( #4784 )  Update brocade fanspeed description  qnap temperature sensors  #4586  Stop displaying sensitive info in the settings page ( #4724 )  Ignore meraki bad_uptime  #4691  Fixed trying to map devices to alert rules  Re-enable the edit device groups button ( #4726 )  Raise version size for packages table to 255 char  ( #4656 )  Adjusted padding based on screen width to fit all icons ( #4711 )  fixed count test for cisco-otv poller module ( #4714 )  Fall back to ipNetToMediaPhysAddress when ipNetToPhysicalPhysAddress not available  #4559  ipmi poller, run with USER rights and surround username and password with ''  #4710  Wrapped ipmi user / pass in quotes  #4686  and  #4702  Use snmpv3 username even when NoAuthNoPriv is selected  #4677", 
            "title": "Bugfixes"
        }, 
        {
            "location": "/General/Changelog/#documentation_14", 
            "text": "homepage headers: vertical align, match color, add spacing ( #4870 )  Added FAQ on moving install to another server  Updated index page to make it look more attractive ( #4855 )  Adding setup of distro script for Linux (snmpd) configuration  Added doc on security and vulnerabilities  Update Graylog.md ( #4717 )", 
            "title": "Documentation"
        }, 
        {
            "location": "/General/Changelog/#refactoring_12", 
            "text": "populate native vlans in the ports_vlan table for cisco devices too ( #4805 )  Small poller improvements, removes unecessary queries / execs ( #4741 )  Cleanup poller include files ( #4751 )  Update alert rules to generate sql query and store in db ( #4748 )  toner support ( #4795 )  Updated and added more options for http proxy support ( #4718 )  small fixes for cisco-voice code ( #4719 )  Improve sensors polling for performance increase ( #4725 )  Improve sensors polling for performance increase  Rewrite for qnap fanspeeds ( #4590 )  edituser page to allow user selection of a default dashboard ( #4551 )  snmp cleanup ( #4683 )", 
            "title": "Refactoring"
        }, 
        {
            "location": "/General/Changelog/#devices_14", 
            "text": "Added support for Megatec NetAgent II  Add UniFi Wireless MIB polling for Capacity  #4266  Added support for Sinetica UPS \u00a24613  Added additional support for Synology DSM devices  #2738  Add additional F5 sensor support ( #4642 )  Added Unifi Wireless Client statistics  #4772  Additional support for Hikvision products  More dnos additions  #4745  ( #4749 )  Additional support for Hikvision products ( #4750 )  Add support for Moxa  #4733  Add additional features to SAF Tehnika ( #4666 )  Add support for more Pulse Secure devices  #4680  Add support for more DNOS devices  #4627  Added support for Sinetica UPS  Add support for Mimosa Wireless  #4676  Add support for Mimosa Wireless  #4676", 
            "title": "Devices"
        }, 
        {
            "location": "/General/Changelog/#webui_14", 
            "text": "Allow users to set their default dashboard from preferences page  Updated devices view ( #4700 )  Disable page refresh on the search pages.  Users can manually hit the refresh on the grid. ( #4787 )  Display vlans for all devices.  #4349 ,  #3059  Added sorting and poller time support to top-devices widget  #4668", 
            "title": "WebUI"
        }, 
        {
            "location": "/General/Changelog/#release-201609", 
            "text": "September 2016", 
            "title": "Release: 201609"
        }, 
        {
            "location": "/General/Changelog/#features_15", 
            "text": "Added alerts output to capture system ( #4574 )  Add support for ups-apcups via snmp  Add snmpsim to Travis automated testing. Update to check new setting for true and isset  use snmpsim for testing fallback feature so we don't have to run snmpsim on devel computers, should be adequate for now ./scripts/pre-commit.php -u -snmpsim will start an snmpsimd.py process automatically  Improved readability for snmp debug output  Add last changed, connected, and mtu to all ports data  Add temp   state sensors to Riverbed  Added support for all OS tests  Added Runtime support for APC ups   Capture device troubleshooting info (discovery, poller, snmpwalk)  Add temp   state sensors to Riverbed  Add more state sensors to Dell iDrac  Allow scripts to be run from any working directory ( #4437 )  New app: ups-nut ( #4386 )  Added new discovery-wrapper.py script to replicate poller-wrapper.py ( #4351 )  Extended graphing for sla - icmp-jitter  #4341  Added Cisco Stackwise Support  #4301  Add Cisco WAAS Optimized TCP Connections Graph ( #4645 )", 
            "title": "Features"
        }, 
        {
            "location": "/General/Changelog/#bugfixes_16", 
            "text": "Toner nrg os capacity ( #4177 )  Fixed swos detection  #4533  Updated edit snmp to set default poller_group ( #4694 )  Fixed SQL query for bgpPeers check to remove stale sessions ( #4697 )  Netonix version display ( #4672 )  FreeBSD variants ( #4661 )  unix-agent handling of reported time values from check_mk  #4652  Add checks for devices with no uptime over snmp  #4587  stop qnap discovery from running for every device  Fixed the old port rrd migration code to work with new rrdtool functions ( #4616 )  Run cleanup for ipmi sensor discovery ( #4582 )  Numerous availability-map bug fixes  AD auth stop alerts being generated  Possible additional fix for non-terminating rrdtool processes.  AD auth stop alerts being generated  APC runtime graph missing in device health overview  LibreNMS/Proc improvements Should fix sending rrdtool the quit command without a newline at the end. (not sure if this is an issue)  Port ifLastChange polling now usable ( #4541 )  brother toner levels ( #4526 )  poweralert ups divisor  Update Fortinet Logo  Change CiscoSB devices to use ifEntry  Disable refreshing on window resize when $no_refresh is set.  Fix quota bills showing 0/0 for in/out ( #4462 )  This removes stale entries in the mac_ipv4 table ( #4444 )  Swos os discovery fixes  #3593  Vyos discovery fix  #4486  Toner descr that contain invalid characters  #4464  Alert statics not showing data  Ubnt bad edgeswitch uptime  #4470  New installs would have multiple entries in dbSchema table ( #4460 )  Force add now ignores all snmp queries  Clean up errors in the webui ( #4438 )  Reduce mib graph queries ( #4439 )  Ports page includes disabled, ignored, and deleted ports ( #4419 )  RRDTool call was always being done to check for local files ( #4427 )  MikroTik OS detection  #3593  Added cisco886Va to bad_ifXEntry for cisco os ( #4374 )  Stop irc bot crashing on .reload  #4353  Quanta blade switches are now being correctly detected as Quanta switches ( #4358 )  Added options to make temperature graphs display y-axis correctly  #4350  Added options to make voltage graphs display y-axis correctly  #4326  Calling rrdtool_pipe_open() instead of rrdtool_initialize(); ( #4343 )  Enterasys use ifname for port names  #3263  Ricoh/nrg toner levels  #4177  Availability map device box reverted to original size, fixes for device groups ( #4334 )  Remove Cisco remote access stats graph transparency ( #4331 )  Cisco remote access stats bugfix  #4293  ( #4309 )  Added ability to force devices to use ifEntry instead of ifXEntry ( #4100 )  Don\u2019t add Cisco VSS sensors if VSS is not running  #4111  Always validate the default dashboard_id to make sure it still exists  NRG Toner detection  #4250  Missing variable in services api call  Added influxdb options to check-services.php", 
            "title": "Bugfixes"
        }, 
        {
            "location": "/General/Changelog/#documentation_15", 
            "text": "Include PHP Install instructions for MySQL app  Added FAQ for why interfaces are missing from overall traffic graphs ( #4696 )  Updated Applications to clarify apache setup  Update apache applications to detail testing and additional requirements.md  Updated release doc with more information on stable / dev branches  Corrected the rsyslog documentation to be compatible with logrotate  Fixed centos snmp path  Updated to include info on how to use git hook to validate code ( #4484 )  Added info on how to perform unit testing  Added faq to explain why devices show as warning ( #4449 )  Standardize snmp extend script location to /etc/snmp/ ( #4418 )  Added NFSen docs + update general config docs ( #4412 )  Clarify install docs to run validate as root  #4286    Added example to alerting doc for using variables of similar name  #4264  Added docs + file changes to support creating new releases/changelog  Update snmpd setup in Installation-Ubuntu-1604 docs  #4243", 
            "title": "Documentation"
        }, 
        {
            "location": "/General/Changelog/#refactoring_13", 
            "text": "Centralize MIB include directory specification ( #4603 )  OS discovery files (a-z)  F5 device discovery cleanup + test unit  Remove external uses of GenGroupSQL()  consolidate snmpcmd generation  consolidate snmpcmd generation I needed to generate an snmpcmd for an upcoming PR, so I figured I'd save a little code duplication.  Refactored new helper functions for case sensitivity  #4283    Final PSR2 cleanup  Moved IRCBot class to LibreNMS namespace  #4246    Update code in /includes to be psr2 compliant  #4220", 
            "title": "Refactoring"
        }, 
        {
            "location": "/General/Changelog/#devices_15", 
            "text": "Samsung Printer Discovery  #4251  ( #4258 )  HP 1820 Discovery  #3933  ( #4259 )  Added support for Cisco Callmanager  Edge Core ES3528M - base support  Added support for Cisco IPS ( #4561 )  Added MGE detection  Netonix switch data collection update  Eaton PowerXpert  Added Datacom Dbm Support  Updated Edgerouter lite detection  Added support for Cisco Callmanager  Procurve 5400R series  #4375  hp online admin cpu and mem  #4327  Added support for Foundry Networks  #4311  Added Cisco Stackwise Support  #4301  Added support for PLANET Networking   Communication switches ( #4308 )  Added support for Fujitsu Primergy switches  #4277  ( #4280 )  Added support for Lanier printers  #4267    Added Temp and State support for EdgeSwitch OS  #4265    Added support for DDN Storage  #2737  ( #4261 )  Improved support for UBNT EdgeSwitch OS  #4249  Improved support for Avaya VSP  #4237  Added support for macOS Sierra ( #4557 )  Improve BDCOM detection ( #4329 )", 
            "title": "Devices"
        }, 
        {
            "location": "/General/Changelog/#webui_15", 
            "text": "top devices enhancement  #4447  Individual devices now use bootgrid syslog ( #4584 )  added amazon server icon  Update all glyphicon to font awesome  Relocate Alerts menu  Updated force add option for addhost.php to be present in all instances ( #4428 )  Add check to display make bill on port page only if billing is enabled ( #4361 )  Added Pagination and server side search via Ajax to NTP ( #4330 )", 
            "title": "WebUI"
        }, 
        {
            "location": "/General/Changelog/#august-2016", 
            "text": "", 
            "title": "August 2016"
        }, 
        {
            "location": "/General/Changelog/#bug-fixes", 
            "text": "WebUI  Fix Infoblox dhcp messages graph ( PR3898 )  Fix version_info output in Safari ( PR3914 )  Added missing apps to Application page ( PR3964 )    Discovery / Polling  Clear our stale IPSEC sessions from the DB ( PR3904 )  Fixed some InfluxDB bugs in check-services and ports ( PR4031 )  Fixed Promox and Ceph rrd's ( PR4038 ,  PR4037 ,  PR4047 ,  PR4041 )  Fixed LLDP Remote port in discovery-protocols module ( PR4070 )    Billing  Check if ifSpeed is returned for calculating billing ( PR3921 )    Applications  NFS-V3 stats fixed ( PR3963 )    Misc  Dell Equallogic storage fix ( PR3956 )  Fix syslog bug where entries would log to the wrong device ( PR3996 )", 
            "title": "Bug fixes"
        }, 
        {
            "location": "/General/Changelog/#improvements", 
            "text": "Added / improved detection for:  Cisco WAAS / WAVE ( PR3899 )  Maipu MyPower ( PR3909 )  TPLink Switches ( PR3919 )  Dell N3024 ( PR3941 )  Cisco FXOS ( PR3943 )  Brocade FABOS ( PR3959 ,  PR3988 )  JunOS ( PR3976 )  Dell PowerConnect ( PR3998 ,  PR4007 )  Comware ( PR3967 )  Calix E5 ( PR3864 )  Raisecom ( PR3992 )  Cisco ISE ( PR4063 )  Acano ( PR4064 )  McAfee SIEM Nitro ( PR4066 )  HP Bladesystem C3000/C7000 OA ( PR4035 )  Cisco VCS (Expressway) ( PR4086 )  Cisco Telepresence Conductor ( PR4087 )  Avaya VSP ( PR4048 )  Cisco/Tandberg Video Conferencing ( PR4065 )  Cisco Prime Infrastructure ( PR4088 )  HWGroup STE2 ( PR4116 )  HP 2530 Procurve / Arube ( PR4119 )  Brother Printers ( PR4141 )  Hytera Repeater ( PR4163 )  Sonus ( PR4176 )  Freeswitch ( PR4203 )    WebUI  Improved OSPF display ( PR3908 )  Improved Apps overview page ( PR3954 )  Improved Syslog page ( PR3955 ,  PR3971 )  Rewrite availability map ( PR4043 )  Add predicted usage to billing overview ( PR4049 )    API  Added services calls to API ( PR4215 )    Discovery / Polling  Added CPU detection for Dell PowerConnect 8024F ( PR3966 )  Cisco VSS state discovery ( PR3977 )  Refactor of BGP Discovery and Polling (mainly JunOS) ( PR3938 )  Added Sensors for Brocade NOS ( PR3969 )  Cisco ASA HA States ( PR4012 )  Improved IPSLA Support ( PR4006 )  Added support for CISCO-NTP-MIB ( PR4005 )  Improved toner support for Ricoh devices ( PR4180 )    Documentation  New doc site live http://docs.librenms.org/  Added rsyslog 5 example to syslog docs ( PR3912 )  Application doc updates ( PR3928 )    Applications  App OS Updates support ( PR3935 )  PowerDNS Recursor improvements ( PR3932 )  Add DHCP Stats support ( PR3970 )  Added snmp support to Memcached ( PR3949 )  Added Unbound support ( PR4074 )  Added snmp support to Proxmox ( PR4052 )  Added Raspberry Pi Sensor support ( PR4057 )  Updated NTPD support ( PR4077 )    Misc  Added cleanup of old RRD files to daily.sh ( PR3907 )  Refactored addHost event logs ( PR3929 ,  PR3997 )  Refactored RRD Functions ( PR3800 ,  PR4081 )  Added support for nets-exclude in snmp-scan ( PR4000 )  Refactored files in html (Libraries and PSR2 style ( PR4071 ,  PR4101 ,  PR4117 )  Various IRC updates and fixes ( PR4200 ,  PR4204 ,  PR4201 )", 
            "title": "Improvements"
        }, 
        {
            "location": "/General/Changelog/#july-2016", 
            "text": "", 
            "title": "July 2016"
        }, 
        {
            "location": "/General/Changelog/#bug-fixes_1", 
            "text": "API  Stop outputting vrf lite and IP info when device doesn't exist ( PR3785 )    WebUI  Added force refresh for generic image widget ( PR3817 )  Fixed NFSen tab not showing in all cases ( PR3857 )    Discovery / Polling  Fixed incorrect IBM-AMM thresholds ( PR3866 )  Fixed Pulse OS whitespace in polling ( PR3883 )    Misc  Fixed device group search ( PR3788 )  Fixed sporadic device delete ( PR3805 )  Retry creation of two tables ( PR3848 )", 
            "title": "Bug fixes"
        }, 
        {
            "location": "/General/Changelog/#improvements_1", 
            "text": "Added / improved detection for:  Telco systems ( PR3773 ,  PR3804 )  Cisco ACS ( PR3786 )  Adtran AOS ( PR3787 ,  PR3799 )  Lantronix SLC ( PR3797 )  PBN Sensor support ( PR3820 )  Ironware VRF discovery ( PR3827 )  Comware sensors discovery ( PR3881 ,  PR3889 ,  PR3896 )  Brocade VDX detection ( PR3888 )  Checkpoint GAiA ( PR3890 )  Cisco ASA-X Hardware detection ( PR3897 )    WebUI  Added sysName to global search if != hostname ( PR3815 )  Improved look of device SLA panel ( PR3831 )  Added more colours to Cisco CBQOS graphs ( PR3842 )  Improved look of Cisco IPSEC Tunnels page ( PR3874 )    Discovery / Polling  Added ability to set Max repeaters per device ( PR3781 )    Applications  Moved all application scripts to librenms/librenms-agent repo ( PR3865 ,  PR3886 )  Added NFS stats ( PR3792 ,  PR3853 )  Added PowerDNS Recursor ( PR3869 )    Alerting  Updated format for Slack alerts ( PR3852 )  Added support for multiple emails in sysContact and users table ( PR3885 )  Added ability to use uptime in alert templates ( PR3893 )    Misc  Added date to git version info ( PR3782 )  Added logging of versions when upgrading ( PR3807 )  Added ability to lookup device from IP for syslog ( PR3812 )  Updated component system ( PR3821 )  Improvements to validate script ( PR3840 ,  PR3868 )", 
            "title": "Improvements"
        }, 
        {
            "location": "/General/Changelog/#june-2016", 
            "text": "", 
            "title": "June 2016"
        }, 
        {
            "location": "/General/Changelog/#bug-fixes_2", 
            "text": "WebUI:  Rename $ds to $ldap_connection for auth modules ( PR3596 )  Fix the display of custom snmp ports ( PR3646 )  Fix bugs in Create new / edit alert templates ( PR3651 )  Fixed ajax_ calls for use with base_url ( PR3661 )  Updated old frontpage to use new services format ( PR3691 )  Order alerts by state to indicate which alerts are open ( PR3692 )  Fixed maintenance windows showing as lapsed ( PR3704 )  Removed duplicated dbInsert from dashboard creation ( PR3761 )  Fixed 95th for graphs ( PR3762 )    Polling / Discovery:  Updated Poweralert divisor to 10 for sensors ( PR3645 )  Fixed NX-OS version polling ( PR3688 )  Fixed STP log spam from Mikrotik device ( PR3689 )  Removed \" from ZyWall version number ( PR3693 )  Updated register_mib to use d_echo ( PR3739 )  Fixed invalid SQL for BGP Discovery ( PR3742 )    Alerting:  Unacknowledged alerts will now continue to send alerts ( PR3667 )    Misc:  Fix smokeping path in gen_smokeping ( PR3577 )  Fix full include path in includes/polling/functions.inc.php ( PR3614 )  Added port_id to tune_port.php query ( PR3753 )  Updated port schema to support   17.1 Gbs for _rate values ( PR3754 )", 
            "title": "Bug fixes"
        }, 
        {
            "location": "/General/Changelog/#improvements_2", 
            "text": "Added / improved detection for:  HPE 3Par ( PR3578 )  Buffalo TeraStation ( PR3587 )  Samsung C printers ( PR3598 )  Roomalert3e ( PR3599 )  Avtech Switches ( PR3611 )  IBM Bladecenter switches ( PR3623 )  HWg support ( PR3624 )  IBM IMM ( PR3625 )  ServerTech Sentry4 PDUs ( PR3659 )  SwOS ( PR3662 )  Sophos (R3678,  PR3679 ,  PR3736 )  OSX El Capitan ( PR3690 )  DNOS ( PR3703 ,  PR3730 )  Cisco SB SG200 ( PR3705 )  EMC FlareOS ( PR3712 )  Enhance Brocade Fabric OS ( PR3712 )  Huawei SmartAX ( PR3737 )    Polling / Discovery:  Use lsb_release in distro script ( PR3580 )  Allow lmsensors fanspeeds of 0 to be discovered ( PR3616 )  Added support for rrdcached application monitoring ( PR3627 )  Improve the output of polling/debug to make it easier to see modules ( PR3694 )    WebUI:  Resolve some reported security issues ( PR3586 ) With thanks to https://twitter.com/wireghoul  Order apps list alphabetically ( PR3600 )  Network map improvements ( PR3602 )  Added support for varying hostname formats in Oxidized integration ( PR3617 )  Added device hw/location on hover in alerts table ( PR3621 )  Updated unpolled notification to link directly to those devices ( PR3696 )  Added ability to search via IP for Graylog integration ( PR3697 )  Optimised network map SQL ( PR3715 )  Added support for wildcards in custom graph groups ( PR3722 )  Added ability to override ifSpeed for ports ( PR3752 )  Added sysName to global search ( PR3757 )    Alerting:  Added ability to use location in alert templates ( PR3652 )    Documentation:  Added docs on Auto discovery ( PR3671 )  Updated InfluxDB docs ( PR3673 )  Updated distributed polling docs ( PR3675 )  Updated FAQs ( PR3677 )    Misc:  Added pivot table for device groups ready for V2 ( PR3589 )  Added device_id column to eventlog ( PR3682 )  Cleanup sensors and related tables + added constraints ( PR3745 )", 
            "title": "Improvements"
        }, 
        {
            "location": "/General/Changelog/#may-2016", 
            "text": "", 
            "title": "May 2016"
        }, 
        {
            "location": "/General/Changelog/#bug-fixes_3", 
            "text": "WebUI:  Fixed broken performance charts using VisJS ( PR3479 )  Fixed include path to file in create alert item ( PR3480 )  Updated services box on front page to utilise the new services ( PR3481 )  Potential fix for intermittent logouts ( PR3372 )  Updated sensors hostname to use correct variable ( PR3485 )    Polling / Discovery:  Only poll AirMAX if device supports the MIB ( PR3486 )    Alerting:  Don't alert unless the sensor value surpasses the threshold ( PR3507 )", 
            "title": "Bug fixes"
        }, 
        {
            "location": "/General/Changelog/#improvements_3", 
            "text": "Added / improved detection for:  Microsemo timing devices ( PR3453 )  Bintec smart routers ( PR3454 )  PoweWalker support ( PR3456 )  BDCom support ( PR3459 )  Cisco WAPs ( PR3460 )  EMC Data domain ( PR3461 )  Xerox support ( PR3462 )  Calix support ( PR3463 )  Isilon OneFS ( PR3482 )  Ricoh printers ( PR3483 )  HP Virtual Connect ( PR3487 )  Equallogic arrays + Dell servers ( PR3519 )  Alcatel-Lucent SR + SAR ( PR3535 ,  PR3553 )  Xirrus Wireless Access Points ( PR3543 )    Polling / Discovery:  Add config option to stop devices with duplicate sysName's being added ( PR3473 )  Enable discovery support of CDP neighbours by IP ( PR3561 )    Alerting:  Added ability to use sysName in templates ( PR3470 )  Send Slack alerts as pure JSON ( PR3522 )  Apply colour to HipChat messages ( PR3539 )    WebUI:  Added ability to filter alerts by state ( PR3471 )  Added support for using local openstreet map tiles ( PR3472 )  Added ability to show services on availability map ( PR3496 )  Added combined auth module for http auth and AD auth ( PR3531 )  List services alphabetically ( PR3538 )  Added support for scrollable widgets ( PR3565 )    Graphs:  Added Hit/Misses for memcached graphs ( PR3499 )    API:  Update get_graph_generic_by_hostname to use device_id as well ( PR3494 )    Docs:  Added configuration for SNMP Proxy support ( PR3528 )    Misc:  Added purge for alert log ( PR3469 )", 
            "title": "Improvements"
        }, 
        {
            "location": "/General/Changelog/#april-2016", 
            "text": "", 
            "title": "April 2016"
        }, 
        {
            "location": "/General/Changelog/#bug-fixes_4", 
            "text": "Discovery / Polling:  Fix poweralert OS detection ( PR3414 )    WebUI:  Fixed headers for varying ajax calls ( PR3432 ,  PR3433 ,  PR3434 ,  PR3435 )    Misc:  Update syslog to support incorrect time ( PR3348 )  Fixed InfluxDB to send data as int/float ( PR3354 )  Small bug fixes to the services update ( PR3366 ,  PR3396 ,  PR3425 ,  PR3426 ,  PR3427 )  Fix bug with obtaining data for new bills in some scenarios ( PR3404 )  Improved PHP 7 support ( PR3417 )  Fix urls within billing section for sub dir support ( PR3442 )", 
            "title": "Bug fixes"
        }, 
        {
            "location": "/General/Changelog/#improvements_4", 
            "text": "WebUI:  Update rancid file detection ( PR3341 )  Make graphs in widgets clickable ( PR3355 )  Add config option to set the typeahead results ( PR3363 )  Add config option to set min graph height ( PR3410 )    Discovery / Polling:  Updated Infoblox mibs and logo ( PR3340 )  Updated arp discovery to support vrf lite ( PR3359 )  Added RSSI and MNC for Cisco WWAN routers ( PR3371 )  Updated DNOS and added CPU, Memory and Temp ( PR3391 ,  PR3393 ,  PR3395 )  Added PoE state support for Netonix devices ( PR3416 )  Added ability to exclude ports via ifName and ifAlias regex ( PR3439 )    Added detection for:  Viprenet routers ( PR3365 )  FreeBSD via distro script ( PR3399 )    Documentation:  Updated nginx install docs ( PR3397 )  Added FAQ on renaming hosts ( PR3444 )    API:  Added call for IPsec tunnels ( PR3411 )    Misc:  Added check_mk FreeBSD agent support ( PR3406 )  Added suggestion to fix files not owned by correct user to validate.php ( PR3415 )  Added detection for missing timezone to validate.php ( PR3428 )  Added detection for install_dir config and local git repo issues to validate.php ( PR3440 )", 
            "title": "Improvements"
        }, 
        {
            "location": "/General/Changelog/#march-2016", 
            "text": "", 
            "title": "March 2016"
        }, 
        {
            "location": "/General/Changelog/#bug-fixes_5", 
            "text": "WebUI:  Skip authentication check in graph.php if unauth graphs is enabled ( PR3019 )  Stop double escaping notes for devices ( PR3149 )  Corrected aggregate graph on smokeping page ( PR3177 )  Fix non-admin syslog queries ( PR3191 )  Fix services SQL ( PR3205 )    Discovery / Polling:  Revert arp discovery to pre-vrf lite support ( PR3126 )  Fix IOS-XR DBM sensors ( PR3291 )    Alerting:  Fix alert failure response from transports ( PR3283 )    Misc:  Fix data in bills if counters doesn't change ( PR3132 )  Improve performance of billing poller ( PR3129 )  Fix API tokens when using LDAP auth ( PR3178 )  Import notifications with original datetime ( PR3200 )  Add sysName for top-interfaces widget ( PR3201 )  Fix Cisco syslog parsing when logging timestamp enabled ( PR3203 )", 
            "title": "Bug fixes"
        }, 
        {
            "location": "/General/Changelog/#improvements_5", 
            "text": "WebUI:  Added ability to show device group specific maps ( PR3018 )  Updated Billing UI ( PR3194 ,  PR3195 ,  PR3216 ,  PR3239 ,  PR3240 )  Added Juniper  Added config option for HTML emails in mail transport ( PR3221 )    Discovery / Polling:  Added Juniper state support ( PR3121 )  Added Ironware state support ( PR3160 )  Check sysObjectID before detecting ILO temp sensors ( PR3204 )  Improved Avtech support ( PR3207 )  Improved Dell NOS detection ( PR3213 )  Added Juniper alarm state monitoring ( PR3226 )  Updated Drac state support ( PR3228 )  Improved serial # detection for Brocade Ironware devices ( PR3292 )    Added detection for:  Develop Ineo printers ( PR3224 )  Cumulus Linux ( PR3237 )  Deliberant WiFi ( PR3246 )  Juniper EX2500 ( PR3254 )  Cambium devices ( PR3279 )    Alerting:  Added Canopsis alerting transport ( PR3299 )    Misc:  Improved syslog support ( PR3171 ,  PR3172 ,  PR3173 )  Added Nginx install docs for Debian/Ubuntu ( PR3301 )  Updated InfluxDB php module ( PR3302 )  Updated Component API ( PR3304 )", 
            "title": "Improvements"
        }, 
        {
            "location": "/General/Changelog/#february-2016", 
            "text": "", 
            "title": "February 2016"
        }, 
        {
            "location": "/General/Changelog/#bug-fixes_6", 
            "text": "Discovery / Polling:  Quote snmp v2c community ( PR2927 )  For entity-sensor, changed variable name again ( PR2948 )  Fix some issues with/introduced by port association mode configuration ( PR2923 )  Deal with 0 value sensors better ( PR2972 ,  PR2973 )  Reverted Fortigate CPU change from Dec 2015 ( PR2990 )  Reverted bgp code from vrf lite support ( PR3010 ,  PR3011 ,  PR3028 ,  PR3050 )  Add icon to database ( PR3076 )  Discovery updated to check for distributed polling group ( PR3086 )    WebUI:  Fix ceph graps ( PR2909 ,  PR2942 )  BGP Overlib ( PR2915 )  Added  application/json  headers where json is returned ( PR2936 ,  PR2961 )  Stop realtime graph page from auto refreshing ( PR2939 )  Updated parsing of alert rules to allow  |  ( PR2917 )  Fix IP Display ( PR2951 )  Added missing from email config option ( PR2986 )  Ignore devices that do not provide an uptime statistic ( PR3009 )  Added unique id for alert widget ( PR3034 )    Misc:  Updated  device_by_id_cache()  to convert IP column ( PR2940 )  Fixed auto updating if not enabled ( PR3063 )    Documentation:  Removed devloping doc as none of the info is current ( PR2911 )", 
            "title": "Bug fixes"
        }, 
        {
            "location": "/General/Changelog/#improvements_6", 
            "text": "WebUI:  Merged device option links to dropdown ( PR2955 )  Added ability to configure # results for global search ( PR2957 )  Added ability to show / hide line numbers for config for devices ( PR2988 )  Added support for showing diff for Oxidized configs ( PR2994 )  Updated visjs to 4.14.0 ( PR3031 )  Updated apps layout to use panels ( PR3117 )    Discovery / Polling:  Added VRF Lite support ( PR2820 )  Added ability to ignore device sensors from entity mib ( PR2862 )  Added  ifOperStatus_prev  and  ifAdminStatus_prev  values to db ( PR2912 )  Improved bgpPolling efficiency ( PR2967 )  Use raw timeticks for uptime ( PR3021 )  Introduced state monitoring ( PR3102 )    Added detection for:  Dell Networking N2048 ( PR2949 )  Calix E7 devices ( PR2958 )  Improved support for Netonix ( PR2959 )  Improved detection for Windows 10 ( PR2962 )  Improved support for FortiOS ( PR2991 )  Barracuda Spam firewall support ( PR2998 )  Improved sysDescr parsing for Unifi Switches ( PR3020 )  Canon iR ( PR3045 )  Cisco SF500 ( PR3057 )  Eaton UPS ( PR3066 ,  PR3067 ,  PR3070 ,  PR3071 )  ServerIron / ServerIron ADX ( PR3074 )  Additional Qnap sensors ( PR3088 ,  PR3089 )  Avtech environment sensors ( PR3091 )    Misc:  Added check for rrd vadility ( PR2908 )  Add systemd unit file for the python poller service ( PR2913 )  Added more detection to validate for bad installs ( PR2985 )  Syslog cleanup ( PR3036 ,  PR3093 ,  PR3099 )    Documentation:  Added description of AD configuration options ( PR2910 )  Add description to mibbases polling ( PR2919 )", 
            "title": "Improvements"
        }, 
        {
            "location": "/General/Changelog/#january-2016", 
            "text": "", 
            "title": "January 2016"
        }, 
        {
            "location": "/General/Changelog/#bug-fixes_7", 
            "text": "Discovery / Polling:  Ignore HC Broadcast and Multicast counters for Cisco SB ( PR2552 )  Fix Cisco temperature discovery ( PR2765 )    WebUI:  Fix ajax_search.php returning null instead of [] ( PR2695 )  Fix notification links ( PR2721 )  Fix wrong suggestion to install PEAR in Web installer ( PR2727 )  Fixed mysqli support for Web installer ( PR2730 )    Misc:  Fix deleting device_perf entries ( PR2755 )  Fix for schema updates to device table when poller is running ( PR2825 )", 
            "title": "Bug fixes"
        }, 
        {
            "location": "/General/Changelog/#improvements_7", 
            "text": "WebUI:  Converted arp pages to use bootgrid ( PR2669 )  Updated VMWare listing page ( PR2684 )  Updated typeahead.js ( PR2698 )  Added ability to set notes for ports ( PR2688 )  Use browser width to scale CPU and Bandwidth graphs ( PR2537 ,  PR2633 )  Removed onClick from ports list ( PR2744 )  Added support for showing sysName when hostname is IP ( PR2796 )  Updated rancid support for different hostnames ( PR2807 )  Added combined HTTP Auth and LDAP Auth authentication module ( PR2835 )  Added ability to filter alerts using widgets ( PR2834 )    Discovery / Polling:  Print runtime info per poller/discovery modules ( PR2713 )  Improved polling/discovery vmware module performance ( PR2696 )  Added STP/RSTP support ( PR2690 )  Moved system poller module to core module ( PR2637 )  Added lookup of IP for devices with hostname ( PR2798 )  Centralised sensors module file structure ( PR2794 )  Graph poller module run times ( PR2849 )  Updated vlan support using IEEE8021-Q-BRIDGE-MIB ( PR2851 )    Added detection for:  Added support for Samsung printers ( PR2680 )  Added support for Canon printers ( PR2687 )  Added support for Sub10 support ( PR2469 )  Added support for Zyxel GS range ( PR2729 )  Added support for HWGroup Poseidon ( PR2742 )  Added support for Samsung SCX printers ( PR2760 )  Added additional support for HP MSM ( PR2766 ,  PR2768 )  Added additional support for Cisco ASA and RouterOS ( PR2784 )  Added support for Lenovo EMC NAS ( PR2795 )  Added support for Infoblox ( PR2801 )    API:  Added support for Oxidized groups ( PR2745 )    Misc:  Added option to specify Smokeping ping value ( PR2676 )  Added backend support for InfluxDB ( PR2208 )  Alpha2 release of MIB Polling released ( PR2536 ,  PR2763 )  Centralised version info ( PR2697 )  Added username support for libvirt over SSH ( PR2728 )  Added Oxidized reload call when adding device ( PR2792 )  Added components system to centralize data in MySQL ( PR2623 )", 
            "title": "Improvements"
        }, 
        {
            "location": "/General/Changelog/#december-2015", 
            "text": "", 
            "title": "December 2015"
        }, 
        {
            "location": "/General/Changelog/#bug-fixes_8", 
            "text": "WebUI:  Fixed regex for negative lat/lng coords ( PR2524 )  Fixed map page looping due to device connected to itself ( PR2545 )  Fixed PATH_INFO for nginx ( PR2551 )  urlencode the custom port types ( PR2597 )  Stop non-admin users from being able to get to settings pages ( PR2627 )  Fix JpGraph php version compare ( PR2631 )    Discovery / Polling:  Pointed snmp calls for Huawei to correct MIB folder ( PR2541 )  Fixed Ceph unix-agent support. ( PR2588 )  Moved memory graphs from storage to memory polling ( PR2616 )  Mask alert_log mysql output when debug is enabled to stop console crashes ( PR2618 )  Stop Quanta devices being detected as Ubiquiti ( PR2632 )  Fix MySQL unix-agent graphs ( PR2645 )  Added MTA-MIB and NETWORK-SERVICES-MIB to stop warnings printed in poller debug ( PR2653 )    Services:  Fix SSL check for PHP 7 ( PR2647 )    Alerting:  Fix glue-expansion for alerts ( PR2522 )  Fix HipChat transport ( PR2586 )    Documentation:  Removed duplicate mysql-client install from Debian/Ubuntu install docs ( PR2543 )    Misc:  Update daily.sh to ignore issues writing to log file ( PR2595 )", 
            "title": "Bug fixes"
        }, 
        {
            "location": "/General/Changelog/#improvements_8", 
            "text": "WebUI:  Converted sensors page to use bootgrid ( PR2531 )  Added new widgets for dashboard. Notes ( PR2582 ), Generic image ( PR2617 )  Added config option to disable lazy loading of images ( PR2589 )  Visual update to Navbar. ( PR2593 )  Update alert rules to show actual alert rule ID ( PR2603 )  Initial support added for per user default dashboard ( PR2620 )  Updated Worldmap to show clusters in red if one device is down ( PR2621 )  Cleaned up Billing pages ( PR2671 )    Discovery / Polling  Added traffic bits as default for Cambium devices ( PR2525 )  Overwrite eth0 port data from UniFi MIBs for AirFibre devices ( PR2544 )  Added lastupdate column to sensors table for use with alerts ( PR2590 , PR2592 )  Updated auto discovery via lldp to check for devices that use mac address in lldpRemPortId ( PR2591 )  Updated auto discovery via lldp with absent lldpRemSysName ( PR2619 )    API:  Added ability to filter devices by type and os for Oxidized API call ( PR2539 )  Added ability to update device information ( PR2585 )  Added support for returning device groups ( PR2611 )  Added ability to select port graphs based on ifDescr ( PR2648 )    Documentation:  Improved alerting docs explaining more options ( PR2560 )  Added Docs for Ubuntu/Debian Smokeping integration ( PR2610 )    Added detection for:  Updated Netonix switch MIBs ( PR2523 )  Updated Fotinet MIBs ( PR2529 ,  PR2534 )  Cisco SG500 ( PR2609 )  Updated processor support for Fortigate ( PR2613 )  Added CPU / Memory support for PBN ( PR2672 )    Misc:  Updated validation to check for php extension and classes required ( PR2602 )  Added Radius Authentication support ( PR2615 )  Removed distinct() from alerts query to use indexes ( PR2649 )", 
            "title": "Improvements"
        }, 
        {
            "location": "/General/Changelog/#november-2015", 
            "text": "", 
            "title": "November 2015"
        }, 
        {
            "location": "/General/Changelog/#bug-fixes_9", 
            "text": "WebUI:  getRates should return in and out average rates ( PR2375 )  Fix 95th percent lines in negative range ( PR2405 )  Fix percentage bar for billing pages ( PR2419 )  Use HC counters first in realtime graphs ( PR2420 )  Fix netcmd.php URI for sub dir installations ( PR2428 )  Fixed Oxidized fetch config with groups ( PR2501 )  Fixed background colour to white for some graphs ( PR2516 )  Added missing Service description on services page ( PR2679 )    API:  Added missing quotes for MySQL queries ( PR2382 )    Discovery / Polling:  Specified MIB used when polling ntpd-server ( PR2418 )  Added missing fields when inserting data into applications table ( PR2445 )  Fix auto-discovery failing ( PR2457 )  Juniper hardware inventory fix ( PR2466 )  Fix discovery of Cisco PIX running PixOS 8.0 ( PR2480 )  Fix bug in Proxmox support if only one VM was detected ( PR2490 ,  PR2547 )    Alerting:  Strip   and || from query for device-groups ( PR2476 )  Fix transports being triggered when empty keys set ( PR2491 )\n  Misc:  Updated device_traffic_descr config to stop graphs failing ( PR2386 )", 
            "title": "Bug fixes"
        }, 
        {
            "location": "/General/Changelog/#improvements_9", 
            "text": "WebUI:  Status column now sortable for /devices/ ( PR2397 )  Update Gridster library to be responsive ( PR2414 )  Improved rrdtool 1.4/1.5 compatibility ( PR2430 )  Use event_id in query for Eventlog ( PR2437 )  Add graph selector to devices overview ( PR2438 )  Improved Navbar for varying screen sizes ( PR2450 )  Added RIPE NCC API support for lookups ( PR2455 ,  PR2474 )  Improved ports page for device with large number of neighbours ( PR2460 )  Merged all CPU graphs into one on overview page ( PR2470 )  Added support for sorting by traffic on device port page ( PR2508 )  Added support for dynamic graph sizes based on browser size ( PR2510 )  Made device location clickable in device header ( PR2515 )  Visual improvements to bills page ( PR2519 )    Discovery / Polling:  Updated Cisco SB discovery ( PR2396 )  Added Ceph support via Applications ( PR2412 )  Added support for per device unix-agent port ( PR2439 )  Added ability to select up/down devices on worldmap ( PR2441 )  Allow powerdns app to be set for Unix Agent ( PR2489 )  Added SLES detection to distro script ( PR2502 )    Added detection for:  Added CPU + Memory usage for Ubiquiti UniFi ( PR2421 )  Added support for LigoWave Infinity AP's ( PR2456 )    Alerting:  Added ability to globally disable sending alerts ( PR2385 )  Added support for Clickatell, PlaySMS and VictorOps ( PR24104 ,  PR2443 )    Documentation:  Improved CentOS install docs ( PR2462 )  Improved Proxmox setup docs ( PR2483 )    Misc:  Provide InnoDB config for buffer size issues ( PR2401 )  Added AD Authentication support ( PR2411 ,  PR2425 ,  PR2432 ,  PR2434 )  Added Features document ( PR2436 ,  PR2511 ,  PR2513 )  Centralised innodb buffer check and added to validate ( PR2482 )  Updated and improved daily.sh ( PR2487 )", 
            "title": "Improvements"
        }, 
        {
            "location": "/General/Changelog/#october-2015", 
            "text": "", 
            "title": "October 2015"
        }, 
        {
            "location": "/General/Changelog/#bug-fixes_10", 
            "text": "Discovery / Polling:  Check file exists via rrdcached before creating new files on 1.5 ( PR2041 )  Fix Riverbed discovery ( PR2133 )  Fixes issue where snmp_get would not return the value 0 ( PR2134 )  Fixed powerdns snmp checks ( PR2176 )  De-dupe checks for hostname when adding hosts ( PR2189 )    WebUI:  Soft fail if PHP Pear not installed ( PR2036 )  Escape quotes for ifAlias in overlib calls ( PR2072 )  Fix table name for access points ( PR2075 )  Removed STACK text in graphs ( PR2097 )  Enable multiple ifDescr overrides to be done per device ( PR2099 )  Removed ping + performance graphs and tab if skip ping check ( PR2175 )  Fixed services -  Alerts menu link + page ( PR2173 )  Fix percent bar also for quota bills ( PR2198 )  Fix new Bill ( PR2199 )  Change default solver to hierarchicalRepulsion in vis.js ( PR2202 )  Fix: setting user port permissions fails ( PR2203 )  Updated devices Graphs links to use non-static time references ( PR2211 )  Removed ignored,deleted and disabled ports from query ( PR2213 )    API:  Fixed API call for alert states ( PR2076 )  Fixed nginx rewrite for api ( PR2112 )  Change on the add_edit_rule to modify a rule without modify the name ( PR2159 )  Fixed list_bills function when using :bill_id ( PR2212 )", 
            "title": "Bug fixes"
        }, 
        {
            "location": "/General/Changelog/#improvements_10", 
            "text": "WebUI:  Updated Bootstrap to 3.3.5 ( PR2015 )  Added billing graphs to graphs widget ( PR2027 )  Lock widgets by default so they can't be moved ( PR2042 )  Moved Device Groups menu ( PR2049 )  Show Config tab only if device isn't excluded from oxidized ( PR2118 )  Simplify adding config options to WebUI ( PR2120 )  Move red map markers to foreground ( PR2127 )  Styled the two factor auth token prompt ( PR2151 )  Update Font Awesome ( PR2167 )  Allow user to influence when devices are grouped on world map ( PR2170 )  Centralised the date selector for graphs for re-use ( PR2183 )  Don't show dashboard settings if  /bare=yes/  ( PR2364 )    API:  Added unmute alert function to API ( PR2082 )    Discovery / Polling:  Added additional support for some UPS' based on Multimatic cards ( PR2046 )  Improved WatchGuard OS detection ( PR2048 )  Treat Dell branded Wifi controllers as ArubaOS ( PR2065 )  Added discovery option for OS or Device type ( PR2088 )  Updated pfSense to firewall type ( PR2096 )  Added ability to turn off icmp checks globally or per device ( PR2131 )  Reformat check a bit to make it easier for adding additional oids in ( PR2135 )  Updated to disable auto-discovery by ip ( PR2182 )  Updated to use env in distro script ( PR2204 )    Added detection for:  Pulse Secure OS ( PR2053 )  Riverbed Steelhead support ( PR2107 )  OpenBSD sensors ( PR2113 )  Additional comware detection ( PR2162 )  Version from Synology MIB ( PR2163 )  VCSA as VMWare ( PR2185 )  SAF Lumina radios ( PR2361 )  TP-Link detection ( PR2362 )    Documentation:  Improved RHEL/CentOS install docs ( PR2043 )  Update Varnish Docs ( PR2116 ,  PR2126 )  Added passworded channels for the IRC-Bot ( PR2122 )  Updated Two-Factor-Auth.md RE: Google Authenticator ( PR2146 )    General:  Added colour support to IRC bot ( PR2059 )  Fixed IRC bot reconnect if socket dies ( PR2061 )  Updated default crons ( PR2177 )    Reverts:  \"Removed what appears to be unnecessary STACK text\" ( PR2128 )", 
            "title": "Improvements"
        }, 
        {
            "location": "/General/Changelog/#september-2015", 
            "text": "", 
            "title": "September 2015"
        }, 
        {
            "location": "/General/Changelog/#bug-fixes_11", 
            "text": "Alerting:  Process followups if there are changes ( PR1817 )  Typo in alert_window setting ( PR1841 )  Issue alert-trigger as test object ( PR1850 )    WebUI:  Fix permissions for World-map widget ( PR1866 )  Clean up Global / World Map name mixup ( PR1874 )  Removed required flag for community when adding new hosts ( PR1961 )  Stop duplicate devices showing in map ( PR1963 )  Fix adduser bug storing users real name ( PR1990 )  Stop alerts top-menu being clickable ( PR1995 )    Services:  Honour IP field for DNS checks ( PR1933 )    Discovery / Poller:  Fix Huawei VRP os detection ( PR1931 )  Set empty processor descr for *nix processors ( PR1951 )  Ensure udp6/tcp6 snmp devices use fping6 ( PR1959 )  Fix RRD creation parameters ( PR2010 )    General:  Remove 'sh' from cronjob ( PR1818 )  Remove MySQL Locks ( PR1822 , PR1826 , PR1829 , PR1836 )  Change DB config options to use single quotes to allow $ ( PR1948 )", 
            "title": "Bug fixes"
        }, 
        {
            "location": "/General/Changelog/#improvements_11", 
            "text": "WebUI:  Ability to edit ifAlias ( PR1811 )  Honour Mouseout/Mouseleave on map widget ( PR1814 )  Make syslog/eventlog responsive ( PR1816 )  Reformat Proxmox UI ( PR1825 , PR1827 )  Misc Changes ( PR1828 , PR1830 , PR1875 , PR1885 , PR1886 , PR1887 , PR1891 , PR1896 , PR1901 , PR1913 , PR1944 )  Added support for Oxidized versioning ( PR1842 )  Added graph widget + settings for widgets ( PR1835 , PR1861 , PR1968 )  Added Support for multiple dashboards ( PR1869 )  Added settings page for Worldmap widget ( PR1872 )  Added uptime to availability widget ( PR1881 )  Added top devices and ports widgets ( PR1903 )  Added support for saving notes for devices ( PR1927 )  Added fullscreen mobile support ( PR2022 )    Added detection for:  FortiOS ( PR1815 )  HP MSM ( PR1953 )    Discovery / Poller:  Added Proxmox support ( PR1789 )  Added CPU/Mem support for SonicWALL ( PR1957 )  Updated distro script to support Arch Linux + fall back to lsb-release ( PR1978 )    Documentation:  Add varnish docs ( PR1809 )  Added CentOS 7 RRCached docs ( PR1893 )  Improved description of fping options ( PR1952 )    Alerting:  Added RegEx support for alert rules and device groups ( PR1998 )    General:  Make installer more responsive ( PR1832 )  Update fping millisec option to 200 default ( PR1833 )  Reduced cleanup of device_perf ( PR1837 )  Added support for negative values in munin-plugins ( PR1907 )  Added default librenms user to config for use in validate.php ( PR1956 )  Added working memcache support ( PR2007 )", 
            "title": "Improvements"
        }, 
        {
            "location": "/General/Changelog/#august-2015", 
            "text": "", 
            "title": "August 2015"
        }, 
        {
            "location": "/General/Changelog/#bug-fixes_12", 
            "text": "WebUI:  Fix web_mouseover not honoured on All Devices page ( PR1592 )  Fixed bug with edit/create alert template to clear out previous values ( PR1636 )  Initialise $port_count in devices list ( PR1640 )  Fixed Web installer due to code tidying update ( PR1644 )  Updated gridster variable names to make unique ( PR1646 )  Fixed issues with displaying devices with ' in location ( PR1655 )  Fixes updating snmpv3 details in webui ( PR1727 )  Check for user perms before listing neighbour ports ( PR1749 )  Fixed Test-Transport button ( PR1772 )    DB:  Added proper indexes on device_perf table ( PR1621 )  Fixed multiple mysql strict issues ( PR1638 ,  PR1659 )  Convert bgpPeerRemoteAs to bigint ( PR1691 )    Discovery / Poller:  Fixed Synology system temps ( PR1649 )  Fixed discovery-arp not running since code formatting update ( PR1671 )  Correct the DSM upgrade OID ( PR1696 )  Fix MySQL agent host variable usage ( PR1710 )  Pass snmp-auth parameters enclosed by single-quotes ( PR1730 )  Revert change which skips over down ports ( PR1742 )  Stop PoE polling for each port ( PR1747 )  Use ifHighSpeed if ifSpeed equals 0 ( PR1750 )  Keep PHP Backwards compatibility ( PR1766 )  False identification of Zyxel as Cisco ( PR1776 )  Fix MySQL statement in poller-service.py ( PR1794 )  Fix upstart script for poller-service.py ( PR1812 )    General:  Fixed path to defaults.inc.php in config.php.default ( PR1673 )  Strip '::ffff:' from syslog input ( PR1734 )  Fix RRA ( PR1791 )", 
            "title": "Bug fixes"
        }, 
        {
            "location": "/General/Changelog/#improvements_12", 
            "text": "WebUI Updates:  Added support for Google API key in Geo coding ( PR1594 )  Added ability to updated storage % warning ( PR1613 )  Updated eventlog page to allow filtering by type ( PR1623 )  Hide logo and plugins text on smaller windows ( PR1624 )  Added poller group name to poller groups table ( PR1634 )  Updated Customers page to use Bootgrid ( PR1658 )  Added basic Graylog integration support ( PR1665 )  Added support for running under sub-directory ( PR1667 )  Updated vis.js to latest version ( PR1708 )  Added border on availability map ( PR1713 )  Make new dashboard the default ( PR1719 )  Rearrange about page ( PR1735 , PR1743 )  Center/Cleanup graphs ( PR1736 )  Added Hover-Effect on devices table ( PR1738 )  Show Test-Transport result ( PR1777 )  Add arrows to the network map ( PR1787 )  Add errored ports to summary widget ( PR1788 )  Show message if no Device-Groups exist ( PR1796 )  Misc UI fixes (Titles, Headers, ...) ( PR1797 , PR1798 , PR1800 , PR1801 , PR1802 , PR1803 , PR1804 , PR1805 )  Move packages to overview dropdown ( PR1810 )    API Updates:  Improved billing support in API ( PR1599 )  Extended support for list devices to support mac/ipv4 and ipv6 filtering ( PR1744 )    Added detection for:  Perle Media convertors ( PR1607 )  Mac OSX 10 ( PR1774 )    Improved detection for:  Windows devices ( PR1639 )  Zywall CPU, Version and Memory ( PR1660 , PR1784 )  Added LLDP support for PBN devices ( PR1705 )  Netgear GS110TP ( PR1751 )    Additional Sensors:  Added Compressor state for PCOWEB ( PR1600 )  Added dbm support for IOS-XR ( PR1661 )  Added temperature support for DNOS ( PR1782 )    Discovery / Poller:  Updated autodiscovery function to log new type ( PR1623 )  Improve application polling ( PR1724 )  Improve debug output ( PR1756 )    DB:  Added MySQLi support ( PR1647 )    Documentation:  Added docs on MySQL strict mode ( PR1635 )  Updated billing docs to use librenms user in cron ( PR1676 )  Updated LDAP docs to indicate php-ldap module needs installing ( PR1716 )  Typo/Spellchecks ( PR1731 , PR1806 )  Improved Alerting and Device-Groups ( PR1781 )    Alerting:  Reformatted eventlog message to show state for alerts ( PR1685 )  Add basic Pushbullet transport ( PR1721 )  Allow custom titles ( PR1807 )    General:  Added more debugging and checks to discovery-protocols ( PR1590 )  Cleanup debug statements ( PR1725 , PR1737 )", 
            "title": "Improvements"
        }, 
        {
            "location": "/General/Changelog/#july-2015", 
            "text": "", 
            "title": "July 2015"
        }, 
        {
            "location": "/General/Changelog/#bug-fixes_13", 
            "text": "WebUI:  Fixed API not functioning. ( PR1367 )  Fixed API not storing alert rule names ( PR1372 )  Fixed datetimepicker use ( PR1376 )  Added 'running' status for BGP peers as up ( PR1412 )  Fixed the remove search link in devices ( PR1413 )  Fixed clicking anywhere in a search result will now take you to where you want ( PR1472 )  Fixed inventory page not displaying results ( PR1488 )  Fixed buggy alert templating in WebUI ( PR1527 )  Fixed bug in creating api tokens in Firefox ( PR1530 )    Discovery / Poller:  Do not allow master to rejoin itself. ( PR1377 )  Fixed poller group query in discovery ( PR1433 )  Fixed ARMv5 detection ( PR1522 )  Fixed pfSense detection ( PR1567 )    Sensors:  Fixed bug in EqualLogic sensors ( PR1513 )  Fixed bug in DRAC voltage sensor ( PR1521 )  Fixed bug in APC bank detection ( PR1560 )    Documentation:  Fixed Nginx config file ( PR1389 )    General:  Fixed a number of permission issues ( PR1411 )", 
            "title": "Bug fixes"
        }, 
        {
            "location": "/General/Changelog/#improvements_13", 
            "text": "Added detection for:  Meraki ( PR1402 )  Brocade ( PR1404 )  Dell iDrac ( PR1419 , PR1420 , PR1423 , PR1427 )  Dell Networking OS ( PR1474 )  Netonix ( PR1476 )  IBM Tape Library ( PR1519 , PR1550 )  Aerohive ( PR1546 )  Cisco Voice Gateways ( PR1565 )    Improved detection for:  RouterOS RB260GS ( PR1545 )  Dell PowerConnect ( PR1452 , PR1517 )  Brocade ( PR1548 )  Rielo UPS ( PR1381 )  Cisco IPSLAs ( PR1586 )    Additional Sensors:  Added power, temperature and fan speed support for XOS ( PR1493 , PR1494 , PR1496 )    WebUI Updates:  Added missing load and state icons ( PR1392 )  Added ability to update users passwords in WebUI ( PR1440 )  Default to two days performance data being shown ( PR1442 )  Improved sensors page for mobile view ( PR1454 )  Improvements to network map ( PR1455 , PR1470 , PR1486 , PR1528 , PR1557 )  Added availability map ( PR1464 )  Updated edit ports page to use Bootstrap ( PR1498 )  Added new World Map and support for lat/lng lookup ( PR1501 , PR1552 )  Added sysName to overview page for device ( PR1520 )  Added New Overview dashboard uilising Widgets ( PR1523 , PR1580 )  Added new config option to disable Device groups ( PR1569 )    Discovery / Poller Updates:  Updated discovery of IP based devices ( PR1406 )  Added using cronic for poller-wrapper.py to allow cron to send emails ( PR1408 , PR1531 )  Updated Cisco MIBs to latest versions ( PR1436 )  Improve performance of unix-agent processes DB code ( PR1447 , PR1460 )  Added BGP discovery code ( PR1414 )  Use snmpEngineTime as a fallback to uptime ( PR1477 )  Added fallback support for devices not reporting ifAlias ( PR1479 )  Git pull and schema updates will now pause if InnoDB buffers overused ( PR1563 )    Documentation:  Updated Unix-Agent docs to use LibreNMS repo for scripts ( PR1568 , PR1570 , PR1573 )  Added info on using MariaDB ( PR1585 )    Alerting:  Added Boxcar (www.boxcar.io) transport for alerting ( PR1481 )  Removed old alerting code ( PR1581 )    General:  Code cleanup and formatting ( PR1415 , PR1416 , PR1431 , PR1434 , PR1439 , PR1444 , PR1450 )  Added support for CollectD flush ( PR1463 )  Added support for LDAP pure DN member groups ( PR1516 )  Updated validate.php to check for distributed poller setup issues ( PR1526 )  Improved service check support ( PR1385 , PR1386 , PR1387 , PR1388 )  Added SNMP Scanner to discover devices within subnets and docs ( PR1577 )", 
            "title": "Improvements"
        }, 
        {
            "location": "/General/Changelog/#june-2015", 
            "text": "", 
            "title": "June 2015"
        }, 
        {
            "location": "/General/Changelog/#bug-fixes_14", 
            "text": "Fixed services list SQL issue ( PR1181 )  Fixed negative values for storage when volume is   2TB ( PR1185 )  Fixed visual display for input fields on /syslog/ ( PR1193 )  Fixed fatal php issue in shoutcast.php ( PR1203 )  Fixed percent bars in /bills/ ( PR1208 )  Fixed item count in memory and storage pages ( PR1210 )  Fixed syslog not loading ( PR1219 )  Fixed fatal on reload in IRC bot ( PR1218 )  Alter Windows CPU description when unknown ( PR1226 )  Fixed rfc1628 current calculation ( PR1256 )  Fixed alert mapping not working ( PR1280 )  Fixed legend ifLabels ( PR1296 )  Fixed bug causing map to not load when stale link data was present ( PR1297 )  Fixed javascript issue preventing removal of alert rules ( PR1312 )  Fixed removal of IPs before ports are deleted ( PR1329 )  Fixed JS issue when removing ports from bills ( PR1330 )  Fixed adding --daemon a second time to collectd Graphs ( PR1342 )  Fixed CollectD DS names ( PR1347 , PR1349 , PR1368 )  Fixed graphing issues when rrd contains special chars ( PR1350 )  Fixed regex for device groups ( PR1359 )  Added HOST-RESOURCES-MIB into Synology detection (RP1360)  Fix health page graphs showing the first graph for all ( PR1363 )", 
            "title": "Bug fixes"
        }, 
        {
            "location": "/General/Changelog/#improvements_14", 
            "text": "Updated Syslog docs to include syslog-ng 3.5.1 updates ( PR1171 )  Added Pushover Transport ( PR1180 ,  PR1191 )  Converted processors and memory table to bootgrid ( PR1188 ,  PR1192 )  Issued alerts and transport now logged to eventlog ( PR1194 )  Added basic support for Enterasys devices ( PR1211 )  Added dynamic config to configure alerting ( PR1153 )  Added basic support for Multimatic USV ( PR1215 )  Disabled and ignored ports no longer show by default on /ports/ ( PR1228 , PR1301 )  Added additional graphs to menu on devices page ( PR1229 )  Added Docs on configuring Globe front page ( PR1231 )  Added robots.txt to html folder to disallow indexing ( PR1234 )  Added additional support for Synology units ( PR1235 , PR1244 , PR1269 )  Added IP check to autodiscovery code ( PR1248 )  Updated HP ProCurve detection ( PR1249 )  Added basic detection for Alcatel-Lucent OmniSwitch ( PR1253 ,  PR1282 )  Added additional metrics for rfc1628 UPS ( PR1258 ,  PR1268 )  Allow multiple discovery modules to be specified on command line ( PR1263 )  Updated docs on using libvirt ( PR1264 )  Updated Ruckus detection ( PR1267 )  Initial release of MIB based polling ( PR1273 )  Added support for CISCO-BGP4-MIB ( PR1184 )  Added support for Dell EqualLogic units ( PR1283 , PR1309 )  Added logging of success/ failure for alert transports ( PR1286 )  Updated VyOS detection ( PR1299 )  Added primary serial number detection for Cisco units ( PR1300 )  Added support for specifying MySQL port number in config.php ( PR1302 )  Updated alert subject to use rule name not ID ( PR1310 )  Added macro %macros.sensor ( PR1311 )  Added WebUI support for Pushover ( PR1313 )  Updated path check for Oxidized config ( PR1316 )  Added Multimatic UPS to rfc1628 detection ( PR1317 )  Added timeout for Unix agent ( PR1319 )  Added support for a poller to use more than one poller group ( PR1323 )  Added ability to use Plugins on device overview page ( PR1325 )  Added latency loss/avg/max/min results to DB and Graph ( PR1326 )  Added recording of device down (snmp/icmp) ( PR1326 )  Added debugging output for when invalid SNMPv3 options used ( PR1331 )  Added load and state output to device overview page ( PR1333 )  Added load sensors to RFC1628 Devices ( PR1336 )  Added support for WebPower Pro II UPS Cards ( PR1338 )  No longer rewrite server-status in .htaccess ( PR1339 )  Added docs for setting up Service extensions ( PR1354 )  Added additional info from pfsense devices ( PR1356 )", 
            "title": "Improvements"
        }, 
        {
            "location": "/General/Changelog/#may-2015", 
            "text": "", 
            "title": "May 2015"
        }, 
        {
            "location": "/General/Changelog/#bug-fixes_15", 
            "text": "Updated nested addHosts to use variables passed ( PR889 )  Fixed map drawing issue ( PR907 )  Fixed sensors issue where APC load sensors overwrote current ( PR912 )  Fixed devices location filtering ( PR917 ,  PR921 )  Minor fix to rrdcached_dir handling ( PR940 )  Now set defaults for AddHost on XDP discovery ( PR941 )  Fix web installer to generate config correctly if possible ( PR954 )  Fix inverse option for graphs ( PR955 )  Fix ifAlias parsing ( PR960 )  Rewrote rrdtool_escape to fix graph formatting issues ( PR961 ,  PR965 )  Updated ports check to include ifAdminStatus ( PR962 )  Fixed custom sensors high / low being overwritten on discovery ( PR977 )  Fixed APC powerbar phase limit discovery ( PR981 )  Fix for 4 digit cpu% for Datacom ( PR984 )  Fix SQL query for restricted users in /devices/ ( PR990 )  Fix for post-formatting time-macros ( PR1006 )  Honour disabling alerts for hosts ( PR1051 )  Make OSPF and ARP discovery independent xDP ( PR1053 )  Fixed ospf_nbrs lookup to use device_id ( PR1088 )  Removed trailing / from some urls ( PR1089  /  PR1100 )  Fix to device search for Device type and location ( PR1101 )  Stop non-device boxes on overview appearing when device is down ( PR1106 )  Fixed nfsen directory checks ( PR1123 )  Removed lower limit for sensor graphs so negative values show ( PR1124 )  Added fallback for poller_group if empty when adding devices ( PR1126 )  Fixed processor graphs tooltips ( PR1127 )  Fixed /poll-log/ count ( PR1130 )  Fixed ARP search graph type reference ( PR1131 )  Fixed showing state=X in device list ( PR1144 )  Removed ability for demo user to delete users ( PR1151 )  Fixed user / port perms for top X front page boxes ( PR1156 )  Fixed truncating UTF-8 strings ( PR1166 )  Fixed attaching templates due to JS issue ( PR1167 )", 
            "title": "Bug fixes"
        }, 
        {
            "location": "/General/Changelog/#improvements_15", 
            "text": "Added loading bar to top nav ( PR893 )  Added load and current for APC units ( PR888 )  Improved web installer ( PR887 )  Updated alerts status box ( PR875 )  Updated syslog page ( PR862 )  Added temperature polling for IBM Flexsystem ( PR894 )  Updated typeahead libraries and relevant forms ( PR882 )  Added docs showing configuration options and how to use them ( PR910 )  Added docs on discovery / poller and how to debug ( PR911 )  Updated docs for MySQL / Nginx / Bind use in Unix agent ( PR916 )  Update development docs ( PR919 )  Updated install docs to advise about whitespace in config.php ( PR920 )  Added docs on authentication modules ( PR922 )  Added support for Oxidized config archival ( PR927 )  Added API to feed devices to Oxidized ( PR928 )  Added support for per OS bad_iftype, bad_if and bad_if_regexp ( PR930 )  Enable alerting on tables with relative / indirect glues ( PR932 )  Added bills support in rulesuggest and alert system ( PR934 )  Added detection for Sentry Smart CDU ( PR938 )  Added basic detection for Netgear devices ( PR942 )  addhost.php now uses distributed_poller_group config if set ( PR944 )  Added port rewrite function ( PR946 )  Added basic detection for Ubiquiti Edgeswitch ( PR947 )  Added support for retrieving email address from LDAP ( PR949 )  Updated JunOS logo ( PR952 )  Add aggregates on multi_bits_separate graphs ( PR956 )  Fix port name issue for recent snmp versions on Linux ( PR957 )  Added support for quick access to devices via url ( PR958 )  Added work around for PHP creating zombie processes on certain distros ( PR959 )  Added detection support for NetApp + disks + temperature ( PR967 ,  PR971 )  Define defaults for graphs ( PR968 )  Added docs for migrating from Observium ( PR974 )  Added iLo temperature support ( PR982 )  Added disk temperature for Synology DSM ( PR986 )  Added ICMP, TLS/SSL and Domain expiry service checks ( PR987 ,  PR1040 ,  PR1041 )  Added IPMI detection ( PR988 )  Mikrotik MIB update ( PR991 )  Set better timeperiod for caching graphs ( PR992 )  Added config option to disable port relationship in ports list ( PR996 )  Added support for custom customer description parse ( PR998 )  Added hardware and MySQL version stats to callback ( PR999 )  Added support for alerting to PagerDuty ( PR1004 )  Now send ack notifications for alerts that are acked ( PR1008 )  Updated contributing docs and added placeholder ( PR1024 ,  PR1025 )  Updated globe.php overview page with updated map support ( PR1029 )  Converted storage page to use Bootgrid ( PR1030 )  Added basic FibreHome detection ( PR1031 )  Show details of alerts in alert log ( PR1043 )  Allow a user-defined windows to add tolerance for alerting ( PR1044 )  Added inlet support for Raritan PX iPDU ( PR1045 )  Updated MIBS for Cisco SB ( PR1058 )  Added error checking for build-base on install ( PR1059 )  Added fan and raid state for Dell OpenManage ( PR1062 )  Updated MIBS for Ruckus ZoneDirectors ( PR1067 )  Added check for ./rename.php ( PR1069 )  Added install instructions to use librenms user ( PR1071 )  Honour sysContact over riding for alerts ( PR1073 )  Added services page for adding/deleting and editing services ( PR1076 )  Added more support for Mikrotik devices ( PR1080 )  Added better detection for Cisco ASA 5585-SSP40 ( PR1082 )  Added CPU dataplane support for JunOS ( PR1086 )  Removed requirement for hostnames on add device ( PR1087 )  Added config option to exclude sysContact from alerts ( PR1093 )  Added config option to regenerate contacts on alerts ( PR1109 )  Added validation tool to help fault find issues with installs ( PR1112 )  Added CPU support for EdgeOS ( PR1114 )  Added ability to customise transit/peering/core descriptions ( PR1125 )  Show ifName in ARP search if devices are set to use this ( PR1133 )  Added FibreHome CPU and Mempool support ( PR1134 )  Added config options for region and resolution on globe map ( PR1137 )  Added RRDCached example docs ( PR1148 )  Updated support for additional NetBotz models ( PR1152 )  Updated /iftype/ page to include speed/circuit/notes ( PR1155 )  Added detection for PowerConnect 55XX devices ( PR1165 )", 
            "title": "Improvements"
        }, 
        {
            "location": "/General/Changelog/#apr-2015", 
            "text": "", 
            "title": "Apr 2015"
        }, 
        {
            "location": "/General/Changelog/#bug-fixes_16", 
            "text": "Fixed ack of worse/better alerts ( PR720 )  Fixed ORIG_PATH_INFO warnings ( PR727 )  Added missing CPU id for Cisco SB ( PR744 )  Changed Processors table name to lower case in processors discovery ( PR751 )  Fixed alerts path issue ( PR756 ,  PR760 )  Suppress further port alerts when interface goes down ( PR745 )  Fixed login so redirects via 303 when POST data sent ( PR775 )  Fixed missing link to errored or ignored ports ( PR787 )  Updated alert log query for performance improvements ( PR783 )  Honour alert_rules.disabled field ( PR784 )  Stop page debug if user not logged in ( PR785 )  Added text filtering for new tables ( PR797 )  Fixed VMWare VM detection + hardware / serial support ( PR799 )  Fix links from /health/processor ( PR810 )  Hide divider if no plugins installed ( PR811 )  Added Nginx fix for using debug option ( PR823 )  Bug fixes for device groups SQL ( PR840 )  Fixed path issue when using rrdcached ( PR839 )  Fixed JS issues when deleting alert maps / poller groups / device groups ( PR846 , PR848 , PR877 )  Fixed links and popover for /health/metric=storage/ ( PR847 )  Fixed lots of user permission issues ( PR855 )  Fixed search ip / arp / mac pages ( PR845 )  Added missing charge icon ( PR878 )", 
            "title": "Bug fixes"
        }, 
        {
            "location": "/General/Changelog/#improvements_16", 
            "text": "New theme support added (light,dark and mono) ( PR682 , PR683 , PR701 )  Tables being converted to Jquery Bootgrid ( PR693 , PR706 , PR716 )  Detect Cisco ASA Hardware and OS Version ( PR708 )  Update LDAP support ( PR707 )  Updated APC powernet MIB ( PR713 )  Update to Foritgate support ( PR709 )  Added support for UBNT AirOS and AirFibre ( PR721 , PR730 , PR731 )  Added support device groups + alerts to be mapped to devices or groups ( PR722 )  Added basic Cambium support ( PR738 )  Added basic F5 support ( PR670 )  Shorten interface names on map ( PR752 )  Added PowerCode support ( PR762 )  Added Autodiscovery via OSPF ( PR772 )  Added visual graph of alert log ( PR777 ,  PR809 )  Added Callback system to send anonymous stats ( PR768 )  More tables converted to use bootgrid ( PR729 ,  PR761 )  New Global Cache to store common queries added ( PR780 )  Added proxy support for submitting stats ( PR791 )  Minor APC Polling change ( PR800 )  Updated to HP switch detection ( PR802 )  Added Datacom basic detection ( PR816 )  Updated Cisco detection ( PR815 )  Added CSV export system + ability to export ports ( PR818 )  Added basic detection for PacketLogic devices ( PR773 )  Added fallback support for IBM switches for Serial / Version ( PR822 )  Added Juniper Inventory support ( PR825 )  Sharpen graphs produced ( PR826 )  Updated map to show device overview graphs and port graphs ( PR826 )  Added hostname to API call for list_alerts ( PR834 )  Added ability to schedule maintenance ( PR835 , PR841 )  Added ability to expand alert triggers for more details ( PR857 )  Added support for XTM/FBX Watchguard devices ( PR849 )  Updated Juniper MIBS and hardware rewrite ( PR838 )  Updated OpenBSD detection ( PR860 )  Added Macro support for alerting system ( PR863 )  Added support for tcp connections on rrdcached ( PR866 )  Added config option to enable / disable mouseover graphs ( PR873 )  General cleanup of files / folders permissions ( PR874 )  Added window size detection for map ( PR884 )  Added text to let users know refresh is disabled ( PR883 )", 
            "title": "Improvements"
        }, 
        {
            "location": "/General/Changelog/#mar-2015", 
            "text": "", 
            "title": "Mar 2015"
        }, 
        {
            "location": "/General/Changelog/#bug-fixes_17", 
            "text": "Updates to alert rules split ( PR550 )  Updated get_graphs() for API to resolve graph names ( PR613 )  Fixed use of REMOTE_ADDR to use X_FORWARDED_FOR if available ( PR620 )  Added yocto support from entPhySensorScale ( PR632 )  Eventlog search fixed ( PR644 )  Added missing OS discovery to default list ( PR660 )  Fixed logging issue when description of a port was removed ( PR673 )  Fixed logging issue when ports changed status ( PR675 )  Shortened interface names for graph display ( PR676 )", 
            "title": "Bug fixes"
        }, 
        {
            "location": "/General/Changelog/#improvements_17", 
            "text": "Visual updates to alert logs ( PR541 )  Added temperature support for APC AC units ( PR545 )  Added ability to pause and resume page refresh ( PR557 )  Added polling support for NXOS ( PR562 )  Added discovery support for 3Com switches ( PR568 )  Updated Comware support ( PR583 )  Added new logo ( PR584 )  Added dynamic removal of device data when removing device ( PR592 )  Updated alerting to use fifo ( PR607 )  Added distributed poller support ( PR609  and  PR610 )  Added PowerConnect 55xx ( PR635 )  Added inventory API endpoint ( PR640 )  Added serial number detection for ASA firewalls ( PR642 )  Added missing MKTree library for inventory support ( PR646 )  Added support for exporting Alert logs to PDF ( PR653 )  Added basic Ubiquiti support ( PR659 )  Numerous docs update ( PR662 ,  PR663 ,  PR677 ,  PR694 )  Added Polling information page ( PR664 )  Added HipChat notification support ( PR669 )  Implemented Jquery Bootgrid support ( PR671 )  Added new map to show xDP discovered links and devices ( PR679  +  PR680 )", 
            "title": "Improvements"
        }, 
        {
            "location": "/General/Changelog/#feb-2015", 
            "text": "", 
            "title": "Feb 2015"
        }, 
        {
            "location": "/General/Changelog/#bug-fixes_18", 
            "text": "Removed header redirect causing page load delays ( PR436 )  Fixed stale alerting data ( PR475 )  Fixed api call for port stats to use device_id / hostname ( PR478 )  Work started on ensuring MySQL strict mode is supported ( PR521 )", 
            "title": "Bug fixes"
        }, 
        {
            "location": "/General/Changelog/#improvements_18", 
            "text": "Added support for Cisco Wireless Controllers ( PR422 )  Updated IRC Bot to support alerting system ( PR434 )  Added new message box to alert when a device hasn't polled for 15 minutes or more ( PR435 )  Added quick links on device list page to quickly access common pages ( PR440 )  Alerting docs updated to cover new features ( PR446 )  IBM NOS Support added ( PR454 )  Added basic Barracuda Loadbalancer support ( PR456 )  Small change to the search results to add port desc / alias ( PR457 )  Added Device sub menu to access devices category directly ( PR465 )  Added basic Ruckus Wireless support ( PR466 )  Added support for a demo user ( PR471 )  Many small visual updates  Added additional support for Cisco SB devices ( PR487 )  Added support to default home page for printing alerts ( PR488 )  Tidied up Alert menubar into sub menu ( PR489 )  Added historical alerts page ( PR495 )  Added battery charge monitoring for ( PR519 )  Added Slack support for alert system ( PR525 )  Added new debug for php / sql option to page footer ( PR484 )", 
            "title": "Improvements"
        }, 
        {
            "location": "/General/Changelog/#jan-2015", 
            "text": "", 
            "title": "Jan 2015"
        }, 
        {
            "location": "/General/Changelog/#bug-fixes_19", 
            "text": "Reverted chmod to make poller.php executable again ( PR394 )  Fixed duplicate port listing ( PR396 )  Fixed create bill from port page ( PR404 )  Fixed autodiscovery to use $config['mydomain'] correctly ( PR423 )  Fixed mute bug for alerts ( PR428 )", 
            "title": "Bug fixes"
        }, 
        {
            "location": "/General/Changelog/#improvements_19", 
            "text": "Updated login page visually ( PR391 )  Added Hikvision support ( PR393 )  Added ability to search for packages using unix agent ( PR395 )  Updated ifAlias support for varying distributions ( PR398 )  Updated visually Global Settings page ( PR401 )  Added missing default nginx graphs ( PR403 )  Updated check_mk_agent to latest git version ( PR409 )  Added support for recording process list with unix agent ( PR410 )  Added support for named/bind9/TinyDNS application using unix agent ( PR413 ,  PR416 )  About page tidied up ( PR414 ,  PR425 )  Updated progress bars to use bootstrap ( PR42 )  Updated install docs to cover CentOS7 ( PR424 )  Alerting system updated with more features ( PR429 ,  PR430 )", 
            "title": "Improvements"
        }, 
        {
            "location": "/General/Changelog/#dec-2014", 
            "text": "", 
            "title": "Dec 2014"
        }, 
        {
            "location": "/General/Changelog/#bug-fixes_20", 
            "text": "Fixed Global Search box bootstrap ( PR357 )  Fixed display issues when calculating CDR in billing system ( PR359 )  Fixed API route order to resolve get_port_graphs working ( PR364 )", 
            "title": "Bug fixes"
        }, 
        {
            "location": "/General/Changelog/#improvements_20", 
            "text": "Added new API route to retrieve list of graphs for a device ( PR355 )  Added new API route to retrieve list of port for a device ( PR356 )  Added new API route to retrieve billing info ( PR360 )  Added alerting system ( PR370 ,  PR369 ,  PR367 )  Added dbSchema version to about page ( PR377 )  Added git log link to about page ( PR378 )  Added Two factor authentication ( PR383 )", 
            "title": "Improvements"
        }, 
        {
            "location": "/General/Changelog/#nov-2014", 
            "text": "", 
            "title": "Nov 2014"
        }, 
        {
            "location": "/General/Changelog/#bug-fixes_21", 
            "text": "Updated Alcatel-Lucent OmniSwitch detection ( PR340 )  Added fix for DLink port detection ( PR347 )  Fixed BGP session count ( PR334 )  Fixed errors with BGP polling and storing data in RRD ( PR346 )", 
            "title": "Bug fixes"
        }, 
        {
            "location": "/General/Changelog/#improvements_21", 
            "text": "Added option to clean old perf_times table entries ( PR343 )  Added nginx+php-fpm instructions ( PR345 )  Added BGP route to API ( PR335 )  Updated check_mk to new version + removed Observium branding ( PR311 )  Updated Edit SNMP settings page for device to only show relevant SNMP options ( PR317 )  Eventlog page now uses paged results ( PR336 )  Added new API route to show peering, transit and core graphs ( PR349 )  Added VyOS and EdgeOS detection ( PR351  /  PR352 )  Documentation style and markdown updates ( PR353 )", 
            "title": "Improvements"
        }, 
        {
            "location": "/General/Changelog/#oct-2014", 
            "text": "", 
            "title": "Oct 2014"
        }, 
        {
            "location": "/General/Changelog/#bug-fixes_22", 
            "text": "Fixed displaying device image in device list ( PR296 )  Fixed placement of popups ( PR297 )  Updated authToken response code in API to 401 ( PR310 )  Removed trailing / from v0 part of API url ( PR312 )  Added correct response code for API call get_vlans ( PR313 )  Updated yearly graphs to fix year variable being passed ( PR316 )  Updated transport list to be generated from $config ( PR318 )  Moved addhost button on add host page as it was hidden ( PR319 )  Added stripslashes to hrdevice page ( PR321 )  Fixed web installer issue due to variable name change ( PR325 )  Updated disabled field in api tokens ( PR327 )  Fixed daily.sh not running from outside install directory (cron) ( PR328 )  Removed --no-edit from daily.php git pull ( PR309 )", 
            "title": "Bug fixes"
        }, 
        {
            "location": "/General/Changelog/#improvements_22", 
            "text": "Added ability to create api tokens ( PR294 )  Added icmp and poller graphs for devices ( PR295 )  Added urldecode/urlencode support for interface names in API ( PR298 )  Added new library to support on screen notifications ( PR300 )  Added authlog purge function and improved efficiency in clearing syslog table ( PR301 )  Updated addhost page to show relevant snmp options ( PR303 )  Added limit $config for front page boxes ( PR305 )  Updated http-auth adding user to check if user already exists ( PR307 )  Added names to all API routes ( PR314 )  Added route to call list of API endpoints ( PR315 )  Added options to $config to specify fping retry and timeout ( PR323 )  Added icmp / snmp to device down alerts for debugging ( PR324 )  Added function to page results for large result pages ( PR333 )", 
            "title": "Improvements"
        }, 
        {
            "location": "/General/Changelog/#sep-2014", 
            "text": "", 
            "title": "Sep 2014"
        }, 
        {
            "location": "/General/Changelog/#bug-fixes_23", 
            "text": "Updated vtpversion check to fix vlan discovery issues ( PR289 )  Fixed mac address change false positives ( PR292 )", 
            "title": "Bug fixes"
        }, 
        {
            "location": "/General/Changelog/#improvements_23", 
            "text": "Hide snmp passwords on edit snmp form ( PR290 )  Updates to API ( PR291 )", 
            "title": "Improvements"
        }, 
        {
            "location": "/General/Changelog/#aug-2014", 
            "text": "", 
            "title": "Aug 2014"
        }, 
        {
            "location": "/General/Changelog/#bug-fixes_24", 
            "text": "Disk % not showing in health view ( PR284 )  Fixed layout issue for ports list ( PR286 )  Removed session regeneration ( PR287 )  Updated edit button on edit user screen ( PR288 )", 
            "title": "Bug fixes"
        }, 
        {
            "location": "/General/Changelog/#improvements_24", 
            "text": "Added email field for add user form ( PR278 )  V0 of API release ( PR282 )", 
            "title": "Improvements"
        }, 
        {
            "location": "/General/Changelog/#jul-2014", 
            "text": "", 
            "title": "Jul 2014"
        }, 
        {
            "location": "/General/Changelog/#bug-fixes_25", 
            "text": "Fixed RRD creation using MAX twice ( PR266 )  Fixed variables leaking in poller run ( PR267 )  Fixed links to health graphs ( PR271 )  Fixed install docs to remove duplicate snmpd on install ( PR276 )", 
            "title": "Bug fixes"
        }, 
        {
            "location": "/General/Changelog/#improvements_25", 
            "text": "Added support for Cisco ASA connection graphs ( PR268 )  Updated delete device page ( PR270 )", 
            "title": "Improvements"
        }, 
        {
            "location": "/General/Changelog/#jun-2014", 
            "text": "", 
            "title": "Jun 2014"
        }, 
        {
            "location": "/General/Changelog/#bug-fixes_26", 
            "text": "Fixed a couple of DB queries ( PR222 )  Fixes to make interface more mobile friendly ( PR227 )  Fixed link to device on overview apps page ( PR228 )  Fixed missing backticks on SQL queries ( PR253  /  PR254 )  Fixed user permissions page ( PR265 )", 
            "title": "Bug fixes"
        }, 
        {
            "location": "/General/Changelog/#improvements_26", 
            "text": "Updated index page ( PR224 )  Updated global search visually ( PR223 )  Added contributors agreement ( PR225 )  Added ability to update health values ( PR226 )  Tidied up search box on devices list page ( PR229 )  Updated port search box and port table list ( PR230 )  Removed some unused javascript libraries ( PR231 )  Updated year and column for vertical status summary ( PR232 )  Tidied up the delete user page ( PR235 )  Added snmp port to $config ( PR237 )  Added documentation for lighttpd ( PR238 )  Updated all device edit pages ( PR239 )  Added IPv6 only host support ( PR241 )  Added public status page ( PR246 )  Added validate_device_id function ( PR257 )  Added auto detect of install location ( PR259 )", 
            "title": "Improvements"
        }, 
        {
            "location": "/General/Changelog/#mar-2014", 
            "text": "", 
            "title": "Mar 2014"
        }, 
        {
            "location": "/General/Changelog/#bug-fixes_27", 
            "text": "Removed link to pdf in billing history ( PR146 )  librenms logs now saved in correct location ( PR163 )  Updated pfsense detection ( PR182 )  Fixed health page mini cpu ( PR195 )  Updated install docs to include php5-json ( PR196 )  Fixed Dlink interface names ( PR200  /  PR203 )  Stop shortening IP in shorthost function ( PR210 )  Fixed status box overlapping ( PR211 )  Fixed top port overlay issue ( PR212 )  Updated docs and daily.sh to update DB schemas ( PR215 )  Updated hardware detection for RouterOS ( PR217 )  Restore _GET variables for logging in ( PR218 )", 
            "title": "Bug fixes"
        }, 
        {
            "location": "/General/Changelog/#improvements_27", 
            "text": "Updated inventory page to use bootstrap ( PR141 )  Updated mac / arp pages to use bootstrap ( PR147 )  Updated devices page to use bootstrap ( PR149 )  Updated delete host page to use bootstrap ( PR151 )  Updated print_error function to use bootstrap ( PR153 )  Updated install docs for Apache 2.3   ( PR161 )  Upgraded PHPMailer ( PR169 )  Added send_mail function using PHPMailer ( PR170 )  Added new and awesome IRC Bot ( PR171 )  Added Gentoo detection and logo ( PR174  /  PR179 )  Added Engenius detection ( PR186 )  Updated edit user to enable editing ( PR187 )  Added EAP600 engenius support ( PR188 )  Added Plugin system ( PR189 )  MySQL calls updated to use dbFacile ( PR190 )  Added support for Dlink devices ( PR193 )  Added Windows 2012 polling support ( PR201 )  Added purge options for syslog / eventlog ( PR204 )  Added BGP to global search box ( PR205 )", 
            "title": "Improvements"
        }, 
        {
            "location": "/General/Changelog/#feb-2014", 
            "text": "", 
            "title": "Feb 2014"
        }, 
        {
            "location": "/General/Changelog/#bug-fixes_28", 
            "text": "Set poller-wrapper.py to be executable ( PR89 )  Fix device/port down boxes ( PR99 )  Ports set to be ignored honoured for threshold alerts ( PR104 )  Added PasswordHash.php to adduser.php ( PR119 )  build-base.php update to run DB updates ( PR128 )", 
            "title": "Bug fixes"
        }, 
        {
            "location": "/General/Changelog/#improvements_28", 
            "text": "Added web based installer ( PR75 )  Updated login page design ( PR78 )  Ability to enable / disable topX boxes ( PR100 )  Added PHPPass support for MySQL auth logins ( PR101 )  Updated to Bootstrap 3.1 ( PR106 )  index.php tidied up ( PR107 )  Updated device overview page design ( PR113 )  Updated print_optionbar* to use bootstrap ( PR115 )  Updated device/port/services box to use bootstrap ( PR117 )  Updated eventlog / syslog to use bootstrap ( PR132  /  PR134 )", 
            "title": "Improvements"
        }, 
        {
            "location": "/General/Changelog/#jan-2014", 
            "text": "", 
            "title": "Jan 2014"
        }, 
        {
            "location": "/General/Changelog/#bug-fixes_29", 
            "text": "Moved location redirect for logout ( PR55 )  Remove debug statements from process_syslog ( PR57 )  Stop print-syslog.inc.php from shortening hostnames ( PR62 )  Moved some variables from defaults.inc.php to definitions.inc.php ( PR66 )  Fixed title being set correctly ( PR73 )  Added documentation to enable billing module ( PR74 )", 
            "title": "Bug fixes"
        }, 
        {
            "location": "/General/Changelog/#improvements_29", 
            "text": "Deleting devices now asks for confirmation ( PR53 )  Added ARP discovered device name and IP to eventlog ( PR54 )  Initial updated design release ( PR59 )  Added ifAlias script ( PR70 )  Added console ui ( PR72 )", 
            "title": "Improvements"
        }, 
        {
            "location": "/General/Changelog/#nov-2013", 
            "text": "", 
            "title": "Nov 2013"
        }, 
        {
            "location": "/General/Changelog/#bug-fixes_30", 
            "text": "Updates to fix arp discovery", 
            "title": "Bug fixes"
        }, 
        {
            "location": "/General/Changelog/#improvements_30", 
            "text": "Added poller-wrapper (f8debf4)  Documentation####Improvements and additions  Added auto update feature  Visual updates  License tidy up started", 
            "title": "Improvements"
        }, 
        {
            "location": "/General/Changelog/#oct-2013", 
            "text": "Initial release", 
            "title": "Oct 2013"
        }, 
        {
            "location": "/General/CODE_OF_CONDUCT/", 
            "text": "Our Pledge\n\n\nIn the interest of fostering an open and welcoming environment, we as contributors and maintainers pledge to making participation in our project and our community a harassment-free experience for everyone, regardless of age, body size, disability, ethnicity, gender identity and expression, level of experience, nationality, personal appearance, race, religion, or sexual identity and orientation.\n\n\nOur Standards\n\n\nExamples of behavior that contributes to creating a positive environment include:\n\n\n\n\nUsing welcoming and inclusive language\n\n\nBeing respectful of differing viewpoints and experiences\n\n\nGracefully accepting constructive criticism\n\n\nFocusing on what is best for the community\n\n\nShowing empathy towards other community members\n\n\n\n\nExamples of unacceptable behavior by participants include:\n\n\n\n\nThe use of sexualized language or imagery and unwelcome sexual attention or advances\n\n\nTrolling, insulting/derogatory comments, and personal or political attacks\n\n\nPublic or private harassment\n\n\nPublishing others' private information, such as a physical or electronic address, without explicit permission\n\n\nOther conduct which could reasonably be considered inappropriate in a professional setting\n\n\n\n\nOur Responsibilities\n\n\nProject maintainers are responsible for clarifying the standards of acceptable behavior and are expected to take appropriate and fair corrective action in response to any instances of unacceptable behavior.\n\n\nProject maintainers have the right and responsibility to remove, edit, or reject comments, commits, code, wiki edits, issues, and other contributions that are not aligned to this Code of Conduct, or to ban temporarily or permanently any contributor for other behaviors that they deem inappropriate, threatening, offensive, or harmful.\n\n\nScope\n\n\nThis Code of Conduct applies both within project spaces and in public spaces when an individual is representing the project or its community. Examples of representing a project or community include using an official project e-mail address, posting via an official social media account, or acting as an appointed representative at an online or offline event. Representation of a project may be further defined and clarified by project maintainers.\n\n\nEnforcement\n\n\nInstances of abusive, harassing, or otherwise unacceptable behavior may be reported by contacting the project team at team@librenms.org. The project team will review and investigate all complaints, and will respond in a way that it deems appropriate to the circumstances. The project team is obligated to maintain confidentiality with regard to the reporter of an incident. Further details of specific enforcement policies may be posted separately.\n\n\nProject maintainers who do not follow or enforce the Code of Conduct in good faith may face temporary or permanent repercussions as determined by other members of the project's leadership.\n\n\nAttribution\n\n\nThis Code of Conduct is adapted from the \nContributor Covenant\n, version 1.4, available at \nhttp://contributor-covenant.org/version/1/4", 
            "title": "Code of Conduct"
        }, 
        {
            "location": "/General/CODE_OF_CONDUCT/#our-pledge", 
            "text": "In the interest of fostering an open and welcoming environment, we as contributors and maintainers pledge to making participation in our project and our community a harassment-free experience for everyone, regardless of age, body size, disability, ethnicity, gender identity and expression, level of experience, nationality, personal appearance, race, religion, or sexual identity and orientation.", 
            "title": "Our Pledge"
        }, 
        {
            "location": "/General/CODE_OF_CONDUCT/#our-standards", 
            "text": "Examples of behavior that contributes to creating a positive environment include:   Using welcoming and inclusive language  Being respectful of differing viewpoints and experiences  Gracefully accepting constructive criticism  Focusing on what is best for the community  Showing empathy towards other community members   Examples of unacceptable behavior by participants include:   The use of sexualized language or imagery and unwelcome sexual attention or advances  Trolling, insulting/derogatory comments, and personal or political attacks  Public or private harassment  Publishing others' private information, such as a physical or electronic address, without explicit permission  Other conduct which could reasonably be considered inappropriate in a professional setting", 
            "title": "Our Standards"
        }, 
        {
            "location": "/General/CODE_OF_CONDUCT/#our-responsibilities", 
            "text": "Project maintainers are responsible for clarifying the standards of acceptable behavior and are expected to take appropriate and fair corrective action in response to any instances of unacceptable behavior.  Project maintainers have the right and responsibility to remove, edit, or reject comments, commits, code, wiki edits, issues, and other contributions that are not aligned to this Code of Conduct, or to ban temporarily or permanently any contributor for other behaviors that they deem inappropriate, threatening, offensive, or harmful.", 
            "title": "Our Responsibilities"
        }, 
        {
            "location": "/General/CODE_OF_CONDUCT/#scope", 
            "text": "This Code of Conduct applies both within project spaces and in public spaces when an individual is representing the project or its community. Examples of representing a project or community include using an official project e-mail address, posting via an official social media account, or acting as an appointed representative at an online or offline event. Representation of a project may be further defined and clarified by project maintainers.", 
            "title": "Scope"
        }, 
        {
            "location": "/General/CODE_OF_CONDUCT/#enforcement", 
            "text": "Instances of abusive, harassing, or otherwise unacceptable behavior may be reported by contacting the project team at team@librenms.org. The project team will review and investigate all complaints, and will respond in a way that it deems appropriate to the circumstances. The project team is obligated to maintain confidentiality with regard to the reporter of an incident. Further details of specific enforcement policies may be posted separately.  Project maintainers who do not follow or enforce the Code of Conduct in good faith may face temporary or permanent repercussions as determined by other members of the project's leadership.", 
            "title": "Enforcement"
        }, 
        {
            "location": "/General/CODE_OF_CONDUCT/#attribution", 
            "text": "This Code of Conduct is adapted from the  Contributor Covenant , version 1.4, available at  http://contributor-covenant.org/version/1/4", 
            "title": "Attribution"
        }, 
        {
            "location": "/Support/Features/", 
            "text": "Features\n\n\nHere's a brief list of supported features, some might be missing.\nIf you think something is missing, feel free to ask us.\n\n\n\n\nAlerting\n\n\nAPI\n\n\nAuto Updating\n\n\nCustomizable Dashboards\n\n\nDevice Backup (Oxidized, RANCID)\n\n\nDistributed Polling\n\n\nMultiple Authentication Methods (MySQL, LDAP, Active Directory, HTTP)\n\n\nNetFlow, sFlow, IPFIX (NfSen)\n\n\nService monitoring (Nagios Plugins)\n\n\nSyslog (Integrated, Graylog)\n\n\nTraffic Billing (Quota, 95th Percentile)\n\n\nTwo Factor Authentication\n\n\n\n\nVendors\n\n\nHere's a brief list of supported vendors, some might be missing.\nIf you are unsure of whether your device is supported or not, feel free to ask us.\n\n\n\n\n3Com\n\n\nADTRAN\n\n\nAcceidan\n\n\nAerohive\n\n\nAKCP\n\n\nAlcatel-Lucent\n\n\nAllied Telesis\n\n\nAPC\n\n\nApple\n\n\nAreca\n\n\nArista\n\n\nAruba\n\n\nAvaya\n\n\nAvocent\n\n\nAVTECH\n\n\nAxis\n\n\nBarracuda\n\n\nBCM963\n\n\nBDCom\n\n\nBintec\n\n\nBNT\n\n\nBrocade\n\n\nBrother\n\n\nBuffalo\n\n\nCalix\n\n\nCambium\n\n\nCanon\n\n\nCanopy\n\n\nCheck Point\n\n\nCisco\n\n\nCisco Small Business\n\n\nCitrix\n\n\nCometsystem\n\n\nComware\n\n\nD-Link\n\n\nDatacom\n\n\nDeliberant\n\n\nDell\n\n\nDelta Power Solutions\n\n\nDEVELOP\n\n\nEaton\n\n\nEMC\n\n\nEngenius\n\n\nEnterasys\n\n\nEpson\n\n\nExtreme Networks\n\n\nF5\n\n\nFastback Networks\n\n\nFiberHome\n\n\nForce10\n\n\nFortinet\n\n\nFreeBSD\n\n\nGamatronic\n\n\nHikvision\n\n\nHP\n\n\nHuawei\n\n\nHW group\n\n\nIBM\n\n\nInfoblox\n\n\niPoMan\n\n\nITWatchDogs\n\n\nJuniper\n\n\nKonica Minolta\n\n\nKyocera\n\n\nLantronix\n\n\nLenovo\n\n\nLexmark\n\n\nLiebert\n\n\nLigoWave\n\n\nLinux\n\n\nMaipu\n\n\nMellanox\n\n\nMeraki\n\n\nMGE\n\n\nMicrosemi\n\n\nMikrotik\n\n\nMRVLD\n\n\nMultimatic\n\n\nNetApp\n\n\nNetBSD\n\n\nNETGEAR\n\n\nNetMan\n\n\nNetonix\n\n\nNetopia\n\n\nNetVision\n\n\nNetWare\n\n\nNRG\n\n\nOKI\n\n\nOpenBSD\n\n\nOracle\n\n\nPacketShaper\n\n\nPalo Alto Networks\n\n\nPapouch\n\n\nPBN\n\n\nPerle\n\n\nPowercode\n\n\nPowerwalker\n\n\nPrestige\n\n\nProxim\n\n\nProxmox\n\n\nQuanta\n\n\nRadlan\n\n\nRaritan\n\n\nRedback\n\n\nRicoh\n\n\nRiverbed\n\n\nRuckus\n\n\nSAF Tehnika\n\n\nSamsung\n\n\nSiklu\n\n\nSentry3\n\n\nSolaris\n\n\nSonicWALL\n\n\nSpeedTouch\n\n\nSupermicro\n\n\nSymbol\n\n\nTelco Systems\n\n\nTPLink\n\n\nTranzeo\n\n\nTripp Lite\n\n\nUbiquiti\n\n\nViprinet\n\n\nVMware\n\n\nVRP\n\n\nVyatta\n\n\nVyOS\n\n\nWatchguard\n\n\nWebPower\n\n\nWindows\n\n\nXerox\n\n\nXirrus\n\n\nZTE\n\n\nZyXEL", 
            "title": "Features"
        }, 
        {
            "location": "/Support/Features/#features", 
            "text": "Here's a brief list of supported features, some might be missing.\nIf you think something is missing, feel free to ask us.   Alerting  API  Auto Updating  Customizable Dashboards  Device Backup (Oxidized, RANCID)  Distributed Polling  Multiple Authentication Methods (MySQL, LDAP, Active Directory, HTTP)  NetFlow, sFlow, IPFIX (NfSen)  Service monitoring (Nagios Plugins)  Syslog (Integrated, Graylog)  Traffic Billing (Quota, 95th Percentile)  Two Factor Authentication", 
            "title": "Features"
        }, 
        {
            "location": "/Support/Features/#vendors", 
            "text": "Here's a brief list of supported vendors, some might be missing.\nIf you are unsure of whether your device is supported or not, feel free to ask us.   3Com  ADTRAN  Acceidan  Aerohive  AKCP  Alcatel-Lucent  Allied Telesis  APC  Apple  Areca  Arista  Aruba  Avaya  Avocent  AVTECH  Axis  Barracuda  BCM963  BDCom  Bintec  BNT  Brocade  Brother  Buffalo  Calix  Cambium  Canon  Canopy  Check Point  Cisco  Cisco Small Business  Citrix  Cometsystem  Comware  D-Link  Datacom  Deliberant  Dell  Delta Power Solutions  DEVELOP  Eaton  EMC  Engenius  Enterasys  Epson  Extreme Networks  F5  Fastback Networks  FiberHome  Force10  Fortinet  FreeBSD  Gamatronic  Hikvision  HP  Huawei  HW group  IBM  Infoblox  iPoMan  ITWatchDogs  Juniper  Konica Minolta  Kyocera  Lantronix  Lenovo  Lexmark  Liebert  LigoWave  Linux  Maipu  Mellanox  Meraki  MGE  Microsemi  Mikrotik  MRVLD  Multimatic  NetApp  NetBSD  NETGEAR  NetMan  Netonix  Netopia  NetVision  NetWare  NRG  OKI  OpenBSD  Oracle  PacketShaper  Palo Alto Networks  Papouch  PBN  Perle  Powercode  Powerwalker  Prestige  Proxim  Proxmox  Quanta  Radlan  Raritan  Redback  Ricoh  Riverbed  Ruckus  SAF Tehnika  Samsung  Siklu  Sentry3  Solaris  SonicWALL  SpeedTouch  Supermicro  Symbol  Telco Systems  TPLink  Tranzeo  Tripp Lite  Ubiquiti  Viprinet  VMware  VRP  Vyatta  VyOS  Watchguard  WebPower  Windows  Xerox  Xirrus  ZTE  ZyXEL", 
            "title": "Vendors"
        }, 
        {
            "location": "/General/Welcome-to-Observium-users/", 
            "text": "LibreNMS is a fork of Observium.  The reason for the fork has nothing to do\nwith Observium's \nmove to community vs. paid versions\n.  It is simply\nthat we have different priorities and values to the Observium development\nteam.  We decided to fork (reluctantly) because we like using Observium,\nbut we want to collaborate on a community-based project with like-minded\nIT professionals.  See \nREADME.md\n and the references there for more\ninformation about the kind of community we're trying to promote.\n\n\nLibreNMS was forked from \nthe last GPL-licensed version of Observium\n.\n\n\nThanks to one of our users, Dan Brown, who has written a \nmigration script\n, you can easily move your Observium install over to LibreNMS. This also takes care of moving from one CPU architecture to another. Give it a try :)\n\n\nHow LibreNMS will be different from Observium:\n\n\n\n\nWe will have an inclusive community, where it's OK to ask stupid\n  questions, and OK to ask for things that aren't on the roadmap.  If you'd\n  like to see something added, add or comment on the relevant issue in our\n  \nCommunity forum\n.\n\n\nDevelopment decisions will be community-driven.  We want to make software\n  that fulfills its users' needs. \n\n\nThere are no plans for a paid version, and we don't anticipate this ever\n  changing.\n\n\nThere are no current plans for paid support, but this may be added later\n  if there is sufficient demand.\n\n\nWe use git for version control and GitHub for hosting to make it as easy\n  and painless as possible to create forked or private versions.\n\n\n\n\nReasons why you might want to use Observium instead of LibreNMS:\n\n\n\n\nYou have a financial investment in Observium and aren't concerned about\n  community contributions.\n\n\nYou don't like the \nGNU General Public License, version 3\n or the\n  \nphilosophy of Free Software/copyleft\n in general.\n\n\n\n\nReasons why you might want to use LibreNMS instead of Observium:\n\n\n\n\nYou want to work with others on the project, knowing that \nyour\n  investment of time and effort will not be wasted\n.\n\n\nYou want to add and experiment with features that are not a priority for\n  the Observium developers.  See \nCONTRIBUTING\n for more details.\n\n\nYou want to make use of the additional features LibreNMS can offer.", 
            "title": "Welcome to Observium users"
        }, 
        {
            "location": "/Installation/", 
            "text": "Installing LibreNMS\n\n\nImages\n\n\nWe have some pre-built VirtualBox images you can use to get started. Please note that these images are pre-built for VirtualBox, hence they might not work with other hypervisors without converting them:\n\n\nUbuntu 16.04\n\n\nCentOS 7\n\n\nManually\n\n\nIf you want to install manually then we have some documentation which should make it easy.\n\n\nPlease note the minimum supported PHP version is 5.6.4\n\n\nUbuntu 16.04 Apache\n\n\nUbuntu 16.04 Nginx\n\n\nRHEL / CentOS 7 Apache\n\n\nRHEL / CentOS 7 Nginx\n\n\nOld Install Docs\n\n\nIf the above are missing or incomplete then you can try our old docs below.\n\n\nDebian/Ubuntu\n\n\nRHEL/CentOS\n\n\nDebian/Ubuntu Lighttpd\n\n\nDebian/Ubuntu Nginx", 
            "title": "Installing LibreNMS"
        }, 
        {
            "location": "/Installation/#installing-librenms", 
            "text": "", 
            "title": "Installing LibreNMS"
        }, 
        {
            "location": "/Installation/#images", 
            "text": "We have some pre-built VirtualBox images you can use to get started. Please note that these images are pre-built for VirtualBox, hence they might not work with other hypervisors without converting them:  Ubuntu 16.04  CentOS 7", 
            "title": "Images"
        }, 
        {
            "location": "/Installation/#manually", 
            "text": "If you want to install manually then we have some documentation which should make it easy.  Please note the minimum supported PHP version is 5.6.4  Ubuntu 16.04 Apache  Ubuntu 16.04 Nginx  RHEL / CentOS 7 Apache  RHEL / CentOS 7 Nginx", 
            "title": "Manually"
        }, 
        {
            "location": "/Installation/#old-install-docs", 
            "text": "If the above are missing or incomplete then you can try our old docs below.  Debian/Ubuntu  RHEL/CentOS  Debian/Ubuntu Lighttpd  Debian/Ubuntu Nginx", 
            "title": "Old Install Docs"
        }, 
        {
            "location": "/Installation/Ubuntu-image/", 
            "text": "NOTE: We highly advise that you change all passwords on this image when you deploy it!!\n\n\nNOTE: Read the above note again!\n\n\n\n\nWe have available for download a pre-built image based on Ubuntu 16.04 LTS. Details of the image are below:\n\n\nThe image is built with VirtualBox, a vmdk is provided along with an ova which was exported using OFV 1.0 version. \nThese should be supported in VMWare Fusion, Workstation, Player and VirtualBox.\n\n\n\n\nNOTE: It's highly recommended that you update by doing the following. \n\n\n\n\ncd /opt/librenms\n./daily.sh\n\n\n\n\n\n\nAny issues and or help with these images should be reported via \nCommunity Fourm\n or our \nDiscord server\n\n\n\n\nSetup\n\n\n\n\nUK Keyboard\n\n\nEtc/UTC Timezone\n\n\nLVM for disk setup\n\n\n4 Poller Wrapper threads\n\n\n\n\nSoftware\n\n\n\n\nPHP 7\n\n\nMariaDB\n\n\nSyslog-ng\n\n\n\n\nFeatures\n\n\n\n\nOxidized install but not configured\n\n\nWeathermap plugin enabled\n\n\nBilling enabled\n\n\nRRDCached enabled\n\n\nService checks enabled\n\n\nSyslog enabled\n\n\n\n\nDownload\n\n\nOVA Image\n - 1.6G\n\n\n\n\n\n\nmd5sum: 18c13c521aa5a6f5e96be2641324a626\n\n\n\n\n\n\nsha256sum: 78c09dcd441633ea633118fbc51090e032257752b1f0698fcd084b2b025b6343\n\n\n\n\n\n\nVMDK Image\n - 4.0G\n\n\n\n\n\n\nmd5sum: fc072de8ee6c95ccee1a7a4cd8d08f4c\n\n\n\n\n\n\nsha256sum: 36a2252a6f6f7a3a8d7b5e2fda00eb7949a8d9d1fb637a440773aac5ebf838f3\n\n\n\n\n\n\nCredentials\n\n\n\n\nPlease note the second character of the SSH password is a CAPITAL EYE\n\n\n\n\n\n\nSSH\n\n\nusername: librenms\n\n\npassword: \nCIne3fwdfds\n\n\n\n\n\n\n\n\n\n\nPlease note the second character of the SSH password is a CAPITAL EYE\n\n\n\n\n\n\n\n\nMySQL/MariaDB\n\n\n\n\nusername: root\n\n\n\n\npassword: \nNIfceu3fqfd\n\n\n\n\n\n\nusername: librenms\n\n\n\n\npassword: \nD42nf23rewD\n\n\n\n\n\n\n\n\nWebUI\n\n\n\n\nusername: librenms\n\n\npassword: \nD32fwefwef", 
            "title": "Ubuntu VM Image"
        }, 
        {
            "location": "/Installation/Ubuntu-image/#setup", 
            "text": "UK Keyboard  Etc/UTC Timezone  LVM for disk setup  4 Poller Wrapper threads", 
            "title": "Setup"
        }, 
        {
            "location": "/Installation/Ubuntu-image/#software", 
            "text": "PHP 7  MariaDB  Syslog-ng", 
            "title": "Software"
        }, 
        {
            "location": "/Installation/Ubuntu-image/#features", 
            "text": "Oxidized install but not configured  Weathermap plugin enabled  Billing enabled  RRDCached enabled  Service checks enabled  Syslog enabled", 
            "title": "Features"
        }, 
        {
            "location": "/Installation/Ubuntu-image/#download", 
            "text": "OVA Image  - 1.6G    md5sum: 18c13c521aa5a6f5e96be2641324a626    sha256sum: 78c09dcd441633ea633118fbc51090e032257752b1f0698fcd084b2b025b6343    VMDK Image  - 4.0G    md5sum: fc072de8ee6c95ccee1a7a4cd8d08f4c    sha256sum: 36a2252a6f6f7a3a8d7b5e2fda00eb7949a8d9d1fb637a440773aac5ebf838f3", 
            "title": "Download"
        }, 
        {
            "location": "/Installation/Ubuntu-image/#credentials", 
            "text": "Please note the second character of the SSH password is a CAPITAL EYE    SSH  username: librenms  password:  CIne3fwdfds      Please note the second character of the SSH password is a CAPITAL EYE     MySQL/MariaDB   username: root   password:  NIfceu3fqfd    username: librenms   password:  D42nf23rewD     WebUI   username: librenms  password:  D32fwefwef", 
            "title": "Credentials"
        }, 
        {
            "location": "/Installation/CentOS-image/", 
            "text": "NOTE: We highly advice that you change all passwords on this image when you deploy it!!\n\n\nNOTE: Read the above note again!\n\n\n\n\nWe have available for download a pre-built image based on CentOS 7. Details of the image are below:\n\n\nThe image is built with VirtualBox, a vmdk is provided along with an ova which was exported using OFV 1.0 version. \nThese should be supported in VMWare Fusion, Workstation, Player and VirtualBox.\n\n\n\n\nNOTE: It's highly recommended that you update by doing the following. \n\n\n\n\ncd /opt/librenms\n./daily.sh\n\n\n\n\n\n\nAny issues and or help with these images should be reported via \nCommunity Fourm\n or our \nDiscord server\n\n\n\n\nSetup\n\n\n\n\nUK Keyboard\n\n\nEtc/UTC Timezone\n\n\n4 Poller Wrapper threads\n\n\n\n\nSoftware\n\n\n\n\nPHP 7\n\n\nMariaDB\n\n\nSyslog-ng\n\n\n\n\nFeatures\n\n\n\n\nOxidized install but not configured\n\n\nWeathermap plugin enabled\n\n\nBilling enabled\n\n\nRRDCached enabled\n\n\nService checks enabled\n\n\nSyslog enabled\n\n\n\n\nDownload\n\n\nOVA Image\n - 1.1G\n\n\n\n\n\n\nmd5sum: 53f0c06c26255e859144e471ae85eedc\n\n\n\n\n\n\nsha256sum: 9d902e8452ec8f88ab96180b46113ab5c8ef9213b16cebbbf3f88df37670ebd4\n\n\n\n\n\n\nVMDK Image\n - 2.8G\n\n\n\n\n\n\nmd5sum: 8c54cb929ba9e16bc9a985a292b8f9d9\n\n\n\n\n\n\nsha256sum: 944d1164f0664334fdb50e425049819a18da5568c56b6b49681a9ebe13ae9489\n\n\n\n\n\n\nCredentials\n\n\n\n\nPlease note the second character of the SSH password is a CAPITAL EYE\n\n\n\n\n\n\nSSH\n\n\nusername: librenms\n\n\npassword: \nCIne3fwdfds\n\n\n\n\n\n\n\n\n\n\nPlease note the second character of the SSH password is a CAPITAL EYE\n\n\n\n\n\n\n\n\nMySQL/MariaDB\n\n\n\n\nusername: root\n\n\n\n\npassword: \nNIfceu3fqfd\n\n\n\n\n\n\nusername: librenms\n\n\n\n\npassword: \nD42nf23rewD\n\n\n\n\n\n\n\n\nWebUI\n\n\n\n\nusername: librenms\n\n\npassword: \nD32fwefwef", 
            "title": "CentOS VM Image"
        }, 
        {
            "location": "/Installation/CentOS-image/#setup", 
            "text": "UK Keyboard  Etc/UTC Timezone  4 Poller Wrapper threads", 
            "title": "Setup"
        }, 
        {
            "location": "/Installation/CentOS-image/#software", 
            "text": "PHP 7  MariaDB  Syslog-ng", 
            "title": "Software"
        }, 
        {
            "location": "/Installation/CentOS-image/#features", 
            "text": "Oxidized install but not configured  Weathermap plugin enabled  Billing enabled  RRDCached enabled  Service checks enabled  Syslog enabled", 
            "title": "Features"
        }, 
        {
            "location": "/Installation/CentOS-image/#download", 
            "text": "OVA Image  - 1.1G    md5sum: 53f0c06c26255e859144e471ae85eedc    sha256sum: 9d902e8452ec8f88ab96180b46113ab5c8ef9213b16cebbbf3f88df37670ebd4    VMDK Image  - 2.8G    md5sum: 8c54cb929ba9e16bc9a985a292b8f9d9    sha256sum: 944d1164f0664334fdb50e425049819a18da5568c56b6b49681a9ebe13ae9489", 
            "title": "Download"
        }, 
        {
            "location": "/Installation/CentOS-image/#credentials", 
            "text": "Please note the second character of the SSH password is a CAPITAL EYE    SSH  username: librenms  password:  CIne3fwdfds      Please note the second character of the SSH password is a CAPITAL EYE     MySQL/MariaDB   username: root   password:  NIfceu3fqfd    username: librenms   password:  D42nf23rewD     WebUI   username: librenms  password:  D32fwefwef", 
            "title": "Credentials"
        }, 
        {
            "location": "/Installation/Installation-Ubuntu-1604-Nginx/", 
            "text": "NOTE: These instructions assume you are the \nroot\n user.  If you are not, prepend \nsudo\n to the shell commands (the ones that aren't at \nmysql\n prompts) or temporarily become a user with root privileges with \nsudo -s\n or \nsudo -i\n.\n\n\n\n\nPlease note the minimum supported PHP version is 5.6.4\n\n\nInstall Required Packages\n\n\napt install composer fping git graphviz imagemagick mariadb-client mariadb-server mtr-tiny nginx-full nmap php7.0-cli php7.0-curl php7.0-fpm php7.0-gd php7.0-mcrypt php7.0-mysql php7.0-snmp php7.0-xml php7.0-zip python-memcache python-mysqldb rrdtool snmp snmpd whois\n\n\n\nAdd librenms user\n\n\nuseradd librenms -d /opt/librenms -M -r\nusermod -a -G librenms www-data\n\n\n\nInstall LibreNMS\n\n\ncd /opt\ngit clone https://github.com/librenms/librenms.git librenms\n\n\n\nDB Server\n\n\nConfigure MySQL\n\n\nsystemctl restart mysql\nmysql -uroot -p\n\n\n\n\n\nNOTE: Please change the 'password' below to something secure.\n\n\n\n\nCREATE DATABASE librenms CHARACTER SET utf8 COLLATE utf8_unicode_ci;\nCREATE USER 'librenms'@'localhost' IDENTIFIED BY 'password';\nGRANT ALL PRIVILEGES ON librenms.* TO 'librenms'@'localhost';\nFLUSH PRIVILEGES;\nexit\n\n\n\n\nvim /etc/mysql/mariadb.conf.d/50-server.cnf\n\n\n\n\n\nNOTE: Whilst we are working on ensuring LibreNMS is compatible with MySQL strict mode, for now, please disable this after mysql is installed.\n\n\n\n\nWithin the \n[mysqld]\n section please add:\n\n\ninnodb_file_per_table=1\nsql-mode=\n\nlower_case_table_names=0\n\n\n\n\nsystemctl restart mysql\n\n\n\nWeb Server\n\n\nConfigure and Start PHP-FPM\n\n\nEnsure date.timezone is set in php.ini to your preferred time zone.  See http://php.net/manual/en/timezones.php for a list of supported timezones.  Valid examples are: \"America/New_York\", \"Australia/Brisbane\", \"Etc/UTC\".\n\n\nvim /etc/php/7.0/fpm/php.ini\nvim /etc/php/7.0/cli/php.ini\n\nphpenmod mcrypt\nsystemctl restart php7.0-fpm\n\n\n\nConfigure NGINX\n\n\nvim /etc/nginx/conf.d/librenms.conf\n\n\n\nAdd the following config, edit \nserver_name\n as required:\n\n\nserver {\n listen      80;\n server_name librenms.example.com;\n root        /opt/librenms/html;\n index       index.php;\n\n charset utf-8;\n gzip on;\n gzip_types text/css application/javascript text/javascript application/x-javascript image/svg+xml text/plain text/xsd text/xsl text/xml image/x-icon;\n location / {\n  try_files $uri $uri/ /index.php?$query_string;\n }\n location /api/v0 {\n  try_files $uri $uri/ /api_v0.php?$query_string;\n }\n location ~ \\.php {\n  include fastcgi.conf;\n  fastcgi_split_path_info ^(.+\\.php)(/.+)$;\n  fastcgi_pass unix:/var/run/php/php7.0-fpm.sock;\n }\n location ~ /\\.ht {\n  deny all;\n }\n}\n\n\n\n\nrm /etc/nginx/sites-enabled/default\nsystemctl restart nginx\n\n\n\nConfigure snmpd\n\n\ncp /opt/librenms/snmpd.conf.example /etc/snmp/snmpd.conf\nvim /etc/snmp/snmpd.conf\n\n\n\nEdit the text which says \nRANDOMSTRINGGOESHERE\n and set your own community string.\n\n\ncurl -o /usr/bin/distro https://raw.githubusercontent.com/librenms/librenms-agent/master/snmp/distro\nchmod +x /usr/bin/distro\nsystemctl restart snmpd\n\n\n\nCron job\n\n\ncp /opt/librenms/librenms.nonroot.cron /etc/cron.d/librenms\n\n\n\nCopy logrotate config\n\n\nLibreNMS keeps logs in \n/opt/librenms/logs\n. Over time these can become large and be rotated out.  To rotate out the old logs you can use the provided logrotate config file:\n\n\ncp /opt/librenms/misc/librenms.logrotate /etc/logrotate.d/librenms\n\n\n\nSet permissions\n\n\nchown -R librenms:librenms /opt/librenms\nsetfacl -d -m g::rwx /opt/librenms/rrd /opt/librenms/logs\nsetfacl -R -m g::rwx /opt/librenms/rrd /opt/librenms/logs\n\n\n\nWeb installer\n\n\nNow head to the web installer and follow the on-screen instructions.\n\n\nhttp://librenms.example.com/install.php\n\n\n\nFinal steps\n\n\nThat's it!  You now should be able to log in to http://librenms.example.com/.  Please note that we have not covered HTTPS setup in this example, so your LibreNMS install is not secure by default.  Please do not expose it to the public Internet unless you have configured HTTPS and taken appropriate web server hardening steps.\n\n\nAdd the first device\n\n\nWe now suggest that you add localhost as your first device from within the WebUI.\n\n\nTroubleshooting\n\n\nIf you ever have issues with your install, run validate.php as root in the librenms directory:\n\n\ncd /opt/librenms\n./validate.php\n\n\n\nThere are various options for getting help listed on the LibreNMS web site: https://www.librenms.org/#support\n\n\nWhat next?\n\n\nNow that you've installed LibreNMS, we'd suggest that you have a read of a few other docs to get you going:\n\n\n\n\nPerformance tuning\n\n\nAlerting\n\n\nDevice Groups\n\n\nAuto discovery\n\n\n\n\nClosing\n\n\nWe hope you enjoy using LibreNMS. If you do, it would be great if you would consider opting into the stats system we have, please see \nthis page\n on what it is and how to enable it.\n\n\nIf you would like to help make LibreNMS better there are \nmany ways to help\n. You can also \nback LibreNMS on Open Collective\n.", 
            "title": "Ubuntu 16.04 (Nginx)"
        }, 
        {
            "location": "/Installation/Installation-Ubuntu-1604-Nginx/#install-required-packages", 
            "text": "apt install composer fping git graphviz imagemagick mariadb-client mariadb-server mtr-tiny nginx-full nmap php7.0-cli php7.0-curl php7.0-fpm php7.0-gd php7.0-mcrypt php7.0-mysql php7.0-snmp php7.0-xml php7.0-zip python-memcache python-mysqldb rrdtool snmp snmpd whois", 
            "title": "Install Required Packages"
        }, 
        {
            "location": "/Installation/Installation-Ubuntu-1604-Nginx/#add-librenms-user", 
            "text": "useradd librenms -d /opt/librenms -M -r\nusermod -a -G librenms www-data", 
            "title": "Add librenms user"
        }, 
        {
            "location": "/Installation/Installation-Ubuntu-1604-Nginx/#install-librenms", 
            "text": "cd /opt\ngit clone https://github.com/librenms/librenms.git librenms", 
            "title": "Install LibreNMS"
        }, 
        {
            "location": "/Installation/Installation-Ubuntu-1604-Nginx/#db-server", 
            "text": "", 
            "title": "DB Server"
        }, 
        {
            "location": "/Installation/Installation-Ubuntu-1604-Nginx/#configure-mysql", 
            "text": "systemctl restart mysql\nmysql -uroot -p   NOTE: Please change the 'password' below to something secure.   CREATE DATABASE librenms CHARACTER SET utf8 COLLATE utf8_unicode_ci;\nCREATE USER 'librenms'@'localhost' IDENTIFIED BY 'password';\nGRANT ALL PRIVILEGES ON librenms.* TO 'librenms'@'localhost';\nFLUSH PRIVILEGES;\nexit  vim /etc/mysql/mariadb.conf.d/50-server.cnf   NOTE: Whilst we are working on ensuring LibreNMS is compatible with MySQL strict mode, for now, please disable this after mysql is installed.   Within the  [mysqld]  section please add:  innodb_file_per_table=1\nsql-mode= \nlower_case_table_names=0  systemctl restart mysql", 
            "title": "Configure MySQL"
        }, 
        {
            "location": "/Installation/Installation-Ubuntu-1604-Nginx/#web-server", 
            "text": "", 
            "title": "Web Server"
        }, 
        {
            "location": "/Installation/Installation-Ubuntu-1604-Nginx/#configure-and-start-php-fpm", 
            "text": "Ensure date.timezone is set in php.ini to your preferred time zone.  See http://php.net/manual/en/timezones.php for a list of supported timezones.  Valid examples are: \"America/New_York\", \"Australia/Brisbane\", \"Etc/UTC\".  vim /etc/php/7.0/fpm/php.ini\nvim /etc/php/7.0/cli/php.ini\n\nphpenmod mcrypt\nsystemctl restart php7.0-fpm", 
            "title": "Configure and Start PHP-FPM"
        }, 
        {
            "location": "/Installation/Installation-Ubuntu-1604-Nginx/#configure-nginx", 
            "text": "vim /etc/nginx/conf.d/librenms.conf  Add the following config, edit  server_name  as required:  server {\n listen      80;\n server_name librenms.example.com;\n root        /opt/librenms/html;\n index       index.php;\n\n charset utf-8;\n gzip on;\n gzip_types text/css application/javascript text/javascript application/x-javascript image/svg+xml text/plain text/xsd text/xsl text/xml image/x-icon;\n location / {\n  try_files $uri $uri/ /index.php?$query_string;\n }\n location /api/v0 {\n  try_files $uri $uri/ /api_v0.php?$query_string;\n }\n location ~ \\.php {\n  include fastcgi.conf;\n  fastcgi_split_path_info ^(.+\\.php)(/.+)$;\n  fastcgi_pass unix:/var/run/php/php7.0-fpm.sock;\n }\n location ~ /\\.ht {\n  deny all;\n }\n}  rm /etc/nginx/sites-enabled/default\nsystemctl restart nginx", 
            "title": "Configure NGINX"
        }, 
        {
            "location": "/Installation/Installation-Ubuntu-1604-Nginx/#configure-snmpd", 
            "text": "cp /opt/librenms/snmpd.conf.example /etc/snmp/snmpd.conf\nvim /etc/snmp/snmpd.conf  Edit the text which says  RANDOMSTRINGGOESHERE  and set your own community string.  curl -o /usr/bin/distro https://raw.githubusercontent.com/librenms/librenms-agent/master/snmp/distro\nchmod +x /usr/bin/distro\nsystemctl restart snmpd", 
            "title": "Configure snmpd"
        }, 
        {
            "location": "/Installation/Installation-Ubuntu-1604-Nginx/#cron-job", 
            "text": "cp /opt/librenms/librenms.nonroot.cron /etc/cron.d/librenms", 
            "title": "Cron job"
        }, 
        {
            "location": "/Installation/Installation-Ubuntu-1604-Nginx/#copy-logrotate-config", 
            "text": "LibreNMS keeps logs in  /opt/librenms/logs . Over time these can become large and be rotated out.  To rotate out the old logs you can use the provided logrotate config file:  cp /opt/librenms/misc/librenms.logrotate /etc/logrotate.d/librenms", 
            "title": "Copy logrotate config"
        }, 
        {
            "location": "/Installation/Installation-Ubuntu-1604-Nginx/#set-permissions", 
            "text": "chown -R librenms:librenms /opt/librenms\nsetfacl -d -m g::rwx /opt/librenms/rrd /opt/librenms/logs\nsetfacl -R -m g::rwx /opt/librenms/rrd /opt/librenms/logs", 
            "title": "Set permissions"
        }, 
        {
            "location": "/Installation/Installation-Ubuntu-1604-Nginx/#web-installer", 
            "text": "Now head to the web installer and follow the on-screen instructions.  http://librenms.example.com/install.php", 
            "title": "Web installer"
        }, 
        {
            "location": "/Installation/Installation-Ubuntu-1604-Nginx/#final-steps", 
            "text": "That's it!  You now should be able to log in to http://librenms.example.com/.  Please note that we have not covered HTTPS setup in this example, so your LibreNMS install is not secure by default.  Please do not expose it to the public Internet unless you have configured HTTPS and taken appropriate web server hardening steps.", 
            "title": "Final steps"
        }, 
        {
            "location": "/Installation/Installation-Ubuntu-1604-Nginx/#add-the-first-device", 
            "text": "We now suggest that you add localhost as your first device from within the WebUI.", 
            "title": "Add the first device"
        }, 
        {
            "location": "/Installation/Installation-Ubuntu-1604-Nginx/#troubleshooting", 
            "text": "If you ever have issues with your install, run validate.php as root in the librenms directory:  cd /opt/librenms\n./validate.php  There are various options for getting help listed on the LibreNMS web site: https://www.librenms.org/#support", 
            "title": "Troubleshooting"
        }, 
        {
            "location": "/Installation/Installation-Ubuntu-1604-Nginx/#what-next", 
            "text": "Now that you've installed LibreNMS, we'd suggest that you have a read of a few other docs to get you going:   Performance tuning  Alerting  Device Groups  Auto discovery", 
            "title": "What next?"
        }, 
        {
            "location": "/Installation/Installation-Ubuntu-1604-Nginx/#closing", 
            "text": "We hope you enjoy using LibreNMS. If you do, it would be great if you would consider opting into the stats system we have, please see  this page  on what it is and how to enable it.  If you would like to help make LibreNMS better there are  many ways to help . You can also  back LibreNMS on Open Collective .", 
            "title": "Closing"
        }, 
        {
            "location": "/Installation/Installation-Ubuntu-1604-Apache/", 
            "text": "NOTE: These instructions assume you are the \nroot\n user.  If you are not, prepend \nsudo\n to the shell commands (the ones that aren't at \nmysql\n prompts) or temporarily become a user with root privileges with \nsudo -s\n or \nsudo -i\n.\n\n\n\n\nPlease note the minimum supported PHP version is 5.6.4\n\n\nInstall Required Packages\n\n\napt install apache2 composer fping git graphviz imagemagick libapache2-mod-php7.0 mariadb-client mariadb-server mtr-tiny nmap php7.0-cli php7.0-curl php7.0-gd php7.0-json php7.0-mcrypt php7.0-mysql php7.0-snmp php7.0-xml php7.0-zip python-memcache python-mysqldb rrdtool snmp snmpd whois\n\n\n\nAdd librenms user\n\n\nuseradd librenms -d /opt/librenms -M -r\nusermod -a -G librenms www-data\n\n\n\nInstall LibreNMS\n\n\ncd /opt\ngit clone https://github.com/librenms/librenms.git librenms\n\n\n\nDB Server\n\n\nConfigure MySQL\n\n\nsystemctl restart mysql\nmysql -uroot -p\n\n\n\n\n\nNOTE: Please change the 'password' below to something secure.\n\n\n\n\nCREATE DATABASE librenms CHARACTER SET utf8 COLLATE utf8_unicode_ci;\nCREATE USER 'librenms'@'localhost' IDENTIFIED BY 'password';\nGRANT ALL PRIVILEGES ON librenms.* TO 'librenms'@'localhost';\nFLUSH PRIVILEGES;\nexit\n\n\n\n\nvi /etc/mysql/mariadb.conf.d/50-server.cnf\n\n\n\n\n\nNOTE: Whilst we are working on ensuring LibreNMS is compatible with MySQL strict mode, for now, please disable this after mysql is installed.\n\n\n\n\nWithin the \n[mysqld]\n section please add:\n\n\ninnodb_file_per_table=1\nsql-mode=\n\nlower_case_table_names=0\n\n\n\n\nsystemctl restart mysql\n\n\n\nWeb Server\n\n\nConfigure PHP\n\n\nEnsure date.timezone is set in php.ini to your preferred time zone.  See http://php.net/manual/en/timezones.php for a list of supported timezones.  Valid examples are: \"America/New_York\", \"Australia/Brisbane\", \"Etc/UTC\".\n\n\nvi /etc/php/7.0/apache2/php.ini\nvi /etc/php/7.0/cli/php.ini\n\na2enmod php7.0\na2dismod mpm_event\na2enmod mpm_prefork\nphpenmod mcrypt\n\n\n\nConfigure Apache\n\n\nvi /etc/apache2/sites-available/librenms.conf\n\n\n\nAdd the following config, edit \nServerName\n as required:\n\n\nVirtualHost *:80\n\n  DocumentRoot /opt/librenms/html/\n  ServerName  librenms.example.com\n\n  AllowEncodedSlashes NoDecode\n  \nDirectory \n/opt/librenms/html/\n\n    Require all granted\n    AllowOverride All\n    Options FollowSymLinks MultiViews\n  \n/Directory\n\n\n/VirtualHost\n\n\n\n\n\n\n\nNOTE: If this is the only site you are hosting on this server (it should be :)) then you will need to disable the default site.\n\na2dissite 000-default\n\n\n\n\na2ensite librenms.conf\na2enmod rewrite\nsystemctl restart apache2\n\n\n\nConfigure snmpd\n\n\ncp /opt/librenms/snmpd.conf.example /etc/snmp/snmpd.conf\nvi /etc/snmp/snmpd.conf\n\n\n\nEdit the text which says \nRANDOMSTRINGGOESHERE\n and set your own community string.\n\n\ncurl -o /usr/bin/distro https://raw.githubusercontent.com/librenms/librenms-agent/master/snmp/distro\nchmod +x /usr/bin/distro\nsystemctl restart snmpd\n\n\n\nCron job\n\n\ncp /opt/librenms/librenms.nonroot.cron /etc/cron.d/librenms\n\n\n\nCopy logrotate config\n\n\nLibreNMS keeps logs in \n/opt/librenms/logs\n. Over time these can become large and be rotated out.  To rotate out the old logs you can use the provided logrotate config file:\n\n\ncp /opt/librenms/misc/librenms.logrotate /etc/logrotate.d/librenms\n\n\n\nSet permissions\n\n\nchown -R librenms:librenms /opt/librenms\nsetfacl -d -m g::rwx /opt/librenms/rrd /opt/librenms/logs\nsetfacl -R -m g::rwx /opt/librenms/rrd /opt/librenms/logs\n\n\n\nWeb installer\n\n\nNow head to the web installer and follow the on-screen instructions.\n\n\nhttp://librenms.example.com/install.php\n\n\n\nFinal steps\n\n\nThat's it!  You now should be able to log in to http://librenms.example.com/.  Please note that we have not covered HTTPS setup in this example, so your LibreNMS install is not secure by default.  Please do not expose it to the public Internet unless you have configured HTTPS and taken appropriate web server hardening steps.\n\n\nAdd the first device\n\n\nWe now suggest that you add localhost as your first device from within the WebUI.\n\n\nTroubleshooting\n\n\nIf you ever have issues with your install, run validate.php as root in the librenms directory:\n\n\ncd /opt/librenms\n./validate.php\n\n\n\nThere are various options for getting help listed on the LibreNMS web site: https://www.librenms.org/#support\n\n\nWhat next?\n\n\nNow that you've installed LibreNMS, we'd suggest that you have a read of a few other docs to get you going:\n\n\n\n\nPerformance tuning\n\n\nAlerting\n\n\nDevice Groups\n\n\nAuto discovery\n\n\n\n\nClosing\n\n\nWe hope you enjoy using LibreNMS. If you do, it would be great if you would consider opting into the stats system we have, please see \nthis page\n on what it is and how to enable it.\n\n\nIf you would like to help make LibreNMS better there are \nmany ways to help\n. You can also \nback LibreNMS on Open Collective\n.", 
            "title": "Ubuntu 16.04 (Apache)"
        }, 
        {
            "location": "/Installation/Installation-Ubuntu-1604-Apache/#install-required-packages", 
            "text": "apt install apache2 composer fping git graphviz imagemagick libapache2-mod-php7.0 mariadb-client mariadb-server mtr-tiny nmap php7.0-cli php7.0-curl php7.0-gd php7.0-json php7.0-mcrypt php7.0-mysql php7.0-snmp php7.0-xml php7.0-zip python-memcache python-mysqldb rrdtool snmp snmpd whois", 
            "title": "Install Required Packages"
        }, 
        {
            "location": "/Installation/Installation-Ubuntu-1604-Apache/#add-librenms-user", 
            "text": "useradd librenms -d /opt/librenms -M -r\nusermod -a -G librenms www-data", 
            "title": "Add librenms user"
        }, 
        {
            "location": "/Installation/Installation-Ubuntu-1604-Apache/#install-librenms", 
            "text": "cd /opt\ngit clone https://github.com/librenms/librenms.git librenms", 
            "title": "Install LibreNMS"
        }, 
        {
            "location": "/Installation/Installation-Ubuntu-1604-Apache/#db-server", 
            "text": "", 
            "title": "DB Server"
        }, 
        {
            "location": "/Installation/Installation-Ubuntu-1604-Apache/#configure-mysql", 
            "text": "systemctl restart mysql\nmysql -uroot -p   NOTE: Please change the 'password' below to something secure.   CREATE DATABASE librenms CHARACTER SET utf8 COLLATE utf8_unicode_ci;\nCREATE USER 'librenms'@'localhost' IDENTIFIED BY 'password';\nGRANT ALL PRIVILEGES ON librenms.* TO 'librenms'@'localhost';\nFLUSH PRIVILEGES;\nexit  vi /etc/mysql/mariadb.conf.d/50-server.cnf   NOTE: Whilst we are working on ensuring LibreNMS is compatible with MySQL strict mode, for now, please disable this after mysql is installed.   Within the  [mysqld]  section please add:  innodb_file_per_table=1\nsql-mode= \nlower_case_table_names=0  systemctl restart mysql", 
            "title": "Configure MySQL"
        }, 
        {
            "location": "/Installation/Installation-Ubuntu-1604-Apache/#web-server", 
            "text": "", 
            "title": "Web Server"
        }, 
        {
            "location": "/Installation/Installation-Ubuntu-1604-Apache/#configure-php", 
            "text": "Ensure date.timezone is set in php.ini to your preferred time zone.  See http://php.net/manual/en/timezones.php for a list of supported timezones.  Valid examples are: \"America/New_York\", \"Australia/Brisbane\", \"Etc/UTC\".  vi /etc/php/7.0/apache2/php.ini\nvi /etc/php/7.0/cli/php.ini\n\na2enmod php7.0\na2dismod mpm_event\na2enmod mpm_prefork\nphpenmod mcrypt", 
            "title": "Configure PHP"
        }, 
        {
            "location": "/Installation/Installation-Ubuntu-1604-Apache/#configure-apache", 
            "text": "vi /etc/apache2/sites-available/librenms.conf  Add the following config, edit  ServerName  as required:  VirtualHost *:80 \n  DocumentRoot /opt/librenms/html/\n  ServerName  librenms.example.com\n\n  AllowEncodedSlashes NoDecode\n   Directory  /opt/librenms/html/ \n    Require all granted\n    AllowOverride All\n    Options FollowSymLinks MultiViews\n   /Directory  /VirtualHost    NOTE: If this is the only site you are hosting on this server (it should be :)) then you will need to disable the default site. a2dissite 000-default   a2ensite librenms.conf\na2enmod rewrite\nsystemctl restart apache2", 
            "title": "Configure Apache"
        }, 
        {
            "location": "/Installation/Installation-Ubuntu-1604-Apache/#configure-snmpd", 
            "text": "cp /opt/librenms/snmpd.conf.example /etc/snmp/snmpd.conf\nvi /etc/snmp/snmpd.conf  Edit the text which says  RANDOMSTRINGGOESHERE  and set your own community string.  curl -o /usr/bin/distro https://raw.githubusercontent.com/librenms/librenms-agent/master/snmp/distro\nchmod +x /usr/bin/distro\nsystemctl restart snmpd", 
            "title": "Configure snmpd"
        }, 
        {
            "location": "/Installation/Installation-Ubuntu-1604-Apache/#cron-job", 
            "text": "cp /opt/librenms/librenms.nonroot.cron /etc/cron.d/librenms", 
            "title": "Cron job"
        }, 
        {
            "location": "/Installation/Installation-Ubuntu-1604-Apache/#copy-logrotate-config", 
            "text": "LibreNMS keeps logs in  /opt/librenms/logs . Over time these can become large and be rotated out.  To rotate out the old logs you can use the provided logrotate config file:  cp /opt/librenms/misc/librenms.logrotate /etc/logrotate.d/librenms", 
            "title": "Copy logrotate config"
        }, 
        {
            "location": "/Installation/Installation-Ubuntu-1604-Apache/#set-permissions", 
            "text": "chown -R librenms:librenms /opt/librenms\nsetfacl -d -m g::rwx /opt/librenms/rrd /opt/librenms/logs\nsetfacl -R -m g::rwx /opt/librenms/rrd /opt/librenms/logs", 
            "title": "Set permissions"
        }, 
        {
            "location": "/Installation/Installation-Ubuntu-1604-Apache/#web-installer", 
            "text": "Now head to the web installer and follow the on-screen instructions.  http://librenms.example.com/install.php", 
            "title": "Web installer"
        }, 
        {
            "location": "/Installation/Installation-Ubuntu-1604-Apache/#final-steps", 
            "text": "That's it!  You now should be able to log in to http://librenms.example.com/.  Please note that we have not covered HTTPS setup in this example, so your LibreNMS install is not secure by default.  Please do not expose it to the public Internet unless you have configured HTTPS and taken appropriate web server hardening steps.", 
            "title": "Final steps"
        }, 
        {
            "location": "/Installation/Installation-Ubuntu-1604-Apache/#add-the-first-device", 
            "text": "We now suggest that you add localhost as your first device from within the WebUI.", 
            "title": "Add the first device"
        }, 
        {
            "location": "/Installation/Installation-Ubuntu-1604-Apache/#troubleshooting", 
            "text": "If you ever have issues with your install, run validate.php as root in the librenms directory:  cd /opt/librenms\n./validate.php  There are various options for getting help listed on the LibreNMS web site: https://www.librenms.org/#support", 
            "title": "Troubleshooting"
        }, 
        {
            "location": "/Installation/Installation-Ubuntu-1604-Apache/#what-next", 
            "text": "Now that you've installed LibreNMS, we'd suggest that you have a read of a few other docs to get you going:   Performance tuning  Alerting  Device Groups  Auto discovery", 
            "title": "What next?"
        }, 
        {
            "location": "/Installation/Installation-Ubuntu-1604-Apache/#closing", 
            "text": "We hope you enjoy using LibreNMS. If you do, it would be great if you would consider opting into the stats system we have, please see  this page  on what it is and how to enable it.  If you would like to help make LibreNMS better there are  many ways to help . You can also  back LibreNMS on Open Collective .", 
            "title": "Closing"
        }, 
        {
            "location": "/Installation/Installation-CentOS-7-Nginx/", 
            "text": "NOTE: These instructions assume you are the \nroot\n user.  If you are not, prepend \nsudo\n to the shell commands (the ones that aren't at \nmysql\n prompts) or temporarily become a user with root privileges with \nsudo -s\n or \nsudo -i\n.\n\n\n\n\nPlease note the minimum supported PHP version is 5.6.4\n\n\nInstall Required Packages\n\n\nyum install epel-release\n\nrpm -Uvh https://mirror.webtatic.com/yum/el7/webtatic-release.rpm\n\nyum install cronie fping git ImageMagick jwhois mariadb mariadb-server mtr MySQL-python net-snmp net-snmp-utils nginx nmap php71w php71w-cli php71w-common php71w-curl php71w-fpm php71w-gd php71w-mcrypt php71w-mysql php71w-process php71w-snmp php71w-xml php71w-zip python-memcached rrdtool\n\n\n\nAdd librenms user\n\n\nuseradd librenms -d /opt/librenms -M -r\nusermod -a -G librenms nginx\n\n\n\nInstall LibreNMS\n\n\ncd /opt\ngit clone https://github.com/librenms/librenms.git librenms\n\n\n\nDB Server\n\n\nConfigure MySQL\n\n\nsystemctl start mariadb\nmysql -u root\n\n\n\n\n\nNOTE: Please change the 'password' below to something secure.\n\n\n\n\nCREATE DATABASE librenms CHARACTER SET utf8 COLLATE utf8_unicode_ci;\nCREATE USER 'librenms'@'localhost' IDENTIFIED BY 'password';\nGRANT ALL PRIVILEGES ON librenms.* TO 'librenms'@'localhost';\nFLUSH PRIVILEGES;\nexit\n\n\n\n\nvi /etc/my.cnf\n\n\n\n\n\nNOTE: Whilst we are working on ensuring LibreNMS is compatible with MySQL strict mode, for now, please disable this after mysql is installed.\n\n\n\n\nWithin the \n[mysqld]\n section please add:\n\n\ninnodb_file_per_table=1\nsql-mode=\n\nlower_case_table_names=0\n\n\n\n\nsystemctl enable mariadb\nsystemctl restart mariadb\n\n\n\nWeb Server\n\n\nConfigure and Start PHP-FPM\n\n\nEnsure date.timezone is set in php.ini to your preferred time zone.  See http://php.net/manual/en/timezones.php for a list of supported timezones.  Valid examples are: \"America/New_York\", \"Australia/Brisbane\", \"Etc/UTC\".\n\n\nvi /etc/php.ini\n\n\n\nIn \n/etc/php-fpm.d/www.conf\n make these changes:\n\n\nvi /etc/php-fpm.d/www.conf\n\n\n\n;user = apache\nuser = nginx\n\ngroup = apache   ; keep group as apache\n\n;listen = 127.0.0.1:9000\nlisten = /var/run/php-fpm/php7.1-fpm.sock\n\nlisten.owner = nginx\nlisten.group = nginx\nlisten.mode = 0660\n\n\n\n\nsystemctl enable php-fpm\nsystemctl restart php-fpm\n\n\n\nConfigure NGINX\n\n\nvi /etc/nginx/conf.d/librenms.conf\n\n\n\nAdd the following config, edit \nserver_name\n as required:\n\n\nserver {\n listen      80;\n server_name librenms.example.com;\n root        /opt/librenms/html;\n index       index.php;\n\n charset utf-8;\n gzip on;\n gzip_types text/css application/javascript text/javascript application/x-javascript image/svg+xml text/plain text/xsd text/xsl text/xml image/x-icon;\n location / {\n  try_files $uri $uri/ /index.php?$query_string;\n }\n location /api/v0 {\n  try_files $uri $uri/ /api_v0.php?$query_string;\n }\n location ~ \\.php {\n  include fastcgi.conf;\n  fastcgi_split_path_info ^(.+\\.php)(/.+)$;\n  fastcgi_pass unix:/var/run/php-fpm/php7.1-fpm.sock;\n }\n location ~ /\\.ht {\n  deny all;\n }\n}\n\n\n\n\n\n\nNOTE: If this is the only site you are hosting on this server (it should be :)) then you will need to disable the default site.\nDelete the \nserver\n section from \n/etc/nginx/nginx.conf\n\n\n\n\nsystemctl enable nginx\nsystemctl restart nginx\n\n\n\nSELinux\n\n\nInstall the policy tool for SELinux:\n\n\nyum install policycoreutils-python\n\n\n\nConfigure the contexts needed by LibreNMS:\n\n\nsemanage fcontext -a -t httpd_sys_content_t '/opt/librenms/logs(/.*)?'\nsemanage fcontext -a -t httpd_sys_rw_content_t '/opt/librenms/logs(/.*)?'\nrestorecon -RFvv /opt/librenms/logs/\nsemanage fcontext -a -t httpd_sys_content_t '/opt/librenms/rrd(/.*)?'\nsemanage fcontext -a -t httpd_sys_rw_content_t '/opt/librenms/rrd(/.*)?'\nrestorecon -RFvv /opt/librenms/rrd/\nsetsebool -P httpd_can_sendmail=1\nsetsebool -P httpd_execmem 1\n\n\n\nAllow fping\n\n\nCreate the file http_fping.tt with the following contents:\n\n\nmodule http_fping 1.0;\n\nrequire {\ntype httpd_t;\nclass capability net_raw;\nclass rawip_socket { getopt create setopt write read };\n}\n\n#============= httpd_t ==============\nallow httpd_t self:capability net_raw;\nallow httpd_t self:rawip_socket { getopt create setopt write read };\n\n\n\n\nThen run these commands\n\n\ncheckmodule -M -m -o http_fping.mod http_fping.tt\nsemodule_package -o http_fping.pp -m http_fping.mod\nsemodule -i http_fping.pp\n\n\n\nAllow access through firewall\n\n\nfirewall-cmd --zone public --add-service http\nfirewall-cmd --permanent --zone public --add-service http\nfirewall-cmd --zone public --add-service https\nfirewall-cmd --permanent --zone public --add-service https\n\n\n\nConfigure snmpd\n\n\ncp /opt/librenms/snmpd.conf.example /etc/snmp/snmpd.conf\n\nvi /etc/snmp/snmpd.conf\n\n\n\nEdit the text which says \nRANDOMSTRINGGOESHERE\n and set your own community string.\n\n\ncurl -o /usr/bin/distro https://raw.githubusercontent.com/librenms/librenms-agent/master/snmp/distro\nchmod +x /usr/bin/distro\nsystemctl enable snmpd\nsystemctl restart snmpd\n\n\n\nCron job\n\n\ncp /opt/librenms/librenms.nonroot.cron /etc/cron.d/librenms\n\n\n\nCopy logrotate config\n\n\nLibreNMS keeps logs in \n/opt/librenms/logs\n. Over time these can become large and be rotated out.  To rotate out the old logs you can use the provided logrotate config file:\n\n\ncp /opt/librenms/misc/librenms.logrotate /etc/logrotate.d/librenms\n\n\n\nSet permissions\n\n\nchown -R librenms:librenms /opt/librenms\nsetfacl -d -m g::rwx /opt/librenms/rrd /opt/librenms/logs\nsetfacl -R -m g::rwx /opt/librenms/rrd /opt/librenms/logs\n\n\n\nWeb installer\n\n\nNow head to the web installer and follow the on-screen instructions.\n\n\nhttp://librenms.example.com/install.php\n\n\n\nFinal steps\n\n\nThat's it!  You now should be able to log in to http://librenms.example.com/.  Please note that we have not covered HTTPS setup in this example, so your LibreNMS install is not secure by default.  Please do not expose it to the public Internet unless you have configured HTTPS and taken appropriate web server hardening steps.\n\n\nAdd the first device\n\n\nWe now suggest that you add localhost as your first device from within the WebUI.\n\n\nTroubleshooting\n\n\nIf you ever have issues with your install, run validate.php as root in the librenms directory:\n\n\ncd /opt/librenms\n./validate.php\n\n\n\nThere are various options for getting help listed on the LibreNMS web site: https://www.librenms.org/#support\n\n\nWhat next?\n\n\nNow that you've installed LibreNMS, we'd suggest that you have a read of a few other docs to get you going:\n\n\n\n\nPerformance tuning\n\n\nAlerting\n\n\nDevice Groups\n\n\nAuto discovery\n\n\n\n\nClosing\n\n\nWe hope you enjoy using LibreNMS. If you do, it would be great if you would consider opting into the stats system we have, please see \nthis page\n on what it is and how to enable it.\n\n\nIf you would like to help make LibreNMS better there are \nmany ways to help\n. You can also \nback LibreNMS on Open Collective\n.", 
            "title": "CentOS 7 (Nginx)"
        }, 
        {
            "location": "/Installation/Installation-CentOS-7-Nginx/#install-required-packages", 
            "text": "yum install epel-release\n\nrpm -Uvh https://mirror.webtatic.com/yum/el7/webtatic-release.rpm\n\nyum install cronie fping git ImageMagick jwhois mariadb mariadb-server mtr MySQL-python net-snmp net-snmp-utils nginx nmap php71w php71w-cli php71w-common php71w-curl php71w-fpm php71w-gd php71w-mcrypt php71w-mysql php71w-process php71w-snmp php71w-xml php71w-zip python-memcached rrdtool", 
            "title": "Install Required Packages"
        }, 
        {
            "location": "/Installation/Installation-CentOS-7-Nginx/#add-librenms-user", 
            "text": "useradd librenms -d /opt/librenms -M -r\nusermod -a -G librenms nginx", 
            "title": "Add librenms user"
        }, 
        {
            "location": "/Installation/Installation-CentOS-7-Nginx/#install-librenms", 
            "text": "cd /opt\ngit clone https://github.com/librenms/librenms.git librenms", 
            "title": "Install LibreNMS"
        }, 
        {
            "location": "/Installation/Installation-CentOS-7-Nginx/#db-server", 
            "text": "", 
            "title": "DB Server"
        }, 
        {
            "location": "/Installation/Installation-CentOS-7-Nginx/#configure-mysql", 
            "text": "systemctl start mariadb\nmysql -u root   NOTE: Please change the 'password' below to something secure.   CREATE DATABASE librenms CHARACTER SET utf8 COLLATE utf8_unicode_ci;\nCREATE USER 'librenms'@'localhost' IDENTIFIED BY 'password';\nGRANT ALL PRIVILEGES ON librenms.* TO 'librenms'@'localhost';\nFLUSH PRIVILEGES;\nexit  vi /etc/my.cnf   NOTE: Whilst we are working on ensuring LibreNMS is compatible with MySQL strict mode, for now, please disable this after mysql is installed.   Within the  [mysqld]  section please add:  innodb_file_per_table=1\nsql-mode= \nlower_case_table_names=0  systemctl enable mariadb\nsystemctl restart mariadb", 
            "title": "Configure MySQL"
        }, 
        {
            "location": "/Installation/Installation-CentOS-7-Nginx/#web-server", 
            "text": "", 
            "title": "Web Server"
        }, 
        {
            "location": "/Installation/Installation-CentOS-7-Nginx/#configure-and-start-php-fpm", 
            "text": "Ensure date.timezone is set in php.ini to your preferred time zone.  See http://php.net/manual/en/timezones.php for a list of supported timezones.  Valid examples are: \"America/New_York\", \"Australia/Brisbane\", \"Etc/UTC\".  vi /etc/php.ini  In  /etc/php-fpm.d/www.conf  make these changes:  vi /etc/php-fpm.d/www.conf  ;user = apache\nuser = nginx\n\ngroup = apache   ; keep group as apache\n\n;listen = 127.0.0.1:9000\nlisten = /var/run/php-fpm/php7.1-fpm.sock\n\nlisten.owner = nginx\nlisten.group = nginx\nlisten.mode = 0660  systemctl enable php-fpm\nsystemctl restart php-fpm", 
            "title": "Configure and Start PHP-FPM"
        }, 
        {
            "location": "/Installation/Installation-CentOS-7-Nginx/#configure-nginx", 
            "text": "vi /etc/nginx/conf.d/librenms.conf  Add the following config, edit  server_name  as required:  server {\n listen      80;\n server_name librenms.example.com;\n root        /opt/librenms/html;\n index       index.php;\n\n charset utf-8;\n gzip on;\n gzip_types text/css application/javascript text/javascript application/x-javascript image/svg+xml text/plain text/xsd text/xsl text/xml image/x-icon;\n location / {\n  try_files $uri $uri/ /index.php?$query_string;\n }\n location /api/v0 {\n  try_files $uri $uri/ /api_v0.php?$query_string;\n }\n location ~ \\.php {\n  include fastcgi.conf;\n  fastcgi_split_path_info ^(.+\\.php)(/.+)$;\n  fastcgi_pass unix:/var/run/php-fpm/php7.1-fpm.sock;\n }\n location ~ /\\.ht {\n  deny all;\n }\n}   NOTE: If this is the only site you are hosting on this server (it should be :)) then you will need to disable the default site.\nDelete the  server  section from  /etc/nginx/nginx.conf   systemctl enable nginx\nsystemctl restart nginx", 
            "title": "Configure NGINX"
        }, 
        {
            "location": "/Installation/Installation-CentOS-7-Nginx/#selinux", 
            "text": "Install the policy tool for SELinux:  yum install policycoreutils-python", 
            "title": "SELinux"
        }, 
        {
            "location": "/Installation/Installation-CentOS-7-Nginx/#configure-the-contexts-needed-by-librenms", 
            "text": "semanage fcontext -a -t httpd_sys_content_t '/opt/librenms/logs(/.*)?'\nsemanage fcontext -a -t httpd_sys_rw_content_t '/opt/librenms/logs(/.*)?'\nrestorecon -RFvv /opt/librenms/logs/\nsemanage fcontext -a -t httpd_sys_content_t '/opt/librenms/rrd(/.*)?'\nsemanage fcontext -a -t httpd_sys_rw_content_t '/opt/librenms/rrd(/.*)?'\nrestorecon -RFvv /opt/librenms/rrd/\nsetsebool -P httpd_can_sendmail=1\nsetsebool -P httpd_execmem 1", 
            "title": "Configure the contexts needed by LibreNMS:"
        }, 
        {
            "location": "/Installation/Installation-CentOS-7-Nginx/#allow-fping", 
            "text": "Create the file http_fping.tt with the following contents:  module http_fping 1.0;\n\nrequire {\ntype httpd_t;\nclass capability net_raw;\nclass rawip_socket { getopt create setopt write read };\n}\n\n#============= httpd_t ==============\nallow httpd_t self:capability net_raw;\nallow httpd_t self:rawip_socket { getopt create setopt write read };  Then run these commands  checkmodule -M -m -o http_fping.mod http_fping.tt\nsemodule_package -o http_fping.pp -m http_fping.mod\nsemodule -i http_fping.pp", 
            "title": "Allow fping"
        }, 
        {
            "location": "/Installation/Installation-CentOS-7-Nginx/#allow-access-through-firewall", 
            "text": "firewall-cmd --zone public --add-service http\nfirewall-cmd --permanent --zone public --add-service http\nfirewall-cmd --zone public --add-service https\nfirewall-cmd --permanent --zone public --add-service https", 
            "title": "Allow access through firewall"
        }, 
        {
            "location": "/Installation/Installation-CentOS-7-Nginx/#configure-snmpd", 
            "text": "cp /opt/librenms/snmpd.conf.example /etc/snmp/snmpd.conf\n\nvi /etc/snmp/snmpd.conf  Edit the text which says  RANDOMSTRINGGOESHERE  and set your own community string.  curl -o /usr/bin/distro https://raw.githubusercontent.com/librenms/librenms-agent/master/snmp/distro\nchmod +x /usr/bin/distro\nsystemctl enable snmpd\nsystemctl restart snmpd", 
            "title": "Configure snmpd"
        }, 
        {
            "location": "/Installation/Installation-CentOS-7-Nginx/#cron-job", 
            "text": "cp /opt/librenms/librenms.nonroot.cron /etc/cron.d/librenms", 
            "title": "Cron job"
        }, 
        {
            "location": "/Installation/Installation-CentOS-7-Nginx/#copy-logrotate-config", 
            "text": "LibreNMS keeps logs in  /opt/librenms/logs . Over time these can become large and be rotated out.  To rotate out the old logs you can use the provided logrotate config file:  cp /opt/librenms/misc/librenms.logrotate /etc/logrotate.d/librenms", 
            "title": "Copy logrotate config"
        }, 
        {
            "location": "/Installation/Installation-CentOS-7-Nginx/#set-permissions", 
            "text": "chown -R librenms:librenms /opt/librenms\nsetfacl -d -m g::rwx /opt/librenms/rrd /opt/librenms/logs\nsetfacl -R -m g::rwx /opt/librenms/rrd /opt/librenms/logs", 
            "title": "Set permissions"
        }, 
        {
            "location": "/Installation/Installation-CentOS-7-Nginx/#web-installer", 
            "text": "Now head to the web installer and follow the on-screen instructions.  http://librenms.example.com/install.php", 
            "title": "Web installer"
        }, 
        {
            "location": "/Installation/Installation-CentOS-7-Nginx/#final-steps", 
            "text": "That's it!  You now should be able to log in to http://librenms.example.com/.  Please note that we have not covered HTTPS setup in this example, so your LibreNMS install is not secure by default.  Please do not expose it to the public Internet unless you have configured HTTPS and taken appropriate web server hardening steps.", 
            "title": "Final steps"
        }, 
        {
            "location": "/Installation/Installation-CentOS-7-Nginx/#add-the-first-device", 
            "text": "We now suggest that you add localhost as your first device from within the WebUI.", 
            "title": "Add the first device"
        }, 
        {
            "location": "/Installation/Installation-CentOS-7-Nginx/#troubleshooting", 
            "text": "If you ever have issues with your install, run validate.php as root in the librenms directory:  cd /opt/librenms\n./validate.php  There are various options for getting help listed on the LibreNMS web site: https://www.librenms.org/#support", 
            "title": "Troubleshooting"
        }, 
        {
            "location": "/Installation/Installation-CentOS-7-Nginx/#what-next", 
            "text": "Now that you've installed LibreNMS, we'd suggest that you have a read of a few other docs to get you going:   Performance tuning  Alerting  Device Groups  Auto discovery", 
            "title": "What next?"
        }, 
        {
            "location": "/Installation/Installation-CentOS-7-Nginx/#closing", 
            "text": "We hope you enjoy using LibreNMS. If you do, it would be great if you would consider opting into the stats system we have, please see  this page  on what it is and how to enable it.  If you would like to help make LibreNMS better there are  many ways to help . You can also  back LibreNMS on Open Collective .", 
            "title": "Closing"
        }, 
        {
            "location": "/Installation/Installation-CentOS-7-Apache/", 
            "text": "NOTE: These instructions assume you are the \nroot\n user.  If you are not, prepend \nsudo\n to the shell commands (the ones that aren't at \nmysql\n prompts) or temporarily become a user with root privileges with \nsudo -s\n or \nsudo -i\n.\n\n\n\n\nPlease note the minimum supported PHP version is 5.6.4\n\n\nInstall Required Packages\n\n\nyum install epel-release\n\nrpm -Uvh https://mirror.webtatic.com/yum/el7/webtatic-release.rpm\n\nyum install cronie fping git httpd ImageMagick jwhois mariadb mariadb-server mtr MySQL-python net-snmp net-snmp-utils nmap php71w php71w-cli php71w-common php71w-curl php71w-gd php71w-mcrypt php71w-mysql php71w-process php71w-snmp php71w-xml php71w-zip python-memcached rrdtool\n\n\n\nAdd librenms user\n\n\nuseradd librenms -d /opt/librenms -M -r\nusermod -a -G librenms apache\n\n\n\nInstall LibreNMS\n\n\ncd /opt\ngit clone https://github.com/librenms/librenms.git librenms\n\n\n\nDB Server\n\n\nConfigure MySQL\n\n\nsystemctl start mariadb\nmysql -u root\n\n\n\n\n\nNOTE: Please change the 'password' below to something secure.\n\n\n\n\nCREATE DATABASE librenms CHARACTER SET utf8 COLLATE utf8_unicode_ci;\nCREATE USER 'librenms'@'localhost' IDENTIFIED BY 'password';\nGRANT ALL PRIVILEGES ON librenms.* TO 'librenms'@'localhost';\nFLUSH PRIVILEGES;\nexit\n\n\n\n\nvi /etc/my.cnf\n\n\n\n\n\nNOTE: Whilst we are working on ensuring LibreNMS is compatible with MySQL strict mode, for now, please disable this after mysql is installed.\n\n\n\n\nWithin the \n[mysqld]\n section please add:\n\n\ninnodb_file_per_table=1\nsql-mode=\n\nlower_case_table_names=0\n\n\n\n\nsystemctl enable mariadb\nsystemctl restart mariadb\n\n\n\nWeb Server\n\n\nConfigure PHP\n\n\nEnsure date.timezone is set in php.ini to your preferred time zone.  See http://php.net/manual/en/timezones.php for a list of supported timezones.  Valid examples are: \"America/New_York\", \"Australia/Brisbane\", \"Etc/UTC\".\n\n\nvi  /etc/php.ini\n\n\n\nConfigure Apache\n\n\nvi /etc/httpd/conf.d/librenms.conf\n\n\n\nAdd the following config, edit \nServerName\n as required:\n\n\nVirtualHost *:80\n\n  DocumentRoot /opt/librenms/html/\n  ServerName  librenms.example.com\n\n  AllowEncodedSlashes NoDecode\n  \nDirectory \n/opt/librenms/html/\n\n    Require all granted\n    AllowOverride All\n    Options FollowSymLinks MultiViews\n  \n/Directory\n\n\n/VirtualHost\n\n\n\n\n\n\n\nNOTE: If this is the only site you are hosting on this server (it should be :)) then you will need to disable the default site.\n\nrm -f /etc/httpd/conf.d/welcome.conf\n\n\n\n\nsystemctl enable httpd\nsystemctl restart httpd\n\n\n\nSELinux\n\n\nInstall the policy tool for SELinux:\n\n\nyum install policycoreutils-python\n\n\n\nConfigure the contexts needed by LibreNMS:\n\n\nsemanage fcontext -a -t httpd_sys_content_t '/opt/librenms/logs(/.*)?'\nsemanage fcontext -a -t httpd_sys_rw_content_t '/opt/librenms/logs(/.*)?'\nrestorecon -RFvv /opt/librenms/logs/\nsemanage fcontext -a -t httpd_sys_content_t '/opt/librenms/rrd(/.*)?'\nsemanage fcontext -a -t httpd_sys_rw_content_t '/opt/librenms/rrd(/.*)?'\nrestorecon -RFvv /opt/librenms/rrd/\nsetsebool -P httpd_can_sendmail=1\n\n\n\nAllow fping\n\n\nCreate the file http_fping.tt with the following contents:\n\n\nmodule http_fping 1.0;\n\nrequire {\ntype httpd_t;\nclass capability net_raw;\nclass rawip_socket { getopt create setopt write read };\n}\n\n#============= httpd_t ==============\nallow httpd_t self:capability net_raw;\nallow httpd_t self:rawip_socket { getopt create setopt write read };\n\n\n\n\nThen run these commands\n\n\ncheckmodule -M -m -o http_fping.mod http_fping.tt\nsemodule_package -o http_fping.pp -m http_fping.mod\nsemodule -i http_fping.pp\n\n\n\nAllow access through firewall\n\n\nfirewall-cmd --zone public --add-service http\nfirewall-cmd --permanent --zone public --add-service http\nfirewall-cmd --zone public --add-service https\nfirewall-cmd --permanent --zone public --add-service https\n\n\n\nConfigure snmpd\n\n\ncp /opt/librenms/snmpd.conf.example /etc/snmp/snmpd.conf\n\nvi /etc/snmp/snmpd.conf\n\n\n\nEdit the text which says \nRANDOMSTRINGGOESHERE\n and set your own community string.\n\n\ncurl -o /usr/bin/distro https://raw.githubusercontent.com/librenms/librenms-agent/master/snmp/distro\nchmod +x /usr/bin/distro\nsystemctl enable snmpd\nsystemctl restart snmpd\n\n\n\nCron job\n\n\ncp /opt/librenms/librenms.nonroot.cron /etc/cron.d/librenms\n\n\n\nCopy logrotate config\n\n\nLibreNMS keeps logs in \n/opt/librenms/logs\n. Over time these can become large and be rotated out.  To rotate out the old logs you can use the provided logrotate config file:\n\n\ncp /opt/librenms/misc/librenms.logrotate /etc/logrotate.d/librenms\n\n\n\nSet permissions\n\n\nchown -R librenms:librenms /opt/librenms\nsetfacl -d -m g::rwx /opt/librenms/rrd /opt/librenms/logs\nsetfacl -R -m g::rwx /opt/librenms/rrd /opt/librenms/logs\n\n\n\nWeb installer\n\n\nNow head to the web installer and follow the on-screen instructions.\n\n\nhttp://librenms.example.com/install.php\n\n\n\nFinal steps\n\n\nThat's it!  You now should be able to log in to http://librenms.example.com/.  Please note that we have not covered HTTPS setup in this example, so your LibreNMS install is not secure by default.  Please do not expose it to the public Internet unless you have configured HTTPS and taken appropriate web server hardening steps.\n\n\nAdd the first device\n\n\nWe now suggest that you add localhost as your first device from within the WebUI.\n\n\nTroubleshooting\n\n\nIf you ever have issues with your install, run validate.php as root in the librenms directory:\n\n\ncd /opt/librenms\n./validate.php\n\n\n\nThere are various options for getting help listed on the LibreNMS web site: https://www.librenms.org/#support\n\n\nWhat next?\n\n\nNow that you've installed LibreNMS, we'd suggest that you have a read of a few other docs to get you going:\n\n\n\n\nPerformance tuning\n\n\nAlerting\n\n\nDevice Groups\n\n\nAuto discovery\n\n\n\n\nClosing\n\n\nWe hope you enjoy using LibreNMS. If you do, it would be great if you would consider opting into the stats system we have, please see \nthis page\n on what it is and how to enable it.\n\n\nIf you would like to help make LibreNMS better there are \nmany ways to help\n. You can also \nback LibreNMS on Open Collective\n.", 
            "title": "CentOS 7 (Apache)"
        }, 
        {
            "location": "/Installation/Installation-CentOS-7-Apache/#install-required-packages", 
            "text": "yum install epel-release\n\nrpm -Uvh https://mirror.webtatic.com/yum/el7/webtatic-release.rpm\n\nyum install cronie fping git httpd ImageMagick jwhois mariadb mariadb-server mtr MySQL-python net-snmp net-snmp-utils nmap php71w php71w-cli php71w-common php71w-curl php71w-gd php71w-mcrypt php71w-mysql php71w-process php71w-snmp php71w-xml php71w-zip python-memcached rrdtool", 
            "title": "Install Required Packages"
        }, 
        {
            "location": "/Installation/Installation-CentOS-7-Apache/#add-librenms-user", 
            "text": "useradd librenms -d /opt/librenms -M -r\nusermod -a -G librenms apache", 
            "title": "Add librenms user"
        }, 
        {
            "location": "/Installation/Installation-CentOS-7-Apache/#install-librenms", 
            "text": "cd /opt\ngit clone https://github.com/librenms/librenms.git librenms", 
            "title": "Install LibreNMS"
        }, 
        {
            "location": "/Installation/Installation-CentOS-7-Apache/#db-server", 
            "text": "", 
            "title": "DB Server"
        }, 
        {
            "location": "/Installation/Installation-CentOS-7-Apache/#configure-mysql", 
            "text": "systemctl start mariadb\nmysql -u root   NOTE: Please change the 'password' below to something secure.   CREATE DATABASE librenms CHARACTER SET utf8 COLLATE utf8_unicode_ci;\nCREATE USER 'librenms'@'localhost' IDENTIFIED BY 'password';\nGRANT ALL PRIVILEGES ON librenms.* TO 'librenms'@'localhost';\nFLUSH PRIVILEGES;\nexit  vi /etc/my.cnf   NOTE: Whilst we are working on ensuring LibreNMS is compatible with MySQL strict mode, for now, please disable this after mysql is installed.   Within the  [mysqld]  section please add:  innodb_file_per_table=1\nsql-mode= \nlower_case_table_names=0  systemctl enable mariadb\nsystemctl restart mariadb", 
            "title": "Configure MySQL"
        }, 
        {
            "location": "/Installation/Installation-CentOS-7-Apache/#web-server", 
            "text": "", 
            "title": "Web Server"
        }, 
        {
            "location": "/Installation/Installation-CentOS-7-Apache/#configure-php", 
            "text": "Ensure date.timezone is set in php.ini to your preferred time zone.  See http://php.net/manual/en/timezones.php for a list of supported timezones.  Valid examples are: \"America/New_York\", \"Australia/Brisbane\", \"Etc/UTC\".  vi  /etc/php.ini", 
            "title": "Configure PHP"
        }, 
        {
            "location": "/Installation/Installation-CentOS-7-Apache/#configure-apache", 
            "text": "vi /etc/httpd/conf.d/librenms.conf  Add the following config, edit  ServerName  as required:  VirtualHost *:80 \n  DocumentRoot /opt/librenms/html/\n  ServerName  librenms.example.com\n\n  AllowEncodedSlashes NoDecode\n   Directory  /opt/librenms/html/ \n    Require all granted\n    AllowOverride All\n    Options FollowSymLinks MultiViews\n   /Directory  /VirtualHost    NOTE: If this is the only site you are hosting on this server (it should be :)) then you will need to disable the default site. rm -f /etc/httpd/conf.d/welcome.conf   systemctl enable httpd\nsystemctl restart httpd", 
            "title": "Configure Apache"
        }, 
        {
            "location": "/Installation/Installation-CentOS-7-Apache/#selinux", 
            "text": "Install the policy tool for SELinux:  yum install policycoreutils-python", 
            "title": "SELinux"
        }, 
        {
            "location": "/Installation/Installation-CentOS-7-Apache/#configure-the-contexts-needed-by-librenms", 
            "text": "semanage fcontext -a -t httpd_sys_content_t '/opt/librenms/logs(/.*)?'\nsemanage fcontext -a -t httpd_sys_rw_content_t '/opt/librenms/logs(/.*)?'\nrestorecon -RFvv /opt/librenms/logs/\nsemanage fcontext -a -t httpd_sys_content_t '/opt/librenms/rrd(/.*)?'\nsemanage fcontext -a -t httpd_sys_rw_content_t '/opt/librenms/rrd(/.*)?'\nrestorecon -RFvv /opt/librenms/rrd/\nsetsebool -P httpd_can_sendmail=1", 
            "title": "Configure the contexts needed by LibreNMS:"
        }, 
        {
            "location": "/Installation/Installation-CentOS-7-Apache/#allow-fping", 
            "text": "Create the file http_fping.tt with the following contents:  module http_fping 1.0;\n\nrequire {\ntype httpd_t;\nclass capability net_raw;\nclass rawip_socket { getopt create setopt write read };\n}\n\n#============= httpd_t ==============\nallow httpd_t self:capability net_raw;\nallow httpd_t self:rawip_socket { getopt create setopt write read };  Then run these commands  checkmodule -M -m -o http_fping.mod http_fping.tt\nsemodule_package -o http_fping.pp -m http_fping.mod\nsemodule -i http_fping.pp", 
            "title": "Allow fping"
        }, 
        {
            "location": "/Installation/Installation-CentOS-7-Apache/#allow-access-through-firewall", 
            "text": "firewall-cmd --zone public --add-service http\nfirewall-cmd --permanent --zone public --add-service http\nfirewall-cmd --zone public --add-service https\nfirewall-cmd --permanent --zone public --add-service https", 
            "title": "Allow access through firewall"
        }, 
        {
            "location": "/Installation/Installation-CentOS-7-Apache/#configure-snmpd", 
            "text": "cp /opt/librenms/snmpd.conf.example /etc/snmp/snmpd.conf\n\nvi /etc/snmp/snmpd.conf  Edit the text which says  RANDOMSTRINGGOESHERE  and set your own community string.  curl -o /usr/bin/distro https://raw.githubusercontent.com/librenms/librenms-agent/master/snmp/distro\nchmod +x /usr/bin/distro\nsystemctl enable snmpd\nsystemctl restart snmpd", 
            "title": "Configure snmpd"
        }, 
        {
            "location": "/Installation/Installation-CentOS-7-Apache/#cron-job", 
            "text": "cp /opt/librenms/librenms.nonroot.cron /etc/cron.d/librenms", 
            "title": "Cron job"
        }, 
        {
            "location": "/Installation/Installation-CentOS-7-Apache/#copy-logrotate-config", 
            "text": "LibreNMS keeps logs in  /opt/librenms/logs . Over time these can become large and be rotated out.  To rotate out the old logs you can use the provided logrotate config file:  cp /opt/librenms/misc/librenms.logrotate /etc/logrotate.d/librenms", 
            "title": "Copy logrotate config"
        }, 
        {
            "location": "/Installation/Installation-CentOS-7-Apache/#set-permissions", 
            "text": "chown -R librenms:librenms /opt/librenms\nsetfacl -d -m g::rwx /opt/librenms/rrd /opt/librenms/logs\nsetfacl -R -m g::rwx /opt/librenms/rrd /opt/librenms/logs", 
            "title": "Set permissions"
        }, 
        {
            "location": "/Installation/Installation-CentOS-7-Apache/#web-installer", 
            "text": "Now head to the web installer and follow the on-screen instructions.  http://librenms.example.com/install.php", 
            "title": "Web installer"
        }, 
        {
            "location": "/Installation/Installation-CentOS-7-Apache/#final-steps", 
            "text": "That's it!  You now should be able to log in to http://librenms.example.com/.  Please note that we have not covered HTTPS setup in this example, so your LibreNMS install is not secure by default.  Please do not expose it to the public Internet unless you have configured HTTPS and taken appropriate web server hardening steps.", 
            "title": "Final steps"
        }, 
        {
            "location": "/Installation/Installation-CentOS-7-Apache/#add-the-first-device", 
            "text": "We now suggest that you add localhost as your first device from within the WebUI.", 
            "title": "Add the first device"
        }, 
        {
            "location": "/Installation/Installation-CentOS-7-Apache/#troubleshooting", 
            "text": "If you ever have issues with your install, run validate.php as root in the librenms directory:  cd /opt/librenms\n./validate.php  There are various options for getting help listed on the LibreNMS web site: https://www.librenms.org/#support", 
            "title": "Troubleshooting"
        }, 
        {
            "location": "/Installation/Installation-CentOS-7-Apache/#what-next", 
            "text": "Now that you've installed LibreNMS, we'd suggest that you have a read of a few other docs to get you going:   Performance tuning  Alerting  Device Groups  Auto discovery", 
            "title": "What next?"
        }, 
        {
            "location": "/Installation/Installation-CentOS-7-Apache/#closing", 
            "text": "We hope you enjoy using LibreNMS. If you do, it would be great if you would consider opting into the stats system we have, please see  this page  on what it is and how to enable it.  If you would like to help make LibreNMS better there are  many ways to help . You can also  back LibreNMS on Open Collective .", 
            "title": "Closing"
        }, 
        {
            "location": "/Installation/Migrating-from-Observium/", 
            "text": "A LibreNMS user, \nDan\n, has kindly provided full details and scripts to be able to migrate from Observium to LibreNMS.\n\n\nSee \nhis\n blog for full details.\n\n\nWe have mirrored the scripts he's provided with consent, these are available in the \nscripts\\Migration\n folder of your installation..", 
            "title": "Migrating from Observium"
        }, 
        {
            "location": "/General/Releases/", 
            "text": "Introduction\n\n\nWe try to ensure that breaking changes aren't introduced by utilising various automated \ncode testing, syntax testing and unit testing along with manual code review. However \nbugs can and do get introduced as well as major refactoring to improve the quality of \nthe code base.\n\n\nWe have two branches available for you to use. The default is the \nmaster\n branch.\n\n\nDevelopment branch\n\n\nOur \nmaster\n branch is our dev branch, this is actively commited to and it's not uncommon \nfor multiple commits to be merged in daily. As such sometimes changes will be introduced \nwhich will cause unintended issues. If this happens we are usually quick to fix or \nrevert those changes.\n\n\nWe appreciate everyone that runs this branch as you are in essence secondary testers to \nthe automation and manually testing that is done during the merge stages.\n\n\nYou can configure your install (this is the default) to use this branch by setting \n$config['update_channel'] = 'master';\n \nin \nconfig.php\n and ensuring you switch to the master branch with:\n\n\ncd /opt/librenms \n git checkout master\n\n\nStable branch\n\n\nWith this in mind, we provide a monthly stable release which is released on or around \nthe last Sunday of the month. Code pull requests (aside from Bug fixes) are stopped days \nleading up to the release to ensure that we have a clean working branch at that point.\n\n\nThe changelog is also updated and will reference the release number and date so you can see \nwhat changes have been made since the last release.\n\n\nTo switch to using stable branches you can set \n$config['update_channel'] = 'release';\n \nin config.php and then switch to the latest release branch with:\n\n\ncd /opt/librenms \n git fetch --tags \n git checkout $(git describe --tags $(git rev-list --tags --max-count=1))", 
            "title": "Choosing a release"
        }, 
        {
            "location": "/General/Releases/#introduction", 
            "text": "We try to ensure that breaking changes aren't introduced by utilising various automated \ncode testing, syntax testing and unit testing along with manual code review. However \nbugs can and do get introduced as well as major refactoring to improve the quality of \nthe code base.  We have two branches available for you to use. The default is the  master  branch.", 
            "title": "Introduction"
        }, 
        {
            "location": "/General/Releases/#development-branch", 
            "text": "Our  master  branch is our dev branch, this is actively commited to and it's not uncommon \nfor multiple commits to be merged in daily. As such sometimes changes will be introduced \nwhich will cause unintended issues. If this happens we are usually quick to fix or \nrevert those changes.  We appreciate everyone that runs this branch as you are in essence secondary testers to \nthe automation and manually testing that is done during the merge stages.  You can configure your install (this is the default) to use this branch by setting  $config['update_channel'] = 'master';  \nin  config.php  and ensuring you switch to the master branch with:  cd /opt/librenms   git checkout master", 
            "title": "Development branch"
        }, 
        {
            "location": "/General/Releases/#stable-branch", 
            "text": "With this in mind, we provide a monthly stable release which is released on or around \nthe last Sunday of the month. Code pull requests (aside from Bug fixes) are stopped days \nleading up to the release to ensure that we have a clean working branch at that point.  The changelog is also updated and will reference the release number and date so you can see \nwhat changes have been made since the last release.  To switch to using stable branches you can set  $config['update_channel'] = 'release';  \nin config.php and then switch to the latest release branch with:  cd /opt/librenms   git fetch --tags   git checkout $(git describe --tags $(git rev-list --tags --max-count=1))", 
            "title": "Stable branch"
        }, 
        {
            "location": "/Support/Adding-a-Device/", 
            "text": "Adding Device\n\n\nYou have two options for adding a new device into LibreNMS. You can add a device via the \ncli\n or by using the \n\nWebUI\n.\n\n\nCLI\n\n\nUsing the command line via ssh you can add a new device by changing to the directory of your LibreNMS install and typing (be sure to put the correct details).\n\n\n./addhost.php [community] [v1|v2c] [port] [udp|udp6|tcp|tcp6]\n\n\n\n\nAs an example, if your device is configured to use the community \nmy_company\n using snmp \nv2c\n then you would enter:\n\n\n./addhost.php my_company v2c\n\n\n\n\n\n\nPlease note that if the community contains special characters such as \n$\n then you will need to wrap it in \n'\n. I.e: \n'Pa$$w0rd'\n.\n\n\n\n\nWebUI\n\n\nUsing the web interface, go to Devices and click Add Device. Enter the details required for the device that you want to add and then click 'Add Host'.\nAs an example, if your device is configured to use the community \nmy_company\n using snmp \nv2c\n then you would enter:\nSNMP Port defaults to 161\n\n\n\n\nPing Only Device\n\n\nYou can add ping only devices into LibreNMS through the WebUI. When adding the device switch the SNMP button to \"off\".\nDevice will be added into LibreNMS as Ping Only Device and will show ICMP Response Graph. \n\n\n\n\nHostname: IP address or DNS name.\n\n\nHardware: Optional you can type in whatever you like.\n\n\nOS: Optional this will add the Device's OS Icon.\n\n\n\n\nHow to add ping only devices\n\n\n\n\nIf you would like to add devices automatically then you will probably want to read the \nAuto-discovery Setup\n guide.\n\n\nYou may also want to add devices programatically, if so, take a look at our \nAPI documentation", 
            "title": "Adding a device"
        }, 
        {
            "location": "/Support/Adding-a-Device/#adding-device", 
            "text": "You have two options for adding a new device into LibreNMS. You can add a device via the  cli  or by using the  WebUI .", 
            "title": "Adding Device"
        }, 
        {
            "location": "/Support/Adding-a-Device/#cli", 
            "text": "Using the command line via ssh you can add a new device by changing to the directory of your LibreNMS install and typing (be sure to put the correct details).  ./addhost.php [community] [v1|v2c] [port] [udp|udp6|tcp|tcp6]  As an example, if your device is configured to use the community  my_company  using snmp  v2c  then you would enter:  ./addhost.php my_company v2c   Please note that if the community contains special characters such as  $  then you will need to wrap it in  ' . I.e:  'Pa$$w0rd' .", 
            "title": "CLI"
        }, 
        {
            "location": "/Support/Adding-a-Device/#webui", 
            "text": "Using the web interface, go to Devices and click Add Device. Enter the details required for the device that you want to add and then click 'Add Host'.\nAs an example, if your device is configured to use the community  my_company  using snmp  v2c  then you would enter:\nSNMP Port defaults to 161", 
            "title": "WebUI"
        }, 
        {
            "location": "/Support/Adding-a-Device/#ping-only-device", 
            "text": "You can add ping only devices into LibreNMS through the WebUI. When adding the device switch the SNMP button to \"off\".\nDevice will be added into LibreNMS as Ping Only Device and will show ICMP Response Graph.    Hostname: IP address or DNS name.  Hardware: Optional you can type in whatever you like.  OS: Optional this will add the Device's OS Icon.   How to add ping only devices   If you would like to add devices automatically then you will probably want to read the  Auto-discovery Setup  guide.  You may also want to add devices programatically, if so, take a look at our  API documentation", 
            "title": "Ping Only Device"
        }, 
        {
            "location": "/Extensions/Device-Groups/", 
            "text": "LibreNMS supports grouping your devices together in much the same way as you can configure alerts. This document will hopefully help you get started.\n\n\nPatterns\n\n\nPatterns work in the same way as Entities within the alerting system, the format of the pattern is based on the MySQL structure your data is in. Such\nas \ntablename.columnname\n. If you already know the entity you want, you can browse around inside MySQL using \nshow tables\n and \ndesc \ntablename\n.\n\n\nAs a working example and a common question, let's assume you want to group devices by hostname. If your hostname format is dcX.[devicetype].example.com. You would use the pattern\n\ndevices.hostname\n. Select the condition which in this case would be \nLike\n and then enter \ndc1\\..*\\.example.com\n. This would then match dc1.sw01.example.com, dc1.rtr01.example.com but not\n dc2.sw01.example.com.\n\n\nWildcards\n\n\nAs with alerts, the \nLike\n operation allows MySQL Regular expressions.\n\n\nA list of common entities is maintained in our \nAlerting docs\n.\n\n\nConditions\n\n\nPlease see our \nAlerting docs\n for explanations.\n\n\nConnection\n\n\nIf you only want to group based on one pattern then select And. If however you want to build a group based on multiple patterns then you can build a SQL like\nquery using And / Or.\n\n\nAs an example, we want to base our group on the devices hostname AND it's type. Use the pattern as before, \ndevices.hostname\n, select \nthe condition which in this case would be \nLike\n and then enter \ndc1.@.example.com\n then click And. Now enter \ndevices.type\n in the pattern, select \nEquals\n \nand enter \nfirewall\n. This would then match dc1.fw01.example.com but not dc1.sw01.example.com as that is a network type.\n\n\n\n\nYou can now select this group from the Devices -\n All Devices link in the navigation at the top. You can also use the group to map alert rules to by creating an alert mapping\n\nOverview -\n Alerts -\n Rule Mapping\n.", 
            "title": "Grouping Devices"
        }, 
        {
            "location": "/Extensions/Device-Groups/#patterns", 
            "text": "Patterns work in the same way as Entities within the alerting system, the format of the pattern is based on the MySQL structure your data is in. Such\nas  tablename.columnname . If you already know the entity you want, you can browse around inside MySQL using  show tables  and  desc  tablename .  As a working example and a common question, let's assume you want to group devices by hostname. If your hostname format is dcX.[devicetype].example.com. You would use the pattern devices.hostname . Select the condition which in this case would be  Like  and then enter  dc1\\..*\\.example.com . This would then match dc1.sw01.example.com, dc1.rtr01.example.com but not\n dc2.sw01.example.com.", 
            "title": "Patterns"
        }, 
        {
            "location": "/Extensions/Device-Groups/#wildcards", 
            "text": "As with alerts, the  Like  operation allows MySQL Regular expressions.  A list of common entities is maintained in our  Alerting docs .", 
            "title": "Wildcards"
        }, 
        {
            "location": "/Extensions/Device-Groups/#conditions", 
            "text": "Please see our  Alerting docs  for explanations.", 
            "title": "Conditions"
        }, 
        {
            "location": "/Extensions/Device-Groups/#connection", 
            "text": "If you only want to group based on one pattern then select And. If however you want to build a group based on multiple patterns then you can build a SQL like\nquery using And / Or.  As an example, we want to base our group on the devices hostname AND it's type. Use the pattern as before,  devices.hostname , select \nthe condition which in this case would be  Like  and then enter  dc1.@.example.com  then click And. Now enter  devices.type  in the pattern, select  Equals  \nand enter  firewall . This would then match dc1.fw01.example.com but not dc1.sw01.example.com as that is a network type.   You can now select this group from the Devices -  All Devices link in the navigation at the top. You can also use the group to map alert rules to by creating an alert mapping Overview -  Alerts -  Rule Mapping .", 
            "title": "Connection"
        }, 
        {
            "location": "/General/Callback-Stats-and-Privacy/", 
            "text": "Stats data and your privacy\n\n\nThis document has been put together to explain what LibreNMS does when it calls back home to report some anonymous statistics.\n\n\nLet's start off by saying, all of the code that processes the data and submits it is included in the standard LibreNMS branch you've installed, the code that accepts this data and in turn generates some pretty graphs is all open source and available on Git Hub. Please feel free to review the code, comment on it and suggest changes / improvements. Also, don't forget - by default installations DO NOT call back home, you need to opt into this.\n\n\nAbove all we respect users privacy which is why this system has been designed like it has.\n\n\nNow onto the bit you're interested in, what is submitted and what we do with that data.\n\n\nWhat is submitted\n\n\n\n\nAll data is anonymous.\n\n\nGeneric statistics are taken from the database, these include things like device count, device type, device OS, port types, port speeds, port count and BGP peer count. Take a look at the code for full details.\n\n\nPairs of sysDescr and sysObjectID from devices with a small amount of sanitation to prevent things like hostnames from being submitted.\n\n\nWe record version numbers of php, mysql, net-snmp and rrdtool\n\n\nA random UUID is generated on your own install.\n\n\nThat's it!\n\n\nYour IP isn't logged, even via our web service accepting the data. We don't need to know who you are so we don't ask.\n\n\n\n\nWhat we do with the data\n\n\n\n\nWe store it, not for long - 3 months at the moment although this could change.\n\n\nWe use it to generate pretty graphs for people to see.\n\n\nWe use it to help prioritise issues and features that need to be worked on.\n\n\nWe use sysDescr and sysObjectID to create unit tests and improve OS discovery\n\n\n\n\nQuestions?\n\n\n\n\nQ.\n How often is data submitted? \nA.\n We submit the data once a day according to running daily.sh via cron. If you disable this then opting in will not have any affect.\n\n\nQ.\n Where can I see the data I submitted? \nA.\n You can't see the data raw, but we collate all of the data together and provide a dynamic site so you can see the results of all contributed stats \nhere\n\n\nQ.\n I want my data removed. \nA.\n That's easy, simply press 'Clear remote stats' in the About LibreNMS page of your control panel, the next time the call back script is run it will remove all the data we have.\n\n\nQ.\n I clicked the 'Clear remote stats' button by accident. \nA.\n No problem, before daily.sh runs again - just opt back in, all of your existing data will stay.\n\n\n\n\nHopefully this answers the questions you might have on why and what we are doing here, if not, please pop into our \ndiscord server\n or community forum and ask any questions you like.\n\n\nHow do I enable stats submission?\n\n\nIf you're happy with all of this - please consider switching the call back system on, you can do this within the About LibreNMS page within your control panel. In the Statistics section you will find a toggle switch to enable / disable the feature. If you've previously had it switched on and want to opt out and remove your data, click the 'Clear remote stats' button and on the next submission all the data you've sent us will be removed!", 
            "title": "Submitting stats"
        }, 
        {
            "location": "/General/Callback-Stats-and-Privacy/#stats-data-and-your-privacy", 
            "text": "This document has been put together to explain what LibreNMS does when it calls back home to report some anonymous statistics.  Let's start off by saying, all of the code that processes the data and submits it is included in the standard LibreNMS branch you've installed, the code that accepts this data and in turn generates some pretty graphs is all open source and available on Git Hub. Please feel free to review the code, comment on it and suggest changes / improvements. Also, don't forget - by default installations DO NOT call back home, you need to opt into this.  Above all we respect users privacy which is why this system has been designed like it has.  Now onto the bit you're interested in, what is submitted and what we do with that data.", 
            "title": "Stats data and your privacy"
        }, 
        {
            "location": "/General/Callback-Stats-and-Privacy/#what-is-submitted", 
            "text": "All data is anonymous.  Generic statistics are taken from the database, these include things like device count, device type, device OS, port types, port speeds, port count and BGP peer count. Take a look at the code for full details.  Pairs of sysDescr and sysObjectID from devices with a small amount of sanitation to prevent things like hostnames from being submitted.  We record version numbers of php, mysql, net-snmp and rrdtool  A random UUID is generated on your own install.  That's it!  Your IP isn't logged, even via our web service accepting the data. We don't need to know who you are so we don't ask.", 
            "title": "What is submitted"
        }, 
        {
            "location": "/General/Callback-Stats-and-Privacy/#what-we-do-with-the-data", 
            "text": "We store it, not for long - 3 months at the moment although this could change.  We use it to generate pretty graphs for people to see.  We use it to help prioritise issues and features that need to be worked on.  We use sysDescr and sysObjectID to create unit tests and improve OS discovery", 
            "title": "What we do with the data"
        }, 
        {
            "location": "/General/Callback-Stats-and-Privacy/#questions", 
            "text": "Q.  How often is data submitted?  A.  We submit the data once a day according to running daily.sh via cron. If you disable this then opting in will not have any affect.  Q.  Where can I see the data I submitted?  A.  You can't see the data raw, but we collate all of the data together and provide a dynamic site so you can see the results of all contributed stats  here  Q.  I want my data removed.  A.  That's easy, simply press 'Clear remote stats' in the About LibreNMS page of your control panel, the next time the call back script is run it will remove all the data we have.  Q.  I clicked the 'Clear remote stats' button by accident.  A.  No problem, before daily.sh runs again - just opt back in, all of your existing data will stay.   Hopefully this answers the questions you might have on why and what we are doing here, if not, please pop into our  discord server  or community forum and ask any questions you like.", 
            "title": "Questions?"
        }, 
        {
            "location": "/General/Callback-Stats-and-Privacy/#how-do-i-enable-stats-submission", 
            "text": "If you're happy with all of this - please consider switching the call back system on, you can do this within the About LibreNMS page within your control panel. In the Statistics section you will find a toggle switch to enable / disable the feature. If you've previously had it switched on and want to opt out and remove your data, click the 'Clear remote stats' button and on the next submission all the data you've sent us will be removed!", 
            "title": "How do I enable stats submission?"
        }, 
        {
            "location": "/General/Updating/", 
            "text": "By default, LibreNMS is set to automatically update. If you have disabled this feature then you can \nperform a manual update.\n\n\nManual update\n\n\nIf you would like to perform a manual update then you can do this by running the following command \nas the \nlibrenms\n user:\n\n\n./daily.sh\n\n\nThis will update both the core LibreNMS files but also update the database\nstructure if updates are available.\n\n\nAdvanced users\n\n\nIf you absolutely must update manually without using \n./daily.sh\n then you can do so by running the following commands:\n\n\ncd /opt/librenms\ngit pull\nphp includes/sql-schema/update.php\n\n\n\n\nDisabling automatic updates\n\n\nLibreNMS by default performs updates on a daily basis. This can be disabled by setting:\n\n\n$config['update'] = 0;", 
            "title": "Updating an install"
        }, 
        {
            "location": "/General/Updating/#manual-update", 
            "text": "If you would like to perform a manual update then you can do this by running the following command \nas the  librenms  user:  ./daily.sh  This will update both the core LibreNMS files but also update the database\nstructure if updates are available.", 
            "title": "Manual update"
        }, 
        {
            "location": "/General/Updating/#advanced-users", 
            "text": "If you absolutely must update manually without using  ./daily.sh  then you can do so by running the following commands:  cd /opt/librenms\ngit pull\nphp includes/sql-schema/update.php", 
            "title": "Advanced users"
        }, 
        {
            "location": "/General/Updating/#disabling-automatic-updates", 
            "text": "LibreNMS by default performs updates on a daily basis. This can be disabled by setting:  $config['update'] = 0;", 
            "title": "Disabling automatic updates"
        }, 
        {
            "location": "/Extensions/Applications/", 
            "text": "Introduction\n\n\nYou can use Application support to graph performance statistics from many applications.\n\n\nDifferent applications support a variety of ways to collect data: by direct connection to the application, snmpd extend, or \nthe agent\n.\n\n\n\n\nApache\n - SNMP extend, Agent\n\n\nBIND9/named\n - SNMP extend, Agent\n\n\nC.H.I.P.\n - SNMP extend\n\n\nDHCP Stats\n - SNMP extend\n\n\nEXIM Stats\n - SNMP extend\n\n\nFail2ban\n - SNMP extend\n\n\nFreeBSD NFS Client\n - SNMP extend\n\n\nFreeBSD NFS Server\n - SNMP extend\n\n\nFreeRADIUS\n - SNMP extend, Agent\n\n\nFreeswitch\n - SNMP extend, Agent\n\n\nGPSD\n - Agent\n\n\nMailscanner\n - SNMP extend\n\n\nMemcached\n - SNMP extend\n\n\nMunin\n - Agent\n\n\nMySQL\n - SNMP extend, Agent\n\n\nNGINX\n - Agent\n\n\nNFS-server\n - SNMP extend\n\n\nNTP Client\n - SNMP extend\n\n\nNTP Server\n - SNMP extend\n\n\nNvidia GPU\n - SNMP extend\n\n\nOpen Grid Scheduler\n - SNMP extend\n\n\nOS Updates\n - SNMP extend\n\n\nPHP-FPM\n - SNMP extend\n\n\nPi-hole\n - SNMP extend\n\n\nPostfix\n - SNMP extend\n\n\nPostgres\n - SNMP extend\n\n\nPowerDNS\n - Agent\n\n\nPowerDNS Recursor\n - Direct, Agent\n\n\nPowerDNS dnsdist\n - SNMP extend\n\n\nProxmox\n - SNMP extend\n\n\nRaspberry PI\n - SNMP extend\n\n\nSDFS info\n - SNMP extend\n\n\nSMART\n - SNMP extend\n\n\nSquid\n - SNMP proxy\n\n\nTinyDNS/djbdns\n - Agent\n\n\nUnbound\n - Agent\n\n\nUPS-nut\n - SNMP extend\n\n\nUPS-apcups\n - SNMP extend\n\n\nZFS\n - SNMP extend\n\n\n\n\nApache\n\n\nEither use SNMP extend or use the agent.\n\n\nNote that you need to install and configure the Apache \nmod_status\n module before trying the script.\n\n\nSNMP Extend\n\n\n\n\nDownload the script onto the desired host (the host must be added to LibreNMS devices)\n\n\n\n\nwget https://raw.githubusercontent.com/librenms/librenms-agent/master/snmp/apache-stats.py -O /etc/snmp/apache-stats.py\n\n\n\n\n\n\n\n\nMake the script executable (chmod +x /etc/snmp/apache-stats.py)\n\n\n\n\n\n\nVerify it is working by running /etc/snmp/apache-stats.py\n(In some cases urlgrabber needs to be installed, in Debian it can be achieved by: apt-get install python-urlgrabber)\n\n\n\n\n\n\nEdit your snmpd.conf file (usually /etc/snmp/snmpd.conf) and add:\n\n\n\n\n\n\nextend apache /etc/snmp/apache-stats.py\n\n\n\n\n\n\nRestart snmpd on your host\n\n\n\n\nAgent\n\n\nInstall the agent\n on this device if it isn't already and copy the \napache\n script to \n/usr/lib/check_mk_agent/local/\n\n\n\n\nVerify it is working by running /usr/lib/check_mk_agent/local/apache\n(If you get error like \"Can't locate LWP/Simple.pm\". libwww-perl needs to be installed: apt-get install libwww-perl)\n\n\nOn the device page in Librenms, edit your host and check the \nApache\n under the Applications tab.\n\n\n\n\nBIND9 aka named\n\n\n1: Create stats file with appropriate permissions:\n\n\n~$ touch /var/run/named/stats\n~$ chown bind:bind /var/run/named/stats\n\n\n\n\nChange \nuser:group\n to the user and group that's running bind/named.\n\n\n2: Bind/named configuration:\n\n\noptions {\n    ...\n    statistics-file \n/var/run/named/stats\n;\n    zone-statistics yes;\n    ...\n};\n\n\n\n\n3: Restart your bind9/named after changing the configuration.\n\n\n4: Verify that everything works by executing \nrndc stats \n cat /var/run/named/stats\n. In case you get a \nPermission Denied\n error, make sure you chown'ed correctly.\n\n\n5: Also be aware that this file is appended to each time \nrndc stats\n is called. Given this it is suggested you setup file rotation for it. Alternatively you can also set zero_stats to 1 in the config.\n\n\n6: The script for this also requires the Perl module File::ReadBackwards. On FreeBSD this is available as p5-File-ReadBackwards and on linux as perl-File-ReadBackwards in CentOS/Redhat and libfile-readbackwards-perl Debian/Ubuntu. If it is not available, it can be installed by \ncpan -i File::ReadBackwards\n.\n\n\n7: You may possible need to configure the agent/extend script as well.\n\n\nThe config file's path defaults to the same path as the script, but with .config appended. So if the script is located at \n/etc/snmp/bind\n, the config file will be \n/etc/snmp/bind.config\n. Alternatively you can also specific a config via \n-c $file\n.\n\n\nAnything starting with a # is comment. The format for variables is $variable=$value. Empty lines are ignored. Spaces and tabes at either the start or end of a line are ignored.\n\n\nThe variables are as below.\n\n\nrndc = The path to rndc. Default: /usr/bin/env rndc\ncall_rndc = A 0/1 boolean on weather to call rndc stats. Suggest to set to 0 if using netdata. Default: 1\nstats_file = The path to the named stats file. Default: /var/run/named/stats\nagent = A 0/1 boolean for if this is being used as a LibreNMS agent or not. Default: 0\nzero_stats = A 0/1 boolean for if the stats file should be zeroed first. Default: 0 (1 if guessed)\n\n\n\n\nIf you want to guess at the configuration, call it with -g and it will print out what it thinks\nit should be.\n\n\n8: On the device page in Librenms, edit your host and check \nBIND\n under the Applications tab.\n\n\nSNMP Extend\n\n\n1: Copy the bind shell script, to the desired host (the host must be added to LibreNMS devices)\n\n\nwget https://github.com/librenms/librenms-agent/raw/master/snmp/bind -O /etc/snmp/bind\n\n\n\n\n2: Make the script executable (chmod +x /etc/snmp/bind)\n\n\n3: Edit your snmpd.conf file and add:\n\n\nextend bind /etc/snmp/bind\n\n\n\n\n4: Restart snmpd on the host in question.\n\n\nAgent\n\n\n1: \nInstall the agent\n on this device if it isn't already and copy the script to \n/usr/lib/check_mk_agent/local/bind\n via \nwget https://raw.githubusercontent.com/librenms/librenms-agent/master/snmp/bind -O /usr/lib/check_mk_agent/local/bind\n\n\n2: Run \nchmod +x /usr/lib/check_mk_agent/local/bind\n\n\n3: Set the variable 'agent' to '1' in the config.\n\n\nC.H.I.P\n\n\nC.H.I.P. is a $9 R8 based tiny computer ideal for small projects.\n\nFurther details: https://getchip.com/pages/chip\n\n\nSNMP Extend\n\n\n\n\nCopy the shell script to the desired host (the host must be added to LibreNMS devices)\n\n\n\n\nwget https://raw.githubusercontent.com/librenms/librenms-agent/master/snmp/chip.sh -O /etc/snmp/power-stat.sh\n\n\n\n\n\n\n\n\nMake the script executable (chmod +x /etc/snmp/power-stat.sh)\n\n\n\n\n\n\nEdit your snmpd.conf file (usually /etc/snmp/snmpd.conf) and add:\n\n\n\n\n\n\nextend power-stat /etc/snmp/power-stat.sh\n\n\n\n\n\n\nRestart snmpd on your host\n\n\n\n\nDHCP Stats\n\n\nA small shell script that reports current DHCP leases stats.\n\n\nSNMP Extend\n\n\n\n\nCopy the shell script to the desired host (the host must be added to LibreNMS devices)\n\n\n\n\nwget https://github.com/librenms/librenms-agent/raw/master/snmp/dhcp-status.sh -O /etc/snmp/dhcp-status.sh\n\n\n\n\n\n\n\n\nMake the script executable (chmod +x /etc/snmp/dhcp-status.sh)\n\n\n\n\n\n\nEdit your snmpd.conf file (usually /etc/snmp/snmpd.conf) and add:\n\n\n\n\n\n\nextend dhcpstats /etc/snmp/dhcp-status.sh\n\n\n\n\n\n\nRestart snmpd on your host\n\n\n\n\nEXIM Stats\n\n\nSNMP extend script to get your exim stats data into your host.\n\n\nSNMP Extend\n\n\n\n\n\n\nCopy the \nexim stats\n to \n/etc/snmp/\n (or any other suitable location) on your host.\n\n\n\n\n\n\nMake the script executable: \nchmod +x /etc/snmp/exim-stats.sh\n\n\n\n\n\n\nEdit your snmpd.conf file (usually \n/etc/snmp/snmpd.conf\n) and add:\n\n\n\n\n\n\nextend exim-stats /etc/snmp/exim-stats.sh\n\n\n\n\n\n\nIf you are using sudo edit your sudo users (usually \nvisudo\n) and add at the bottom:\n\n\n\n\nsnmp ALL=(ALL) NOPASSWD: /etc/snmp/exim-stats.sh, /usr/bin/exim*\n\n\n\n\n\n\nRestart snmpd on your host\n\n\n\n\nFail2ban\n\n\nSNMP Extend\n\n\n1: Copy the shell script, fail2ban, to the desired host (the host must be added to LibreNMS devices) (wget https://github.com/librenms/librenms-agent/raw/master/snmp/fail2ban -O /etc/snmp/fail2ban)\n\n\n2: Make the script executable (chmod +x /etc/snmp/fail2ban)\n\n\n3: Edit your snmpd.conf file (usually /etc/snmp/snmpd.conf) and add:\n\n\nextend fail2ban /etc/snmp/fail2ban\n\n\n\n\nIf you want to use the cache, it is as below, by using the -c switch.\n\n\nextend fail2ban /etc/snmp/fail2ban -c\n\n\n\n\nIf you want to use the cache and update it if needed, this can by using the -c and -U switches.\n\n\nextend fail2ban /etc/snmp/fail2ban -c -U\n\n\n\n\nIf you need to specify a custom location for the fail2ban-client, that can be done via the -f switch.\n\n\nIf not specified, \"/usr/bin/env fail2ban-client\" is used.\n\n\nextend fail2ban /etc/snmp/fail2ban -f /foo/bin/fail2ban-client\n\n\n\n\n5: Restart snmpd on your host\n\n\n6: If you wish to use caching, add the following to /etc/crontab and restart cron. \n\n\n*/3    *    *    *    *    root    /etc/snmp/fail2ban -u \n\n\n\n\n7: Restart or reload cron on your system.\n\n\nIf you have more than a few jails configured, you may need to use caching as each jail needs to be polled and fail2ban-client can't do so in a timely manner for than a few. This can result in failure of other SNMP information being polled.\n\n\nFor additional details of the switches, please see the POD in the script it self at the top.\n\n\nFreeBSD NFS Client\n\n\nSNMP Extend\n\n\n1: Copy the shell script, fbsdnfsserver, to the desired host (the host must be added to LibreNMS devices) (wget https://github.com/librenms/librenms-agent/raw/master/snmp/fbsdnfsclient -O /etc/snmp/fbsdnfsclient)\n\n\n2: Make the script executable (chmod +x /etc/snmp/fbsdnfsclient)\n\n\n3: Edit your snmpd.conf file and add:\n\n\nextend fbsdnfsclient /etc/snmp/fbsdnfsclient\n\n\n\n\n4: Restart snmpd on your host\n\n\nFreeBSD NFS Server\n\n\nSNMP Extend\n\n\n1: Copy the shell script, fbsdnfsserver, to the desired host (the host must be added to LibreNMS devices) (wget https://github.com/librenms/librenms-agent/raw/master/snmp/fbsdnfsserver -O /etc/snmp/fbsdnfsserver)\n\n\n2: Make the script executable (chmod +x /etc/snmp/fbsdnfsserver)\n\n\n3: Edit your snmpd.conf file and add:\n\n\nextend fbsdnfsserver /etc/snmp/fbsdnfsserver\n\n\n\n\n4: Restart snmpd on your host\n\n\nFreeRADIUS\n\n\nThe FreeRADIUS application extension requires that status_server be enabled in your FreeRADIUS config.  For more information see: https://wiki.freeradius.org/config/Status\n\n\nYou should note that status requests increment the FreeRADIUS request stats.  So LibreNMS polls will ultimately be reflected in your stats/charts.\n\n\n1: Go to your FreeRADIUS configuration directory (usually /etc/raddb or /etc/freeradius).\n\n\n2: \ncd sites-enabled\n\n\n3: \nln -s ../sites-available/status status\n\n\n4: Restart FreeRADIUS.\n\n\n5: You should be able to test with the radclient as follows...\n\n\necho \nMessage-Authenticator = 0x00, FreeRADIUS-Statistics-Type = 31, Response-Packet-Type = Access-Accept\n | \\\nradclient -x localhost:18121 status adminsecret\n\n\n\n\nNote that adminsecret is the default secret key in status_server.  Change if you've modified this.\n\n\nSNMP Extend\n\n\n1: Copy the freeradius shell script, to the desired host (the host must be added to LibreNMS devices)\n\n\nwget https://raw.githubusercontent.com/librenms/librenms-agent/master/snmp/freeradius.sh -O /etc/snmp/freeradius.sh\n\n\n\n\n2: Make the script executable (chmod +x /etc/snmp/freeradius.sh)\n\n\n3: If you've made any changes to the FreeRADIUS status_server config (secret key, port, etc.) edit freeradius.sh and adjust the config variable accordingly.\n\n\n4: Edit your snmpd.conf file and add:\n\n\nextend freeradius /etc/snmp/freeradius.sh\n\n\n\n\n5: Restart snmpd on the host in question.\n\n\nAgent\n\n\n1: \nInstall the agent\n on this device if it isn't already and copy the script to \n/usr/lib/check_mk_agent/local/freeradius.sh\n via \nwget https://raw.githubusercontent.com/librenms/librenms-agent/master/snmp/freeradius.sh -O /usr/lib/check_mk_agent/local/freeradius.sh\n\n\n2: Run \nchmod +x /usr/lib/check_mk_agent/local/freeradius.sh\n\n\n3: If you've made any changes to the FreeRADIUS status_server config (secret key, port, etc.) edit freeradius.sh and adjust the config variable accordingly.\n\n\n4: Edit the freeradius.sh script and set the variable 'AGENT' to '1' in the config.\n\n\nFreeswitch\n\n\nA small shell script that reports various Freeswitch call status.\n\n\nAgent\n\n\n\n\n\n\nInstall the agent\n on your Freeswitch server if it isn't already\n\n\n\n\n\n\nCopy the \nfreeswitch script\n to \n/usr/lib/check_mk_agent/local/\n\n\n\n\n\n\nConfigure \nFSCLI\n in the script. You may also have to create an \n/etc/fs_cli.conf\n file if your \nfs_cli\n command requires authentication.\n\n\n\n\n\n\nVerify it is working by running \n/usr/lib/check_mk_agent/local/freeswitch\n\n\n\n\n\n\nSNMP Extend\n\n\n\n\n\n\nCopy the \nfreeswitch script\n to \n/etc/snmp/\n on your Freeswitch server.\n\n\n\n\n\n\nMake the script executable: \nchmod +x /etc/snmp/freeswitch\n\n\n\n\n\n\nConfigure \nFSCLI\n in the script. You may also have to create an \n/etc/fs_cli.conf\n file if your \nfs_cli\n command requires authentication.\n\n\n\n\n\n\nVerify it is working by running \n/etc/snmp/freeswitch\n\n\n\n\n\n\nEdit your snmpd.conf file (usually \n/etc/snmp/snmpd.conf\n) and add:\n\n\n\n\n\n\nextend freeswitch /etc/snmp/freeswitch\n\n\n\n\n\n\nRestart snmpd on your host\n\n\n\n\nGPSD\n\n\nA small shell script that reports GPSD status.\n\n\nAgent\n\n\nInstall the agent\n on this device if it isn't already and copy the \ngpsd\n script to \n/usr/lib/check_mk_agent/local/\n\n\nYou may need to configure \n$server\n or \n$port\n.\n\n\nVerify it is working by running \n/usr/lib/check_mk_agent/local/gpsd\n\n\nMailscanner\n\n\nSNMP Extend\n\n\n\n\nDownload the script onto the desired host (the host must be added to LibreNMS devices)\n\n\n\n\nwget https://raw.githubusercontent.com/librenms/librenms-agent/master/snmp/mailscanner.php -O /etc/snmp/mailscanner.php\n\n\n\n\n\n\n\n\nMake the script executable (chmod +x /etc/snmp/mailscanner.php)\n\n\n\n\n\n\nEdit your snmpd.conf file (usually /etc/snmp/snmpd.conf) and add:\n\n\n\n\n\n\nextend mailscanner /etc/snmp/mailscanner.php\n\n\n\n\n\n\nRestart snmpd on your host\n\n\n\n\nMemcached\n\n\nSNMP Extend\n\n\n\n\n\n\nCopy the \nmemcached script\n to \n/etc/snmp/\n on your remote server.\n\n\n\n\n\n\nMake the script executable: \nchmod +x /etc/snmp/memcached\n\n\n\n\n\n\nEdit your snmpd.conf file (usually \n/etc/snmp/snmpd.conf\n) and add:\n\n\n\n\n\n\nextend memcached /etc/snmp/memcached\n\n\n\n\n\n\nRestart snmpd on your host\n\n\n\n\nMunin\n\n\nAgent\n\n\n\n\nInstall the script to your agent: \nwget https://raw.githubusercontent.com/librenms/librenms-agent/master/agent-local/munin -O /usr/lib/check_mk_agent/local/munin\n\n\nMake the script executable (\nchmod +x /usr/lib/check_mk_agent/local/munin\n)\n\n\nCreate the munin scripts dir: \nmkdir -p /usr/share/munin/munin-scripts\n\n\nInstall your munin scripts into the above directory.\n\n\n\n\nTo create your own custom munin scripts, please see this example:\n\n\n#!/bin/bash\nif [ \n$1\n = \nconfig\n ]; then\n    echo 'graph_title Some title'\n    echo 'graph_args --base 1000 -l 0' #not required\n    echo 'graph_vlabel Some label'\n    echo 'graph_scale no' #not required, can be yes/no\n    echo 'graph_category system' #Choose something meaningful, can be anything\n    echo 'graph_info This graph shows something awesome.' #Short desc\n    echo 'foobar.label Label for your unit' # Repeat these two lines as much as you like\n    echo 'foobar.info Desc for your unit.'\n    exit 0\nfi\necho -n \nfoobar.value \n $(date +%s) #Populate a value, here unix-timestamp\n\n\n\n\nMySQL\n\n\nAgent\n\n\nInstall the agent\n on this device if it isn't already and copy the \nmysql\n script to \n/usr/lib/check_mk_agent/local/\n\n\nThe MySQL script requires PHP-CLI and the PHP MySQL extension, so please verify those are installed.\n\n\nCentOS (May vary based on PHP version)\n\n\nyum install php-cli php-mysql\n\n\n\n\nDebian (May vary based on PHP version)\n\n\napt-get install php5-cli php5-mysql\n\n\n\n\nUnlike most other scripts, the MySQL script requires a configuration file \nmysql.cnf\n in the same directory as the extend or agent script with following content:\n\n\n?php\n$mysql_user = 'root';\n$mysql_pass = 'toor';\n$mysql_host = 'localhost';\n$mysql_port = 3306;\n\n\n\n\nSNMP extend\n\n\n1: Copy the mysql script to the desired host (the host must be added to LibreNMS devices) (wget https://github.com/librenms/librenms-agent/raw/master/snmp/mysql -O /etc/snmp/mysql )\n\n\n2: Make the scripts executable (chmod +x /etc/snmp/mysql)\n\n\n3: Make sure you set hostname, user, and pass are properly set in \n/etc/snmp/mysql.cnf\n\n\n4: Edit your snmpd.conf file and add:\n\n\nextend mysql /etc/snmp/mysql\n\n\n\n\n4: Restart snmpd.\n\n\n5: Install the PHP CLI language and your MySQL module of choice for PHP.\n\n\nAgent\n\n\nInstall the agent\n on this device if it isn't already and copy the \nmysql\n script to \n/usr/lib/check_mk_agent/local/\n\n\nMake sure you set hostname, user, and pass are properly set in `/usr/lib/check_mk_agent/local/mysql.cnf\n\n\nVerify it is working by running \n/usr/lib/check_mk_agent/local/mysql\n\n\nNGINX\n\n\nNGINX is a free, open-source, high-performance HTTP server: https://www.nginx.org/\n\n\nIt's required to have the following directive in your nginx configuration responsible for the localhost server:\n\n\nlocation /nginx-status {\n    stub_status on;\n    access_log   off;\n    allow 127.0.0.1;\n    deny all;\n}\n\n\n\n\nSNMP Extend\n\n\n\n\nDownload the script onto the desired host (the host must be added to LibreNMS devices)\n\n\n\n\nwget https://raw.githubusercontent.com/librenms/librenms-agent/master/snmp/nginx-stats -O /etc/snmp/nginx-stats\n\n\n\n\n\n\n\n\nMake the script executable (chmod +x /etc/snmp/nginx-stats)\n\n\n\n\n\n\nEdit your snmpd.conf file (usually /etc/snmp/snmpd.conf) and add:\n\n\n\n\n\n\nextend nginx /etc/snmp/nginx-stats\n\n\n\n\n\n\nRestart snmpd on your host\n\n\n\n\nAgent\n\n\nInstall the agent\n on this device if it isn't already and copy the \nnginx\n script to \n/usr/lib/check_mk_agent/local/\n\n\nNFS-server\n\n\nExport the NFS stats from as server.\n\n\nSNMP Extend\n\n\n\n\nEdit your snmpd.conf file (usually /etc/snmp/snmpd.conf) and add :\n\n\n\n\nextend nfs-server /bin/cat /proc/net/rpc/nfsd\n\n\n\n\nnote : find out where cat is located using : \nwhich cat\n\n\n\n\nreload snmpd service to activate the configuration\n\n\n\n\nNTP Client\n\n\nA shell script that gets stats from ntp client.\n\n\nSNMP Extend\n\n\n\n\nDownload the script onto the desired host (the host must be added to LibreNMS devices)\n\n\n\n\nwget https://raw.githubusercontent.com/librenms/librenms-agent/master/snmp/ntp-client.sh -O /etc/snmp/ntp-client.sh\n\n\n\n\n\n\n\n\nMake the script executable (chmod +x /etc/snmp/ntp-client.sh)\n\n\n\n\n\n\nEdit your snmpd.conf file (usually /etc/snmp/snmpd.conf) and add:\n\n\n\n\n\n\nextend ntp-client /etc/snmp/ntp-client.sh\n\n\n\n\n\n\nRestart snmpd on your host\n\n\n\n\nNTP Server (NTPD)\n\n\nA shell script that gets stats from ntp server (ntpd).\n\n\nSNMP Extend\n\n\n\n\nDownload the script onto the desired host (the host must be added to LibreNMS devices)\n\n\n\n\nwget https://raw.githubusercontent.com/librenms/librenms-agent/master/snmp/ntp-server.sh -O /etc/snmp/ntp-server.sh\n\n\n\n\n\n\n\n\nMake the script executable (chmod +x /etc/snmp/ntp-server.sh)\n\n\n\n\n\n\nEdit your snmpd.conf file (usually /etc/snmp/snmpd.conf) and add:\n\n\n\n\n\n\nextend ntp-server /etc/snmp/ntp-server.sh\n\n\n\n\n\n\nRestart snmpd on your host\n\n\n\n\nNvidia GPU\n\n\nSNMP Extend\n\n\n1: Copy the shell script, nvidia, to the desired host (the host must be added to LibreNMS devices) (wget https://github.com/librenms/librenms-agent/raw/master/snmp/nvidia -O /etc/snmp/nvidia)\n\n\n2: Make the script executable (chmod +x /etc/snmp/nvidia)\n\n\n3: Edit your snmpd.conf file and add:\n\n\nextend nvidia /etc/snmp/nvidia\n\n\n\n\n5: Restart snmpd on your host.\n\n\n6: Verify you have nvidia-smi installed, which it generally should be if you have the driver from Nvida installed.\n\n\nThe GPU numbering on the graphs will correspond to how the nvidia-smi sees them as being.\n\n\nFor questions about what the various values are/mean, please see the nvidia-smi man file under the section covering dmon.\n\n\nOpen Grid Scheduler\n\n\nShell script to track the OGS/GE jobs running on clusters.\n\n\nSNMP Extend\n\n\n\n\nDownload the script onto the desired host (the host must be added to LibreNMS devices)\n\n\n\n\nwget https://raw.githubusercontent.com/librenms/librenms-agent/master/agent-local/rocks.sh -O /etc/snmp/rocks.sh\n\n\n\n\n\n\n\n\nMake the script executable (chmod +x /etc/snmp/rocks.sh)\n\n\n\n\n\n\nEdit your snmpd.conf file (usually /etc/snmp/snmpd.conf) and add:\n\n\n\n\n\n\nextend ogs /etc/snmp/rocks.sh\n\n\n\n\nOS Updates\n\n\nA small shell script that checks your system package manager for any available updates. Supports apt-get/pacman/yum/zypper package managers).\n\n\nFor pacman users automatically refreshing the database, it is recommended you use an alternative database location \n--dbpath=/var/lib/pacman/checkupdate\n\n\nSNMP Extend\n\n\n\n\nDownload the script onto the desired host (the host must be added to LibreNMS devices)\n\n\n\n\nwget https://raw.githubusercontent.com/librenms/librenms-agent/master/snmp/os-updates.sh -O /etc/snmp/os-updates.sh\n\n\n\n\n\n\n\n\nMake the script executable (chmod +x /etc/snmp/os-updates.sh)\n\n\n\n\n\n\nEdit your snmpd.conf file (usually /etc/snmp/snmpd.conf) and add:\n\n\n\n\n\n\nextend osupdate /etc/snmp/os-updates.sh\n\n\n\n\n\n\nRestart snmpd on your host\n\n\n\n\nNote\n: apt-get depends on an updated package index. There are several ways to have your system run \napt-get update\n automatically. The easiest is to create \n/etc/apt/apt.conf.d/10periodic\n and pasting the following in it: \nAPT::Periodic::Update-Package-Lists \"1\";\n.\nIf you have apticron, cron-apt or apt-listchanges installed and configured, chances are that packages are already updated periodically.\n\n\nPHP-FPM\n\n\nSNMP Extend\n\n\n\n\n\n\nCopy the shell script, phpfpm-sp, to the desired host (the host must be added to LibreNMS devices) (wget https://github.com/librenms/librenms-agent/raw/master/snmp/phpfpm-sp -O /etc/snmp/phpfpm-sp)\n\n\n\n\n\n\nMake the script executable (chmod +x /etc/snmp/phpfpm-sp)\n\n\n\n\n\n\nEdit your snmpd.conf file (usually /etc/snmp/snmpd.conf) and add:\n\n\n\n\n\n\nextend phpfpmsp /etc/snmp/phpfpm-sp\n\n\n\n\n5: Edit /etc/snmp/phpfpm-sp to include the status URL for the PHP-FPM pool you are monitoring.\n6. Restart snmpd on your host\n\n\nIt is worth noting that this only monitors a single pool. If you want to monitor multiple pools, this won't do it.\n\n\nPi-hole\n\n\nSNMP Extend\n\n\n1: Copy the shell script, pi-hole, to the desired host (the host must be added to LibreNMS devices) (wget https://github.com/librenms/librenms-agent/raw/master/snmp/pi-hole -O /etc/snmp/pi-hole)\n\n\n2: Make the script executable (chmod +x /etc/snmp/pi-hole)\n\n\n3: Edit your snmpd.conf file and add:\n\n\nextend pi-hole /etc/snmp/pi-hole\n\n\n\n\n4: To get all data you must get your API auth token from Pi-hole server and change the API_AUTH_KEY entry inside the snmp script.\n\n\n5: Restard snmpd.\n\n\n6: On the device page in Librenms, edit your host and check the \nPi-hole\n under the Applications tab or wait for it to be auto-discovered.\n\n\nPostfix\n\n\nSNMP Extend\n\n\n1: Copy the shell script, postfix-queues, to the desired host (the host must be added to LibreNMS devices) (wget https://github.com/librenms/librenms-agent/raw/master/snmp/postfix-queues -O /etc/snmp/postfix-queues)\n\n\n2: Copy the Perl script, postfixdetailed, to the desired host (the host must be added to LibreNMS devices) (wget https://github.com/librenms/librenms-agent/raw/master/snmp/postfixdetailed -O /etc/snmp/postfixdetailed)\n\n\n3: Make the scripts executable (chmod +x /etc/snmp/postfixdetailed /etc/snmp/postfix-queues)\n\n\n4: Edit your snmpd.conf file and add:\n\n\nextend mailq /etc/snmp/postfix-queues\nextend postfixdetailed /etc/snmp/postfixdetailed\n\n\n\n\n5: Restart snmpd.\n\n\n6: Install pflogsumm for your OS.\n\n\n7: Make sure the cache file in /etc/snmp/postfixdetailed is some place that snmpd can write too. This file is used for tracking changes between various values between each time it is called by snmpd. Also make sure the path for pflogsumm is correct.\n\n\n8: Run /etc/snmp/postfixdetailed to create the initial cache file so you don't end up with some crazy initial starting value.\nPlease note that each time /etc/snmp/postfixdetailed is ran, the cache file is updated, so if this happens in between LibreNMS doing it then the values will be thrown off for that polling period.\n\n\nPostgres\n\n\nSNMP Extend\n\n\n1: Copy the shell script, postgres, to the desired host (the host must be added to LibreNMS devices) (wget https://github.com/librenms/librenms-agent/raw/master/snmp/postgres -O /etc/snmp/postgres)\n\n\n2: Make the script executable (chmod +x /etc/snmp/postgres)\n\n\n3: Edit your snmpd.conf file and add:\n\n\nextend postgres /etc/snmp/postgres\n\n\n\n\n4: Restart snmpd on your host\n\n\n5: Install the Nagios check check_postgres.pl on your system.\n\n\n6: Verify the path to check_postgres.pl in /etc/snmp/postgres is correct.\n\n\n7: If you wish it to ignore the database postgres for totalling up the stats, set ignorePG to 1(the default) in /etc/snmp/postgres. If you are using netdata or the like, you may wish to set this or otherwise that total will be very skewed on systems with light or moderate usage.\n\n\nPowerDNS\n\n\nAn authoritative DNS server: https://www.powerdns.com/auth.html\n\n\nSNMP Extend\n\n\nAgent\n\n\nInstall the agent\n on this device if it isn't already and copy the \npowerdns\n script to \n/usr/lib/check_mk_agent/local/\n\n\nPowerDNS Recursor\n\n\nA recursive DNS server: https://www.powerdns.com/recursor.html\n\n\nDirect\n\n\nThe LibreNMS polling host must be able to connect to port 8082 on the monitored device.\nThe web-server must be enabled, see the Recursor docs: https://doc.powerdns.com/md/recursor/settings/#webserver\n\n\nVariables\n\n\n$config['apps']['powerdns-recursor']['api-key']\n required, this is defined in the Recursor config\n\n$config['apps']['powerdns-recursor']['port']\n numeric, defines the port to connect to PowerDNS Recursor on.  The default is 8082\n\n$config['apps']['powerdns-recursor']['https']\n true or false, defaults to use http.\n\n\nSNMP Extend\n\n\n1: Copy the shell script, powerdns-recursor, to the desired host (the host must be added to LibreNMS devices) (wget https://github.com/librenms/librenms-agent/raw/master/snmp/powerdns-recursor -O /etc/snmp/powerdns-recursor)\n\n\n2: Make the script executable (chmod +x /etc/snmp/powerdns-recursor)\n\n\n3: Edit your snmpd.conf file and add:\n\n\nextend powerdns-recursor /etc/snmp/powerdns-recursor\n\n\n\n\n4: Restart snmpd on your host\n\n\nAgent\n\n\nInstall the agent\n on this device if it isn't already and copy the \npowerdns-recursor\n script to \n/usr/lib/check_mk_agent/local/\n\n\nThis script uses \nrec_control get-all\n to collect stats.\n\n\nPowerDNS-dnsdist\n\n\nSNMP Extend\n\n\n\n\nCopy the BASH script to the desired host (the host must be added to LibreNMS devices)\n\n\n\n\nwget https://github.com/librenms/librenms-agent/raw/master/snmp/powerdns-dnsdist -O /etc/snmp/powerdns-dnsdist   \n\n\n\n\n\n\n\n\nMake the script executable (chmod +x /etc/snmp/powerdns-dnsdist)\n\n\n\n\n\n\nEdit your snmpd.conf file (usually /etc/snmp/snmpd.conf) and add:\n\n\n\n\n\n\nextend powerdns-dnsdist /etc/snmp/powerdns-dnsdist\n\n\n\n\n\n\nRestart snmpd on your host.\n\n\n\n\nProxmox\n\n\n\n\n\n\nFor Proxmox 4.4+ install the libpve-apiclient-perl package\n\napt install libpve-apiclient-perl\n\n\n\n\n\n\nDownload the script onto the desired host (the host must be added to LibreNMS devices)\n\nwget https://raw.githubusercontent.com/librenms/librenms-agent/master/agent-local/proxmox -O /usr/local/bin/proxmox\n\n\n\n\n\n\nMake the script executable: \nchmod +x /usr/local/bin/proxmox\n\n\n\n\n\n\nEdit your snmpd.conf file (usually \n/etc/snmp/snmpd.conf\n) and add:\n\nextend proxmox /usr/local/bin/proxmox\n\n\n\n\n\n\nNote: if your snmpd doesn't run as root, you might have to invoke the script using sudo and modify the \"extend\" line\n\n\n\n\n\n\nextend proxmox /usr/bin/sudo /usr/local/bin/proxmox \n\n\n\n\nafter, edit your sudo users (usually \nvisudo\n) and add at the bottom:\n\n\nsnmp ALL=(ALL) NOPASSWD: /usr/local/bin/proxmox\n\n\n\n\n\n\nRestart snmpd on your host\n\n\n\n\nRaspberry PI\n\n\nSNMP extend script to get your PI data into your host.\n\n\nSNMP Extend\n\n\n\n\n\n\nCopy the \nraspberry script\n to \n/etc/snmp/\n (or any other suitable location) on your PI host.\n\n\n\n\n\n\nMake the script executable: \nchmod +x /etc/snmp/raspberry.sh\n\n\n\n\n\n\nEdit your snmpd.conf file (usually \n/etc/snmp/snmpd.conf\n) and add:\n\n\n\n\n\n\nextend raspberry /etc/snmp/raspberry.sh\n\n\n\n\n\n\nEdit your sudo users (usually \nvisudo\n) and add at the bottom:\n\n\n\n\nsnmp ALL=(ALL) NOPASSWD: /etc/snmp/raspberry.sh, /usr/bin/vcgencmd*\n\n\n\n\n\n\nRestart snmpd on PI host\n\n\n\n\nSMART\n\n\nSNMP Extend\n\n\n1: Copy the Perl script, smart, to the desired host (the host must be added to LibreNMS devices) (wget https://github.com/librenms/librenms-agent/raw/master/snmp/smart -O /etc/snmp/smart)\n\n\n2: Make the script executable (chmod +x /etc/snmp/smart)\n\n\n3: Edit your snmpd.conf file and add:\n\n\nextend smart /etc/snmp/smart\n\n\n\n\n4: You will also need to create the config file, which defaults to the same path as the script, but with .config appended. So if the script is located at /etc/snmp/smart, the config file will be /etc/snmp/smart.config. Alternatively you can also specific a config via -c.\n\n\nAnything starting with a # is comment. The format for variables is $variable=$value. Empty lines are ignored. Spaces and tabes at either the start or end of a line are ignored. Any line with out a = or # are treated as a disk.\n\n\n#This is a comment\ncache=/var/cache/smart\nsmartctl=/usr/bin/env smartctl\nada0\nada1\n\n\n\n\nThe variables are as below.\n\n\ncache = The path to the cache file to use. Default: /var/cache/smart\nsmartctl = The path to use for smartctl. Default: /usr/bin/env smartctl\n\n\n\n\nIf you want to guess at the configuration, call it with -g and it will print out what it thinks\nit should be. This will result in a usable config, but may miss some less common disk devices.\n\n\n5: Restart snmpd on your host\n\n\nIf you have a large number of more than one or two disks on a system, you should consider adding this to cron. Also make sure the cache file is some place it can be written to.\n\n\n */3 * * * * /etc/snmp/smart -u\n\n\n\n\n\n\nIf your snmp agent runs as user \"snmp\", edit your sudo users (usually \nvisudo\n) and add at the bottom:\n\n\n\n\nsnmp ALL=(ALL) NOPASSWD: /etc/snmp/smart, /usr/sbin/smartctl\n\n\n\n\nand modify your snmpd.conf file accordingly:\n\n\nextend smart /usr/bin/sudo /etc/snmp/smart\n\n\n\n\nSquid\n\n\nSNMP Proxy\n\n\n1: Enable SNMP for Squid like below, if you have not already, and restart it.\n\n\nacl snmppublic snmp_community public\nsnmp_port 3401\nsnmp_access allow snmppublic localhost\nsnmp_access deny all\n\n\n\n\n2: Restart squid on your host.\n\n\n3: Edit your snmpd.conf file and add, making sure you have the same community, host, and port as above:\n\n\nproxy -v 2c -c public 127.0.0.1:3401 1.3.6.1.4.1.3495\n\n\n\n\nFor more advanced information on Squid and SNMP or setting up proxying for net-snmp, please see the links below.\n\n\nhttp://wiki.squid-cache.org/Features/Snmp\nhttp://www.net-snmp.org/wiki/index.php/Snmpd_proxy\n\n\nTinyDNS aka  djbdns\n\n\nAgent\n\n\nInstall the agent\n on this device if it isn't already and copy the \ntinydns\n script to \n/usr/lib/check_mk_agent/local/\n\n\nNote\n: We assume that you use DJB's \nDaemontools\n to start/stop tinydns.\nAnd that your tinydns instance is located in \n/service/dns\n, adjust this path if necessary.\n\n\n\n\nReplace your \nlog\n's \nrun\n file, typically located in \n/service/dns/log/run\n with:\n\n\n\n\n#!/bin/sh\nexec setuidgid dnslog tinystats ./main/tinystats/ multilog t n3 s250000 ./main/\n\n\n\n\n\n\nCreate tinystats directory and chown:\n\n\n\n\nmkdir /service/dns/log/main/tinystats\nchown dnslog:nofiles /service/dns/log/main/tinystats\n\n\n\n\n\n\nRestart TinyDNS and Daemontools: \n/etc/init.d/svscan restart\n\n   \nNote\n: Some say \nsvc -t /service/dns\n is enough, on my install (Gentoo) it doesn't rehook the logging and I'm forced to restart it entirely.\n\n\n\n\nUnbound\n\n\nUnbound configuration:\n\n\n# Enable extended statistics.\nserver:\n        extended-statistics: yes\n        statistics-cumulative: yes\n\nremote-control:\n        control-enable: yes\n        control-interface: 127.0.0.1\n\n\n\n\n\nRestart your unbound after changing the configuration, verify it is working by running 'unbound-control stats'.\n\n\nAgent\n\n\nInstall the agent\n on this device if it isn't already and copy the \nunbound.sh\n script to \n/usr/lib/check_mk_agent/local/\n\n\nSNMP Extend\n\n\n1: Copy the shell script, unbound, to the desired host (the host must be added to LibreNMS devices) (wget https://github.com/librenms/librenms-agent/raw/master/snmp/unbound -O /etc/snmp/unbound)\n\n\n2: Make the scripts executable (chmod +x /etc/snmp/unbound)\n\n\n3: Edit your snmpd.conf file and add:\n\n\nextend unbound /etc/snmp/unbound\n\n\n\n\n4: Restart snmpd.\n\n\nUPS-nut\n\n\nA small shell script that exports nut ups status.\n\n\nSNMP Extend\n\n\n\n\n\n\nCopy the \nups nut\n to \n/etc/snmp/\n on your host.\n\n\n\n\n\n\nMake the script executable (chmod +x /etc/snmp/ups-nut.sh)\n\n\n\n\n\n\nEdit your snmpd.conf file (usually /etc/snmp/snmpd.conf) and add:\n\n\n\n\n\n\nextend ups-nut /etc/snmp/ups-nut.sh\n\n\n\n\n\n\nRestart snmpd on your host\n\n\n\n\nUPS-apcups\n\n\nA small shell script that exports apcacess ups status.\n\n\nSNMP Extend\n\n\n\n\n\n\nCopy the \nups apcups\n to \n/etc/snmp/\n on your host.\n\n\n\n\n\n\nMake the script executable (chmod +x /etc/snmp/ups-apcups.sh)\n\n\n\n\n\n\nEdit your snmpd.conf file (usually /etc/snmp/snmpd.conf) and add:\n\n\n\n\n\n\nextend ups-apcups /etc/snmp/ups-apcups.sh\n\n\n\n\n\n\n\n\nRestart snmpd on your host\n\n\n\n\n\n\nOn the device page in Librenms, edit your host and check the \nUPS apcups\n under the Applications tab.\n\n\n\n\n\n\nSDFS info\n\n\nA small shell script that exportfs SDFS volume info.\n\n\nSNMP Extend\n\n\n\n\nDownload the script onto the desired host (the host must be added to LibreNMS devices)\n\n\n\n\nwget https://raw.githubusercontent.com/librenms/librenms-agent/master/snmp/sdfsinfo -O /etc/snmp/sdfsinfo\n\n\n\n\n\n\n\n\nMake the script executable (chmod +x /etc/snmp/sdfsinfo)\n\n\n\n\n\n\nEdit your snmpd.conf file (usually /etc/snmp/snmpd.conf) and add:\n\n\n\n\n\n\nextend sdfsinfo /etc/snmp/sdfsinfo\n\n\n\n\n\n\n\n\nRestart snmpd on your host\n\n\n\n\n\n\nOn the device page in Librenms, edit your host and check the \nSDFS info\n under the Applications tab or wait for it to be auto-discovered.\n\n\n\n\n\n\nZFS\n\n\nSNMP Extend\n\n\n\n\nCopy the perl script to the desired host (the host must be added to LibreNMS devices)\n\n\n\n\nwget https://github.com/librenms/librenms-agent/raw/master/snmp/zfs-freebsd -O /etc/snmp/zfs-freebsd\n\n\n\n\n\n\n\n\nMake the script executable (chmod +x /etc/snmp/zfs-freebsd)\n\n\n\n\n\n\nEdit your snmpd.conf file (usually /etc/snmp/snmpd.conf) and add:\n\n\n\n\n\n\nextend zfs /etc/snmp/zfs-freebsd\n\n\n\n\n\n\nRestart snmpd on your host\n\n\n\n\nAt this time, only FreeBSD is support. Linux support is eventually planned.", 
            "title": "Applications"
        }, 
        {
            "location": "/Extensions/Applications/#introduction", 
            "text": "You can use Application support to graph performance statistics from many applications.  Different applications support a variety of ways to collect data: by direct connection to the application, snmpd extend, or  the agent .   Apache  - SNMP extend, Agent  BIND9/named  - SNMP extend, Agent  C.H.I.P.  - SNMP extend  DHCP Stats  - SNMP extend  EXIM Stats  - SNMP extend  Fail2ban  - SNMP extend  FreeBSD NFS Client  - SNMP extend  FreeBSD NFS Server  - SNMP extend  FreeRADIUS  - SNMP extend, Agent  Freeswitch  - SNMP extend, Agent  GPSD  - Agent  Mailscanner  - SNMP extend  Memcached  - SNMP extend  Munin  - Agent  MySQL  - SNMP extend, Agent  NGINX  - Agent  NFS-server  - SNMP extend  NTP Client  - SNMP extend  NTP Server  - SNMP extend  Nvidia GPU  - SNMP extend  Open Grid Scheduler  - SNMP extend  OS Updates  - SNMP extend  PHP-FPM  - SNMP extend  Pi-hole  - SNMP extend  Postfix  - SNMP extend  Postgres  - SNMP extend  PowerDNS  - Agent  PowerDNS Recursor  - Direct, Agent  PowerDNS dnsdist  - SNMP extend  Proxmox  - SNMP extend  Raspberry PI  - SNMP extend  SDFS info  - SNMP extend  SMART  - SNMP extend  Squid  - SNMP proxy  TinyDNS/djbdns  - Agent  Unbound  - Agent  UPS-nut  - SNMP extend  UPS-apcups  - SNMP extend  ZFS  - SNMP extend", 
            "title": "Introduction"
        }, 
        {
            "location": "/Extensions/Applications/#apache", 
            "text": "Either use SNMP extend or use the agent.  Note that you need to install and configure the Apache  mod_status  module before trying the script.", 
            "title": "Apache"
        }, 
        {
            "location": "/Extensions/Applications/#snmp-extend", 
            "text": "Download the script onto the desired host (the host must be added to LibreNMS devices)   wget https://raw.githubusercontent.com/librenms/librenms-agent/master/snmp/apache-stats.py -O /etc/snmp/apache-stats.py    Make the script executable (chmod +x /etc/snmp/apache-stats.py)    Verify it is working by running /etc/snmp/apache-stats.py\n(In some cases urlgrabber needs to be installed, in Debian it can be achieved by: apt-get install python-urlgrabber)    Edit your snmpd.conf file (usually /etc/snmp/snmpd.conf) and add:    extend apache /etc/snmp/apache-stats.py   Restart snmpd on your host", 
            "title": "SNMP Extend"
        }, 
        {
            "location": "/Extensions/Applications/#agent", 
            "text": "Install the agent  on this device if it isn't already and copy the  apache  script to  /usr/lib/check_mk_agent/local/   Verify it is working by running /usr/lib/check_mk_agent/local/apache\n(If you get error like \"Can't locate LWP/Simple.pm\". libwww-perl needs to be installed: apt-get install libwww-perl)  On the device page in Librenms, edit your host and check the  Apache  under the Applications tab.", 
            "title": "Agent"
        }, 
        {
            "location": "/Extensions/Applications/#bind9-aka-named", 
            "text": "1: Create stats file with appropriate permissions:  ~$ touch /var/run/named/stats\n~$ chown bind:bind /var/run/named/stats  Change  user:group  to the user and group that's running bind/named.  2: Bind/named configuration:  options {\n    ...\n    statistics-file  /var/run/named/stats ;\n    zone-statistics yes;\n    ...\n};  3: Restart your bind9/named after changing the configuration.  4: Verify that everything works by executing  rndc stats   cat /var/run/named/stats . In case you get a  Permission Denied  error, make sure you chown'ed correctly.  5: Also be aware that this file is appended to each time  rndc stats  is called. Given this it is suggested you setup file rotation for it. Alternatively you can also set zero_stats to 1 in the config.  6: The script for this also requires the Perl module File::ReadBackwards. On FreeBSD this is available as p5-File-ReadBackwards and on linux as perl-File-ReadBackwards in CentOS/Redhat and libfile-readbackwards-perl Debian/Ubuntu. If it is not available, it can be installed by  cpan -i File::ReadBackwards .  7: You may possible need to configure the agent/extend script as well.  The config file's path defaults to the same path as the script, but with .config appended. So if the script is located at  /etc/snmp/bind , the config file will be  /etc/snmp/bind.config . Alternatively you can also specific a config via  -c $file .  Anything starting with a # is comment. The format for variables is $variable=$value. Empty lines are ignored. Spaces and tabes at either the start or end of a line are ignored.  The variables are as below.  rndc = The path to rndc. Default: /usr/bin/env rndc\ncall_rndc = A 0/1 boolean on weather to call rndc stats. Suggest to set to 0 if using netdata. Default: 1\nstats_file = The path to the named stats file. Default: /var/run/named/stats\nagent = A 0/1 boolean for if this is being used as a LibreNMS agent or not. Default: 0\nzero_stats = A 0/1 boolean for if the stats file should be zeroed first. Default: 0 (1 if guessed)  If you want to guess at the configuration, call it with -g and it will print out what it thinks\nit should be.  8: On the device page in Librenms, edit your host and check  BIND  under the Applications tab.", 
            "title": "BIND9 aka named"
        }, 
        {
            "location": "/Extensions/Applications/#snmp-extend_1", 
            "text": "1: Copy the bind shell script, to the desired host (the host must be added to LibreNMS devices)  wget https://github.com/librenms/librenms-agent/raw/master/snmp/bind -O /etc/snmp/bind  2: Make the script executable (chmod +x /etc/snmp/bind)  3: Edit your snmpd.conf file and add:  extend bind /etc/snmp/bind  4: Restart snmpd on the host in question.", 
            "title": "SNMP Extend"
        }, 
        {
            "location": "/Extensions/Applications/#agent_1", 
            "text": "1:  Install the agent  on this device if it isn't already and copy the script to  /usr/lib/check_mk_agent/local/bind  via  wget https://raw.githubusercontent.com/librenms/librenms-agent/master/snmp/bind -O /usr/lib/check_mk_agent/local/bind  2: Run  chmod +x /usr/lib/check_mk_agent/local/bind  3: Set the variable 'agent' to '1' in the config.", 
            "title": "Agent"
        }, 
        {
            "location": "/Extensions/Applications/#chip", 
            "text": "C.H.I.P. is a $9 R8 based tiny computer ideal for small projects. \nFurther details: https://getchip.com/pages/chip", 
            "title": "C.H.I.P"
        }, 
        {
            "location": "/Extensions/Applications/#snmp-extend_2", 
            "text": "Copy the shell script to the desired host (the host must be added to LibreNMS devices)   wget https://raw.githubusercontent.com/librenms/librenms-agent/master/snmp/chip.sh -O /etc/snmp/power-stat.sh    Make the script executable (chmod +x /etc/snmp/power-stat.sh)    Edit your snmpd.conf file (usually /etc/snmp/snmpd.conf) and add:    extend power-stat /etc/snmp/power-stat.sh   Restart snmpd on your host", 
            "title": "SNMP Extend"
        }, 
        {
            "location": "/Extensions/Applications/#dhcp-stats", 
            "text": "A small shell script that reports current DHCP leases stats.", 
            "title": "DHCP Stats"
        }, 
        {
            "location": "/Extensions/Applications/#snmp-extend_3", 
            "text": "Copy the shell script to the desired host (the host must be added to LibreNMS devices)   wget https://github.com/librenms/librenms-agent/raw/master/snmp/dhcp-status.sh -O /etc/snmp/dhcp-status.sh    Make the script executable (chmod +x /etc/snmp/dhcp-status.sh)    Edit your snmpd.conf file (usually /etc/snmp/snmpd.conf) and add:    extend dhcpstats /etc/snmp/dhcp-status.sh   Restart snmpd on your host", 
            "title": "SNMP Extend"
        }, 
        {
            "location": "/Extensions/Applications/#exim-stats", 
            "text": "SNMP extend script to get your exim stats data into your host.", 
            "title": "EXIM Stats"
        }, 
        {
            "location": "/Extensions/Applications/#snmp-extend_4", 
            "text": "Copy the  exim stats  to  /etc/snmp/  (or any other suitable location) on your host.    Make the script executable:  chmod +x /etc/snmp/exim-stats.sh    Edit your snmpd.conf file (usually  /etc/snmp/snmpd.conf ) and add:    extend exim-stats /etc/snmp/exim-stats.sh   If you are using sudo edit your sudo users (usually  visudo ) and add at the bottom:   snmp ALL=(ALL) NOPASSWD: /etc/snmp/exim-stats.sh, /usr/bin/exim*   Restart snmpd on your host", 
            "title": "SNMP Extend"
        }, 
        {
            "location": "/Extensions/Applications/#fail2ban", 
            "text": "", 
            "title": "Fail2ban"
        }, 
        {
            "location": "/Extensions/Applications/#snmp-extend_5", 
            "text": "1: Copy the shell script, fail2ban, to the desired host (the host must be added to LibreNMS devices) (wget https://github.com/librenms/librenms-agent/raw/master/snmp/fail2ban -O /etc/snmp/fail2ban)  2: Make the script executable (chmod +x /etc/snmp/fail2ban)  3: Edit your snmpd.conf file (usually /etc/snmp/snmpd.conf) and add:  extend fail2ban /etc/snmp/fail2ban  If you want to use the cache, it is as below, by using the -c switch.  extend fail2ban /etc/snmp/fail2ban -c  If you want to use the cache and update it if needed, this can by using the -c and -U switches.  extend fail2ban /etc/snmp/fail2ban -c -U  If you need to specify a custom location for the fail2ban-client, that can be done via the -f switch.  If not specified, \"/usr/bin/env fail2ban-client\" is used.  extend fail2ban /etc/snmp/fail2ban -f /foo/bin/fail2ban-client  5: Restart snmpd on your host  6: If you wish to use caching, add the following to /etc/crontab and restart cron.   */3    *    *    *    *    root    /etc/snmp/fail2ban -u   7: Restart or reload cron on your system.  If you have more than a few jails configured, you may need to use caching as each jail needs to be polled and fail2ban-client can't do so in a timely manner for than a few. This can result in failure of other SNMP information being polled.  For additional details of the switches, please see the POD in the script it self at the top.", 
            "title": "SNMP Extend"
        }, 
        {
            "location": "/Extensions/Applications/#freebsd-nfs-client", 
            "text": "", 
            "title": "FreeBSD NFS Client"
        }, 
        {
            "location": "/Extensions/Applications/#snmp-extend_6", 
            "text": "1: Copy the shell script, fbsdnfsserver, to the desired host (the host must be added to LibreNMS devices) (wget https://github.com/librenms/librenms-agent/raw/master/snmp/fbsdnfsclient -O /etc/snmp/fbsdnfsclient)  2: Make the script executable (chmod +x /etc/snmp/fbsdnfsclient)  3: Edit your snmpd.conf file and add:  extend fbsdnfsclient /etc/snmp/fbsdnfsclient  4: Restart snmpd on your host", 
            "title": "SNMP Extend"
        }, 
        {
            "location": "/Extensions/Applications/#freebsd-nfs-server", 
            "text": "", 
            "title": "FreeBSD NFS Server"
        }, 
        {
            "location": "/Extensions/Applications/#snmp-extend_7", 
            "text": "1: Copy the shell script, fbsdnfsserver, to the desired host (the host must be added to LibreNMS devices) (wget https://github.com/librenms/librenms-agent/raw/master/snmp/fbsdnfsserver -O /etc/snmp/fbsdnfsserver)  2: Make the script executable (chmod +x /etc/snmp/fbsdnfsserver)  3: Edit your snmpd.conf file and add:  extend fbsdnfsserver /etc/snmp/fbsdnfsserver  4: Restart snmpd on your host", 
            "title": "SNMP Extend"
        }, 
        {
            "location": "/Extensions/Applications/#freeradius", 
            "text": "The FreeRADIUS application extension requires that status_server be enabled in your FreeRADIUS config.  For more information see: https://wiki.freeradius.org/config/Status  You should note that status requests increment the FreeRADIUS request stats.  So LibreNMS polls will ultimately be reflected in your stats/charts.  1: Go to your FreeRADIUS configuration directory (usually /etc/raddb or /etc/freeradius).  2:  cd sites-enabled  3:  ln -s ../sites-available/status status  4: Restart FreeRADIUS.  5: You should be able to test with the radclient as follows...  echo  Message-Authenticator = 0x00, FreeRADIUS-Statistics-Type = 31, Response-Packet-Type = Access-Accept  | \\\nradclient -x localhost:18121 status adminsecret  Note that adminsecret is the default secret key in status_server.  Change if you've modified this.", 
            "title": "FreeRADIUS"
        }, 
        {
            "location": "/Extensions/Applications/#snmp-extend_8", 
            "text": "1: Copy the freeradius shell script, to the desired host (the host must be added to LibreNMS devices)  wget https://raw.githubusercontent.com/librenms/librenms-agent/master/snmp/freeradius.sh -O /etc/snmp/freeradius.sh  2: Make the script executable (chmod +x /etc/snmp/freeradius.sh)  3: If you've made any changes to the FreeRADIUS status_server config (secret key, port, etc.) edit freeradius.sh and adjust the config variable accordingly.  4: Edit your snmpd.conf file and add:  extend freeradius /etc/snmp/freeradius.sh  5: Restart snmpd on the host in question.", 
            "title": "SNMP Extend"
        }, 
        {
            "location": "/Extensions/Applications/#agent_2", 
            "text": "1:  Install the agent  on this device if it isn't already and copy the script to  /usr/lib/check_mk_agent/local/freeradius.sh  via  wget https://raw.githubusercontent.com/librenms/librenms-agent/master/snmp/freeradius.sh -O /usr/lib/check_mk_agent/local/freeradius.sh  2: Run  chmod +x /usr/lib/check_mk_agent/local/freeradius.sh  3: If you've made any changes to the FreeRADIUS status_server config (secret key, port, etc.) edit freeradius.sh and adjust the config variable accordingly.  4: Edit the freeradius.sh script and set the variable 'AGENT' to '1' in the config.", 
            "title": "Agent"
        }, 
        {
            "location": "/Extensions/Applications/#freeswitch", 
            "text": "A small shell script that reports various Freeswitch call status.", 
            "title": "Freeswitch"
        }, 
        {
            "location": "/Extensions/Applications/#agent_3", 
            "text": "Install the agent  on your Freeswitch server if it isn't already    Copy the  freeswitch script  to  /usr/lib/check_mk_agent/local/    Configure  FSCLI  in the script. You may also have to create an  /etc/fs_cli.conf  file if your  fs_cli  command requires authentication.    Verify it is working by running  /usr/lib/check_mk_agent/local/freeswitch", 
            "title": "Agent"
        }, 
        {
            "location": "/Extensions/Applications/#snmp-extend_9", 
            "text": "Copy the  freeswitch script  to  /etc/snmp/  on your Freeswitch server.    Make the script executable:  chmod +x /etc/snmp/freeswitch    Configure  FSCLI  in the script. You may also have to create an  /etc/fs_cli.conf  file if your  fs_cli  command requires authentication.    Verify it is working by running  /etc/snmp/freeswitch    Edit your snmpd.conf file (usually  /etc/snmp/snmpd.conf ) and add:    extend freeswitch /etc/snmp/freeswitch   Restart snmpd on your host", 
            "title": "SNMP Extend"
        }, 
        {
            "location": "/Extensions/Applications/#gpsd", 
            "text": "A small shell script that reports GPSD status.", 
            "title": "GPSD"
        }, 
        {
            "location": "/Extensions/Applications/#agent_4", 
            "text": "Install the agent  on this device if it isn't already and copy the  gpsd  script to  /usr/lib/check_mk_agent/local/  You may need to configure  $server  or  $port .  Verify it is working by running  /usr/lib/check_mk_agent/local/gpsd", 
            "title": "Agent"
        }, 
        {
            "location": "/Extensions/Applications/#mailscanner", 
            "text": "", 
            "title": "Mailscanner"
        }, 
        {
            "location": "/Extensions/Applications/#snmp-extend_10", 
            "text": "Download the script onto the desired host (the host must be added to LibreNMS devices)   wget https://raw.githubusercontent.com/librenms/librenms-agent/master/snmp/mailscanner.php -O /etc/snmp/mailscanner.php    Make the script executable (chmod +x /etc/snmp/mailscanner.php)    Edit your snmpd.conf file (usually /etc/snmp/snmpd.conf) and add:    extend mailscanner /etc/snmp/mailscanner.php   Restart snmpd on your host", 
            "title": "SNMP Extend"
        }, 
        {
            "location": "/Extensions/Applications/#memcached", 
            "text": "", 
            "title": "Memcached"
        }, 
        {
            "location": "/Extensions/Applications/#snmp-extend_11", 
            "text": "Copy the  memcached script  to  /etc/snmp/  on your remote server.    Make the script executable:  chmod +x /etc/snmp/memcached    Edit your snmpd.conf file (usually  /etc/snmp/snmpd.conf ) and add:    extend memcached /etc/snmp/memcached   Restart snmpd on your host", 
            "title": "SNMP Extend"
        }, 
        {
            "location": "/Extensions/Applications/#munin", 
            "text": "", 
            "title": "Munin"
        }, 
        {
            "location": "/Extensions/Applications/#agent_5", 
            "text": "Install the script to your agent:  wget https://raw.githubusercontent.com/librenms/librenms-agent/master/agent-local/munin -O /usr/lib/check_mk_agent/local/munin  Make the script executable ( chmod +x /usr/lib/check_mk_agent/local/munin )  Create the munin scripts dir:  mkdir -p /usr/share/munin/munin-scripts  Install your munin scripts into the above directory.   To create your own custom munin scripts, please see this example:  #!/bin/bash\nif [  $1  =  config  ]; then\n    echo 'graph_title Some title'\n    echo 'graph_args --base 1000 -l 0' #not required\n    echo 'graph_vlabel Some label'\n    echo 'graph_scale no' #not required, can be yes/no\n    echo 'graph_category system' #Choose something meaningful, can be anything\n    echo 'graph_info This graph shows something awesome.' #Short desc\n    echo 'foobar.label Label for your unit' # Repeat these two lines as much as you like\n    echo 'foobar.info Desc for your unit.'\n    exit 0\nfi\necho -n  foobar.value   $(date +%s) #Populate a value, here unix-timestamp", 
            "title": "Agent"
        }, 
        {
            "location": "/Extensions/Applications/#mysql", 
            "text": "", 
            "title": "MySQL"
        }, 
        {
            "location": "/Extensions/Applications/#agent_6", 
            "text": "Install the agent  on this device if it isn't already and copy the  mysql  script to  /usr/lib/check_mk_agent/local/  The MySQL script requires PHP-CLI and the PHP MySQL extension, so please verify those are installed.  CentOS (May vary based on PHP version)  yum install php-cli php-mysql  Debian (May vary based on PHP version)  apt-get install php5-cli php5-mysql  Unlike most other scripts, the MySQL script requires a configuration file  mysql.cnf  in the same directory as the extend or agent script with following content:  ?php\n$mysql_user = 'root';\n$mysql_pass = 'toor';\n$mysql_host = 'localhost';\n$mysql_port = 3306;", 
            "title": "Agent"
        }, 
        {
            "location": "/Extensions/Applications/#snmp-extend_12", 
            "text": "1: Copy the mysql script to the desired host (the host must be added to LibreNMS devices) (wget https://github.com/librenms/librenms-agent/raw/master/snmp/mysql -O /etc/snmp/mysql )  2: Make the scripts executable (chmod +x /etc/snmp/mysql)  3: Make sure you set hostname, user, and pass are properly set in  /etc/snmp/mysql.cnf  4: Edit your snmpd.conf file and add:  extend mysql /etc/snmp/mysql  4: Restart snmpd.  5: Install the PHP CLI language and your MySQL module of choice for PHP.", 
            "title": "SNMP extend"
        }, 
        {
            "location": "/Extensions/Applications/#agent_7", 
            "text": "Install the agent  on this device if it isn't already and copy the  mysql  script to  /usr/lib/check_mk_agent/local/  Make sure you set hostname, user, and pass are properly set in `/usr/lib/check_mk_agent/local/mysql.cnf  Verify it is working by running  /usr/lib/check_mk_agent/local/mysql", 
            "title": "Agent"
        }, 
        {
            "location": "/Extensions/Applications/#nginx", 
            "text": "NGINX is a free, open-source, high-performance HTTP server: https://www.nginx.org/  It's required to have the following directive in your nginx configuration responsible for the localhost server:  location /nginx-status {\n    stub_status on;\n    access_log   off;\n    allow 127.0.0.1;\n    deny all;\n}", 
            "title": "NGINX"
        }, 
        {
            "location": "/Extensions/Applications/#snmp-extend_13", 
            "text": "Download the script onto the desired host (the host must be added to LibreNMS devices)   wget https://raw.githubusercontent.com/librenms/librenms-agent/master/snmp/nginx-stats -O /etc/snmp/nginx-stats    Make the script executable (chmod +x /etc/snmp/nginx-stats)    Edit your snmpd.conf file (usually /etc/snmp/snmpd.conf) and add:    extend nginx /etc/snmp/nginx-stats   Restart snmpd on your host", 
            "title": "SNMP Extend"
        }, 
        {
            "location": "/Extensions/Applications/#agent_8", 
            "text": "Install the agent  on this device if it isn't already and copy the  nginx  script to  /usr/lib/check_mk_agent/local/", 
            "title": "Agent"
        }, 
        {
            "location": "/Extensions/Applications/#nfs-server", 
            "text": "Export the NFS stats from as server.", 
            "title": "NFS-server"
        }, 
        {
            "location": "/Extensions/Applications/#snmp-extend_14", 
            "text": "Edit your snmpd.conf file (usually /etc/snmp/snmpd.conf) and add :   extend nfs-server /bin/cat /proc/net/rpc/nfsd  note : find out where cat is located using :  which cat   reload snmpd service to activate the configuration", 
            "title": "SNMP Extend"
        }, 
        {
            "location": "/Extensions/Applications/#ntp-client", 
            "text": "A shell script that gets stats from ntp client.", 
            "title": "NTP Client"
        }, 
        {
            "location": "/Extensions/Applications/#snmp-extend_15", 
            "text": "Download the script onto the desired host (the host must be added to LibreNMS devices)   wget https://raw.githubusercontent.com/librenms/librenms-agent/master/snmp/ntp-client.sh -O /etc/snmp/ntp-client.sh    Make the script executable (chmod +x /etc/snmp/ntp-client.sh)    Edit your snmpd.conf file (usually /etc/snmp/snmpd.conf) and add:    extend ntp-client /etc/snmp/ntp-client.sh   Restart snmpd on your host", 
            "title": "SNMP Extend"
        }, 
        {
            "location": "/Extensions/Applications/#ntp-server-ntpd", 
            "text": "A shell script that gets stats from ntp server (ntpd).", 
            "title": "NTP Server (NTPD)"
        }, 
        {
            "location": "/Extensions/Applications/#snmp-extend_16", 
            "text": "Download the script onto the desired host (the host must be added to LibreNMS devices)   wget https://raw.githubusercontent.com/librenms/librenms-agent/master/snmp/ntp-server.sh -O /etc/snmp/ntp-server.sh    Make the script executable (chmod +x /etc/snmp/ntp-server.sh)    Edit your snmpd.conf file (usually /etc/snmp/snmpd.conf) and add:    extend ntp-server /etc/snmp/ntp-server.sh   Restart snmpd on your host", 
            "title": "SNMP Extend"
        }, 
        {
            "location": "/Extensions/Applications/#nvidia-gpu", 
            "text": "", 
            "title": "Nvidia GPU"
        }, 
        {
            "location": "/Extensions/Applications/#snmp-extend_17", 
            "text": "1: Copy the shell script, nvidia, to the desired host (the host must be added to LibreNMS devices) (wget https://github.com/librenms/librenms-agent/raw/master/snmp/nvidia -O /etc/snmp/nvidia)  2: Make the script executable (chmod +x /etc/snmp/nvidia)  3: Edit your snmpd.conf file and add:  extend nvidia /etc/snmp/nvidia  5: Restart snmpd on your host.  6: Verify you have nvidia-smi installed, which it generally should be if you have the driver from Nvida installed.  The GPU numbering on the graphs will correspond to how the nvidia-smi sees them as being.  For questions about what the various values are/mean, please see the nvidia-smi man file under the section covering dmon.", 
            "title": "SNMP Extend"
        }, 
        {
            "location": "/Extensions/Applications/#open-grid-scheduler", 
            "text": "Shell script to track the OGS/GE jobs running on clusters.", 
            "title": "Open Grid Scheduler"
        }, 
        {
            "location": "/Extensions/Applications/#snmp-extend_18", 
            "text": "Download the script onto the desired host (the host must be added to LibreNMS devices)   wget https://raw.githubusercontent.com/librenms/librenms-agent/master/agent-local/rocks.sh -O /etc/snmp/rocks.sh    Make the script executable (chmod +x /etc/snmp/rocks.sh)    Edit your snmpd.conf file (usually /etc/snmp/snmpd.conf) and add:    extend ogs /etc/snmp/rocks.sh", 
            "title": "SNMP Extend"
        }, 
        {
            "location": "/Extensions/Applications/#os-updates", 
            "text": "A small shell script that checks your system package manager for any available updates. Supports apt-get/pacman/yum/zypper package managers).  For pacman users automatically refreshing the database, it is recommended you use an alternative database location  --dbpath=/var/lib/pacman/checkupdate", 
            "title": "OS Updates"
        }, 
        {
            "location": "/Extensions/Applications/#snmp-extend_19", 
            "text": "Download the script onto the desired host (the host must be added to LibreNMS devices)   wget https://raw.githubusercontent.com/librenms/librenms-agent/master/snmp/os-updates.sh -O /etc/snmp/os-updates.sh    Make the script executable (chmod +x /etc/snmp/os-updates.sh)    Edit your snmpd.conf file (usually /etc/snmp/snmpd.conf) and add:    extend osupdate /etc/snmp/os-updates.sh   Restart snmpd on your host   Note : apt-get depends on an updated package index. There are several ways to have your system run  apt-get update  automatically. The easiest is to create  /etc/apt/apt.conf.d/10periodic  and pasting the following in it:  APT::Periodic::Update-Package-Lists \"1\"; .\nIf you have apticron, cron-apt or apt-listchanges installed and configured, chances are that packages are already updated periodically.", 
            "title": "SNMP Extend"
        }, 
        {
            "location": "/Extensions/Applications/#php-fpm", 
            "text": "", 
            "title": "PHP-FPM"
        }, 
        {
            "location": "/Extensions/Applications/#snmp-extend_20", 
            "text": "Copy the shell script, phpfpm-sp, to the desired host (the host must be added to LibreNMS devices) (wget https://github.com/librenms/librenms-agent/raw/master/snmp/phpfpm-sp -O /etc/snmp/phpfpm-sp)    Make the script executable (chmod +x /etc/snmp/phpfpm-sp)    Edit your snmpd.conf file (usually /etc/snmp/snmpd.conf) and add:    extend phpfpmsp /etc/snmp/phpfpm-sp  5: Edit /etc/snmp/phpfpm-sp to include the status URL for the PHP-FPM pool you are monitoring.\n6. Restart snmpd on your host  It is worth noting that this only monitors a single pool. If you want to monitor multiple pools, this won't do it.", 
            "title": "SNMP Extend"
        }, 
        {
            "location": "/Extensions/Applications/#pi-hole", 
            "text": "", 
            "title": "Pi-hole"
        }, 
        {
            "location": "/Extensions/Applications/#snmp-extend_21", 
            "text": "1: Copy the shell script, pi-hole, to the desired host (the host must be added to LibreNMS devices) (wget https://github.com/librenms/librenms-agent/raw/master/snmp/pi-hole -O /etc/snmp/pi-hole)  2: Make the script executable (chmod +x /etc/snmp/pi-hole)  3: Edit your snmpd.conf file and add:  extend pi-hole /etc/snmp/pi-hole  4: To get all data you must get your API auth token from Pi-hole server and change the API_AUTH_KEY entry inside the snmp script.  5: Restard snmpd.  6: On the device page in Librenms, edit your host and check the  Pi-hole  under the Applications tab or wait for it to be auto-discovered.", 
            "title": "SNMP Extend"
        }, 
        {
            "location": "/Extensions/Applications/#postfix", 
            "text": "", 
            "title": "Postfix"
        }, 
        {
            "location": "/Extensions/Applications/#snmp-extend_22", 
            "text": "1: Copy the shell script, postfix-queues, to the desired host (the host must be added to LibreNMS devices) (wget https://github.com/librenms/librenms-agent/raw/master/snmp/postfix-queues -O /etc/snmp/postfix-queues)  2: Copy the Perl script, postfixdetailed, to the desired host (the host must be added to LibreNMS devices) (wget https://github.com/librenms/librenms-agent/raw/master/snmp/postfixdetailed -O /etc/snmp/postfixdetailed)  3: Make the scripts executable (chmod +x /etc/snmp/postfixdetailed /etc/snmp/postfix-queues)  4: Edit your snmpd.conf file and add:  extend mailq /etc/snmp/postfix-queues\nextend postfixdetailed /etc/snmp/postfixdetailed  5: Restart snmpd.  6: Install pflogsumm for your OS.  7: Make sure the cache file in /etc/snmp/postfixdetailed is some place that snmpd can write too. This file is used for tracking changes between various values between each time it is called by snmpd. Also make sure the path for pflogsumm is correct.  8: Run /etc/snmp/postfixdetailed to create the initial cache file so you don't end up with some crazy initial starting value.\nPlease note that each time /etc/snmp/postfixdetailed is ran, the cache file is updated, so if this happens in between LibreNMS doing it then the values will be thrown off for that polling period.", 
            "title": "SNMP Extend"
        }, 
        {
            "location": "/Extensions/Applications/#postgres", 
            "text": "", 
            "title": "Postgres"
        }, 
        {
            "location": "/Extensions/Applications/#snmp-extend_23", 
            "text": "1: Copy the shell script, postgres, to the desired host (the host must be added to LibreNMS devices) (wget https://github.com/librenms/librenms-agent/raw/master/snmp/postgres -O /etc/snmp/postgres)  2: Make the script executable (chmod +x /etc/snmp/postgres)  3: Edit your snmpd.conf file and add:  extend postgres /etc/snmp/postgres  4: Restart snmpd on your host  5: Install the Nagios check check_postgres.pl on your system.  6: Verify the path to check_postgres.pl in /etc/snmp/postgres is correct.  7: If you wish it to ignore the database postgres for totalling up the stats, set ignorePG to 1(the default) in /etc/snmp/postgres. If you are using netdata or the like, you may wish to set this or otherwise that total will be very skewed on systems with light or moderate usage.", 
            "title": "SNMP Extend"
        }, 
        {
            "location": "/Extensions/Applications/#powerdns", 
            "text": "An authoritative DNS server: https://www.powerdns.com/auth.html", 
            "title": "PowerDNS"
        }, 
        {
            "location": "/Extensions/Applications/#snmp-extend_24", 
            "text": "", 
            "title": "SNMP Extend"
        }, 
        {
            "location": "/Extensions/Applications/#agent_9", 
            "text": "Install the agent  on this device if it isn't already and copy the  powerdns  script to  /usr/lib/check_mk_agent/local/", 
            "title": "Agent"
        }, 
        {
            "location": "/Extensions/Applications/#powerdns-recursor", 
            "text": "A recursive DNS server: https://www.powerdns.com/recursor.html", 
            "title": "PowerDNS Recursor"
        }, 
        {
            "location": "/Extensions/Applications/#direct", 
            "text": "The LibreNMS polling host must be able to connect to port 8082 on the monitored device.\nThe web-server must be enabled, see the Recursor docs: https://doc.powerdns.com/md/recursor/settings/#webserver", 
            "title": "Direct"
        }, 
        {
            "location": "/Extensions/Applications/#variables", 
            "text": "$config['apps']['powerdns-recursor']['api-key']  required, this is defined in the Recursor config $config['apps']['powerdns-recursor']['port']  numeric, defines the port to connect to PowerDNS Recursor on.  The default is 8082 $config['apps']['powerdns-recursor']['https']  true or false, defaults to use http.", 
            "title": "Variables"
        }, 
        {
            "location": "/Extensions/Applications/#snmp-extend_25", 
            "text": "1: Copy the shell script, powerdns-recursor, to the desired host (the host must be added to LibreNMS devices) (wget https://github.com/librenms/librenms-agent/raw/master/snmp/powerdns-recursor -O /etc/snmp/powerdns-recursor)  2: Make the script executable (chmod +x /etc/snmp/powerdns-recursor)  3: Edit your snmpd.conf file and add:  extend powerdns-recursor /etc/snmp/powerdns-recursor  4: Restart snmpd on your host", 
            "title": "SNMP Extend"
        }, 
        {
            "location": "/Extensions/Applications/#agent_10", 
            "text": "Install the agent  on this device if it isn't already and copy the  powerdns-recursor  script to  /usr/lib/check_mk_agent/local/  This script uses  rec_control get-all  to collect stats.", 
            "title": "Agent"
        }, 
        {
            "location": "/Extensions/Applications/#powerdns-dnsdist", 
            "text": "", 
            "title": "PowerDNS-dnsdist"
        }, 
        {
            "location": "/Extensions/Applications/#snmp-extend_26", 
            "text": "Copy the BASH script to the desired host (the host must be added to LibreNMS devices)   wget https://github.com/librenms/librenms-agent/raw/master/snmp/powerdns-dnsdist -O /etc/snmp/powerdns-dnsdist       Make the script executable (chmod +x /etc/snmp/powerdns-dnsdist)    Edit your snmpd.conf file (usually /etc/snmp/snmpd.conf) and add:    extend powerdns-dnsdist /etc/snmp/powerdns-dnsdist   Restart snmpd on your host.", 
            "title": "SNMP Extend"
        }, 
        {
            "location": "/Extensions/Applications/#proxmox", 
            "text": "For Proxmox 4.4+ install the libpve-apiclient-perl package apt install libpve-apiclient-perl    Download the script onto the desired host (the host must be added to LibreNMS devices) wget https://raw.githubusercontent.com/librenms/librenms-agent/master/agent-local/proxmox -O /usr/local/bin/proxmox    Make the script executable:  chmod +x /usr/local/bin/proxmox    Edit your snmpd.conf file (usually  /etc/snmp/snmpd.conf ) and add: extend proxmox /usr/local/bin/proxmox    Note: if your snmpd doesn't run as root, you might have to invoke the script using sudo and modify the \"extend\" line    extend proxmox /usr/bin/sudo /usr/local/bin/proxmox   after, edit your sudo users (usually  visudo ) and add at the bottom:  snmp ALL=(ALL) NOPASSWD: /usr/local/bin/proxmox   Restart snmpd on your host", 
            "title": "Proxmox"
        }, 
        {
            "location": "/Extensions/Applications/#raspberry-pi", 
            "text": "SNMP extend script to get your PI data into your host.", 
            "title": "Raspberry PI"
        }, 
        {
            "location": "/Extensions/Applications/#snmp-extend_27", 
            "text": "Copy the  raspberry script  to  /etc/snmp/  (or any other suitable location) on your PI host.    Make the script executable:  chmod +x /etc/snmp/raspberry.sh    Edit your snmpd.conf file (usually  /etc/snmp/snmpd.conf ) and add:    extend raspberry /etc/snmp/raspberry.sh   Edit your sudo users (usually  visudo ) and add at the bottom:   snmp ALL=(ALL) NOPASSWD: /etc/snmp/raspberry.sh, /usr/bin/vcgencmd*   Restart snmpd on PI host", 
            "title": "SNMP Extend"
        }, 
        {
            "location": "/Extensions/Applications/#smart", 
            "text": "", 
            "title": "SMART"
        }, 
        {
            "location": "/Extensions/Applications/#snmp-extend_28", 
            "text": "1: Copy the Perl script, smart, to the desired host (the host must be added to LibreNMS devices) (wget https://github.com/librenms/librenms-agent/raw/master/snmp/smart -O /etc/snmp/smart)  2: Make the script executable (chmod +x /etc/snmp/smart)  3: Edit your snmpd.conf file and add:  extend smart /etc/snmp/smart  4: You will also need to create the config file, which defaults to the same path as the script, but with .config appended. So if the script is located at /etc/snmp/smart, the config file will be /etc/snmp/smart.config. Alternatively you can also specific a config via -c.  Anything starting with a # is comment. The format for variables is $variable=$value. Empty lines are ignored. Spaces and tabes at either the start or end of a line are ignored. Any line with out a = or # are treated as a disk.  #This is a comment\ncache=/var/cache/smart\nsmartctl=/usr/bin/env smartctl\nada0\nada1  The variables are as below.  cache = The path to the cache file to use. Default: /var/cache/smart\nsmartctl = The path to use for smartctl. Default: /usr/bin/env smartctl  If you want to guess at the configuration, call it with -g and it will print out what it thinks\nit should be. This will result in a usable config, but may miss some less common disk devices.  5: Restart snmpd on your host  If you have a large number of more than one or two disks on a system, you should consider adding this to cron. Also make sure the cache file is some place it can be written to.   */3 * * * * /etc/snmp/smart -u   If your snmp agent runs as user \"snmp\", edit your sudo users (usually  visudo ) and add at the bottom:   snmp ALL=(ALL) NOPASSWD: /etc/snmp/smart, /usr/sbin/smartctl  and modify your snmpd.conf file accordingly:  extend smart /usr/bin/sudo /etc/snmp/smart", 
            "title": "SNMP Extend"
        }, 
        {
            "location": "/Extensions/Applications/#squid", 
            "text": "", 
            "title": "Squid"
        }, 
        {
            "location": "/Extensions/Applications/#snmp-proxy", 
            "text": "1: Enable SNMP for Squid like below, if you have not already, and restart it.  acl snmppublic snmp_community public\nsnmp_port 3401\nsnmp_access allow snmppublic localhost\nsnmp_access deny all  2: Restart squid on your host.  3: Edit your snmpd.conf file and add, making sure you have the same community, host, and port as above:  proxy -v 2c -c public 127.0.0.1:3401 1.3.6.1.4.1.3495  For more advanced information on Squid and SNMP or setting up proxying for net-snmp, please see the links below.  http://wiki.squid-cache.org/Features/Snmp\nhttp://www.net-snmp.org/wiki/index.php/Snmpd_proxy", 
            "title": "SNMP Proxy"
        }, 
        {
            "location": "/Extensions/Applications/#tinydns-aka-djbdns", 
            "text": "", 
            "title": "TinyDNS aka  djbdns"
        }, 
        {
            "location": "/Extensions/Applications/#agent_11", 
            "text": "Install the agent  on this device if it isn't already and copy the  tinydns  script to  /usr/lib/check_mk_agent/local/  Note : We assume that you use DJB's  Daemontools  to start/stop tinydns.\nAnd that your tinydns instance is located in  /service/dns , adjust this path if necessary.   Replace your  log 's  run  file, typically located in  /service/dns/log/run  with:   #!/bin/sh\nexec setuidgid dnslog tinystats ./main/tinystats/ multilog t n3 s250000 ./main/   Create tinystats directory and chown:   mkdir /service/dns/log/main/tinystats\nchown dnslog:nofiles /service/dns/log/main/tinystats   Restart TinyDNS and Daemontools:  /etc/init.d/svscan restart \n    Note : Some say  svc -t /service/dns  is enough, on my install (Gentoo) it doesn't rehook the logging and I'm forced to restart it entirely.", 
            "title": "Agent"
        }, 
        {
            "location": "/Extensions/Applications/#unbound", 
            "text": "Unbound configuration:  # Enable extended statistics.\nserver:\n        extended-statistics: yes\n        statistics-cumulative: yes\n\nremote-control:\n        control-enable: yes\n        control-interface: 127.0.0.1  Restart your unbound after changing the configuration, verify it is working by running 'unbound-control stats'.", 
            "title": "Unbound"
        }, 
        {
            "location": "/Extensions/Applications/#agent_12", 
            "text": "Install the agent  on this device if it isn't already and copy the  unbound.sh  script to  /usr/lib/check_mk_agent/local/", 
            "title": "Agent"
        }, 
        {
            "location": "/Extensions/Applications/#snmp-extend_29", 
            "text": "1: Copy the shell script, unbound, to the desired host (the host must be added to LibreNMS devices) (wget https://github.com/librenms/librenms-agent/raw/master/snmp/unbound -O /etc/snmp/unbound)  2: Make the scripts executable (chmod +x /etc/snmp/unbound)  3: Edit your snmpd.conf file and add:  extend unbound /etc/snmp/unbound  4: Restart snmpd.", 
            "title": "SNMP Extend"
        }, 
        {
            "location": "/Extensions/Applications/#ups-nut", 
            "text": "A small shell script that exports nut ups status.", 
            "title": "UPS-nut"
        }, 
        {
            "location": "/Extensions/Applications/#snmp-extend_30", 
            "text": "Copy the  ups nut  to  /etc/snmp/  on your host.    Make the script executable (chmod +x /etc/snmp/ups-nut.sh)    Edit your snmpd.conf file (usually /etc/snmp/snmpd.conf) and add:    extend ups-nut /etc/snmp/ups-nut.sh   Restart snmpd on your host", 
            "title": "SNMP Extend"
        }, 
        {
            "location": "/Extensions/Applications/#ups-apcups", 
            "text": "A small shell script that exports apcacess ups status.", 
            "title": "UPS-apcups"
        }, 
        {
            "location": "/Extensions/Applications/#snmp-extend_31", 
            "text": "Copy the  ups apcups  to  /etc/snmp/  on your host.    Make the script executable (chmod +x /etc/snmp/ups-apcups.sh)    Edit your snmpd.conf file (usually /etc/snmp/snmpd.conf) and add:    extend ups-apcups /etc/snmp/ups-apcups.sh    Restart snmpd on your host    On the device page in Librenms, edit your host and check the  UPS apcups  under the Applications tab.", 
            "title": "SNMP Extend"
        }, 
        {
            "location": "/Extensions/Applications/#sdfs-info", 
            "text": "A small shell script that exportfs SDFS volume info.", 
            "title": "SDFS info"
        }, 
        {
            "location": "/Extensions/Applications/#snmp-extend_32", 
            "text": "Download the script onto the desired host (the host must be added to LibreNMS devices)   wget https://raw.githubusercontent.com/librenms/librenms-agent/master/snmp/sdfsinfo -O /etc/snmp/sdfsinfo    Make the script executable (chmod +x /etc/snmp/sdfsinfo)    Edit your snmpd.conf file (usually /etc/snmp/snmpd.conf) and add:    extend sdfsinfo /etc/snmp/sdfsinfo    Restart snmpd on your host    On the device page in Librenms, edit your host and check the  SDFS info  under the Applications tab or wait for it to be auto-discovered.", 
            "title": "SNMP Extend"
        }, 
        {
            "location": "/Extensions/Applications/#zfs", 
            "text": "", 
            "title": "ZFS"
        }, 
        {
            "location": "/Extensions/Applications/#snmp-extend_33", 
            "text": "Copy the perl script to the desired host (the host must be added to LibreNMS devices)   wget https://github.com/librenms/librenms-agent/raw/master/snmp/zfs-freebsd -O /etc/snmp/zfs-freebsd    Make the script executable (chmod +x /etc/snmp/zfs-freebsd)    Edit your snmpd.conf file (usually /etc/snmp/snmpd.conf) and add:    extend zfs /etc/snmp/zfs-freebsd   Restart snmpd on your host   At this time, only FreeBSD is support. Linux support is eventually planned.", 
            "title": "SNMP Extend"
        }, 
        {
            "location": "/Extensions/Agent-Setup/", 
            "text": "The agent can be used to gather data from remote systems you can use LibreNMS in combination with check_mk (found \nhere\n).\nThe agent can be extended to include data about \napplications\n on the remote system.\n\n\nMake sure that systemd or xinetd is installed on the host you want to run the agent on.\n\n\nThe agent uses TCP-Port 6556, please allow access from the \nLibreNMS host\n and \npoller nodes\n if you're using the \nDistributed Polling\n setup.\n\n\nOn each of the hosts you would like to use the agent on, you need to do the following:\n\n\n\n\nClone the \nlibrenms-agent\n repository:\n\n\n\n\ncd /opt/\ngit clone https://github.com/librenms/librenms-agent.git\ncd librenms-agent\n\n\n\n\n\n\nCopy the relevant check_mk_agent to \n/usr/bin\n:\n\n\n\n\n\n\n\n\n\n\nlinux\n\n\nfreebsd\n\n\n\n\n\n\n\n\n\n\ncp check_mk_agent /usr/bin/check_mk_agent\n\n\ncp check_mk_agent_freebsd /usr/bin/check_mk_agent\n\n\n\n\n\n\n\n\nchmod +x /usr/bin/check_mk_agent\n\n\n\n\n\n\nCopy the service file(s) into place.\n\n\n\n\n\n\n\n\n\n\nxinetd\n\n\nsystemd\n\n\n\n\n\n\n\n\n\n\ncp check_mk_xinetd /etc/xinetd.d/check_mk\n\n\ncp check_mk@.service check_mk.socket /etc/systemd/system\n\n\n\n\n\n\n\n\n\n\nCreate the relevant directories.\n\n\n\n\nmkdir -p /usr/lib/check_mk_agent/plugins /usr/lib/check_mk_agent/local\n\n\n\n\n\n\nCopy each of the scripts from \nagent-local/\n into \n/usr/lib/check_mk_agent/local\n that you require to be graphed.  You can find detail setup instructions for specific applications above.\n\n\nMake each one executable that you want to use with \nchmod +x /usr/lib/check_mk_agent/local/$script\n\n\nEnable the check_mk service\n\n\n\n\n\n\n\n\n\n\nxinetd\n\n\nsystemd\n\n\n\n\n\n\n\n\n\n\n/etc/init.d/xinetd restart\n\n\nsystemctl enable check_mk.socket \n systemctl start check_mk.socket\n\n\n\n\n\n\n\n\n\n\nLogin to the LibreNMS web interface and edit the device you want to monitor. Under the modules section, ensure that unix-agent is enabled.\n\n\nThen under Applications, enable the apps that you plan to monitor.\n\n\nWait for around 10 minutes and you should start seeing data in your graphs under Apps for the device.", 
            "title": "Check_MK Setup"
        }, 
        {
            "location": "/Extensions/Billing-Module/", 
            "text": "Billing Module\n\n\nWith the billing module you can create a bill, assign a quota to it and add ports to it.\n\nIt then tracks the ports usage and shows you the usage in the bill, including any overage.\n\nAccounting by both total transferred data and 95th percentile is supported.\n\n\nTo enable and use the billing module you need to perform the following steps:\n\n\nEdit \nconfig.php\n and add (or enable) the following line near the end of the config\n\n\n$config['enable_billing'] = 1; # Enable Billing\n\n\n\n\nEdit \n/etc/cron.d/librenms\n and add the following:\n\n\n*/5 * * * * librenms /opt/librenms/poll-billing.php \n /dev/null 2\n1\n01  * * * * librenms /opt/librenms/billing-calculate.php \n /dev/null 2\n1\n\n\n\n\nCreate billing graphs as required.\n\n\nOptions\n\n\nBilling data is stored in the MySQL database, and you may wish to purge the detailed \nstats for old data (per-month totals will always be kept).  To enable this, add the \nfollowing to \nconfig.php\n:\n\n\n$config['billing_data_purge'] = 12;     // Number of months to retain\n\n\n\n\nData for the last complete billing cycle will always be retained - only data older than\nthis by the configured number of months will be removed.  This task is performed in the\ndaily cleanup tasks.", 
            "title": "Billing Module"
        }, 
        {
            "location": "/Extensions/Billing-Module/#billing-module", 
            "text": "With the billing module you can create a bill, assign a quota to it and add ports to it. \nIt then tracks the ports usage and shows you the usage in the bill, including any overage. \nAccounting by both total transferred data and 95th percentile is supported.  To enable and use the billing module you need to perform the following steps:  Edit  config.php  and add (or enable) the following line near the end of the config  $config['enable_billing'] = 1; # Enable Billing  Edit  /etc/cron.d/librenms  and add the following:  */5 * * * * librenms /opt/librenms/poll-billing.php   /dev/null 2 1\n01  * * * * librenms /opt/librenms/billing-calculate.php   /dev/null 2 1  Create billing graphs as required.", 
            "title": "Billing Module"
        }, 
        {
            "location": "/Extensions/Billing-Module/#options", 
            "text": "Billing data is stored in the MySQL database, and you may wish to purge the detailed \nstats for old data (per-month totals will always be kept).  To enable this, add the \nfollowing to  config.php :  $config['billing_data_purge'] = 12;     // Number of months to retain  Data for the last complete billing cycle will always be retained - only data older than\nthis by the configured number of months will be removed.  This task is performed in the\ndaily cleanup tasks.", 
            "title": "Options"
        }, 
        {
            "location": "/Extensions/Dell-OpenManage/", 
            "text": "Dell OpenManage Support\n\n\n\n\nFor Dell OpenManage support you will need to install Dell OpenManage (yeah - really :)) (minimum 5.1) onto the device you want to monitor. Ensure that net-snmp is using srvadmin, you should see something similar to:\n\n\nmaster agentx\nview all included .1\naccess notConfigGroup \n any noauth exact all none none\nsmuxpeer .1.3.6.1.4.1.674.10892.1\n\n\n\n\nRestart net-snmp:\n\n\nservice snmpd restart\n\n\n\n\nEnsure that srvadmin is started, this is usually done by executing:\n\n\n/opt/dell/srvadmin/sbin/srvadmin-services.sh start\n\n\n\n\nOnce this has been done, add the device to LibreNMS as normal and you will start to receive Temperatures and Fanspeed data.\n\n\nWindows\n\n\nDownload OpenManage from Dell's support page \nLink\n and install OpenManage on your windows server. Make sure you have SNMP setup and running on your windows server.", 
            "title": "Dell OpenManage Support"
        }, 
        {
            "location": "/Extensions/Dell-OpenManage/#dell-openmanage-support", 
            "text": "For Dell OpenManage support you will need to install Dell OpenManage (yeah - really :)) (minimum 5.1) onto the device you want to monitor. Ensure that net-snmp is using srvadmin, you should see something similar to:  master agentx\nview all included .1\naccess notConfigGroup   any noauth exact all none none\nsmuxpeer .1.3.6.1.4.1.674.10892.1  Restart net-snmp:  service snmpd restart  Ensure that srvadmin is started, this is usually done by executing:  /opt/dell/srvadmin/sbin/srvadmin-services.sh start  Once this has been done, add the device to LibreNMS as normal and you will start to receive Temperatures and Fanspeed data.", 
            "title": "Dell OpenManage Support"
        }, 
        {
            "location": "/Extensions/Dell-OpenManage/#windows", 
            "text": "Download OpenManage from Dell's support page  Link  and install OpenManage on your windows server. Make sure you have SNMP setup and running on your windows server.", 
            "title": "Windows"
        }, 
        {
            "location": "/Extensions/World-Map/", 
            "text": "World Map Configuration\n\n\nLibreNMS comes with a configurable Geo Map based on World Map Widget to visualize where your equipment is located geographically.\n\n\nWorld Map Widget\n\n\nWorld Map Widget, requires you to have properly formatted addresses in sysLocation or sysLocation override. As part of the standard poller these addresses will be Geocoded by Google and stored in the database. \n\n\nLocation resolution happens as follows\n\n\n\n\nIf \ndevice['location']\n contains \n[lat, lng]\n (note the square brackets), that is used\n\n\nIf there is a location overide for the device in the WebUI and it contains \n[lat, lng]\n (note the square brackets), that is used.\n\n\nAttempt to resolve lat, lng using \n$config['geoloc']['engine']\n\n\nProperly formatted addresses in sysLocation or sysLocation override, under device settings.\n\n\n\n\nExample:\n\n\n[40.424521, -86.912755]\n\n\nor\n\n\n1100 Congress Ave, Austin, TX 78701\n\n\nWe have two current mapping engines available:\n\n\n\n\nLeaflet (default)\n\n\nJquery-Mapael\n\n\n\n\nWorld Map Widget Settings\n\n\nExample Settings:\n\n\n\n\nOffline OpenStreet Map\n\n\nIf you can't access OpenStreet map directly you can run a local \ntile server\n. To specify a different url you can set:\n\n\n$config['leaflet']['tile_url'] = 'localhost.com';\n\n\n\n\nJquery-Mapael config\n\n\nFurther custom options are available to load different maps of the world, set default coordinates of where the map will zoom and the zoom level by default. An example of\nthis is:\n\n\n$config['map']['engine']                                = \njquery-mapael\n;\n$config['mapael']['default_map'] = 'mapael-maps/united_kingdom/united_kingdom.js';\n$config['mapael']['map_width'] = 400;\n$config['mapael']['default_lat'] = '50.898482';\n$config['mapael']['default_lng'] = '-3.401402';\n$config['mapael']['default_zoom'] = 20;\n\n\n\n\nA list of maps can be found in \nhtml/js/maps/\n or \nhtml/js/mapael-maps/\n.", 
            "title": "World Map Configuration"
        }, 
        {
            "location": "/Extensions/World-Map/#world-map-configuration", 
            "text": "LibreNMS comes with a configurable Geo Map based on World Map Widget to visualize where your equipment is located geographically.", 
            "title": "World Map Configuration"
        }, 
        {
            "location": "/Extensions/World-Map/#world-map-widget", 
            "text": "World Map Widget, requires you to have properly formatted addresses in sysLocation or sysLocation override. As part of the standard poller these addresses will be Geocoded by Google and stored in the database.   Location resolution happens as follows   If  device['location']  contains  [lat, lng]  (note the square brackets), that is used  If there is a location overide for the device in the WebUI and it contains  [lat, lng]  (note the square brackets), that is used.  Attempt to resolve lat, lng using  $config['geoloc']['engine']  Properly formatted addresses in sysLocation or sysLocation override, under device settings.   Example:  [40.424521, -86.912755]  or  1100 Congress Ave, Austin, TX 78701  We have two current mapping engines available:   Leaflet (default)  Jquery-Mapael", 
            "title": "World Map Widget"
        }, 
        {
            "location": "/Extensions/World-Map/#world-map-widget-settings", 
            "text": "Example Settings:", 
            "title": "World Map Widget Settings"
        }, 
        {
            "location": "/Extensions/World-Map/#offline-openstreet-map", 
            "text": "If you can't access OpenStreet map directly you can run a local  tile server . To specify a different url you can set:  $config['leaflet']['tile_url'] = 'localhost.com';", 
            "title": "Offline OpenStreet Map"
        }, 
        {
            "location": "/Extensions/World-Map/#jquery-mapael-config", 
            "text": "Further custom options are available to load different maps of the world, set default coordinates of where the map will zoom and the zoom level by default. An example of\nthis is:  $config['map']['engine']                                =  jquery-mapael ;\n$config['mapael']['default_map'] = 'mapael-maps/united_kingdom/united_kingdom.js';\n$config['mapael']['map_width'] = 400;\n$config['mapael']['default_lat'] = '50.898482';\n$config['mapael']['default_lng'] = '-3.401402';\n$config['mapael']['default_zoom'] = 20;  A list of maps can be found in  html/js/maps/  or  html/js/mapael-maps/ .", 
            "title": "Jquery-Mapael config"
        }, 
        {
            "location": "/Extensions/Interface-Description-Parsing/", 
            "text": "About\n\n\nLibrenms can interpret, display and group certain additional information on ports.\nThis is done based on the format that the port description is written although it's possible \nto customise the parser to be specific for your setup.\n\n\nKeywords\n\n\nSee \nexamples\n for formats.\n\n\n\n\nKeywords\n\n\nCust\n    - Customer\n\n\nTransit\n - Transit link\n\n\nPeering\n - Peering link\n\n\nCore\n    - Infrastructure link (non-customer)\n\n\n\n\n\n\nInfo-keywords\n\n\n()\n contains a note\n\n\n{}\n contains \nyour\n circuit id\n\n\n[]\n contains the service type or speed\n\n\n\n\n\n\n\n\nExamples\n\n\nCisco IOS / NXOS / IOSXR:\n\n\ninterface Gi0/1\ndescr Transit: Example Provider (AS65000)\ninterface Gi0/2\ndescr Peering: Peering Exchange\ninterface Gi0/3\ndescr Core: core.router01 FastEthernet0/0 (Telco X CCID023141)\ninterface Gi0/4\ndescr Cust: Example Customer [10Mbit] (T1 Telco Y CCID129031) {EXAMP0001}\n\n\n\n\nUnix / Linux:\n\n\n\n\nThis requires an additional script to be \nsetup\n\n\n\n\n# eth3: Cust: Example Customer [10Mbit] (T1 Telco Y CCID129031) {EXAMP0001}\n# eth0: Transit: Example Provider (AS65000)\n# eth1: Core: core.router01 FastEthernet0/0 (Telco X CCID023141)\n# eth2: Peering: Peering Exchange\n\n\n\n\nCustomisation\n\n\nThe following config options can be set to enable more custom types:\n\n\n$config['customers_descr'][]         = 'cust';\n$config['transit_descr'][]           = \ntransit\n;\n$config['peering_descr'][]           = \npeering\n;\n$config['core_descr'][]              = \ncore\n;\n$config['custom_descr'][]            = \nsomething_made_up\n;\n\n\n\n\nCustom interface parser\n\n\nIt's also possible to write your own parser, the existing one is: includes/port-descr-parser.inc.php\n\n\nOnce you've created your own then you can enable it with:\n\n\n$config['port_descr_parser'] = \nincludes/custom/my-port-descr-parser.inc.php\n;\n\n\n\n\nSetup\n\n\nFor Unix / Linux based systems, you need to run an additional script to support the parsing of interface infor.\n\n\n\n\nAdd \nifAlias\n from \n/opt/librenms/scripts/\n or download it from \nhere\n to the Server and make\n    it executable \nchmod +x /path/to/ifAlias\n\n\nAdd to \nsnmpd.conf\n something like:\n    \npass .1.3.6.1.2.1.31.1.1.1.18 /path/to/ifAlias\n\n\nRestart \nsnmpd\n - \nservice snmpd restart\n\n\n\n\nThere are no changes to be made or additions to install for the polling librenms.\n\n\nNow you can set up your \nkeywords\n in your \n/etc/network/interfaces\n\n\n//Add more distributions than just Debian based", 
            "title": "Interface Description Parsing"
        }, 
        {
            "location": "/Extensions/Interface-Description-Parsing/#about", 
            "text": "Librenms can interpret, display and group certain additional information on ports.\nThis is done based on the format that the port description is written although it's possible \nto customise the parser to be specific for your setup.", 
            "title": "About"
        }, 
        {
            "location": "/Extensions/Interface-Description-Parsing/#keywords", 
            "text": "See  examples  for formats.   Keywords  Cust     - Customer  Transit  - Transit link  Peering  - Peering link  Core     - Infrastructure link (non-customer)    Info-keywords  ()  contains a note  {}  contains  your  circuit id  []  contains the service type or speed", 
            "title": "Keywords"
        }, 
        {
            "location": "/Extensions/Interface-Description-Parsing/#examples", 
            "text": "Cisco IOS / NXOS / IOSXR:  interface Gi0/1\ndescr Transit: Example Provider (AS65000)\ninterface Gi0/2\ndescr Peering: Peering Exchange\ninterface Gi0/3\ndescr Core: core.router01 FastEthernet0/0 (Telco X CCID023141)\ninterface Gi0/4\ndescr Cust: Example Customer [10Mbit] (T1 Telco Y CCID129031) {EXAMP0001}  Unix / Linux:   This requires an additional script to be  setup   # eth3: Cust: Example Customer [10Mbit] (T1 Telco Y CCID129031) {EXAMP0001}\n# eth0: Transit: Example Provider (AS65000)\n# eth1: Core: core.router01 FastEthernet0/0 (Telco X CCID023141)\n# eth2: Peering: Peering Exchange", 
            "title": "Examples"
        }, 
        {
            "location": "/Extensions/Interface-Description-Parsing/#customisation", 
            "text": "The following config options can be set to enable more custom types:  $config['customers_descr'][]         = 'cust';\n$config['transit_descr'][]           =  transit ;\n$config['peering_descr'][]           =  peering ;\n$config['core_descr'][]              =  core ;\n$config['custom_descr'][]            =  something_made_up ;", 
            "title": "Customisation"
        }, 
        {
            "location": "/Extensions/Interface-Description-Parsing/#custom-interface-parser", 
            "text": "It's also possible to write your own parser, the existing one is: includes/port-descr-parser.inc.php  Once you've created your own then you can enable it with:  $config['port_descr_parser'] =  includes/custom/my-port-descr-parser.inc.php ;", 
            "title": "Custom interface parser"
        }, 
        {
            "location": "/Extensions/Interface-Description-Parsing/#setup", 
            "text": "For Unix / Linux based systems, you need to run an additional script to support the parsing of interface infor.   Add  ifAlias  from  /opt/librenms/scripts/  or download it from  here  to the Server and make\n    it executable  chmod +x /path/to/ifAlias  Add to  snmpd.conf  something like:\n     pass .1.3.6.1.2.1.31.1.1.1.18 /path/to/ifAlias  Restart  snmpd  -  service snmpd restart   There are no changes to be made or additions to install for the polling librenms.  Now you can set up your  keywords  in your  /etc/network/interfaces  //Add more distributions than just Debian based", 
            "title": "Setup"
        }, 
        {
            "location": "/Extensions/Network-Map/", 
            "text": "Network Map\n\n\nLibreNMS has the ability to show you a network map based on:\n\n\n\n\nxDP Discovery\n\n\nMAC addresses\n\n\n\n\nBy default, both are are included but you can enable / disable either one using the following config option:\n\n\n$config['network_map_items'] = array('mac','xdp');\n\n\n\n\nEither remove mac or xdp depending on which you want.\nXDP is based on FDP, CDP and LLDP support based on the device type.\n\n\nA global map will be drawn from the information in the database, it is worth noting that this could lead to a large network map.\nNetwork maps for individual devices are available showing the relationship with other devices.\nAlso you can Build Device Groups and those Device Groups can be drawn with Network Map.\n\n\nNetwork Map Configurator.\n\n\nThis link will show you all the options and explain what they do. \nLink\n\nYou may also access the dyanamic configuraiton interface \nexample here\n from within LibreNMS by adding the following to config.php\n\n\n$config['network_map_vis_options'] = '{\n  \nconfigure\n: { \nenabled\n: true},\n}';\n\n\n\n\nNote\n\n\nYou may want to disable the automatic page refresh while you're tweaking your configuration, as the refresh will reset the dynamic configuration UI to the values currently saved in config.php\nThis can be done by going clicking on the Settings Icon then Refresh Pause.\n\n\nConfigurator Output\n\n\nOnce you've achieved your desired map appearance, click the generate options button at the bottom to be given the necessary parameters to add to your config.php file.\nYou will need to paste the genrated config into config.php the format will need to look something like this. \nNote that the configuartor will output the config with \nvar options\n you will need strip that out and at the end of the config you need to add in \n}';\n see the example below. \n\n\n$config['network_map_vis_options'] = '{\n  \nnodes\n: {\n    \ncolor\n: {\n      \nbackground\n: \nrgba(20,252,18,1)\n\n    },\n    \nfont\n: {\n      \nface\n: \ntahoma\n\n    },\n    \nphysics\n: false\n  },\n  \nedges\n: {\n    \nsmooth\n: {\n      \nforceDirection\n: \nnone\n\n    }\n  },\n  \ninteraction\n: {\n    \nhover\n: true,\n    \nmultiselect\n: true,\n    \nnavigationButtons\n: true\n  },\n  \nmanipulation\n: {\n    \nenabled\n: true\n  },\n  \nphysics\n: {\n    \nbarnesHut\n: {\n      \navoidOverlap\n: 0.11\n    },\n    \nminVelocity\n: 0.75\n  }\n}';", 
            "title": "Network Map"
        }, 
        {
            "location": "/Extensions/Network-Map/#network-map", 
            "text": "LibreNMS has the ability to show you a network map based on:   xDP Discovery  MAC addresses   By default, both are are included but you can enable / disable either one using the following config option:  $config['network_map_items'] = array('mac','xdp');  Either remove mac or xdp depending on which you want.\nXDP is based on FDP, CDP and LLDP support based on the device type.  A global map will be drawn from the information in the database, it is worth noting that this could lead to a large network map.\nNetwork maps for individual devices are available showing the relationship with other devices.\nAlso you can Build Device Groups and those Device Groups can be drawn with Network Map.", 
            "title": "Network Map"
        }, 
        {
            "location": "/Extensions/Network-Map/#network-map-configurator", 
            "text": "This link will show you all the options and explain what they do.  Link \nYou may also access the dyanamic configuraiton interface  example here  from within LibreNMS by adding the following to config.php  $config['network_map_vis_options'] = '{\n   configure : {  enabled : true},\n}';", 
            "title": "Network Map Configurator."
        }, 
        {
            "location": "/Extensions/Network-Map/#note", 
            "text": "You may want to disable the automatic page refresh while you're tweaking your configuration, as the refresh will reset the dynamic configuration UI to the values currently saved in config.php\nThis can be done by going clicking on the Settings Icon then Refresh Pause.", 
            "title": "Note"
        }, 
        {
            "location": "/Extensions/Network-Map/#configurator-output", 
            "text": "Once you've achieved your desired map appearance, click the generate options button at the bottom to be given the necessary parameters to add to your config.php file.\nYou will need to paste the genrated config into config.php the format will need to look something like this. \nNote that the configuartor will output the config with  var options  you will need strip that out and at the end of the config you need to add in  }';  see the example below.   $config['network_map_vis_options'] = '{\n   nodes : {\n     color : {\n       background :  rgba(20,252,18,1) \n    },\n     font : {\n       face :  tahoma \n    },\n     physics : false\n  },\n   edges : {\n     smooth : {\n       forceDirection :  none \n    }\n  },\n   interaction : {\n     hover : true,\n     multiselect : true,\n     navigationButtons : true\n  },\n   manipulation : {\n     enabled : true\n  },\n   physics : {\n     barnesHut : {\n       avoidOverlap : 0.11\n    },\n     minVelocity : 0.75\n  }\n}';", 
            "title": "Configurator Output"
        }, 
        {
            "location": "/Extensions/Syslog/", 
            "text": "Setting up syslog support\n\n\nThis document will explain how to send syslog data to LibreNMS.\n\n\nSyslog server installation\n\n\nsyslog-ng\n\n\nFor Debian / Ubuntu:\n\n\napt-get install syslog-ng\n\n\n\n\nFor CentOS / RedHat\n\n\nyum install syslog-ng\n\n\n\n\nOnce syslog-ng is installed, edit the relevant config file (most likely /etc/syslog-ng/syslog-ng.conf) and paste the following:\n\n\n@version:3.5\n@include \nscl.conf\n\n\n# syslog-ng configuration file.\n#\n# This should behave pretty much like the original syslog on RedHat. But\n# it could be configured a lot smarter.\n#\n# See syslog-ng(8) and syslog-ng.conf(5) for more information.\n#\n# Note: it also sources additional configuration files (*.conf)\n#       located in /etc/syslog-ng/conf.d/\n\noptions {\n        chain_hostnames(off);\n        flush_lines(0);\n        use_dns(no);\n        use_fqdn(no);\n        owner(\nroot\n);\n        group(\nadm\n);\n        perm(0640);\n        stats_freq(0);\n        bad_hostname(\n^gconfd$\n);\n};\n\n\nsource s_sys {\n    system();\n    internal();\n\n};\n\nsource s_net {\n        tcp(port(514) flags(syslog-protocol));\n        udp(port(514) flags(syslog-protocol));\n};\n\n\n########################\n# Destinations\n########################\ndestination d_librenms {\n        program(\n/opt/librenms/syslog.php\n template (\n$HOST||$FACILITY||$PRIORITY||$LEVEL||$TAG||$R_YEAR-$R_MONTH-$R_DAY $R_HOUR:$R_MIN:$R_SEC||$MSG||$PROGRAM\\n\n) template-escape(yes));\n};\n\nfilter f_kernel     { facility(kern); };\nfilter f_default    { level(info..emerg) and\n                        not (facility(mail)\n                        or facility(authpriv)\n                        or facility(cron)); };\nfilter f_auth       { facility(authpriv); };\nfilter f_mail       { facility(mail); };\nfilter f_emergency  { level(emerg); };\nfilter f_news       { facility(uucp) or\n                        (facility(news)\n                        and level(crit..emerg)); };\nfilter f_boot   { facility(local7); };\nfilter f_cron   { facility(cron); };\n\n########################\n# Log paths\n########################\nlog {\n        source(s_net);\n        source(s_sys);\n        destination(d_librenms);\n};\n\n# Source additional configuration files (.conf extension only)\n@include \n/etc/syslog-ng/conf.d/*.conf\n\n\n\n# vim:ft=syslog-ng:ai:si:ts=4:sw=4:et:\n\n\n\n\nNext start syslog-ng:\n\n\nservice syslog-ng restart\n\n\n\n\nAdd the following to your LibreNMS \nconfig.php\n file to enable the Syslog extension:\n\n\n$config['enable_syslog'] = 1;\n\n\n\n\nrsyslog\n\n\nIf you prefer rsyslog, here are some hints on how to get it working.\n\n\nAdd the following to your rsyslog config somewhere (could be at the top of the file in the step below, could be in \nrsyslog.conf\n if you are using remote logs for something else on this host)\n\n\n# Listen for syslog messages on UDP:514\n$ModLoad imudp\n$UDPServerRun 514\n\n\n\n\nCreate a file called something like \n/etc/rsyslog.d/30-librenms.conf\n containing:\n\n\n# Feed syslog messages to librenms\n$ModLoad omprog\n\n$template librenms,\n%fromhost%||%syslogfacility%||%syslogpriority%||%syslogseverity%||%syslogtag%||%$year%-%$month%-%$day% %timegenerated:8:25%||%msg%||%programname%\\n\n\n\n*.* action(type=\nomprog\n binary=\n/opt/librenms/syslog.php\n template=\nlibrenms\n)\n\n\n stop\n\n\n\n\n\nAncient versions of rsyslog may require different syntax.\n\n\nThis is an example for rsyslog 5 (default on Debian 7):\n\n\n# Feed syslog messages to librenms\n$ModLoad omprog\n$template librenms,\n%FROMHOST%||%syslogfacility-text%||%syslogpriority-text%||%syslogseverity%||%syslogtag%||%$YEAR%-%$MONTH%-%$DAY% %timegenerated:8:25%||%msg%||%programname%\\n\n\n\n$ActionOMProgBinary /opt/librenms/syslog.php\n*.* :omprog:;librenms\n\n\n\n\nIf your rsyslog server is recieving messages relayed by another syslog server, you may try replacing \n%fromhost%\n with \n%hostname%\n, since \nfromhost\n is the host the message was received from, not the host that generated the message.  The \nfromhost\n property is preferred as it avoids problems caused by devices sending incorrect hostnames in syslog messages.\n\n\nAdd the following to your LibreNMS \nconfig.php\n file to enable the Syslog extension:\n\n\n$config['enable_syslog'] = 1;\n\n\n\n\nSyslog Clean Up\n\n\nCan be set inside of  \nconfig.php\n\n\n$config['syslog_purge'] = 30;\n\n\n\n\nThe cleanup is run by daily.sh and any entries over X days old are automatically purged. Values are in days.\nSee here for more Clean Up Options \nLink\n\n\nClient configuration\n\n\nBelow are sample configurations for a variety of clients. You should understand the config before using it as you may want to make some slight changes.\n\n\nReplace librenms.ip with IP or hostname of your LibreNMS install.\n\n\nReplace any variables in \n with the relevant information.\n\n\nsyslog\n\n\n*.*     @librenms.ip\n\n\n\n\nrsyslog\n\n\n*.* @librenms.ip:514\n\n\n\n\nCisco ASA\n\n\nlogging enable\nlogging timestamp\nlogging buffer-size 200000\nlogging buffered debugging\nlogging trap notifications\nlogging host \noutside interface name\n librenms.ip\n\n\n\n\nCisco IOS\n\n\nlogging trap debugging\nlogging facility local6\nlogging librenms.ip\n\n\n\n\nCisco NXOS\n\n\nlogging server librenms.ip 5 use-vrf default facility local6\n\n\n\n\nIf you have permitted udp and tcp 514 through any firewall then that should be all you need. Logs should start appearing and displayed within the LibreNMS web UI.\n\n\nWindows\n\n\nBy Default windows has no native way to send logs to a remote syslog server.\n\n\nUsing this how to you can download Datagram-Syslog Agent to send logs to a remote syslog server (LibreNMS). \n\n\nNote\n\n\nkeep in mind you can use any agent or program to send the logs. We are just using this Datagram-Syslog Agent for this example.\n\n\nLink to How to\n\n\nYou will need to download and install \"Datagram-Syslog Agent\" for this how to\n\nLink to Download\n\n\nExternal hooks\n\n\nTrigger external scripts based on specific syslog patterns being matched with syslog hooks. Add the following to your LibreNMS \nconfig.php\n to enable hooks:\n\n\n$config['enable_syslog_hooks'] = 1;\n\n\n\n\nThe below are some example hooks to call an external script in the event of a configuration change on Cisco ASA, IOS, NX-OS and IOS-XR devices. Add to your \nconfig.php\n file to enable.\n\n\nCisco ASA\n\n\n$config['os']['asa']['syslog_hook'][] = Array('regex' =\n '/%ASA-(config-)?5-111005/', 'script' =\n '/opt/librenms/scripts/syslog-notify-oxidized.php');\n\n\n\n\nCisco IOS\n\n\n$config['os']['ios']['syslog_hook'][] = Array('regex' =\n '/%SYS-(SW[0-9]+-)?5-CONFIG_I/', 'script' =\n '/opt/librenms/scripts/syslog-notify-oxidized.php');\n\n\n\n\nCisco NXOS\n\n\n$config['os']['nxos']['syslog_hook'][] = Array('regex' =\n '/%VSHD-5-VSHD_SYSLOG_CONFIG_I/', 'script' =\n '/opt/librenms/scripts/syslog-notify-oxidized.php');\n\n\n\n\nCisco IOSXR\n\n\n$config['os']['iosxr']['syslog_hook'][] = Array('regex' =\n '/%GBL-CONFIG-6-DB_COMMIT/', 'script' =\n '/opt/librenms/scripts/syslog-notify-oxidized.php');", 
            "title": "Setting up syslog support"
        }, 
        {
            "location": "/Extensions/Syslog/#setting-up-syslog-support", 
            "text": "This document will explain how to send syslog data to LibreNMS.", 
            "title": "Setting up syslog support"
        }, 
        {
            "location": "/Extensions/Syslog/#syslog-server-installation", 
            "text": "", 
            "title": "Syslog server installation"
        }, 
        {
            "location": "/Extensions/Syslog/#syslog-ng", 
            "text": "For Debian / Ubuntu:  apt-get install syslog-ng  For CentOS / RedHat  yum install syslog-ng  Once syslog-ng is installed, edit the relevant config file (most likely /etc/syslog-ng/syslog-ng.conf) and paste the following:  @version:3.5\n@include  scl.conf \n\n# syslog-ng configuration file.\n#\n# This should behave pretty much like the original syslog on RedHat. But\n# it could be configured a lot smarter.\n#\n# See syslog-ng(8) and syslog-ng.conf(5) for more information.\n#\n# Note: it also sources additional configuration files (*.conf)\n#       located in /etc/syslog-ng/conf.d/\n\noptions {\n        chain_hostnames(off);\n        flush_lines(0);\n        use_dns(no);\n        use_fqdn(no);\n        owner( root );\n        group( adm );\n        perm(0640);\n        stats_freq(0);\n        bad_hostname( ^gconfd$ );\n};\n\n\nsource s_sys {\n    system();\n    internal();\n\n};\n\nsource s_net {\n        tcp(port(514) flags(syslog-protocol));\n        udp(port(514) flags(syslog-protocol));\n};\n\n\n########################\n# Destinations\n########################\ndestination d_librenms {\n        program( /opt/librenms/syslog.php  template ( $HOST||$FACILITY||$PRIORITY||$LEVEL||$TAG||$R_YEAR-$R_MONTH-$R_DAY $R_HOUR:$R_MIN:$R_SEC||$MSG||$PROGRAM\\n ) template-escape(yes));\n};\n\nfilter f_kernel     { facility(kern); };\nfilter f_default    { level(info..emerg) and\n                        not (facility(mail)\n                        or facility(authpriv)\n                        or facility(cron)); };\nfilter f_auth       { facility(authpriv); };\nfilter f_mail       { facility(mail); };\nfilter f_emergency  { level(emerg); };\nfilter f_news       { facility(uucp) or\n                        (facility(news)\n                        and level(crit..emerg)); };\nfilter f_boot   { facility(local7); };\nfilter f_cron   { facility(cron); };\n\n########################\n# Log paths\n########################\nlog {\n        source(s_net);\n        source(s_sys);\n        destination(d_librenms);\n};\n\n# Source additional configuration files (.conf extension only)\n@include  /etc/syslog-ng/conf.d/*.conf \n\n\n# vim:ft=syslog-ng:ai:si:ts=4:sw=4:et:  Next start syslog-ng:  service syslog-ng restart  Add the following to your LibreNMS  config.php  file to enable the Syslog extension:  $config['enable_syslog'] = 1;", 
            "title": "syslog-ng"
        }, 
        {
            "location": "/Extensions/Syslog/#rsyslog", 
            "text": "If you prefer rsyslog, here are some hints on how to get it working.  Add the following to your rsyslog config somewhere (could be at the top of the file in the step below, could be in  rsyslog.conf  if you are using remote logs for something else on this host)  # Listen for syslog messages on UDP:514\n$ModLoad imudp\n$UDPServerRun 514  Create a file called something like  /etc/rsyslog.d/30-librenms.conf  containing:  # Feed syslog messages to librenms\n$ModLoad omprog\n\n$template librenms, %fromhost%||%syslogfacility%||%syslogpriority%||%syslogseverity%||%syslogtag%||%$year%-%$month%-%$day% %timegenerated:8:25%||%msg%||%programname%\\n \n\n*.* action(type= omprog  binary= /opt/librenms/syslog.php  template= librenms )  stop  Ancient versions of rsyslog may require different syntax.  This is an example for rsyslog 5 (default on Debian 7):  # Feed syslog messages to librenms\n$ModLoad omprog\n$template librenms, %FROMHOST%||%syslogfacility-text%||%syslogpriority-text%||%syslogseverity%||%syslogtag%||%$YEAR%-%$MONTH%-%$DAY% %timegenerated:8:25%||%msg%||%programname%\\n \n\n$ActionOMProgBinary /opt/librenms/syslog.php\n*.* :omprog:;librenms  If your rsyslog server is recieving messages relayed by another syslog server, you may try replacing  %fromhost%  with  %hostname% , since  fromhost  is the host the message was received from, not the host that generated the message.  The  fromhost  property is preferred as it avoids problems caused by devices sending incorrect hostnames in syslog messages.  Add the following to your LibreNMS  config.php  file to enable the Syslog extension:  $config['enable_syslog'] = 1;", 
            "title": "rsyslog"
        }, 
        {
            "location": "/Extensions/Syslog/#syslog-clean-up", 
            "text": "Can be set inside of   config.php  $config['syslog_purge'] = 30;  The cleanup is run by daily.sh and any entries over X days old are automatically purged. Values are in days.\nSee here for more Clean Up Options  Link", 
            "title": "Syslog Clean Up"
        }, 
        {
            "location": "/Extensions/Syslog/#client-configuration", 
            "text": "Below are sample configurations for a variety of clients. You should understand the config before using it as you may want to make some slight changes.  Replace librenms.ip with IP or hostname of your LibreNMS install.  Replace any variables in   with the relevant information.", 
            "title": "Client configuration"
        }, 
        {
            "location": "/Extensions/Syslog/#syslog", 
            "text": "*.*     @librenms.ip", 
            "title": "syslog"
        }, 
        {
            "location": "/Extensions/Syslog/#rsyslog_1", 
            "text": "*.* @librenms.ip:514", 
            "title": "rsyslog"
        }, 
        {
            "location": "/Extensions/Syslog/#cisco-asa", 
            "text": "logging enable\nlogging timestamp\nlogging buffer-size 200000\nlogging buffered debugging\nlogging trap notifications\nlogging host  outside interface name  librenms.ip", 
            "title": "Cisco ASA"
        }, 
        {
            "location": "/Extensions/Syslog/#cisco-ios", 
            "text": "logging trap debugging\nlogging facility local6\nlogging librenms.ip", 
            "title": "Cisco IOS"
        }, 
        {
            "location": "/Extensions/Syslog/#cisco-nxos", 
            "text": "logging server librenms.ip 5 use-vrf default facility local6  If you have permitted udp and tcp 514 through any firewall then that should be all you need. Logs should start appearing and displayed within the LibreNMS web UI.", 
            "title": "Cisco NXOS"
        }, 
        {
            "location": "/Extensions/Syslog/#windows", 
            "text": "By Default windows has no native way to send logs to a remote syslog server.  Using this how to you can download Datagram-Syslog Agent to send logs to a remote syslog server (LibreNMS).", 
            "title": "Windows"
        }, 
        {
            "location": "/Extensions/Syslog/#note", 
            "text": "keep in mind you can use any agent or program to send the logs. We are just using this Datagram-Syslog Agent for this example.  Link to How to  You will need to download and install \"Datagram-Syslog Agent\" for this how to Link to Download", 
            "title": "Note"
        }, 
        {
            "location": "/Extensions/Syslog/#external-hooks", 
            "text": "Trigger external scripts based on specific syslog patterns being matched with syslog hooks. Add the following to your LibreNMS  config.php  to enable hooks:  $config['enable_syslog_hooks'] = 1;  The below are some example hooks to call an external script in the event of a configuration change on Cisco ASA, IOS, NX-OS and IOS-XR devices. Add to your  config.php  file to enable.", 
            "title": "External hooks"
        }, 
        {
            "location": "/Extensions/Syslog/#cisco-asa_1", 
            "text": "$config['os']['asa']['syslog_hook'][] = Array('regex' =  '/%ASA-(config-)?5-111005/', 'script' =  '/opt/librenms/scripts/syslog-notify-oxidized.php');", 
            "title": "Cisco ASA"
        }, 
        {
            "location": "/Extensions/Syslog/#cisco-ios_1", 
            "text": "$config['os']['ios']['syslog_hook'][] = Array('regex' =  '/%SYS-(SW[0-9]+-)?5-CONFIG_I/', 'script' =  '/opt/librenms/scripts/syslog-notify-oxidized.php');", 
            "title": "Cisco IOS"
        }, 
        {
            "location": "/Extensions/Syslog/#cisco-nxos_1", 
            "text": "$config['os']['nxos']['syslog_hook'][] = Array('regex' =  '/%VSHD-5-VSHD_SYSLOG_CONFIG_I/', 'script' =  '/opt/librenms/scripts/syslog-notify-oxidized.php');", 
            "title": "Cisco NXOS"
        }, 
        {
            "location": "/Extensions/Syslog/#cisco-iosxr", 
            "text": "$config['os']['iosxr']['syslog_hook'][] = Array('regex' =  '/%GBL-CONFIG-6-DB_COMMIT/', 'script' =  '/opt/librenms/scripts/syslog-notify-oxidized.php');", 
            "title": "Cisco IOSXR"
        }, 
        {
            "location": "/Extensions/Dashboards/", 
            "text": "Dashboards\n\n\nCreate customised dashboards in LibreNMS per user. You can share dashboards with other users. You can also make a custom dashboard and\ndefault it for all users in LibreNMS.\n\n\nExample Dashboard\n\n\n\nWidgets\n\n\nLibreNMS has a whole list of Widgets to select from. \n\n\n\n\nAlerts Widget: Displays all alert notifications.\n\n\nAvailability Map: Displays all devices with colored tiles, green up, yellow for warning (device has been restarted in last 24 hours),red   for down. You can also list all services and ignored/disabled devcies in this widget.\n\n\nComponet Status: List all componets Ok state, Warning state, Critical state.\n\n\nDevice Summary horizontal: List device totals, up, down, ignored, disabled. Same for ports and services. \n\n\nDevice Summary vertical: List device totals, up, down, ignored, disabled. Same for ports and services.\n\n\nEventlog: Displays all events with your devices and LibreNMS. \n\n\nExternal Image: can be used to show external images on your dashboard. Or images from inside LibreNMS.\n\n\nGlobe Map: Will display map of the globe.\n\n\nGraph: Can be used to display graphs from devices. \n\n\nGraylog: Displays all Graylog's syslog entries.\n\n\nNotes: use for html tags, embed links and external web pages. Or just notes in general.\n\n\nServer Stats: Will display gauges for CPU, Memory, Storage usage. Note the device type has to be listed as \"Server\".\n\n\nSyslog: Displays all syslog entries.\n\n\nTop Devices: By Traffic, or  Uptime, or Response time, or Poller Duration, or Procssor load, or Memory Usage, or Storage Usage.\n\n\nTop Interfaces: Lists top interfaces by traffic utilization.\n\n\nWorldmap: displays all your devices locations. From syslocation or from override sysLocation.\n\n\n\n\nList of Widgets: \n\n\n\nDashboard Permissions\n\n\n\n\nPrivate: Sets the dashabord to only the user that created the dashboard can view and edit.\n\n\nShared Read: Sets the dashboard to allow other users to view the dashboard, but cant make changes to the dashboard.\n\n\nShared: Allows all users to view the dashboard and make changes.\n\n\n\n\nSetting a global default dashboard\n\n\nStep 1: Set the dashboard to either shared read or shared, depending on what you want the users access to change. \n\n\nStep 2: Then go to Settings -\n WebUI settings -\n Dashboard Settings and set the global default dashboard.\n\n\nSetting embeded webpage\n\n\nUsing the Notes Widget.\n\n\niframe src=\nurl/\n width=\n1200\n height=\n800\n\n  \np\nYour browser does not support iframes.\n/p\n\n\n/iframe\n\n\n\n\n\nNote you may need to play with the width and height and also size your widget properly.\n\nsrc=\"url\"\n needs to be URL to webpage your linking to.\nAlso some web pages may not support html embeded or iframe.\n\n\n\nHow to create ports graph\n\n\nIn the dashboard, you want to create an interface graph select the widget called\n\n\n\n\n\n\nGraph:  then select \"Port\" \"Bits\"\n\n\n\n\n\n\n\nNote: you can map the port by description or the alias or by port id. You will need to know this in order to map the port to the graph.", 
            "title": "Dashboards"
        }, 
        {
            "location": "/Extensions/Dashboards/#dashboards", 
            "text": "Create customised dashboards in LibreNMS per user. You can share dashboards with other users. You can also make a custom dashboard and\ndefault it for all users in LibreNMS.  Example Dashboard", 
            "title": "Dashboards"
        }, 
        {
            "location": "/Extensions/Dashboards/#widgets", 
            "text": "LibreNMS has a whole list of Widgets to select from.    Alerts Widget: Displays all alert notifications.  Availability Map: Displays all devices with colored tiles, green up, yellow for warning (device has been restarted in last 24 hours),red   for down. You can also list all services and ignored/disabled devcies in this widget.  Componet Status: List all componets Ok state, Warning state, Critical state.  Device Summary horizontal: List device totals, up, down, ignored, disabled. Same for ports and services.   Device Summary vertical: List device totals, up, down, ignored, disabled. Same for ports and services.  Eventlog: Displays all events with your devices and LibreNMS.   External Image: can be used to show external images on your dashboard. Or images from inside LibreNMS.  Globe Map: Will display map of the globe.  Graph: Can be used to display graphs from devices.   Graylog: Displays all Graylog's syslog entries.  Notes: use for html tags, embed links and external web pages. Or just notes in general.  Server Stats: Will display gauges for CPU, Memory, Storage usage. Note the device type has to be listed as \"Server\".  Syslog: Displays all syslog entries.  Top Devices: By Traffic, or  Uptime, or Response time, or Poller Duration, or Procssor load, or Memory Usage, or Storage Usage.  Top Interfaces: Lists top interfaces by traffic utilization.  Worldmap: displays all your devices locations. From syslocation or from override sysLocation.   List of Widgets:", 
            "title": "Widgets"
        }, 
        {
            "location": "/Extensions/Dashboards/#dashboard-permissions", 
            "text": "Private: Sets the dashabord to only the user that created the dashboard can view and edit.  Shared Read: Sets the dashboard to allow other users to view the dashboard, but cant make changes to the dashboard.  Shared: Allows all users to view the dashboard and make changes.", 
            "title": "Dashboard Permissions"
        }, 
        {
            "location": "/Extensions/Dashboards/#setting-a-global-default-dashboard", 
            "text": "Step 1: Set the dashboard to either shared read or shared, depending on what you want the users access to change.   Step 2: Then go to Settings -  WebUI settings -  Dashboard Settings and set the global default dashboard.", 
            "title": "Setting a global default dashboard"
        }, 
        {
            "location": "/Extensions/Dashboards/#setting-embeded-webpage", 
            "text": "Using the Notes Widget.  iframe src= url/  width= 1200  height= 800 \n   p Your browser does not support iframes. /p  /iframe   Note you may need to play with the width and height and also size your widget properly. src=\"url\"  needs to be URL to webpage your linking to.\nAlso some web pages may not support html embeded or iframe.", 
            "title": "Setting embeded webpage"
        }, 
        {
            "location": "/Extensions/Dashboards/#how-to-create-ports-graph", 
            "text": "In the dashboard, you want to create an interface graph select the widget called    Graph:  then select \"Port\" \"Bits\"    Note: you can map the port by description or the alias or by port id. You will need to know this in order to map the port to the graph.", 
            "title": "How to create ports graph"
        }, 
        {
            "location": "/Support/1-Minute-Polling/", 
            "text": "Information\n\n\nWe now have support for polling data at intervals to fit your needs.\n\n\n\n\nPlease be aware of the following:\n\n\n\n\n\n\nYou must also change your cron entry for \npoller-wrapper.py\n for this to work (if you change from the default 300 seconds).\n\n\nYour polling \nMUST\n complete in the time you configure for the heartbeat step value. See \n/pollers/tab=pollers/\n in your WebUI for your current value.\n\n\nThis will only affect RRD files created from the moment you change your settings.\n\n\nThis change will affect all data storage mechanisms such as MySQL, RRD and InfluxDB. If you decrease the values then please be aware of the increase in space use for MySQL and InfluxDB.\n\n\nIt's \nhighly recommended\n to configure some \nperformance optimizations\n. Keep in mind that all your devices will write all graphs every minute to the disk and that every device has many graphs. The most important thing is probably the \nRRDCached\n configuration that can save a lot of write IOPS.\n\n\n\n\nTo make the changes, please navigate to \n/settings/sub=external/\n within your WebUI. Select RRDTool Setup and then update the two values for step and heartbeat intervals:\n\n\n\n\nStep is how often you want to insert data, so if you change to 1 minute polling then this should be 60.\n\n\nHeartbeat is how long to wait for data before registering a null value, i.e 120 seconds.\n\n\n\n\nConverting existing RRD files\n\n\nWe provide a basic script to convert the default rrd files we generate to utilise your configured step and heartbeat \nvalues. Please do ensure that you backup your RRD files before running this just in case. The script runs on a per \ndevice basis or all devices at once.\n\n\n\n\nThe rrd files must be accessible from the server you run this script from.\n\n\n\n\n./scripts/rrdstep.php\n\n\nThis will provide the help information. To run it for localhost just run:\n\n\n./scripts/rrdstep.php -h localhost", 
            "title": "1 Minute Polling"
        }, 
        {
            "location": "/Support/1-Minute-Polling/#information", 
            "text": "We now have support for polling data at intervals to fit your needs.   Please be aware of the following:    You must also change your cron entry for  poller-wrapper.py  for this to work (if you change from the default 300 seconds).  Your polling  MUST  complete in the time you configure for the heartbeat step value. See  /pollers/tab=pollers/  in your WebUI for your current value.  This will only affect RRD files created from the moment you change your settings.  This change will affect all data storage mechanisms such as MySQL, RRD and InfluxDB. If you decrease the values then please be aware of the increase in space use for MySQL and InfluxDB.  It's  highly recommended  to configure some  performance optimizations . Keep in mind that all your devices will write all graphs every minute to the disk and that every device has many graphs. The most important thing is probably the  RRDCached  configuration that can save a lot of write IOPS.   To make the changes, please navigate to  /settings/sub=external/  within your WebUI. Select RRDTool Setup and then update the two values for step and heartbeat intervals:   Step is how often you want to insert data, so if you change to 1 minute polling then this should be 60.  Heartbeat is how long to wait for data before registering a null value, i.e 120 seconds.", 
            "title": "Information"
        }, 
        {
            "location": "/Support/1-Minute-Polling/#converting-existing-rrd-files", 
            "text": "We provide a basic script to convert the default rrd files we generate to utilise your configured step and heartbeat \nvalues. Please do ensure that you backup your RRD files before running this just in case. The script runs on a per \ndevice basis or all devices at once.   The rrd files must be accessible from the server you run this script from.   ./scripts/rrdstep.php  This will provide the help information. To run it for localhost just run:  ./scripts/rrdstep.php -h localhost", 
            "title": "Converting existing RRD files"
        }, 
        {
            "location": "/Support/Configuration/", 
            "text": "The options shown below also contain the default values.\n\n\nIf you would like to alter any of these then please add your config option to \nconfig.php\n.\n\n\nDirectories\n\n\n$config['install_dir'] = \n/opt/librenms\n;\n\n\n\n\nSet the installation directory (defaults to /opt/librenms), if you clone the GitHub branch to another location ensure you alter this.\n\n\n$config['temp_dir'] = \n/tmp\n;\n\n\n\n\nThe temporary directory is where images and other temporary files are created on your filesystem.\n\n\n$config['log_dir'] = \n/opt/librenms/logs\n;\n\n\n\n\nLog files created by LibreNMS will be stored within this directory.\n\n\nDatabase config\n\n\nThese are the configuration options you will need to use to specify to get started.\n\n\n$config['db_host'] = '127.0.0.1';\n$config['db_port'] = 3306;\n$config['db_user'] = '';\n$config['db_pass'] = '';\n$config['db_name'] = '';\n\n\n\n\nIf you use a unix socket, you can specify it with these options:\n\n\n$config['db_host']   = NULL;\n$config['db_port']   = NULL;\n$config['db_socket'] = '/run/mysqld/mysqld.sock';\n\n\n\n\nCore\n\n\nPHP Settings\n\n\nYou can change the memory limits for php within \nconfig.php\n. The value is in Megabytes and should just be an int value:\n\n\n$config['php_memory_limit'] = 128;\n\n\nPrograms\n\n\nA lot of these are self explanatory so no further information may be provided. Any extensions that have dedicated \ndocumentation page will be linked to rather than having the config provided.\n\n\nRRDTool\n\n\n\n\nYou can configure these options within the WebUI now, please avoid setting these options within config.php\n\n\nSettings -\n External Settings -\n RRDTool Setup\n\n\n\n\n$config['rrdtool'] = \n/usr/bin/rrdtool\n;\n\n\n\n\nPlease see \n1 Minute polling\n for information on configuring your install to record data more frequently.\n\n\nfping\n\n\n$config['fping']            = \n/usr/bin/fping\n;\n$config['fping6']           = \nfping6\n;\n$config['fping_options']['timeout'] = 500;\n$config['fping_options']['count'] = 3;\n$config['fping_options']['interval'] = 500;\n\n\n\n\nfping\n configuration options:\n\n\n\n\ntimeout\n (\nfping\n parameter \n-t\n): Amount of time that fping waits for a response to its first request (in milliseconds). \nSee note below\n\n\ncount\n (\nfping\n parameter \n-c\n): Number of request packets to send to each target.\n\n\ninterval\n (\nfping\n parameter \n-p\n): Time in milliseconds that fping waits between successive packets to an individual target.\n\n\n\n\n\n\nNOTE: Setting a higher timeout value than the interval value can lead to slowing down poller. Example:\n\n\ntimeout: 3000\n\n\ncount: 3\n\n\ninterval: 500\n\n\nIn this example, interval will be overwritten by the timeout value of 3000 which is 3 seconds. As we send three icmp packets (count: 3), each one is delayed by 3 seconds which will result in fping taking \n 6 seconds to return results.\n\n\n\n\nYou can disable the fping / icmp check that is done for a device to be determined to be up on a global or per device basis.\n\nWe don't advise disabling the fping / icmp check unless you know the impact, at worst if you have a large number of devices down\nthen it's possible that the poller would no longer complete in 5 minutes due to waiting for snmp to timeout.\n\n\nGlobally disable fping / icmp check:\n\n\n$config['icmp_check'] = false;\n\n\n\n\nIf you would like to do this on a per device basis then you can do so under Device -\n Edit -\n Misc -\n Disable ICMP Test? On\n\n\nSNMP\n\n\n$config['snmpwalk']         = \n/usr/bin/snmpwalk\n;\n$config['snmpget']          = \n/usr/bin/snmpget\n;\n$config['snmpbulkwalk']     = \n/usr/bin/snmpbulkwalk\n;\n\n\n\n\nSNMP program locations.\n\n\n$config['whois']            = \n/usr/bin/whois\n;\n$config['ping']             = \n/bin/ping\n;\n$config['mtr']              = \n/usr/bin/mtr\n;\n$config['nmap']             = \n/usr/bin/nmap\n;\n$config['nagios_plugins']   = \n/usr/lib/nagios/plugins\n;\n$config['ipmitool']         = \n/usr/bin/ipmitool\n;\n$config['virsh']            = \n/usr/bin/virsh\n;\n$config['dot']              = \n/usr/bin/dot\n;\n$config['unflatten']        = \n/usr/bin/unflatten\n;\n$config['neato']            = \n/usr/bin/neato\n;\n$config['sfdp']             = \n/usr/bin/sfdp\n;\n\n\n\n\nProxy support\n\n\nFor alerting and the callback functionality, we support the use of a http proxy setting. \nThese can be any one of the following:\n\n\n$config['callback_proxy'] = 'proxy.domain.com';\n$config['http_proxy']     = 'proxy.domain.com';\n\n\n\n\nWe can also make use of one of these environment variables which can be set in \n/etc/environment\n:\n\n\nhttp_proxy=proxy.domain.com\nhttps_proxy=proxy.domain.com\n\n\n\n\nRRDCached\n\n\nRRDCached\n\n\nWebUI Settings\n\n\n$config['base_url'] = \nhttp://demo.librenms.org\n;\n\n\n\n\nLibreNMS will attempt to detect the URL you are using but you can override that here.\n\n\n$config['site_style']       = \nlight\n;\n\n\n\n\nCurrently we have a number of styles which can be set which will alter the navigation bar look. dark, light and mono with light being the default.\n\n\n$config['webui']['custom_css'][]       = \ncss/custom/styles.css\n;\n\n\n\n\nYou can override a large number of visual elements by creating your own css stylesheet and referencing it here, place any custom css files into \n\nhtml/css/custom\n so they will be ignored by auto updates. You can specify as many css files as you like, the order they are within your config \nwill be the order they are loaded in the browser.\n\n\n$config['title_image'] = \nimages/custom/yourlogo.png\n;\n\n\n\n\nYou can override the default logo with yours, place any custom images files into \nhtml/images/custom\n so they will be ignored by auto updates.\n\n\n$config['page_refresh']     = \n300\n;\n\n\n\n\nSet how often pages are refreshed in seconds. The default is every 5 minutes. Some pages don't refresh at all by design.\n\n\n$config['front_page']       = \npages/front/default.php\n;\n$config['front_page_settings']['top']['ports'] = 10;\n$config['front_page_settings']['top']['devices'] = 10;\n$config['front_page_down_box_limit'] = 10;\n$config['vertical_summary'] = 0; // Enable to use vertical summary on front page instead of horizontal\n$config['top_ports']        = 1; // This enables the top X ports box\n$config['top_devices']      = 1; // This enables the top X devices box\n\n\n\n\nA number of home pages are provided within the install and can be found in html/pages/front/. You can change the default by\nsetting \nfront_page\n. The other options are used to alter the look of those pages that support it (default.php supports these options).\n\n\n// This option exists in the web UI, edit it under Global Settings -\n webui\n$config['webui']['default_dashboard_id'] = 0;\n\n\n\n\nAllows the specification of a global default dashboard page for any user who\nhas not set one in their user preferences.  Should be set to dashboard_id of an\nexisting dashboard that is shared or shared(read).  Otherwise, the system will\nautomatically create each user an empty dashboard called \nDefault\n on their\nfirst login.\n\n\n$config['login_message']    = \nUnauthorised access or use shall render the user liable to criminal and/or civil prosecution.\n;\n\n\n\n\nThis is the default message on the login page displayed to users.\n\n\n$config['public_status']    = false;\n\n\n\n\nIf this is set to true then an overview will be shown on the login page of devices and the status.\n\n\n$config['show_locations']          = 1;  # Enable Locations on menu\n$config['show_locations_dropdown'] = 1;  # Enable Locations dropdown on menu\n$config['show_services']           = 0;  # Enable Services on menu\n$config['int_customers']           = 1;  # Enable Customer Port Parsing\n$config['summary_errors']          = 0;  # Show Errored ports in summary boxes on the dashboard\n$config['customers_descr']         = 'cust'; // The description to look for in ifDescr. Can be an array as well array('cust','cid');\n$config['transit_descr']           = 'transit'; // Add custom transit descriptions (can be an array)\n$config['peering_descr']           = 'peering'; // Add custom peering descriptions (can be an array)\n$config['core_descr']              = 'core'; // Add custom core descriptions (can be an array)\n$config['custom_descr']            = ''; // Add custom interface descriptions (can be an array)\n$config['int_transit']             = 1;  # Enable Transit Types\n$config['int_peering']             = 1;  # Enable Peering Types\n$config['int_core']                = 1;  # Enable Core Port Types\n$config['int_l2tp']                = 0;  # Enable L2TP Port Types\n\n\n\n\nEnable / disable certain menus from being shown in the WebUI.\n\n\nYou are able to adjust the number and time frames of the quick select time options for graphs and the mini graphs shown per row.\n\n\nQuick select:\n\n\n$config['graphs']['mini']['normal'] = array(\n    'day' =\n '24 Hours',\n    'week' =\n 'One Week',\n    'month' =\n 'One Month',\n    'year' =\n 'One Year',\n);\n$config['graphs']['mini']['widescreen'] = array(\n    'sixhour' =\n '6 Hours',\n    'day' =\n '24 Hours',\n    'twoday' =\n '48 Hours',\n    'week' =\n 'One Week',\n    'twoweek' =\n 'Two Weeks',\n    'month' =\n 'One Month',\n    'twomonth' =\n 'Two Months',\n    'year' =\n 'One Year',\n    'twoyear' =\n 'Two Years',\n);\n\n\n\n\nMini graphs:\n\n\n$config['graphs']['row']['normal'] = array(\n    'sixhour' =\n '6 Hours',\n    'day' =\n '24 Hours',\n    'twoday' =\n '48 Hours',\n    'week' =\n 'One Week',\n    'twoweek' =\n 'Two Weeks',\n    'month' =\n 'One Month',\n    'twomonth' =\n 'Two Months',\n    'year' =\n 'One Year',\n    'twoyear' =\n 'Two Years',\n);\n\n\n\n\n$config['web_mouseover']      = true;\n\n\n\n\nYou can disable the mouseover popover for mini graphs by setting this to false.\n\n\n$config['enable_lazy_load'] = true;\n\n\n\n\nYou can disable image lazy loading by setting this to false.\n\n\n$config['show_overview_tab'] = true;\n\n\n\n\nEnable or disable the overview tab for a device.\n\n\n$config['overview_show_sysDescr'] = true;\n\n\n\n\nEnable or disable the sysDescr output for a device.\n\n\n$config['force_ip_to_sysname'] = false;\n\n\n\n\nWhen using IP addresses as a hostname you can instead represent the devices on the WebUI by its SNMP sysName resulting in an easier to read overview of your network. This would apply on networks where you don't have DNS records for most of your devices.\n\n\n$config['device_traffic_iftype'][] = '/loopback/';\n\n\n\n\nInterface types that aren't graphed in the WebUI. The default array contains more items, please see includes/defaults.inc.php for the full list.\n\n\n$config['enable_clear_discovery'] = 1;\n\n\n\n\nAdministrators are able to clear the last discovered time of a device which will force a full discovery run within the configured 5 minute cron window.\n\n\n$config['enable_footer'] = 1;\n\n\n\n\nDisable the footer of the WebUI by setting \nenable_footer\n to 0.\n\n\nYou can enable the old style network map (only available for individual devices with links discovered via xDP) by setting:\n\n\n$config['gui']['network-map']['style'] = 'old';\n\n\n\n\n$config['percentile_value'] = X;\n\n\n\n\nShow the \nX\nth percentile in the graph instead of the default 95th percentile.\n\n\n$config['shorthost_target_length'] = X;\n\n\n\n\nThe target maximum hostname length when applying the shorthost() function.\nYou can increase this if you want to try and fit more of the hostname in graph titles.\nThe default value is 12\nHowever, this can possibly break graph generation if this is very long.\n\n\nStacked Graphs\n\n\nYou can enable stacked graphs instead of the default inverted graphs. \nEnabling them is possible via webui Global Settings -\n Webui Settings -\n Graph settings -\n Use stacked graphs\n\n\nAdd host settings\n\n\nThe following setting controls how hosts are added.  If a host is added as an ip address it is checked to ensure the ip is not already present.  If the ip is present the host is not added.\nIf host is added by hostname this check is not performed.  If the setting is true hostnames are resolved and the check is also performed.  This helps prevents accidental duplicate hosts.\n\n\n$config['addhost_alwayscheckip']   = false; #true - check for duplicate ips even when adding host by name.\n                                            #false- only check when adding host by ip.\n\n\n\n\nBy default we allow hosts to be added with duplicate sysName's, you can disable this with the following config:\n\n\n$config['allow_duplicate_sysName'] = false;\n\n\n\n\nGlobal poller and discovery modules\n\n\nGenerally, it is a better to set these \nper OS\n or device.\n\n\n$config['discovery_modules]['arp-table'] = 1;\n$config['poller_modules']['bgp-peers'] = 0;\n\n\n\n\nSNMP Settings\n\n\n$config['snmp']['timeout'] = 1;            # timeout in seconds\n$config['snmp']['retries'] = 5;            # how many times to retry the query\n$config['snmp']['transports'] = array('udp', 'udp6', 'tcp', 'tcp6');\n$config['snmp']['version'] = \nv2c\n;         # Default version to use\n$config['snmp']['port'] = 161;\n\n\n\n\nDefault SNMP options including retry and timeout settings and also default version and port.\n\n\n$config['snmp']['community'][0] = \npublic\n;\n\n\n\n\nThe default v1/v2c snmp community to use, you can expand this array with \n[1]\n, \n[2]\n, \n[3]\n, etc.\n\n\n$config['snmp']['v3'][0]['authlevel'] = \nnoAuthNoPriv\n;  # noAuthNoPriv | authNoPriv | authPriv\n$config['snmp']['v3'][0]['authname'] = \nroot\n;           # User Name (required even for noAuthNoPriv)\n$config['snmp']['v3'][0]['authpass'] = \n;               # Auth Passphrase\n$config['snmp']['v3'][0]['authalgo'] = \nMD5\n;            # MD5 | SHA\n$config['snmp']['v3'][0]['cryptopass'] = \n;             # Privacy (Encryption) Passphrase\n$config['snmp']['v3'][0]['cryptoalgo'] = \nAES\n;          # AES | DES\n\n\n\n\nThe default v3 snmp details to use, you can expand this array with \n[1]\n, \n[2]\n, \n[3]\n, etc.\n\n\nAuto discovery settings\n\n\nAuto-Discovery\n\n\nEmail configuration\n\n\n\n\nYou can configure these options within the WebUI now, please avoid setting these options within config.php\n\n\n\n\n$config['email_backend']              = 'mail';\n$config['email_from']                 = NULL;\n$config['email_user']                 = $config['project_id'];\n$config['email_sendmail_path']        = '/usr/sbin/sendmail';\n$config['email_smtp_host']            = 'localhost';\n$config['email_smtp_port']            = 25;\n$config['email_smtp_timeout']         = 10;\n$config['email_smtp_secure']          = NULL;\n$config['email_smtp_auth']            = false;\n$config['email_smtp_username']        = NULL;\n$config['email_smtp_password']        = NULL;\n\n\n\n\nWhat type of mail transport to use for delivering emails. Valid options for \nemail_backend\n are mail, sendmail or smtp.\nThe varying options after that are to support the different transports.\n\n\nAlerting\n\n\nAlerting\n\n\nBilling\n\n\nBilling\n\n\nGlobal module support\n\n\n$config['enable_bgp']                   = 1; # Enable BGP session collection and display\n$config['enable_syslog']                = 0; # Enable Syslog\n$config['enable_inventory']             = 1; # Enable Inventory\n$config['enable_pseudowires']           = 1; # Enable Pseudowires\n$config['enable_vrfs']                  = 1; # Enable VRFs\n$config['enable_sla']                   = 0; # Enable Cisco SLA collection and display\n\n\n\n\nPort extensions\n\n\nPort-Description-Parser\n\n\n$config['enable_ports_etherlike']       = 0;\n$config['enable_ports_junoseatmvp']     = 0;\n$config['enable_ports_adsl']            = 1;\n$config['enable_ports_poe']             = 0;\n\n\n\n\nEnable / disable additional port statistics.\n\n\nExternal integration\n\n\nRancid\n\n\n$config['rancid_configs'][]             = '/var/lib/rancid/network/configs/';\n$config['rancid_ignorecomments']        = 0;\n\n\n\n\nRancid configuration, \nrancid_configs\n is an array containing all of the locations of your rancid files.\nSetting \nrancid_ignorecomments\n will disable showing lines that start with #\n\n\nOxidized\n\n\nOxidized\n\n\nCollectD\n\n\n$config['collectd_dir']                 = '/var/lib/collectd/rrd';\n\n\n\n\nSpecify the location of the collectd rrd files.\n\n\n$config['collectd_sock']                 = 'unix:///var/run/collectd.sock';\n\n\n\n\nSpecify the location of the collectd unix socket. Using a socket allows the collectd graphs to be flushed to disk before being drawn. Be sure that your web server has permissions to write to this socket.\n\n\nSmokeping\n\n\nSmokeping\n\n\nNFSen\n\n\nNFSen\n\n\nLocation mapping\n\n\nExact Matching:\n\n\n$config['location_map']['Under the Sink'] = \nUnder The Sink, The Office, London, UK\n;\n\n\n\n\nRegex Matching:\n\n\n$config['location_map_regex']['/Sink/'] = \nUnder The Sink, The Office, London, UK\n;\n\n\n\n\nRegex Match Substitution:\n\n\n$config['location_map_regex_sub']['/Sink/'] = \nUnder The Sink, The Office, London, UK [lat, long]\n;\n\n\n\n\nIf you have an SNMP SysLocation of \"Rack10,Rm-314,Sink\", Regex Match Substition yields \"Rack10,Rm-314,Under The Sink, The Office, London, UK [lat, long]\". This allows you to keep the SysLocation string short and keeps Rack/Room/Building information intact after the substitution.\n\n\nThe above are examples, these will rewrite device snmp locations so you don't need to configure full location within snmp.\n\n\nInterfaces to be ignored\n\n\nExamples:\n\n\n$config['bad_if'][] = \nvoip-null\n;\n$config['bad_iftype'][] = \nvoiceEncap\n;\n$config['bad_if_regexp'][] = '/^lo[0-9].*/';    // loopback\n\n\n\n\nNumerous defaults exist for this array already (see includes/defaults.inc.php for the full list). You can expand this list\nby continuing the array.\n\n\nbad_if\n is matched against the ifDescr value.\n\n\nbad_iftype\n is matched against the ifType value.\n\n\nbad_if_regexp\n is matched against the ifDescr value as a regular expression.\n\n\nbad_ifname_regexp\n is matched against the ifName value as a regular expression.\n\n\nbad_ifalias_regexp\n is matched against the ifAlias value as a regular expression.\n\n\nInterfaces that shouldn't be ignored\n\n\nExamples:\n\n\n$config['good_if'][] = 'FastEthernet';\n$config['os']['ios']['good_if'][] = 'FastEthernet';\n\n\n\n\ngood_if\n is matched against ifDescr value. This can be a bad_if value as well which would stop that port from being ignored. \nI.e If bad_if and good_if both contained FastEthernet then ports with this value in the ifDescr will be valid.\n\n\nInterfaces to be rewritten\n\n\n$config['rewrite_if']['cpu'] = 'Management Interface';\n$config['rewrite_if_regexp']['/cpu /'] = 'Management ';\n\n\n\n\nEntries defined in \nrewrite_if\n are being replaced completely.\nEntries defined in \nrewrite_if_regexp\n only replace the match.\nMatches are compared case-insensitive.\n\n\nEntity sensors to be ignored\n\n\nSome devices register bogus sensors as they are returned via SNMP but either don't exist or just don't return data.\nThis allows you to ignore those based on the descr field in the database. You can either ignore globally or on a per \nos basis.\n\n\n$config['bad_entity_sensor_regex'][] = '/Physical id [0-9]+/';\n$config['os']['cisco']['bad_entity_sensor_regex'] = '/Physical id [0-9]+/';\n\n\n\n\nStorage configuration\n\n\n$config['ignore_mount_removable']  = 1;\n$config['ignore_mount_network']    = 1;\n$config['ignore_mount_optical']    = 1;\n\n$config['ignore_mount'][] = \n/kern\n;\n$config['ignore_mount'][] = \n/mnt/cdrom\n;\n$config['ignore_mount'][] = \n/proc\n;\n$config['ignore_mount'][] = \n/dev\n;\n\n$config['ignore_mount_string'][] = \npackages\n;\n$config['ignore_mount_string'][] = \ndevfs\n;\n$config['ignore_mount_string'][] = \nprocfs\n;\n$config['ignore_mount_string'][] = \nUMA\n;\n$config['ignore_mount_string'][] = \nMALLOC\n;\n\n$config['ignore_mount_regexp'][] = \n/on: \\/packages/\n;\n$config['ignore_mount_regexp'][] = \n/on: \\/dev/\n;\n$config['ignore_mount_regexp'][] = \n/on: \\/proc/\n;\n$config['ignore_mount_regexp'][] = \n/on: \\/junos^/\n;\n$config['ignore_mount_regexp'][] = \n/on: \\/junos\\/dev/\n;\n$config['ignore_mount_regexp'][] = \n/on: \\/jail\\/dev/\n;\n$config['ignore_mount_regexp'][] = \n/^(dev|proc)fs/\n;\n$config['ignore_mount_regexp'][] = \n/^\\/dev\\/md0/\n;\n$config['ignore_mount_regexp'][] = \n/^\\/var\\/dhcpd\\/dev,/\n;\n$config['ignore_mount_regexp'][] = \n/UMA/\n;\n\n\n\n\nMounted storage / mount points to ignore in discovery and polling.\n\n\nIRC Bot\n\n\nIRC Bot\n\n\nAuthentication\n\n\nAuthentication\n\n\nCleanup options\n\n\nThese options rely on daily.sh running from cron as per the installation instructions.\n\n\n$config['syslog_purge']                                   = 30;\n$config['eventlog_purge']                                 = 30;\n$config['authlog_purge']                                  = 30;\n$config['perf_times_purge']                               = 30;\n$config['device_perf_purge']                              = 7;\n$config['rrd_purge']                                      = 90;// Not set by default\n\n\n\n\nThese options will ensure data within LibreNMS over X days old is automatically purged. You can alter these individually,\nvalues are in days.\n\n\n\n\nNOTE: Please be aware that \n$config['rrd_purge']\n is \nNOT\n set by default. This option will remove any old data within \nthe rrd directory automatically - only enable this if you are comfortable with that happening.\n\n\n\n\nSyslog options\n\n\nSyslog\n\n\nVirtualization\n\n\n$config['enable_libvirt'] = 1;\n$config['libvirt_protocols']    = array(\nqemu+ssh\n,\nxen+ssh\n);\n$config['libvirt_username'] = 'root';\n\n\n\n\nEnable this to switch on support for libvirt along with \nlibvirt_protocols\n\nto indicate how you connect to libvirt.  You also need to:\n\n\n\n\nGenerate a non-password-protected ssh key for use by LibreNMS, as the\n    user which runs polling \n discovery (usually \nlibrenms\n).\n\n\nOn each VM host you wish to monitor:\n\n\nConfigure public key authentication from your LibreNMS server/poller by\n     adding the librenms public key to \n~root/.ssh/authorized_keys\n.\n\n\n(xen+ssh only) Enable libvirtd to gather data from xend by setting\n     \n(xend-unix-server yes)\n in \n/etc/xen/xend-config.sxp\n and\n     restarting xend and libvirtd.\n\n\n\n\nTo test your setup, run \nvirsh -c qemu+ssh://vmhost/system list\n or\n\nvirsh -c xen+ssh://vmhost list\n as your librenms polling user.\n\n\nBGP Support\n\n\n$config['astext']['65332'] = \nCymru FullBogon Feed\n;\n\n\n\n\nYou can use this array to rewrite the description of ASes that you have discovered.\n\n\nAuto updates\n\n\nUpdating\n\n\nIPMI\n\n\nSetup the types of IPMI protocols to test a host for and in what order. Don't forget to install ipmitool on the monitoring host.\n\n\n$config['ipmi']['type'] = array();\n$config['ipmi']['type'][] = \nlanplus\n;\n$config['ipmi']['type'][] = \nlan\n;\n$config['ipmi']['type'][] = \nimb\n;\n$config['ipmi']['type'][] = \nopen\n;\n\n\n\n\nDistributed poller settings\n\n\nDistributed Poller\n\n\nAPI Settings\n\n\nCORS Support\n\n\nhttps://developer.mozilla.org/en-US/docs/Web/HTTP/Access_control_CORS\n\n\nCORS support for the API is disabled by default. Below you will find the standard options,\nall of which you can configure.\n\n\n$config['api']['cors']['enabled'] = false;\n$config['api']['cors']['origin'] = '*';\n$config['api']['cors']['maxage'] = '86400';\n$config['api']['cors']['allowmethods'] = array('POST', 'GET', 'PUT', 'DELETE', 'PATCH');\n$config['api']['cors']['allowheaders'] = array('Origin', 'X-Requested-With', 'Content-Type', 'Accept', 'X-Auth-Token');", 
            "title": "Configuration docs"
        }, 
        {
            "location": "/Support/Configuration/#directories", 
            "text": "$config['install_dir'] =  /opt/librenms ;  Set the installation directory (defaults to /opt/librenms), if you clone the GitHub branch to another location ensure you alter this.  $config['temp_dir'] =  /tmp ;  The temporary directory is where images and other temporary files are created on your filesystem.  $config['log_dir'] =  /opt/librenms/logs ;  Log files created by LibreNMS will be stored within this directory.", 
            "title": "Directories"
        }, 
        {
            "location": "/Support/Configuration/#database-config", 
            "text": "These are the configuration options you will need to use to specify to get started.  $config['db_host'] = '127.0.0.1';\n$config['db_port'] = 3306;\n$config['db_user'] = '';\n$config['db_pass'] = '';\n$config['db_name'] = '';  If you use a unix socket, you can specify it with these options:  $config['db_host']   = NULL;\n$config['db_port']   = NULL;\n$config['db_socket'] = '/run/mysqld/mysqld.sock';", 
            "title": "Database config"
        }, 
        {
            "location": "/Support/Configuration/#core", 
            "text": "", 
            "title": "Core"
        }, 
        {
            "location": "/Support/Configuration/#php-settings", 
            "text": "You can change the memory limits for php within  config.php . The value is in Megabytes and should just be an int value:  $config['php_memory_limit'] = 128;", 
            "title": "PHP Settings"
        }, 
        {
            "location": "/Support/Configuration/#programs", 
            "text": "A lot of these are self explanatory so no further information may be provided. Any extensions that have dedicated \ndocumentation page will be linked to rather than having the config provided.", 
            "title": "Programs"
        }, 
        {
            "location": "/Support/Configuration/#rrdtool", 
            "text": "You can configure these options within the WebUI now, please avoid setting these options within config.php  Settings -  External Settings -  RRDTool Setup   $config['rrdtool'] =  /usr/bin/rrdtool ;  Please see  1 Minute polling  for information on configuring your install to record data more frequently.", 
            "title": "RRDTool"
        }, 
        {
            "location": "/Support/Configuration/#fping", 
            "text": "$config['fping']            =  /usr/bin/fping ;\n$config['fping6']           =  fping6 ;\n$config['fping_options']['timeout'] = 500;\n$config['fping_options']['count'] = 3;\n$config['fping_options']['interval'] = 500;  fping  configuration options:   timeout  ( fping  parameter  -t ): Amount of time that fping waits for a response to its first request (in milliseconds).  See note below  count  ( fping  parameter  -c ): Number of request packets to send to each target.  interval  ( fping  parameter  -p ): Time in milliseconds that fping waits between successive packets to an individual target.    NOTE: Setting a higher timeout value than the interval value can lead to slowing down poller. Example:  timeout: 3000  count: 3  interval: 500  In this example, interval will be overwritten by the timeout value of 3000 which is 3 seconds. As we send three icmp packets (count: 3), each one is delayed by 3 seconds which will result in fping taking   6 seconds to return results.   You can disable the fping / icmp check that is done for a device to be determined to be up on a global or per device basis. We don't advise disabling the fping / icmp check unless you know the impact, at worst if you have a large number of devices down\nthen it's possible that the poller would no longer complete in 5 minutes due to waiting for snmp to timeout.  Globally disable fping / icmp check:  $config['icmp_check'] = false;  If you would like to do this on a per device basis then you can do so under Device -  Edit -  Misc -  Disable ICMP Test? On", 
            "title": "fping"
        }, 
        {
            "location": "/Support/Configuration/#snmp", 
            "text": "$config['snmpwalk']         =  /usr/bin/snmpwalk ;\n$config['snmpget']          =  /usr/bin/snmpget ;\n$config['snmpbulkwalk']     =  /usr/bin/snmpbulkwalk ;  SNMP program locations.  $config['whois']            =  /usr/bin/whois ;\n$config['ping']             =  /bin/ping ;\n$config['mtr']              =  /usr/bin/mtr ;\n$config['nmap']             =  /usr/bin/nmap ;\n$config['nagios_plugins']   =  /usr/lib/nagios/plugins ;\n$config['ipmitool']         =  /usr/bin/ipmitool ;\n$config['virsh']            =  /usr/bin/virsh ;\n$config['dot']              =  /usr/bin/dot ;\n$config['unflatten']        =  /usr/bin/unflatten ;\n$config['neato']            =  /usr/bin/neato ;\n$config['sfdp']             =  /usr/bin/sfdp ;", 
            "title": "SNMP"
        }, 
        {
            "location": "/Support/Configuration/#proxy-support", 
            "text": "For alerting and the callback functionality, we support the use of a http proxy setting. \nThese can be any one of the following:  $config['callback_proxy'] = 'proxy.domain.com';\n$config['http_proxy']     = 'proxy.domain.com';  We can also make use of one of these environment variables which can be set in  /etc/environment :  http_proxy=proxy.domain.com\nhttps_proxy=proxy.domain.com", 
            "title": "Proxy support"
        }, 
        {
            "location": "/Support/Configuration/#rrdcached", 
            "text": "RRDCached", 
            "title": "RRDCached"
        }, 
        {
            "location": "/Support/Configuration/#webui-settings", 
            "text": "$config['base_url'] =  http://demo.librenms.org ;  LibreNMS will attempt to detect the URL you are using but you can override that here.  $config['site_style']       =  light ;  Currently we have a number of styles which can be set which will alter the navigation bar look. dark, light and mono with light being the default.  $config['webui']['custom_css'][]       =  css/custom/styles.css ;  You can override a large number of visual elements by creating your own css stylesheet and referencing it here, place any custom css files into  html/css/custom  so they will be ignored by auto updates. You can specify as many css files as you like, the order they are within your config \nwill be the order they are loaded in the browser.  $config['title_image'] =  images/custom/yourlogo.png ;  You can override the default logo with yours, place any custom images files into  html/images/custom  so they will be ignored by auto updates.  $config['page_refresh']     =  300 ;  Set how often pages are refreshed in seconds. The default is every 5 minutes. Some pages don't refresh at all by design.  $config['front_page']       =  pages/front/default.php ;\n$config['front_page_settings']['top']['ports'] = 10;\n$config['front_page_settings']['top']['devices'] = 10;\n$config['front_page_down_box_limit'] = 10;\n$config['vertical_summary'] = 0; // Enable to use vertical summary on front page instead of horizontal\n$config['top_ports']        = 1; // This enables the top X ports box\n$config['top_devices']      = 1; // This enables the top X devices box  A number of home pages are provided within the install and can be found in html/pages/front/. You can change the default by\nsetting  front_page . The other options are used to alter the look of those pages that support it (default.php supports these options).  // This option exists in the web UI, edit it under Global Settings -  webui\n$config['webui']['default_dashboard_id'] = 0;  Allows the specification of a global default dashboard page for any user who\nhas not set one in their user preferences.  Should be set to dashboard_id of an\nexisting dashboard that is shared or shared(read).  Otherwise, the system will\nautomatically create each user an empty dashboard called  Default  on their\nfirst login.  $config['login_message']    =  Unauthorised access or use shall render the user liable to criminal and/or civil prosecution. ;  This is the default message on the login page displayed to users.  $config['public_status']    = false;  If this is set to true then an overview will be shown on the login page of devices and the status.  $config['show_locations']          = 1;  # Enable Locations on menu\n$config['show_locations_dropdown'] = 1;  # Enable Locations dropdown on menu\n$config['show_services']           = 0;  # Enable Services on menu\n$config['int_customers']           = 1;  # Enable Customer Port Parsing\n$config['summary_errors']          = 0;  # Show Errored ports in summary boxes on the dashboard\n$config['customers_descr']         = 'cust'; // The description to look for in ifDescr. Can be an array as well array('cust','cid');\n$config['transit_descr']           = 'transit'; // Add custom transit descriptions (can be an array)\n$config['peering_descr']           = 'peering'; // Add custom peering descriptions (can be an array)\n$config['core_descr']              = 'core'; // Add custom core descriptions (can be an array)\n$config['custom_descr']            = ''; // Add custom interface descriptions (can be an array)\n$config['int_transit']             = 1;  # Enable Transit Types\n$config['int_peering']             = 1;  # Enable Peering Types\n$config['int_core']                = 1;  # Enable Core Port Types\n$config['int_l2tp']                = 0;  # Enable L2TP Port Types  Enable / disable certain menus from being shown in the WebUI.  You are able to adjust the number and time frames of the quick select time options for graphs and the mini graphs shown per row.  Quick select:  $config['graphs']['mini']['normal'] = array(\n    'day' =  '24 Hours',\n    'week' =  'One Week',\n    'month' =  'One Month',\n    'year' =  'One Year',\n);\n$config['graphs']['mini']['widescreen'] = array(\n    'sixhour' =  '6 Hours',\n    'day' =  '24 Hours',\n    'twoday' =  '48 Hours',\n    'week' =  'One Week',\n    'twoweek' =  'Two Weeks',\n    'month' =  'One Month',\n    'twomonth' =  'Two Months',\n    'year' =  'One Year',\n    'twoyear' =  'Two Years',\n);  Mini graphs:  $config['graphs']['row']['normal'] = array(\n    'sixhour' =  '6 Hours',\n    'day' =  '24 Hours',\n    'twoday' =  '48 Hours',\n    'week' =  'One Week',\n    'twoweek' =  'Two Weeks',\n    'month' =  'One Month',\n    'twomonth' =  'Two Months',\n    'year' =  'One Year',\n    'twoyear' =  'Two Years',\n);  $config['web_mouseover']      = true;  You can disable the mouseover popover for mini graphs by setting this to false.  $config['enable_lazy_load'] = true;  You can disable image lazy loading by setting this to false.  $config['show_overview_tab'] = true;  Enable or disable the overview tab for a device.  $config['overview_show_sysDescr'] = true;  Enable or disable the sysDescr output for a device.  $config['force_ip_to_sysname'] = false;  When using IP addresses as a hostname you can instead represent the devices on the WebUI by its SNMP sysName resulting in an easier to read overview of your network. This would apply on networks where you don't have DNS records for most of your devices.  $config['device_traffic_iftype'][] = '/loopback/';  Interface types that aren't graphed in the WebUI. The default array contains more items, please see includes/defaults.inc.php for the full list.  $config['enable_clear_discovery'] = 1;  Administrators are able to clear the last discovered time of a device which will force a full discovery run within the configured 5 minute cron window.  $config['enable_footer'] = 1;  Disable the footer of the WebUI by setting  enable_footer  to 0.  You can enable the old style network map (only available for individual devices with links discovered via xDP) by setting:  $config['gui']['network-map']['style'] = 'old';  $config['percentile_value'] = X;  Show the  X th percentile in the graph instead of the default 95th percentile.  $config['shorthost_target_length'] = X;  The target maximum hostname length when applying the shorthost() function.\nYou can increase this if you want to try and fit more of the hostname in graph titles.\nThe default value is 12\nHowever, this can possibly break graph generation if this is very long.", 
            "title": "WebUI Settings"
        }, 
        {
            "location": "/Support/Configuration/#stacked-graphs", 
            "text": "You can enable stacked graphs instead of the default inverted graphs. \nEnabling them is possible via webui Global Settings -  Webui Settings -  Graph settings -  Use stacked graphs", 
            "title": "Stacked Graphs"
        }, 
        {
            "location": "/Support/Configuration/#add-host-settings", 
            "text": "The following setting controls how hosts are added.  If a host is added as an ip address it is checked to ensure the ip is not already present.  If the ip is present the host is not added.\nIf host is added by hostname this check is not performed.  If the setting is true hostnames are resolved and the check is also performed.  This helps prevents accidental duplicate hosts.  $config['addhost_alwayscheckip']   = false; #true - check for duplicate ips even when adding host by name.\n                                            #false- only check when adding host by ip.  By default we allow hosts to be added with duplicate sysName's, you can disable this with the following config:  $config['allow_duplicate_sysName'] = false;", 
            "title": "Add host settings"
        }, 
        {
            "location": "/Support/Configuration/#global-poller-and-discovery-modules", 
            "text": "Generally, it is a better to set these  per OS  or device.  $config['discovery_modules]['arp-table'] = 1;\n$config['poller_modules']['bgp-peers'] = 0;", 
            "title": "Global poller and discovery modules"
        }, 
        {
            "location": "/Support/Configuration/#snmp-settings", 
            "text": "$config['snmp']['timeout'] = 1;            # timeout in seconds\n$config['snmp']['retries'] = 5;            # how many times to retry the query\n$config['snmp']['transports'] = array('udp', 'udp6', 'tcp', 'tcp6');\n$config['snmp']['version'] =  v2c ;         # Default version to use\n$config['snmp']['port'] = 161;  Default SNMP options including retry and timeout settings and also default version and port.  $config['snmp']['community'][0] =  public ;  The default v1/v2c snmp community to use, you can expand this array with  [1] ,  [2] ,  [3] , etc.  $config['snmp']['v3'][0]['authlevel'] =  noAuthNoPriv ;  # noAuthNoPriv | authNoPriv | authPriv\n$config['snmp']['v3'][0]['authname'] =  root ;           # User Name (required even for noAuthNoPriv)\n$config['snmp']['v3'][0]['authpass'] =  ;               # Auth Passphrase\n$config['snmp']['v3'][0]['authalgo'] =  MD5 ;            # MD5 | SHA\n$config['snmp']['v3'][0]['cryptopass'] =  ;             # Privacy (Encryption) Passphrase\n$config['snmp']['v3'][0]['cryptoalgo'] =  AES ;          # AES | DES  The default v3 snmp details to use, you can expand this array with  [1] ,  [2] ,  [3] , etc.", 
            "title": "SNMP Settings"
        }, 
        {
            "location": "/Support/Configuration/#auto-discovery-settings", 
            "text": "Auto-Discovery", 
            "title": "Auto discovery settings"
        }, 
        {
            "location": "/Support/Configuration/#email-configuration", 
            "text": "You can configure these options within the WebUI now, please avoid setting these options within config.php   $config['email_backend']              = 'mail';\n$config['email_from']                 = NULL;\n$config['email_user']                 = $config['project_id'];\n$config['email_sendmail_path']        = '/usr/sbin/sendmail';\n$config['email_smtp_host']            = 'localhost';\n$config['email_smtp_port']            = 25;\n$config['email_smtp_timeout']         = 10;\n$config['email_smtp_secure']          = NULL;\n$config['email_smtp_auth']            = false;\n$config['email_smtp_username']        = NULL;\n$config['email_smtp_password']        = NULL;  What type of mail transport to use for delivering emails. Valid options for  email_backend  are mail, sendmail or smtp.\nThe varying options after that are to support the different transports.", 
            "title": "Email configuration"
        }, 
        {
            "location": "/Support/Configuration/#alerting", 
            "text": "Alerting", 
            "title": "Alerting"
        }, 
        {
            "location": "/Support/Configuration/#billing", 
            "text": "Billing", 
            "title": "Billing"
        }, 
        {
            "location": "/Support/Configuration/#global-module-support", 
            "text": "$config['enable_bgp']                   = 1; # Enable BGP session collection and display\n$config['enable_syslog']                = 0; # Enable Syslog\n$config['enable_inventory']             = 1; # Enable Inventory\n$config['enable_pseudowires']           = 1; # Enable Pseudowires\n$config['enable_vrfs']                  = 1; # Enable VRFs\n$config['enable_sla']                   = 0; # Enable Cisco SLA collection and display", 
            "title": "Global module support"
        }, 
        {
            "location": "/Support/Configuration/#port-extensions", 
            "text": "Port-Description-Parser  $config['enable_ports_etherlike']       = 0;\n$config['enable_ports_junoseatmvp']     = 0;\n$config['enable_ports_adsl']            = 1;\n$config['enable_ports_poe']             = 0;  Enable / disable additional port statistics.", 
            "title": "Port extensions"
        }, 
        {
            "location": "/Support/Configuration/#external-integration", 
            "text": "", 
            "title": "External integration"
        }, 
        {
            "location": "/Support/Configuration/#rancid", 
            "text": "$config['rancid_configs'][]             = '/var/lib/rancid/network/configs/';\n$config['rancid_ignorecomments']        = 0;  Rancid configuration,  rancid_configs  is an array containing all of the locations of your rancid files.\nSetting  rancid_ignorecomments  will disable showing lines that start with #", 
            "title": "Rancid"
        }, 
        {
            "location": "/Support/Configuration/#oxidized", 
            "text": "Oxidized", 
            "title": "Oxidized"
        }, 
        {
            "location": "/Support/Configuration/#collectd", 
            "text": "$config['collectd_dir']                 = '/var/lib/collectd/rrd';  Specify the location of the collectd rrd files.  $config['collectd_sock']                 = 'unix:///var/run/collectd.sock';  Specify the location of the collectd unix socket. Using a socket allows the collectd graphs to be flushed to disk before being drawn. Be sure that your web server has permissions to write to this socket.", 
            "title": "CollectD"
        }, 
        {
            "location": "/Support/Configuration/#smokeping", 
            "text": "Smokeping", 
            "title": "Smokeping"
        }, 
        {
            "location": "/Support/Configuration/#nfsen", 
            "text": "NFSen", 
            "title": "NFSen"
        }, 
        {
            "location": "/Support/Configuration/#location-mapping", 
            "text": "Exact Matching:  $config['location_map']['Under the Sink'] =  Under The Sink, The Office, London, UK ;  Regex Matching:  $config['location_map_regex']['/Sink/'] =  Under The Sink, The Office, London, UK ;  Regex Match Substitution:  $config['location_map_regex_sub']['/Sink/'] =  Under The Sink, The Office, London, UK [lat, long] ;  If you have an SNMP SysLocation of \"Rack10,Rm-314,Sink\", Regex Match Substition yields \"Rack10,Rm-314,Under The Sink, The Office, London, UK [lat, long]\". This allows you to keep the SysLocation string short and keeps Rack/Room/Building information intact after the substitution.  The above are examples, these will rewrite device snmp locations so you don't need to configure full location within snmp.", 
            "title": "Location mapping"
        }, 
        {
            "location": "/Support/Configuration/#interfaces-to-be-ignored", 
            "text": "Examples:  $config['bad_if'][] =  voip-null ;\n$config['bad_iftype'][] =  voiceEncap ;\n$config['bad_if_regexp'][] = '/^lo[0-9].*/';    // loopback  Numerous defaults exist for this array already (see includes/defaults.inc.php for the full list). You can expand this list\nby continuing the array.  bad_if  is matched against the ifDescr value.  bad_iftype  is matched against the ifType value.  bad_if_regexp  is matched against the ifDescr value as a regular expression.  bad_ifname_regexp  is matched against the ifName value as a regular expression.  bad_ifalias_regexp  is matched against the ifAlias value as a regular expression.", 
            "title": "Interfaces to be ignored"
        }, 
        {
            "location": "/Support/Configuration/#interfaces-that-shouldnt-be-ignored", 
            "text": "Examples:  $config['good_if'][] = 'FastEthernet';\n$config['os']['ios']['good_if'][] = 'FastEthernet';  good_if  is matched against ifDescr value. This can be a bad_if value as well which would stop that port from being ignored. \nI.e If bad_if and good_if both contained FastEthernet then ports with this value in the ifDescr will be valid.", 
            "title": "Interfaces that shouldn't be ignored"
        }, 
        {
            "location": "/Support/Configuration/#interfaces-to-be-rewritten", 
            "text": "$config['rewrite_if']['cpu'] = 'Management Interface';\n$config['rewrite_if_regexp']['/cpu /'] = 'Management ';  Entries defined in  rewrite_if  are being replaced completely.\nEntries defined in  rewrite_if_regexp  only replace the match.\nMatches are compared case-insensitive.", 
            "title": "Interfaces to be rewritten"
        }, 
        {
            "location": "/Support/Configuration/#entity-sensors-to-be-ignored", 
            "text": "Some devices register bogus sensors as they are returned via SNMP but either don't exist or just don't return data.\nThis allows you to ignore those based on the descr field in the database. You can either ignore globally or on a per \nos basis.  $config['bad_entity_sensor_regex'][] = '/Physical id [0-9]+/';\n$config['os']['cisco']['bad_entity_sensor_regex'] = '/Physical id [0-9]+/';", 
            "title": "Entity sensors to be ignored"
        }, 
        {
            "location": "/Support/Configuration/#storage-configuration", 
            "text": "$config['ignore_mount_removable']  = 1;\n$config['ignore_mount_network']    = 1;\n$config['ignore_mount_optical']    = 1;\n\n$config['ignore_mount'][] =  /kern ;\n$config['ignore_mount'][] =  /mnt/cdrom ;\n$config['ignore_mount'][] =  /proc ;\n$config['ignore_mount'][] =  /dev ;\n\n$config['ignore_mount_string'][] =  packages ;\n$config['ignore_mount_string'][] =  devfs ;\n$config['ignore_mount_string'][] =  procfs ;\n$config['ignore_mount_string'][] =  UMA ;\n$config['ignore_mount_string'][] =  MALLOC ;\n\n$config['ignore_mount_regexp'][] =  /on: \\/packages/ ;\n$config['ignore_mount_regexp'][] =  /on: \\/dev/ ;\n$config['ignore_mount_regexp'][] =  /on: \\/proc/ ;\n$config['ignore_mount_regexp'][] =  /on: \\/junos^/ ;\n$config['ignore_mount_regexp'][] =  /on: \\/junos\\/dev/ ;\n$config['ignore_mount_regexp'][] =  /on: \\/jail\\/dev/ ;\n$config['ignore_mount_regexp'][] =  /^(dev|proc)fs/ ;\n$config['ignore_mount_regexp'][] =  /^\\/dev\\/md0/ ;\n$config['ignore_mount_regexp'][] =  /^\\/var\\/dhcpd\\/dev,/ ;\n$config['ignore_mount_regexp'][] =  /UMA/ ;  Mounted storage / mount points to ignore in discovery and polling.", 
            "title": "Storage configuration"
        }, 
        {
            "location": "/Support/Configuration/#irc-bot", 
            "text": "IRC Bot", 
            "title": "IRC Bot"
        }, 
        {
            "location": "/Support/Configuration/#authentication", 
            "text": "Authentication", 
            "title": "Authentication"
        }, 
        {
            "location": "/Support/Configuration/#cleanup-options", 
            "text": "These options rely on daily.sh running from cron as per the installation instructions.  $config['syslog_purge']                                   = 30;\n$config['eventlog_purge']                                 = 30;\n$config['authlog_purge']                                  = 30;\n$config['perf_times_purge']                               = 30;\n$config['device_perf_purge']                              = 7;\n$config['rrd_purge']                                      = 90;// Not set by default  These options will ensure data within LibreNMS over X days old is automatically purged. You can alter these individually,\nvalues are in days.   NOTE: Please be aware that  $config['rrd_purge']  is  NOT  set by default. This option will remove any old data within \nthe rrd directory automatically - only enable this if you are comfortable with that happening.", 
            "title": "Cleanup options"
        }, 
        {
            "location": "/Support/Configuration/#syslog-options", 
            "text": "Syslog", 
            "title": "Syslog options"
        }, 
        {
            "location": "/Support/Configuration/#virtualization", 
            "text": "$config['enable_libvirt'] = 1;\n$config['libvirt_protocols']    = array( qemu+ssh , xen+ssh );\n$config['libvirt_username'] = 'root';  Enable this to switch on support for libvirt along with  libvirt_protocols \nto indicate how you connect to libvirt.  You also need to:   Generate a non-password-protected ssh key for use by LibreNMS, as the\n    user which runs polling   discovery (usually  librenms ).  On each VM host you wish to monitor:  Configure public key authentication from your LibreNMS server/poller by\n     adding the librenms public key to  ~root/.ssh/authorized_keys .  (xen+ssh only) Enable libvirtd to gather data from xend by setting\n      (xend-unix-server yes)  in  /etc/xen/xend-config.sxp  and\n     restarting xend and libvirtd.   To test your setup, run  virsh -c qemu+ssh://vmhost/system list  or virsh -c xen+ssh://vmhost list  as your librenms polling user.", 
            "title": "Virtualization"
        }, 
        {
            "location": "/Support/Configuration/#bgp-support", 
            "text": "$config['astext']['65332'] =  Cymru FullBogon Feed ;  You can use this array to rewrite the description of ASes that you have discovered.", 
            "title": "BGP Support"
        }, 
        {
            "location": "/Support/Configuration/#auto-updates", 
            "text": "Updating", 
            "title": "Auto updates"
        }, 
        {
            "location": "/Support/Configuration/#ipmi", 
            "text": "Setup the types of IPMI protocols to test a host for and in what order. Don't forget to install ipmitool on the monitoring host.  $config['ipmi']['type'] = array();\n$config['ipmi']['type'][] =  lanplus ;\n$config['ipmi']['type'][] =  lan ;\n$config['ipmi']['type'][] =  imb ;\n$config['ipmi']['type'][] =  open ;", 
            "title": "IPMI"
        }, 
        {
            "location": "/Support/Configuration/#distributed-poller-settings", 
            "text": "Distributed Poller", 
            "title": "Distributed poller settings"
        }, 
        {
            "location": "/Support/Configuration/#api-settings", 
            "text": "", 
            "title": "API Settings"
        }, 
        {
            "location": "/Support/Configuration/#cors-support", 
            "text": "https://developer.mozilla.org/en-US/docs/Web/HTTP/Access_control_CORS  CORS support for the API is disabled by default. Below you will find the standard options,\nall of which you can configure.  $config['api']['cors']['enabled'] = false;\n$config['api']['cors']['origin'] = '*';\n$config['api']['cors']['maxage'] = '86400';\n$config['api']['cors']['allowmethods'] = array('POST', 'GET', 'PUT', 'DELETE', 'PATCH');\n$config['api']['cors']['allowheaders'] = array('Origin', 'X-Requested-With', 'Content-Type', 'Accept', 'X-Auth-Token');", 
            "title": "CORS Support"
        }, 
        {
            "location": "/Extensions/Authentication/", 
            "text": "Authentication modules\n\n\nLibreNMS supports multiple authentication modules along with \nTwo Factor Auth\n.\nHere we will provide configuration details for these modules.\n\n\nAvailable authentication modules\n\n\n\n\n\n\nMySQL: \nmysql\n\n\n\n\n\n\nActive Directory: \nactive_directory\n\n\n\n\n\n\nLDAP: \nldap\n\n\n\n\n\n\nRadius: \nradius\n\n\n\n\n\n\nHTTP Auth: \nhttp-auth\n, \nad_authorization\n, \nldap_authorization\n\n\n\n\n\n\nSingle Sign-on: \nsso\n\n\n\n\n\n\nEnable authentication module\n\n\nTo enable a particular authentication module you need to set this up in config.php.\n\n\n$config['auth_mechanism'] = \nmysql\n;\n\n\n\n\nUser levels and User account type\n\n\n\n\n\n\n1: \nNormal User\n: You will need to assign device / port permissions for users at this level.\n\n\n\n\n\n\n5: \nGlobal Read\n: Read only Administrator. \n\n\n\n\n\n\n10: \nAdministartor\n: This is a global read/write admin account.\n\n\n\n\n\n\n11: \nDemo Account\n: Provides full read/write with certain restrictions (i.e can't delete devices).\n\n\n\n\n\n\nNote\n Oxidized configs can often contain sensitive data. Because of that only Administrator account type can see configs.\n\n\nNote for SELinux users\n\n\nWhen using SELinux on the LibreNMS server, you need to allow Apache (httpd) to connect LDAP/Active Directory server, this is disabled by default. You can use SELinux Booleans to allow network access to LDAP resources with this command:\n\n\nsetsebool -P httpd_can_connect_ldap=1\n\n\n\n\nTesting authentication\n\n\nYou can test authentication with this script:\n\n\n./scripts/auth_test.php\n\n\n\n\nEnable debug output to troubleshoot issues\n\n\nMySQL Authentication\n\n\nConfig option: \nmysql\n\n\nThis is default option with LibreNMS so you should have already have the configuration setup.\n\n\n$config['db_host'] = \nHOSTNAME\n;\n$config['db_user'] = \nDBUSER\n;\n$config['db_pass'] = \nDBPASS\n;\n$config['db_name'] = \nDBNAME\n;\n\n\n\n\nActive Directory Authentication\n\n\nConfig option: \nactive_directory\n\n\nInstall \nphp_ldap\n  or \nphp7.0-ldap\n, making sure to install the same version as PHP.\n\n\nIf you have issues with secure LDAP try setting \n$config['auth_ad_check_certificates']\n to \n0\n, this will ignore certificate errors.\n\n\nRequire actual membership of the configured groups\n\n\nIf you set \n$config['auth_ad_require_groupmembership']\n to 1, the authenticated user has to be a member of the specific group.\nOtherwise all users can authenticate, and will be either level 0 or you may set \n$config['auth_ad_global_read']\n to 1 and all users will have read only access unless otherwise specified.\n\n\nOld account cleanup\n\n\nCleanup of old accounts is done by checking the authlog. You will need to set the number of days when old accounts will be purged AUTOMATICALLY by daily.sh.\n\n\n\n\nPlease ensure that you set the $config['authlog_purge'] value to be greater than $config['active_directory']['users_purge'] otherwise old users won't be removed.\n\n\n\n\nSample configuration\n\n\n$config['auth_mechanism'] = \nactive_directory\n;\n$config['auth_ad_url']                     = \nldaps://\nyour-domain.controll.er\n;  // you can add multiple servers, separated by a space\n$config['auth_ad_domain']                  = \nyour-domain.com\n;\n$config['auth_ad_base_dn']                 = \ndc=your-domain,dc=com\n;  // groups and users must be under this dn\n$config['auth_ad_check_certificates']      = true;  // require a valid ssl certificate\n$config['auth_ad_binduser']                = 'examplebinduser';\n$config['auth_ad_bindpassword']            = 'examplepassword';\n$config['auth_ad_timeout']                 = 5; // time to wait before giving up (or trying the next server)\n$config['auth_ad_debug']                   = false; // enable for verbose debug messages\n$config['active_directory']['users_purge'] = 30;    // purge users who haven't logged in for 30 days.\n$config['auth_ad_require_groupmembership'] = false; // require users to be members of a group listed below\n$config['auth_ad_groups']['\nad-admingroup\n']['level'] = 10;\n$config['auth_ad_groups']['\nad-usergroup\n']['level']  = 7;\n\n\n\n\nReplace \nad-admingroup\n with your Active Directory admin-user group and \nad-usergroup\n with your standard user group.\nIt is \nhighly suggested\n to create a bind user, otherwise \"remember me\", alerting users, and the API will not work.\n\n\nActive Directory redundancy\n\n\nYou can set two Active Directory servers by editing the \n$config['auth_ad_url']\n like this example:\n\n\n$config['auth_ad_url'] = \nldaps://dc1.example.com ldaps://dc2.example.com\n;\n\n\n\n\nActive Directory LDAP filters\n\n\nYou can add an LDAP filter to be ANDed with the builtin user filter (\n(sAMAccountName=$username)\n).\n\n\nThe defaults are:\n\n\n$config['auth_ad_user_filter'] = \n(objectclass=user)\n;\n$config['auth_ad_group_filter'] = \n(objectclass=group)\n;\n\n\n\n\nThis yields \n(\n(objectclass=user)(sAMAccountName=$username))\n for the user filter and \n(\n(objectclass=group)(sAMAccountName=$group))\n for the group filter.\n\n\nLDAP Authentication\n\n\nConfig option: \nldap\n\n\nInstall \nphp_ldap\n  or \nphp7.0-ldap\n, making sure to install the same version as PHP.\n\n\n$config['auth_ldap_version'] = 3; # v2 or v3\n$config['auth_ldap_server'] = \nldap.example.com\n;\n$config['auth_ldap_port']   = 389;\n$config['auth_ldap_prefix'] = \nuid=\n;\n$config['auth_ldap_suffix'] = \n,ou=People,dc=example,dc=com\n;\n$config['auth_ldap_group']  = \ncn=groupname,ou=groups,dc=example,dc=com\n;\n$config['auth_ldap_groupbase'] = \nou=groups,dc=example,dc=com\n;\n$config['auth_ldap_groups']['admin']['level'] = 10;\n$config['auth_ldap_groups']['pfy']['level'] = 7;\n$config['auth_ldap_groups']['support']['level'] = 1;\n$config['auth_ldap_groupmemberattr'] = \nmemberUid\n;\n$config['auth_ldap_uid_attribute'] = 'uidnumber';\n\n\n\n\nTypically auth_ldap_suffix, auth_ldap_group, auth_ldap_groupbase, auth_ldap_groups are what's required to be configured.\n\n\nLDAP bind user (optional)\n\n\nIf your ldap server does not allow anonymous bind, it is highly suggested to create a bind user, otherwise \"remember me\", alerting users, and the API will not work.\n\n\n$config['auth_ldap_binduser'] = 'ldapbind'; // will use auth_ldap_prefix and auth_ldap_suffix\n#$config['auth_ldap_binddn'] = 'CN=John.Smith,CN=Users,DC=MyDomain,DC=com'; // overrides binduser\n$config['auth_ldap_bindpassword'] = 'password';\n\n\n\n\nLDAP server redundancy\n\n\nYou can set two LDAP servers by editing the \n$config['auth_ldap_server']\n like this example:\n\n\n$config['auth_ldap_server'] = \nldaps://dir1.example.com ldaps://dir2.example.com\n;\n\n\n\n\nAn example config setup for use with Jumpcloud LDAP as a service is:\n\n\n$config['auth_mechanism'] = \nldap\n;\nunset($config['auth_ldap_group']);\nunset($config['auth_ldap_groups']);\n$config['auth_ldap_groups']['librenms']['level'] = 10;\n$config['auth_ldap_version'] = 3;\n$config['auth_ldap_server'] = \nldap.jumpcloud.com\n;\n$config['auth_ldap_port'] = 389;\n$config['auth_ldap_prefix'] = \nuid=\n;\n$config['auth_ldap_suffix'] = \n,ou=Users,o={id},dc=jumpcloud,dc=com\n;\n$config['auth_ldap_groupbase'] = \ncn=librenms,ou=Users,o={id},dc=jumpcloud,dc=com\n;\n$config['auth_ldap_groupmemberattr'] = \nmemberUid\n;\n\n\n\n\nReplace {id} with the unique ID provided by Jumpcloud.\n\n\nRadius Authentication\n\n\nPlease note that a mysql user is created for each user the logs in successfully. User level 1 is assigned to those accounts so you will then need to assign the relevant permissions unless you set \n$config['radius']['userlevel']\n to be something other than 1.\n\n\n$config['radius']['hostname']   = 'localhost';\n$config['radius']['port']       = '1812';\n$config['radius']['secret']     = 'testing123';\n$config['radius']['timeout']    = 3;\n$config['radius']['users_purge'] = 14;//Purge users who haven't logged in for 14 days.\n$config['radius']['default_level'] = 1;//Set the default user level when automatically creating a user.\n\n\n\n\nOld account cleanup\n\n\nCleanup of old accounts is done by checking the authlog. You will need to set the number of days when old accounts will be purged AUTOMATICALLY by daily.sh.\n\n\n\n\nPlease ensure that you set the $config['authlog_purge'] value to be greater than $config['radius']['users_purge'] otherwise old users won't be removed.\n\n\n\n\nHTTP Authentication\n\n\nConfig option: \nhttp-auth\n\n\nLibreNMS will expect the user to have authenticated via your webservice already. At this stage it will need to assign a\nuserlevel for that user which is done in one of two ways:\n\n\n\n\n\n\nA user exists in MySQL still where the usernames match up.\n\n\n\n\n\n\nA global guest user (which still needs to be added into MySQL:\n\n\n\n\n\n\n$config['http_auth_guest'] = \nguest\n;\n\n\n\n\nThis will then assign the userlevel for guest to all authenticated users.\n\n\nHTTP Authentication / AD Authorization\n\n\nConfig option: \nad-authorization\n\n\nThis module is a combination of \nhttp-auth\n and \nactive\ndirectory\n_\n\n\nLibreNMS will expect the user to have authenticated via your webservice already (e.g. using Kerberos Authentication in Apache) but will use Active Directory lookups to determine and assign the userlevel of a user.\nThe userlevel will be calculated by using AD group membership information as the \nactive\ndirectory\n_ module does.\n\n\nThe configuration is the same as for the \nactive\ndirectory\n_ module with two extra, optional options: auth_ad_binduser and auth_ad_bindpassword.\nThese should be set to a AD user with read capabilities in your AD Domain in order to be able to perform searches. \nIf these options are omitted, the module will attempt an anonymous bind (which then of course must be allowed by your Active Directory server(s)).\n\n\nThere is also one extra option for controlling user information caching: auth_ldap_cache_ttl.\nThis option allows to control how long user information (user_exists, userid, userlevel) are cached within the PHP Session.\nThe default value is 300 seconds.\nTo disable this caching (highly discourage) set this option to 0.\n\n\n$config['auth_ad_binduser']     = \nad_binduser\n;\n$config['auth_ad_bindpassword'] = \nad_bindpassword\n;\n$config['auth_ldap_cache_ttl']  = 300;\n\n\n\n\nHTTP Authentication / LDAP Authorization\n\n\nConfig option: \nldap-authorization\n\n\nThis module is a combination of \nhttp-auth\n and \nldap\n\n\nLibreNMS will expect the user to have authenticated via your webservice already (e.g. using Kerberos Authentication in Apache) but will use LDAP to determine and assign the userlevel of a user.\nThe userlevel will be calculated by using LDAP group membership information as the \nldap\n module does.\n\n\nThe configuration is the same as for the \nldap\n module with one extra option: auth_ldap_cache_ttl.\nThis option allows to control how long user information (user_exists, userid, userlevel) are cached within the PHP Session.\nThe default value is 300 seconds.\nTo disabled this caching (highly discourage) set this option to 0.\n\n\n$config['auth_ldap_cache_ttl'] = 300;\n\n\n\n\nView/embedded graphs without being logged into LibreNMS\n\n\n$config['allow_unauth_graphs_cidr'] = array(127.0.0.1/32');\n$config['allow_unauth_graphs'] = true;\n\n\n\n\nSingle Sign-on\n\n\nThe single sign-on mechanism is used to integrate with third party authentication providers that are managed outside of LibreNMS - such as ADFS, Shibboleth, EZProxy, BeyondCorp, and others.\nA large number of these methods use \nSAML\n - the module has been written assuming the use of SAML, and therefore these instructions contain some SAML terminology, but it should be possible to use any software that works in a similar way.\n\n\nIn order to make use of the single sign-on module, you need to have an Identity Provider up and running, and know how to configure your Relying Party to pass attributes to LibreNMS via header injection or environment variables. Setting these up is outside of the scope of this documentation.\n\n\nAs this module deals with authentication, it is extremely careful about validating the configuration - if it finds that certain values in the configuration are not set, it will reject access rather than try and guess.\n\n\nBasic Configuration\n\n\nTo get up and running, all you need to do is configure the following values:\n\n\n$config['auth_mechanism']        = \nsso\n;\n$config['sso']['mode']           = \nenv\n;\n$config['sso']['group_strategy'] = \nstatic\n;\n$config['sso']['static_level']   = 10;\n\n\n\n\nThis, along with the defaults, sets up a basic Single Sign-on setup that:\n\n Reads values from environment variables\n\n Automatically creates users when they're first seen\n\n Authomatically updates users with new values\n\n Gives everyone privilege level 10\n\n\nThis happens to mimic the behaviour of \nhttp-auth\n, so if this is the kind of setup you want, you're probably better of just going and using that mechanism.\n\n\nSecurity\n\n\nIf there is a proxy involved (e.g. EZProxy, Azure AD Application Proxy, NGINX, mod_proxy) it's \nessential\n that you have some means in place to prevent headers being injected between the proxy and the end user, and also prevent end users from contacting LibreNMS directly.\n\n\nThis should also apply to user connections to the proxy itself - the proxy \nmust not\n be allowed to blindly pass through HTTP headers. \nmod\nsecurity\n_ should be considered a minimum, with a full \nWAF\n being strongly recommended. This advice applies to the IDP too.\n\n\nThe mechanism includes very basic protection, in the form of an IP whitelist with should contain the source addresses of your proxies:\n\n\n$config['sso']['trusted_proxies'] = ['127.0.0.1/8', '::1/128', '192.0.2.0', '2001:DB8::'];\n\n\n\n\nThis configuration item should contain an array with a list of IP addresses or CIDR prefixes that are allowed to connect to LibreNMS and supply environment variables or headers.\n\n\nAdvanced Configuration Options\n\n\nUser Attribute\n\n\nIf for some reason your relying party doesn't store the username in \nREMOTE\nUSER\n_, you can override this choice.\n\n\n$config['sso']['user_attr'] = 'HTTP_UID';\n\n\n\n\nNote that the user lookup is a little special - normally headers are prefixed with \nHTTP_\n, however this is not the case for remote user - it's a special case. If you're using something different you need to figure out of the \nHTTP_\n prefix is required or not yourself.\n\n\nAutomatic User Create/Update\n\n\nThese are enabled by default:\n\n\n$config['sso']['create_users'] = true;\n$config['sso']['update_users'] = true;\n\n\n\n\nIf these are not enabled, user logins will be (somewhat silently) rejected unless an administrator has created the account in advance. Note that in the case of SAML federations, unless release of the users true identity has been negotiated with the IDP, the username (probably ePTID) is not likely to be predicable.\n\n\nPersonalisation\n\n\nIf the attributes are being populated, you can instruct the mechanism to add additional information to the user's database entry:\n\n\n$config['sso']['email_attr']    = \nmail\n;\n$config['sso']['realname_attr'] = \ndisplayName\n;\n$config['sso']['descr_attr']    = \nunscoped-affiliation\n\n\n\n\nGroup Strategies\n\n\nStatic\n\n\nAs used above, \nstatic\n gives every single user the same privilege level. If you're working with a small team, or don't need access control, this is probably suitable.\n\n\nAttribute\n\n\n$config['sso']['group_strategy'] = \nattribute\n;\n$config['sso']['level_attr']     = \nentitlement\n;\n\n\n\n\nIf your Relying Party is capable of calculating the necessary privilege level, you can configure the module to read the privilege number straight from an attribute. \nsso\nlevel_attr\n should contain the name of the attribute that the Relying Party exposes to LibreNMS - as long as \nsso\nmode\n is correctly set, the mechanism should find the value.\n\n\nGroup Map\n\n\nThis is the most flexible (and complex) way of assigning privileges.\n\n\n$config['sso']['group_strategy']  = \nmap\n;\n$config['sso']['group_attr']      = \nmember\n;\n$config['sso']['group_level_map'] = ['librenms-admins' =\n 10, 'librenms-readers' =\n 1, 'librenms-billingcontacts' =\n 5];\n$config['sso']['group_delimiter'] = ';';\n\n\n\n\nThe mechanism expects to find a delimited list of groups within the attribute that \nsso\ngroup_attr\n_ points to. This should be an associative array of group name keys, with  privilege levels as values.\nThe mechanism will scan the list and find the \nhighest\n privilege level that the user is entitled to, and assign that value to the user.\n\n\nThis format may be specific to Shibboleth; other relying party software may need changes to the mechanism (e.g. \nmod\nauth_mellon\n_ may create pseudo arrays).\n\n\nThere is an optional value for sites with large numbers of groups:\n\n\n$config['sso']['group_filter']  = \n/librenms-(.*)/i\n;\n\n\n\n\nThis filter causes the mechanism to only consider groups matching a regular expression.\n\n\nLogout Behaviour\n\n\nLibreNMS has no capability to log out a user authenticated via Single Sign-On - that responsability falls to the Relying Party.\n\n\nIf your Relying Party has a magic URL that needs to be called to end a session, you can configure LibreNMS to direct the user to it:\n\n\n$config['post_logout_action'] = '/Shibboleth.sso/Logout';\n\n\n\n\nThis option functions independantly of the Single Sign-on mechanism.\n\n\nComplete Configuration\n\n\nThis configuration works on my deployment with a Shibboleth relying party, injecting environment variables, with the IDP supplying a list of groups.\n\n\n$config['auth_mechanism'] = 'sso';\n$config['auth_logout_handler'] = '/Shibboleth.sso/Logout';\n$config['sso']['mode'] = 'env';\n$config['sso']['create_users'] = true;\n$config['sso']['update_users'] = true;\n$config['sso']['realname_attr'] = 'displayName';\n$config['sso']['email_attr'] = 'mail';\n$config['sso']['group_strategy'] = 'map';\n$config['sso']['group_attr'] = 'member';\n$config['sso']['group_filter'] = '/(librenms-.*)/i';\n$config['sso']['group_delimiter'] = ';';\n$config['sso']['group_level_map'] = ['librenms-demo' =\n 11, 'librenms-globaladmin' =\n 10, 'librenms-globalread' =\n 5, 'librenms-lowpriv'=\n 1];", 
            "title": "Authentication Options"
        }, 
        {
            "location": "/Extensions/Authentication/#authentication-modules", 
            "text": "LibreNMS supports multiple authentication modules along with  Two Factor Auth .\nHere we will provide configuration details for these modules.", 
            "title": "Authentication modules"
        }, 
        {
            "location": "/Extensions/Authentication/#available-authentication-modules", 
            "text": "MySQL:  mysql    Active Directory:  active_directory    LDAP:  ldap    Radius:  radius    HTTP Auth:  http-auth ,  ad_authorization ,  ldap_authorization    Single Sign-on:  sso", 
            "title": "Available authentication modules"
        }, 
        {
            "location": "/Extensions/Authentication/#enable-authentication-module", 
            "text": "To enable a particular authentication module you need to set this up in config.php.  $config['auth_mechanism'] =  mysql ;", 
            "title": "Enable authentication module"
        }, 
        {
            "location": "/Extensions/Authentication/#user-levels-and-user-account-type", 
            "text": "1:  Normal User : You will need to assign device / port permissions for users at this level.    5:  Global Read : Read only Administrator.     10:  Administartor : This is a global read/write admin account.    11:  Demo Account : Provides full read/write with certain restrictions (i.e can't delete devices).    Note  Oxidized configs can often contain sensitive data. Because of that only Administrator account type can see configs.", 
            "title": "User levels and User account type"
        }, 
        {
            "location": "/Extensions/Authentication/#note-for-selinux-users", 
            "text": "When using SELinux on the LibreNMS server, you need to allow Apache (httpd) to connect LDAP/Active Directory server, this is disabled by default. You can use SELinux Booleans to allow network access to LDAP resources with this command:  setsebool -P httpd_can_connect_ldap=1", 
            "title": "Note for SELinux users"
        }, 
        {
            "location": "/Extensions/Authentication/#testing-authentication", 
            "text": "You can test authentication with this script:  ./scripts/auth_test.php  Enable debug output to troubleshoot issues", 
            "title": "Testing authentication"
        }, 
        {
            "location": "/Extensions/Authentication/#mysql-authentication", 
            "text": "Config option:  mysql  This is default option with LibreNMS so you should have already have the configuration setup.  $config['db_host'] =  HOSTNAME ;\n$config['db_user'] =  DBUSER ;\n$config['db_pass'] =  DBPASS ;\n$config['db_name'] =  DBNAME ;", 
            "title": "MySQL Authentication"
        }, 
        {
            "location": "/Extensions/Authentication/#active-directory-authentication", 
            "text": "Config option:  active_directory  Install  php_ldap   or  php7.0-ldap , making sure to install the same version as PHP.  If you have issues with secure LDAP try setting  $config['auth_ad_check_certificates']  to  0 , this will ignore certificate errors.", 
            "title": "Active Directory Authentication"
        }, 
        {
            "location": "/Extensions/Authentication/#require-actual-membership-of-the-configured-groups", 
            "text": "If you set  $config['auth_ad_require_groupmembership']  to 1, the authenticated user has to be a member of the specific group.\nOtherwise all users can authenticate, and will be either level 0 or you may set  $config['auth_ad_global_read']  to 1 and all users will have read only access unless otherwise specified.", 
            "title": "Require actual membership of the configured groups"
        }, 
        {
            "location": "/Extensions/Authentication/#old-account-cleanup", 
            "text": "Cleanup of old accounts is done by checking the authlog. You will need to set the number of days when old accounts will be purged AUTOMATICALLY by daily.sh.   Please ensure that you set the $config['authlog_purge'] value to be greater than $config['active_directory']['users_purge'] otherwise old users won't be removed.", 
            "title": "Old account cleanup"
        }, 
        {
            "location": "/Extensions/Authentication/#sample-configuration", 
            "text": "$config['auth_mechanism'] =  active_directory ;\n$config['auth_ad_url']                     =  ldaps:// your-domain.controll.er ;  // you can add multiple servers, separated by a space\n$config['auth_ad_domain']                  =  your-domain.com ;\n$config['auth_ad_base_dn']                 =  dc=your-domain,dc=com ;  // groups and users must be under this dn\n$config['auth_ad_check_certificates']      = true;  // require a valid ssl certificate\n$config['auth_ad_binduser']                = 'examplebinduser';\n$config['auth_ad_bindpassword']            = 'examplepassword';\n$config['auth_ad_timeout']                 = 5; // time to wait before giving up (or trying the next server)\n$config['auth_ad_debug']                   = false; // enable for verbose debug messages\n$config['active_directory']['users_purge'] = 30;    // purge users who haven't logged in for 30 days.\n$config['auth_ad_require_groupmembership'] = false; // require users to be members of a group listed below\n$config['auth_ad_groups'][' ad-admingroup ']['level'] = 10;\n$config['auth_ad_groups'][' ad-usergroup ']['level']  = 7;  Replace  ad-admingroup  with your Active Directory admin-user group and  ad-usergroup  with your standard user group.\nIt is  highly suggested  to create a bind user, otherwise \"remember me\", alerting users, and the API will not work.", 
            "title": "Sample configuration"
        }, 
        {
            "location": "/Extensions/Authentication/#active-directory-redundancy", 
            "text": "You can set two Active Directory servers by editing the  $config['auth_ad_url']  like this example:  $config['auth_ad_url'] =  ldaps://dc1.example.com ldaps://dc2.example.com ;", 
            "title": "Active Directory redundancy"
        }, 
        {
            "location": "/Extensions/Authentication/#active-directory-ldap-filters", 
            "text": "You can add an LDAP filter to be ANDed with the builtin user filter ( (sAMAccountName=$username) ).  The defaults are:  $config['auth_ad_user_filter'] =  (objectclass=user) ;\n$config['auth_ad_group_filter'] =  (objectclass=group) ;  This yields  ( (objectclass=user)(sAMAccountName=$username))  for the user filter and  ( (objectclass=group)(sAMAccountName=$group))  for the group filter.", 
            "title": "Active Directory LDAP filters"
        }, 
        {
            "location": "/Extensions/Authentication/#ldap-authentication", 
            "text": "Config option:  ldap  Install  php_ldap   or  php7.0-ldap , making sure to install the same version as PHP.  $config['auth_ldap_version'] = 3; # v2 or v3\n$config['auth_ldap_server'] =  ldap.example.com ;\n$config['auth_ldap_port']   = 389;\n$config['auth_ldap_prefix'] =  uid= ;\n$config['auth_ldap_suffix'] =  ,ou=People,dc=example,dc=com ;\n$config['auth_ldap_group']  =  cn=groupname,ou=groups,dc=example,dc=com ;\n$config['auth_ldap_groupbase'] =  ou=groups,dc=example,dc=com ;\n$config['auth_ldap_groups']['admin']['level'] = 10;\n$config['auth_ldap_groups']['pfy']['level'] = 7;\n$config['auth_ldap_groups']['support']['level'] = 1;\n$config['auth_ldap_groupmemberattr'] =  memberUid ;\n$config['auth_ldap_uid_attribute'] = 'uidnumber';  Typically auth_ldap_suffix, auth_ldap_group, auth_ldap_groupbase, auth_ldap_groups are what's required to be configured.", 
            "title": "LDAP Authentication"
        }, 
        {
            "location": "/Extensions/Authentication/#ldap-bind-user-optional", 
            "text": "If your ldap server does not allow anonymous bind, it is highly suggested to create a bind user, otherwise \"remember me\", alerting users, and the API will not work.  $config['auth_ldap_binduser'] = 'ldapbind'; // will use auth_ldap_prefix and auth_ldap_suffix\n#$config['auth_ldap_binddn'] = 'CN=John.Smith,CN=Users,DC=MyDomain,DC=com'; // overrides binduser\n$config['auth_ldap_bindpassword'] = 'password';", 
            "title": "LDAP bind user (optional)"
        }, 
        {
            "location": "/Extensions/Authentication/#ldap-server-redundancy", 
            "text": "You can set two LDAP servers by editing the  $config['auth_ldap_server']  like this example:  $config['auth_ldap_server'] =  ldaps://dir1.example.com ldaps://dir2.example.com ;  An example config setup for use with Jumpcloud LDAP as a service is:  $config['auth_mechanism'] =  ldap ;\nunset($config['auth_ldap_group']);\nunset($config['auth_ldap_groups']);\n$config['auth_ldap_groups']['librenms']['level'] = 10;\n$config['auth_ldap_version'] = 3;\n$config['auth_ldap_server'] =  ldap.jumpcloud.com ;\n$config['auth_ldap_port'] = 389;\n$config['auth_ldap_prefix'] =  uid= ;\n$config['auth_ldap_suffix'] =  ,ou=Users,o={id},dc=jumpcloud,dc=com ;\n$config['auth_ldap_groupbase'] =  cn=librenms,ou=Users,o={id},dc=jumpcloud,dc=com ;\n$config['auth_ldap_groupmemberattr'] =  memberUid ;  Replace {id} with the unique ID provided by Jumpcloud.", 
            "title": "LDAP server redundancy"
        }, 
        {
            "location": "/Extensions/Authentication/#radius-authentication", 
            "text": "Please note that a mysql user is created for each user the logs in successfully. User level 1 is assigned to those accounts so you will then need to assign the relevant permissions unless you set  $config['radius']['userlevel']  to be something other than 1.  $config['radius']['hostname']   = 'localhost';\n$config['radius']['port']       = '1812';\n$config['radius']['secret']     = 'testing123';\n$config['radius']['timeout']    = 3;\n$config['radius']['users_purge'] = 14;//Purge users who haven't logged in for 14 days.\n$config['radius']['default_level'] = 1;//Set the default user level when automatically creating a user.", 
            "title": "Radius Authentication"
        }, 
        {
            "location": "/Extensions/Authentication/#old-account-cleanup_1", 
            "text": "Cleanup of old accounts is done by checking the authlog. You will need to set the number of days when old accounts will be purged AUTOMATICALLY by daily.sh.   Please ensure that you set the $config['authlog_purge'] value to be greater than $config['radius']['users_purge'] otherwise old users won't be removed.", 
            "title": "Old account cleanup"
        }, 
        {
            "location": "/Extensions/Authentication/#http-authentication", 
            "text": "Config option:  http-auth  LibreNMS will expect the user to have authenticated via your webservice already. At this stage it will need to assign a\nuserlevel for that user which is done in one of two ways:    A user exists in MySQL still where the usernames match up.    A global guest user (which still needs to be added into MySQL:    $config['http_auth_guest'] =  guest ;  This will then assign the userlevel for guest to all authenticated users.", 
            "title": "HTTP Authentication"
        }, 
        {
            "location": "/Extensions/Authentication/#http-authentication-ad-authorization", 
            "text": "Config option:  ad-authorization  This module is a combination of  http-auth  and  active directory _  LibreNMS will expect the user to have authenticated via your webservice already (e.g. using Kerberos Authentication in Apache) but will use Active Directory lookups to determine and assign the userlevel of a user.\nThe userlevel will be calculated by using AD group membership information as the  active directory _ module does.  The configuration is the same as for the  active directory _ module with two extra, optional options: auth_ad_binduser and auth_ad_bindpassword.\nThese should be set to a AD user with read capabilities in your AD Domain in order to be able to perform searches. \nIf these options are omitted, the module will attempt an anonymous bind (which then of course must be allowed by your Active Directory server(s)).  There is also one extra option for controlling user information caching: auth_ldap_cache_ttl.\nThis option allows to control how long user information (user_exists, userid, userlevel) are cached within the PHP Session.\nThe default value is 300 seconds.\nTo disable this caching (highly discourage) set this option to 0.  $config['auth_ad_binduser']     =  ad_binduser ;\n$config['auth_ad_bindpassword'] =  ad_bindpassword ;\n$config['auth_ldap_cache_ttl']  = 300;", 
            "title": "HTTP Authentication / AD Authorization"
        }, 
        {
            "location": "/Extensions/Authentication/#http-authentication-ldap-authorization", 
            "text": "Config option:  ldap-authorization  This module is a combination of  http-auth  and  ldap  LibreNMS will expect the user to have authenticated via your webservice already (e.g. using Kerberos Authentication in Apache) but will use LDAP to determine and assign the userlevel of a user.\nThe userlevel will be calculated by using LDAP group membership information as the  ldap  module does.  The configuration is the same as for the  ldap  module with one extra option: auth_ldap_cache_ttl.\nThis option allows to control how long user information (user_exists, userid, userlevel) are cached within the PHP Session.\nThe default value is 300 seconds.\nTo disabled this caching (highly discourage) set this option to 0.  $config['auth_ldap_cache_ttl'] = 300;", 
            "title": "HTTP Authentication / LDAP Authorization"
        }, 
        {
            "location": "/Extensions/Authentication/#viewembedded-graphs-without-being-logged-into-librenms", 
            "text": "$config['allow_unauth_graphs_cidr'] = array(127.0.0.1/32');\n$config['allow_unauth_graphs'] = true;", 
            "title": "View/embedded graphs without being logged into LibreNMS"
        }, 
        {
            "location": "/Extensions/Authentication/#single-sign-on", 
            "text": "The single sign-on mechanism is used to integrate with third party authentication providers that are managed outside of LibreNMS - such as ADFS, Shibboleth, EZProxy, BeyondCorp, and others.\nA large number of these methods use  SAML  - the module has been written assuming the use of SAML, and therefore these instructions contain some SAML terminology, but it should be possible to use any software that works in a similar way.  In order to make use of the single sign-on module, you need to have an Identity Provider up and running, and know how to configure your Relying Party to pass attributes to LibreNMS via header injection or environment variables. Setting these up is outside of the scope of this documentation.  As this module deals with authentication, it is extremely careful about validating the configuration - if it finds that certain values in the configuration are not set, it will reject access rather than try and guess.", 
            "title": "Single Sign-on"
        }, 
        {
            "location": "/Extensions/Authentication/#basic-configuration", 
            "text": "To get up and running, all you need to do is configure the following values:  $config['auth_mechanism']        =  sso ;\n$config['sso']['mode']           =  env ;\n$config['sso']['group_strategy'] =  static ;\n$config['sso']['static_level']   = 10;  This, along with the defaults, sets up a basic Single Sign-on setup that:  Reads values from environment variables  Automatically creates users when they're first seen  Authomatically updates users with new values  Gives everyone privilege level 10  This happens to mimic the behaviour of  http-auth , so if this is the kind of setup you want, you're probably better of just going and using that mechanism.", 
            "title": "Basic Configuration"
        }, 
        {
            "location": "/Extensions/Authentication/#security", 
            "text": "If there is a proxy involved (e.g. EZProxy, Azure AD Application Proxy, NGINX, mod_proxy) it's  essential  that you have some means in place to prevent headers being injected between the proxy and the end user, and also prevent end users from contacting LibreNMS directly.  This should also apply to user connections to the proxy itself - the proxy  must not  be allowed to blindly pass through HTTP headers.  mod security _ should be considered a minimum, with a full  WAF  being strongly recommended. This advice applies to the IDP too.  The mechanism includes very basic protection, in the form of an IP whitelist with should contain the source addresses of your proxies:  $config['sso']['trusted_proxies'] = ['127.0.0.1/8', '::1/128', '192.0.2.0', '2001:DB8::'];  This configuration item should contain an array with a list of IP addresses or CIDR prefixes that are allowed to connect to LibreNMS and supply environment variables or headers.", 
            "title": "Security"
        }, 
        {
            "location": "/Extensions/Authentication/#advanced-configuration-options", 
            "text": "", 
            "title": "Advanced Configuration Options"
        }, 
        {
            "location": "/Extensions/Authentication/#user-attribute", 
            "text": "If for some reason your relying party doesn't store the username in  REMOTE USER _, you can override this choice.  $config['sso']['user_attr'] = 'HTTP_UID';  Note that the user lookup is a little special - normally headers are prefixed with  HTTP_ , however this is not the case for remote user - it's a special case. If you're using something different you need to figure out of the  HTTP_  prefix is required or not yourself.", 
            "title": "User Attribute"
        }, 
        {
            "location": "/Extensions/Authentication/#automatic-user-createupdate", 
            "text": "These are enabled by default:  $config['sso']['create_users'] = true;\n$config['sso']['update_users'] = true;  If these are not enabled, user logins will be (somewhat silently) rejected unless an administrator has created the account in advance. Note that in the case of SAML federations, unless release of the users true identity has been negotiated with the IDP, the username (probably ePTID) is not likely to be predicable.", 
            "title": "Automatic User Create/Update"
        }, 
        {
            "location": "/Extensions/Authentication/#personalisation", 
            "text": "If the attributes are being populated, you can instruct the mechanism to add additional information to the user's database entry:  $config['sso']['email_attr']    =  mail ;\n$config['sso']['realname_attr'] =  displayName ;\n$config['sso']['descr_attr']    =  unscoped-affiliation", 
            "title": "Personalisation"
        }, 
        {
            "location": "/Extensions/Authentication/#group-strategies", 
            "text": "", 
            "title": "Group Strategies"
        }, 
        {
            "location": "/Extensions/Authentication/#static", 
            "text": "As used above,  static  gives every single user the same privilege level. If you're working with a small team, or don't need access control, this is probably suitable.", 
            "title": "Static"
        }, 
        {
            "location": "/Extensions/Authentication/#attribute", 
            "text": "$config['sso']['group_strategy'] =  attribute ;\n$config['sso']['level_attr']     =  entitlement ;  If your Relying Party is capable of calculating the necessary privilege level, you can configure the module to read the privilege number straight from an attribute.  sso level_attr  should contain the name of the attribute that the Relying Party exposes to LibreNMS - as long as  sso mode  is correctly set, the mechanism should find the value.", 
            "title": "Attribute"
        }, 
        {
            "location": "/Extensions/Authentication/#group-map", 
            "text": "This is the most flexible (and complex) way of assigning privileges.  $config['sso']['group_strategy']  =  map ;\n$config['sso']['group_attr']      =  member ;\n$config['sso']['group_level_map'] = ['librenms-admins' =  10, 'librenms-readers' =  1, 'librenms-billingcontacts' =  5];\n$config['sso']['group_delimiter'] = ';';  The mechanism expects to find a delimited list of groups within the attribute that  sso group_attr _ points to. This should be an associative array of group name keys, with  privilege levels as values.\nThe mechanism will scan the list and find the  highest  privilege level that the user is entitled to, and assign that value to the user.  This format may be specific to Shibboleth; other relying party software may need changes to the mechanism (e.g.  mod auth_mellon _ may create pseudo arrays).  There is an optional value for sites with large numbers of groups:  $config['sso']['group_filter']  =  /librenms-(.*)/i ;  This filter causes the mechanism to only consider groups matching a regular expression.", 
            "title": "Group Map"
        }, 
        {
            "location": "/Extensions/Authentication/#logout-behaviour", 
            "text": "LibreNMS has no capability to log out a user authenticated via Single Sign-On - that responsability falls to the Relying Party.  If your Relying Party has a magic URL that needs to be called to end a session, you can configure LibreNMS to direct the user to it:  $config['post_logout_action'] = '/Shibboleth.sso/Logout';  This option functions independantly of the Single Sign-on mechanism.", 
            "title": "Logout Behaviour"
        }, 
        {
            "location": "/Extensions/Authentication/#complete-configuration", 
            "text": "This configuration works on my deployment with a Shibboleth relying party, injecting environment variables, with the IDP supplying a list of groups.  $config['auth_mechanism'] = 'sso';\n$config['auth_logout_handler'] = '/Shibboleth.sso/Logout';\n$config['sso']['mode'] = 'env';\n$config['sso']['create_users'] = true;\n$config['sso']['update_users'] = true;\n$config['sso']['realname_attr'] = 'displayName';\n$config['sso']['email_attr'] = 'mail';\n$config['sso']['group_strategy'] = 'map';\n$config['sso']['group_attr'] = 'member';\n$config['sso']['group_filter'] = '/(librenms-.*)/i';\n$config['sso']['group_delimiter'] = ';';\n$config['sso']['group_level_map'] = ['librenms-demo' =  11, 'librenms-globaladmin' =  10, 'librenms-globalread' =  5, 'librenms-lowpriv'=  1];", 
            "title": "Complete Configuration"
        }, 
        {
            "location": "/Extensions/Two-Factor-Auth/", 
            "text": "About\n\n\nOver the last couple of years, the primary attack vector for internet accounts has been static passwords.\nTherefore static passwords are no longer sufficient to protect unauthorized access to accounts.\nTwo Factor Authentication adds a variable part in authentication procedures.\nA user is now required to supply a changing 6-digit passcode in addition to it's password to obtain access to the account.\n\n\nLibreNMS has a RFC4226 conform implementation of both Time and Counter based One-Time-Passwords.\nIt also allows the administrator to configure a throttle time to enforce after 3 failures exceeded. Unlike RFC4226 suggestions, this throttle time will not stack on the amount of failures.\n\n\nTypes\n\n\nIn general, these two types do not differ in algorithmic terms.\nThe types only differ in the variable being used to derive the passcodes from.\nThe underlying HMAC-SHA1 remains the same for both types, security advantages or disadvantages of each are discussed further down.\n\n\nTimebased One-Time-Password (TOTP)\n\n\nLike the name suggests, this type uses the current Time or a subset of it to generate the passcodes.\nThese passcodes solely rely on the secrecy of their Secretkey in order to provide passcodes.\nAn attacker only needs to guess that Secretkey and the other variable part is any given time, presumably the time upon login.\nRFC4226 suggests a resynchronization attempt in case the passcode mismatches, providing the attacker a range of up to +/- 3 Minutes to create passcodes.\n\n\nCounterbased One-Time-Password (TOTP)\n\n\nThis type uses an internal counter that needs to be in sync with the server's counter to successfully authenticate the passcodes.\nThe main advantage over timebased OTP is the attacker doesn't only need to know the Secretkey but also the server's Counter in order to create valid passcodes.\nRFC4226 suggests a resynchronization attempt in case the passcode mismatches, providing the attacker a range of up to +4 increments from the actual counter to create passcodes.\n\n\nConfiguration\n\n\nEnable Two-Factor:\n\n\n$config['twofactor'] = true;\n\n\n\n\nSet throttle-time (in seconds):\n\n\n$config['twofactor_lock'] = 300;\n\n\n\n\nUsage\n\n\nThese steps imply that TwoFactor has been enabled in your \nconfig.php\n\n\nCreate a Two-Factor key:\n- Go to 'My Settings' (/preferences/)\n- Choose TwoFactor type\n- Click on 'Generate TwoFactor Secret Key'\n- If your browser didn't reload, reload manually\n- Scan provided QR or click on 'Manual' to see the Key\n\n\nGoogle Authenticator\n\n\nInstallation guides for Google Authenticator can be found \nhere\n.\n\n\nUsage:\n- Create a key like described above\n- Scan provided QR or click on 'Manual' and type down the Secret\n- On next login, enter the passcode that the App provides", 
            "title": "Two-Factor Auth"
        }, 
        {
            "location": "/Extensions/Two-Factor-Auth/#about", 
            "text": "Over the last couple of years, the primary attack vector for internet accounts has been static passwords.\nTherefore static passwords are no longer sufficient to protect unauthorized access to accounts.\nTwo Factor Authentication adds a variable part in authentication procedures.\nA user is now required to supply a changing 6-digit passcode in addition to it's password to obtain access to the account.  LibreNMS has a RFC4226 conform implementation of both Time and Counter based One-Time-Passwords.\nIt also allows the administrator to configure a throttle time to enforce after 3 failures exceeded. Unlike RFC4226 suggestions, this throttle time will not stack on the amount of failures.", 
            "title": "About"
        }, 
        {
            "location": "/Extensions/Two-Factor-Auth/#types", 
            "text": "In general, these two types do not differ in algorithmic terms.\nThe types only differ in the variable being used to derive the passcodes from.\nThe underlying HMAC-SHA1 remains the same for both types, security advantages or disadvantages of each are discussed further down.", 
            "title": "Types"
        }, 
        {
            "location": "/Extensions/Two-Factor-Auth/#timebased-one-time-password-totp", 
            "text": "Like the name suggests, this type uses the current Time or a subset of it to generate the passcodes.\nThese passcodes solely rely on the secrecy of their Secretkey in order to provide passcodes.\nAn attacker only needs to guess that Secretkey and the other variable part is any given time, presumably the time upon login.\nRFC4226 suggests a resynchronization attempt in case the passcode mismatches, providing the attacker a range of up to +/- 3 Minutes to create passcodes.", 
            "title": "Timebased One-Time-Password (TOTP)"
        }, 
        {
            "location": "/Extensions/Two-Factor-Auth/#counterbased-one-time-password-totp", 
            "text": "This type uses an internal counter that needs to be in sync with the server's counter to successfully authenticate the passcodes.\nThe main advantage over timebased OTP is the attacker doesn't only need to know the Secretkey but also the server's Counter in order to create valid passcodes.\nRFC4226 suggests a resynchronization attempt in case the passcode mismatches, providing the attacker a range of up to +4 increments from the actual counter to create passcodes.", 
            "title": "Counterbased One-Time-Password (TOTP)"
        }, 
        {
            "location": "/Extensions/Two-Factor-Auth/#configuration", 
            "text": "Enable Two-Factor:  $config['twofactor'] = true;  Set throttle-time (in seconds):  $config['twofactor_lock'] = 300;", 
            "title": "Configuration"
        }, 
        {
            "location": "/Extensions/Two-Factor-Auth/#usage", 
            "text": "These steps imply that TwoFactor has been enabled in your  config.php  Create a Two-Factor key:\n- Go to 'My Settings' (/preferences/)\n- Choose TwoFactor type\n- Click on 'Generate TwoFactor Secret Key'\n- If your browser didn't reload, reload manually\n- Scan provided QR or click on 'Manual' to see the Key", 
            "title": "Usage"
        }, 
        {
            "location": "/Extensions/Two-Factor-Auth/#google-authenticator", 
            "text": "Installation guides for Google Authenticator can be found  here .  Usage:\n- Create a key like described above\n- Scan provided QR or click on 'Manual' and type down the Secret\n- On next login, enter the passcode that the App provides", 
            "title": "Google Authenticator"
        }, 
        {
            "location": "/Extensions/Auto-Discovery/", 
            "text": "Auto Discovery Support\n\n\nGetting Started\n\n\nLibreNMS provides the ability to automatically add devices on your network, we can do this via\na few methods which will be explained below and also indicate if they are enabled by default.\n\n\nAll discovery methods run when discovery runs (every 6 hours by default and within 5 minutes for new devices).\n\n\n\n\nPlease note that you need at least ONE device added before auto-discovery will work.\n\n\n\n\nThe first thing to do though is add the required configuration options to \nconfig.php\n.\n\n\nSNMP Details\n\n\nTo add devices automatically we need to know your snmp details, examples of SNMP v1, v2c and v3 are below:\n\n\n// v1 or v2c\n$config['snmp']['community'][] = \nmy_custom_community\n;\n$config['snmp']['community'][] = \nanother_community\n;\n\n// v3\n$config['snmp']['v3'][0]['authlevel'] = 'authPriv';\n$config['snmp']['v3'][0]['authname'] = 'my_username';\n$config['snmp']['v3'][0]['authpass'] = 'my_password';\n$config['snmp']['v3'][0]['authalgo'] = 'MD5';\n$config['snmp']['v3'][0]['cryptopass'] = 'my_crypto';\n$config['snmp']['v3'][0]['cryptoalgo'] = 'AES';\n\n\n\n\nThese details will be attempted when adding devices, you can specify any mixture of these.\n\n\nAllowed Networks\n\n\nYour Networks\n\n\nTo add devices, we need to know what are your subnets so we don't go blindly attempting to add devices not\nunder your control.\n\n\n$config['nets'][] = '192.168.0.0/24';\n$config['nets'][] = '172.2.4.0/22';\n\n\n\n\nExclusions\n\n\nIf you have added a network as above but a single device exists within it that you can't auto\nadd, then you can exclude this with the following:\n\n\n$config['autodiscovery']['nets-exclude'][] = '192.168.0.1/32';\n\n\n\n\nAdditional Options\n\n\nDiscovering devices by IP\n\n\nBy default we don't add devices by IP address, we look for a reverse dns name to be found and add with that. If this fails\nand you would like to still add devices automatically then you will need to set \n$config['discovery_by_ip'] = true;\n\n\nShort hostnames\n\n\nIf your devices only return a short hostname such as lax-fa0-dc01 but the full name should be lax-fa0-dc01.example.com then you can\nset \n$config['mydomain'] = 'example.com';\n\n\nAllow Duplicate sysName\n\n\nBy default we require unique sysNames when adding devices (this is returned over snmp by your devices). If you would like to allow\ndevices to be added with duplicate sysNames then please set \n$config['allow_duplicate_sysName'] = true;\n.\n\n\nDiscovery Methods\n\n\nBelow are the methods for auto discovering devices.  Each one can be enabled or disabled and may have additional configuration options.\n\n\nARP\n\n\nDisabled by default.\n\n\nAdds devices that are listed in another device's arp table.  This module depends on the arp-table module being enabled and returning data.\n\n\nTo enable, switch on globally the \n$config['discovery_modules']['discovery-arp'] = 1;\n or per device within the Modules section.\n\n\nXDP\n\n\nEnabled by default.\n\n\n$config['autodiscovery']['xdp'] = false;\n to disable.\n\n\nThis includes FDP, CDP and LLDP support based on the device type.\n\n\nDevices may be excluded from xdp discovery by sysName and sysDescr.\n\n\n//Exclude devices by name\n$config['autodiscovery']['xdp_exclude']['sysname_regexp'][] = '/host1/';\n$config['autodiscovery']['xdp_exclude']['sysname_regexp'][] = '/^dev/';\n\n//Exclude devices by description\n$config['autodiscovery']['xdp_exclude']['sysdesc_regexp'][] = '/Vendor X/';\n$config['autodiscovery']['xdp_exclude']['sysdesc_regexp'][] = '/Vendor Y/';\n\n\n\n\nDevices may be excluded from cdp discovery by platform.\n\n\n//Exclude devices by platform(Cisco only)\n$config['autodiscovery']['cdp_exclude']['platform_regexp'][] = '/WS-C3750G/';\n\n\n\n\nThese devices are excluded by default:\n\n\n$config['autodiscovery']['xdp_exclude']['sysdesc_regexp'][] = '/-K9W8-/'; // Cisco Lightweight Access Point\n$config['autodiscovery']['cdp_exclude']['platform_regexp'][] = '/^Cisco IP Phone/'; //Cisco IP Phone\n\n\n\n\nOSPF\n\n\nEnabled by default.\n\n\n$config['autodiscovery']['ospf'] = false;\n to disable.\n\n\nBGP\n\n\nEnabled by default.\n\n\n$config['autodiscovery']['bgp'] = false;\n to disable.\n\n\nThis module is invoked from bgp-peers discovery module.\n\n\nSNMP Scan\n\n\nApart from the aforementioned Auto-Discovery options, LibreNMS is also able to proactively scan a network for SNMP-enabled devices using the configured version/credentials.\n\n\nSNMP Scan will scan \n$config['nets']\n by default and respects \n$config['autodiscovery']['nets-exclude']\n.\n\n\nTo run the SNMP-Scanner you need to execute the \nsnmp-scan.py\n from within your LibreNMS installation directory.\n\n\nHere the script's help-page for reference:\n\n\nusage: snmp-scan.py [-h] [-r NETWORK] [-t THREADS] [-l] [-v]\n\nScan network for snmp hosts and add them to LibreNMS.\n\noptional arguments:\n  -h, --help     show this help message and exit\n  -r NETWORK     CIDR noted IP-Range to scan. Can be specified multiple times\n                 This argument is only required if $config['nets'] is not set\n                 Example: 192.168.0.0/24 Example: 192.168.0.0/31 will be\n                 treated as an RFC3021 p-t-p network with two addresses,\n                 192.168.0.0 and 192.168.0.1 Example: 192.168.0.1/32 will be\n                 treated as a single host address\n  -t THREADS     How many IPs to scan at a time. More will increase the scan\n                 speed, but could overload your system. Default: 32\n  -l, --legend   Print the legend.\n  -v, --verbose  Show debug output. Specifying multiple times increases the\n                 verbosity.", 
            "title": "Auto-discovery Setup"
        }, 
        {
            "location": "/Extensions/Auto-Discovery/#auto-discovery-support", 
            "text": "", 
            "title": "Auto Discovery Support"
        }, 
        {
            "location": "/Extensions/Auto-Discovery/#getting-started", 
            "text": "LibreNMS provides the ability to automatically add devices on your network, we can do this via\na few methods which will be explained below and also indicate if they are enabled by default.  All discovery methods run when discovery runs (every 6 hours by default and within 5 minutes for new devices).   Please note that you need at least ONE device added before auto-discovery will work.   The first thing to do though is add the required configuration options to  config.php .", 
            "title": "Getting Started"
        }, 
        {
            "location": "/Extensions/Auto-Discovery/#snmp-details", 
            "text": "To add devices automatically we need to know your snmp details, examples of SNMP v1, v2c and v3 are below:  // v1 or v2c\n$config['snmp']['community'][] =  my_custom_community ;\n$config['snmp']['community'][] =  another_community ;\n\n// v3\n$config['snmp']['v3'][0]['authlevel'] = 'authPriv';\n$config['snmp']['v3'][0]['authname'] = 'my_username';\n$config['snmp']['v3'][0]['authpass'] = 'my_password';\n$config['snmp']['v3'][0]['authalgo'] = 'MD5';\n$config['snmp']['v3'][0]['cryptopass'] = 'my_crypto';\n$config['snmp']['v3'][0]['cryptoalgo'] = 'AES';  These details will be attempted when adding devices, you can specify any mixture of these.", 
            "title": "SNMP Details"
        }, 
        {
            "location": "/Extensions/Auto-Discovery/#allowed-networks", 
            "text": "", 
            "title": "Allowed Networks"
        }, 
        {
            "location": "/Extensions/Auto-Discovery/#your-networks", 
            "text": "To add devices, we need to know what are your subnets so we don't go blindly attempting to add devices not\nunder your control.  $config['nets'][] = '192.168.0.0/24';\n$config['nets'][] = '172.2.4.0/22';", 
            "title": "Your Networks"
        }, 
        {
            "location": "/Extensions/Auto-Discovery/#exclusions", 
            "text": "If you have added a network as above but a single device exists within it that you can't auto\nadd, then you can exclude this with the following:  $config['autodiscovery']['nets-exclude'][] = '192.168.0.1/32';", 
            "title": "Exclusions"
        }, 
        {
            "location": "/Extensions/Auto-Discovery/#additional-options", 
            "text": "", 
            "title": "Additional Options"
        }, 
        {
            "location": "/Extensions/Auto-Discovery/#discovering-devices-by-ip", 
            "text": "By default we don't add devices by IP address, we look for a reverse dns name to be found and add with that. If this fails\nand you would like to still add devices automatically then you will need to set  $config['discovery_by_ip'] = true;", 
            "title": "Discovering devices by IP"
        }, 
        {
            "location": "/Extensions/Auto-Discovery/#short-hostnames", 
            "text": "If your devices only return a short hostname such as lax-fa0-dc01 but the full name should be lax-fa0-dc01.example.com then you can\nset  $config['mydomain'] = 'example.com';", 
            "title": "Short hostnames"
        }, 
        {
            "location": "/Extensions/Auto-Discovery/#allow-duplicate-sysname", 
            "text": "By default we require unique sysNames when adding devices (this is returned over snmp by your devices). If you would like to allow\ndevices to be added with duplicate sysNames then please set  $config['allow_duplicate_sysName'] = true; .", 
            "title": "Allow Duplicate sysName"
        }, 
        {
            "location": "/Extensions/Auto-Discovery/#discovery-methods", 
            "text": "Below are the methods for auto discovering devices.  Each one can be enabled or disabled and may have additional configuration options.", 
            "title": "Discovery Methods"
        }, 
        {
            "location": "/Extensions/Auto-Discovery/#arp", 
            "text": "Disabled by default.  Adds devices that are listed in another device's arp table.  This module depends on the arp-table module being enabled and returning data.  To enable, switch on globally the  $config['discovery_modules']['discovery-arp'] = 1;  or per device within the Modules section.", 
            "title": "ARP"
        }, 
        {
            "location": "/Extensions/Auto-Discovery/#xdp", 
            "text": "Enabled by default.  $config['autodiscovery']['xdp'] = false;  to disable.  This includes FDP, CDP and LLDP support based on the device type.  Devices may be excluded from xdp discovery by sysName and sysDescr.  //Exclude devices by name\n$config['autodiscovery']['xdp_exclude']['sysname_regexp'][] = '/host1/';\n$config['autodiscovery']['xdp_exclude']['sysname_regexp'][] = '/^dev/';\n\n//Exclude devices by description\n$config['autodiscovery']['xdp_exclude']['sysdesc_regexp'][] = '/Vendor X/';\n$config['autodiscovery']['xdp_exclude']['sysdesc_regexp'][] = '/Vendor Y/';  Devices may be excluded from cdp discovery by platform.  //Exclude devices by platform(Cisco only)\n$config['autodiscovery']['cdp_exclude']['platform_regexp'][] = '/WS-C3750G/';  These devices are excluded by default:  $config['autodiscovery']['xdp_exclude']['sysdesc_regexp'][] = '/-K9W8-/'; // Cisco Lightweight Access Point\n$config['autodiscovery']['cdp_exclude']['platform_regexp'][] = '/^Cisco IP Phone/'; //Cisco IP Phone", 
            "title": "XDP"
        }, 
        {
            "location": "/Extensions/Auto-Discovery/#ospf", 
            "text": "Enabled by default.  $config['autodiscovery']['ospf'] = false;  to disable.", 
            "title": "OSPF"
        }, 
        {
            "location": "/Extensions/Auto-Discovery/#bgp", 
            "text": "Enabled by default.  $config['autodiscovery']['bgp'] = false;  to disable.  This module is invoked from bgp-peers discovery module.", 
            "title": "BGP"
        }, 
        {
            "location": "/Extensions/Auto-Discovery/#snmp-scan", 
            "text": "Apart from the aforementioned Auto-Discovery options, LibreNMS is also able to proactively scan a network for SNMP-enabled devices using the configured version/credentials.  SNMP Scan will scan  $config['nets']  by default and respects  $config['autodiscovery']['nets-exclude'] .  To run the SNMP-Scanner you need to execute the  snmp-scan.py  from within your LibreNMS installation directory.  Here the script's help-page for reference:  usage: snmp-scan.py [-h] [-r NETWORK] [-t THREADS] [-l] [-v]\n\nScan network for snmp hosts and add them to LibreNMS.\n\noptional arguments:\n  -h, --help     show this help message and exit\n  -r NETWORK     CIDR noted IP-Range to scan. Can be specified multiple times\n                 This argument is only required if $config['nets'] is not set\n                 Example: 192.168.0.0/24 Example: 192.168.0.0/31 will be\n                 treated as an RFC3021 p-t-p network with two addresses,\n                 192.168.0.0 and 192.168.0.1 Example: 192.168.0.1/32 will be\n                 treated as a single host address\n  -t THREADS     How many IPs to scan at a time. More will increase the scan\n                 speed, but could overload your system. Default: 32\n  -l, --legend   Print the legend.\n  -v, --verbose  Show debug output. Specifying multiple times increases the\n                 verbosity.", 
            "title": "SNMP Scan"
        }, 
        {
            "location": "/Extensions/Distributed-Poller/", 
            "text": "Distributed Poller\n\n\nLibreNMS has the ability to distribute polling of devices to other machines.\n\n\nThese machines can be in a different physical location and therefore minimize network latency for devices that are a considerable \ndistance away or are behind NAT firewalls.\n\n\nDevices can be grouped together into a \npoller_group\n to pin these devices to a single or a group of designated pollers.\n\n\n\n\nAll pollers need to share their RRD-folder, for example via NFS or a combination of NFS and rrdcached.\n\n\n\n\nIt is a requirement that all pollers can access the central memcached to communicate with each other.\n\n\nRequirements\n\n\n\n\nThese requirements are above the normal requirements for a full LibreNMS install.\n\n\n\n\n\n\nrrdtool version 1.4 or above\n\n\npython-memcached package\n\n\na memcached install\n\n\na rrdcached install\n\n\n\n\nBy default, all hosts are shared and have the \npoller_group = 0\n. To pin a device to a poller, set it to a value greater than 0 and set the same value in the poller's config with \n$config['distributed_poller_group']\n. One can also specify a comma separated string of poller groups in $config['distributed_poller_group'].  The poller will then poll devices from any of the groups listed.  If new devices get added from the poller they will be assigned to the first poller group in the list unless the group is specified when adding the device.\n\n\nA standard configuration for a distributed poller would look like:\n\n\n// Distributed Poller-Settings\n$config['distributed_poller']                            = true;\n#$config['distributed_poller_name']                      = 'custom'; // optional: defaults to hostname\n$config['distributed_poller_group']                      = 0;\n$config['distributed_poller_memcached_host']             = 'example.net';\n$config['distributed_poller_memcached_port']             = '11211';\n\n\n\n\nExample Setup\n\n\nBelow is an example setup based on a real deployment which at the time of writing covers over 2,500 devices and 50,000 ports. The setup is running within an OpenStack environment with some commodity hardware for remote pollers. Here's a diagram of how you can scale LibreNMS out:\n\n\n\n\nArchitecture\n\n\nHow you setup the distribution is entirely up to you, you can choose to host the majority of the required services on a single virtual machine or server and then a poller to actually query the devices being monitored all the way through to having a dedicated server for each of the individual roles. Below are notes on what you need to consider both from the software layer but also connectivity.\n\n\nWeb / API Layer\n\n\nThis is typically Apache but we have setup guides for both Nginx and Lighttpd which should work perfectly fine. There is nothing unique about the role this service is providing except that if you are adding devices from this layer then the web service will need to be able to connect to the end device via SNMP and perform an ICMP test.\n\n\nIt is advisable to run RRDCached within this setup so that you don't need to share the rrd folder via a remote file share such as NFS. The web service can then generate rrd graphs via RRDCached. If RRDCached isn't an option then you can mount the rrd directory to read the RRD files directly.\n\n\nDatabase Server\n\n\nMySQL / MariaDB - At the moment these are the only database servers that are supported, work is being done to ensure MySQL Strict mode is also supported but this should be considered to be incomplete still and therefor disabled.\n\n\nThe pollers, web and API layers should all be able to access the database server directly.\n\n\nRRD Storage\n\n\nCentral storage should be provided so all RRD files can be read from and written to in one location. As suggested above, it's recommended that RRD Cached is configured and used.\n\n\nFor this example, we are running RRDCached to allow all pollers and web/api servers to read/write to the rrd files with the rrd directory also exported by NFS for simple access and maintenance.\n\n\nMemcache\n\n\nMemcache is required for the distributed pollers to be able to register to a central location and record what devices are polled. Memcache can run from any of the servers so long as it is accessible by all pollers.\n\n\nPollers\n\n\nPollers can be installed and run from anywhere, the only requirements are:\n\n\nThey can access the Memcache instance\nThey can create RRD files via some method such as a shared filesystem or RRDTool \n=1.5.5\nThey can access the MySQL server\n\n\nYou can either assign pollers into groups and set a poller group against certain devices, this will mean that those devices will only be processed by certain pollers (default poller group is 0) or you can assign all pollers to the default poller group for them to process any and all devices.\n\n\nThis will provide the ability to have a single poller behind a NAT firewall monitor internal devices and report back to your central system. You will then be able to monitor those devices from the Web UI as normal.\n\n\nAnother benefit to this is that you can provide N+x pollers, i.e if you know that you require three pollers to process all devices within 300 seconds then adding a 4th poller will mean that should any one single poller fail then the remaining three will complete polling in time. You could also use this to take a poller out of service for maintenance, i.e OS updates and software updates.\n\n\nIt is extremely advisable to either run a central recursive dns server such as pdns-recursor and have all of your pollers use this or install a recursive dns server on each poller - the volume of DNS requests on large installs can be significant and will slow polling down enough to cause issues with a large number of devices.\n\n\nDiscovery\n\n\nIt's not necessary to run discovery services on all pollers. In fact, you should only run one discovery process per poller group. Designate a single poller to run discovery (or a separate server if required).\n\n\nConfig sample\n\n\nThe following config is taken from a live setup which consists of a Web server, DB server, RRDCached server and 3 pollers.\n\n\nWeb Server:\nRunning Apache and an install of LibreNMS in /opt/librenms\n - config.php\n\n\n$config['distributed_poller'] = true;\n$config['rrdcached']    = \nexample.com:42217\n;\n\n\n\n\nDatabase Server:\nRunning Memcache and MariaDB\n - Memcache\n\n\nUbuntu (/etc/memcached.conf)\n\n\n-d\n-m 64\n-p 11211\n-u memcache\n-l ip.ip.ip.ip\n\n\n\n\nRRDCached Server:\nRunning RRDCached\n  - RRDCached\n\n\nUbuntu (/etc/default/rrdcached)\n\n\nOPTS=\n-l 0:42217\n\nOPTS=\n$OPTS -j /var/lib/rrdcached/journal/ -F\n\nOPTS=\n$OPTS -b /opt/librenms/rrd -B\n\nOPTS=\n$OPTS -w 1800 -z 900\n\n\n\n\n\nUbuntu (/etc/default/rrdcached) - RRDCached 1.5.5 and above.\n\n\nOPTS=\n-l 0:42217\n\nOPTS=\n$OPTS -R -j /var/lib/rrdcached/journal/ -F\n\nOPTS=\n$OPTS -b /opt/librenms/rrd -B\n\nOPTS=\n$OPTS -w 1800 -z 900\n\n\n\n\n\nPoller 1:\nRunning an install of LibreNMS in /opt/librenms\n\n\nconfig.php\n\n\n$config['distributed_poller_name']           = file_get_contents('/etc/hostname');\n$config['distributed_poller_group']          = '0';\n$config['distributed_poller_memcached_host'] = \nexample.com\n;\n$config['distributed_poller_memcached_port'] = 11211;\n$config['distributed_poller']                = true;\n$config['rrdcached']                         = \nexample.com:42217\n;\n$config['update']                            = 0;\n\n\n\n\n/etc/cron.d/librenms\n\nRuns discovery and polling for group 0, daily.sh to deal with notifications and DB cleanup and alerts.\n\n\n33   */6  * * *   librenms    /opt/librenms/cronic /opt/librenms/discovery-wrapper.py 1\n*/5  *    * * *   librenms    /opt/librenms/discovery.php -h new \n /dev/null 2\n1\n*/5  *    * * *   librenms    /opt/librenms/cronic /opt/librenms/poller-wrapper.py 16\n15   0    * * *   librenms    /opt/librenms/daily.sh \n /dev/null 2\n1\n*    *    * * *   librenms    /opt/librenms/alerts.php \n /dev/null 2\n1\n\n\n\n\nPoller 2:\nRunning an install of LibreNMS in /opt/librenms\n\n\nconfig.php\n\n\n$config['distributed_poller_name']           = file_get_contents('/etc/hostname');\n$config['distributed_poller_group']          = '0';\n$config['distributed_poller_memcached_host'] = \nexample.com\n;\n$config['distributed_poller_memcached_port'] = 11211;\n$config['distributed_poller']                = true;\n$config['rrdcached']                         = \nexample.com:42217\n;\n$config['update']                            = 0;\n\n\n\n\n/etc/cron.d/librenms\n\nRuns billing as well as polling for group 0.\n\n\n*/5 * * * * librenms /opt/librenms/poller-wrapper.py 16 \n /opt/librenms/logs/wrapper.log\n*/5 * * * * librenms /opt/librenms/poll-billing.php \n /dev/null 2\n1\n01  * * * * librenms /opt/librenms/billing-calculate.php \n /dev/null 2\n1\n\n\n\n\nPoller 3:\nRunning an install of LibreNMS in /opt/librenms\n\n\nconfig.php\n\n\n$config['distributed_poller_name']           = file_get_contents('/etc/hostname');\n$config['distributed_poller_group']          = '2,3';\n$config['distributed_poller_memcached_host'] = \nexample.com\n;\n$config['distributed_poller_memcached_port'] = 11211;\n$config['distributed_poller']                = true;\n$config['rrdcached']                         = \nexample.com:42217\n;\n$config['update']                            = 0;\n\n\n\n\n/etc/cron.d/librenms\n\nRuns discovery and polling for groups 2 and 3.\n\n\n33   */6  * * *   librenms    /opt/librenms/cronic /opt/librenms/discovery-wrapper.py 1\n*/5  *    * * *   librenms    /opt/librenms/discovery.php -h new \n /dev/null 2\n1\n*/5  *    * * *   librenms    /opt/librenms/cronic /opt/librenms/poller-wrapper.py 16", 
            "title": "Scaling LibreNMS"
        }, 
        {
            "location": "/Extensions/Distributed-Poller/#distributed-poller", 
            "text": "LibreNMS has the ability to distribute polling of devices to other machines.  These machines can be in a different physical location and therefore minimize network latency for devices that are a considerable \ndistance away or are behind NAT firewalls.  Devices can be grouped together into a  poller_group  to pin these devices to a single or a group of designated pollers.   All pollers need to share their RRD-folder, for example via NFS or a combination of NFS and rrdcached.   It is a requirement that all pollers can access the central memcached to communicate with each other.", 
            "title": "Distributed Poller"
        }, 
        {
            "location": "/Extensions/Distributed-Poller/#requirements", 
            "text": "These requirements are above the normal requirements for a full LibreNMS install.    rrdtool version 1.4 or above  python-memcached package  a memcached install  a rrdcached install   By default, all hosts are shared and have the  poller_group = 0 . To pin a device to a poller, set it to a value greater than 0 and set the same value in the poller's config with  $config['distributed_poller_group'] . One can also specify a comma separated string of poller groups in $config['distributed_poller_group'].  The poller will then poll devices from any of the groups listed.  If new devices get added from the poller they will be assigned to the first poller group in the list unless the group is specified when adding the device.  A standard configuration for a distributed poller would look like:  // Distributed Poller-Settings\n$config['distributed_poller']                            = true;\n#$config['distributed_poller_name']                      = 'custom'; // optional: defaults to hostname\n$config['distributed_poller_group']                      = 0;\n$config['distributed_poller_memcached_host']             = 'example.net';\n$config['distributed_poller_memcached_port']             = '11211';", 
            "title": "Requirements"
        }, 
        {
            "location": "/Extensions/Distributed-Poller/#example-setup", 
            "text": "Below is an example setup based on a real deployment which at the time of writing covers over 2,500 devices and 50,000 ports. The setup is running within an OpenStack environment with some commodity hardware for remote pollers. Here's a diagram of how you can scale LibreNMS out:", 
            "title": "Example Setup"
        }, 
        {
            "location": "/Extensions/Distributed-Poller/#architecture", 
            "text": "How you setup the distribution is entirely up to you, you can choose to host the majority of the required services on a single virtual machine or server and then a poller to actually query the devices being monitored all the way through to having a dedicated server for each of the individual roles. Below are notes on what you need to consider both from the software layer but also connectivity.", 
            "title": "Architecture"
        }, 
        {
            "location": "/Extensions/Distributed-Poller/#web-api-layer", 
            "text": "This is typically Apache but we have setup guides for both Nginx and Lighttpd which should work perfectly fine. There is nothing unique about the role this service is providing except that if you are adding devices from this layer then the web service will need to be able to connect to the end device via SNMP and perform an ICMP test.  It is advisable to run RRDCached within this setup so that you don't need to share the rrd folder via a remote file share such as NFS. The web service can then generate rrd graphs via RRDCached. If RRDCached isn't an option then you can mount the rrd directory to read the RRD files directly.", 
            "title": "Web / API Layer"
        }, 
        {
            "location": "/Extensions/Distributed-Poller/#database-server", 
            "text": "MySQL / MariaDB - At the moment these are the only database servers that are supported, work is being done to ensure MySQL Strict mode is also supported but this should be considered to be incomplete still and therefor disabled.  The pollers, web and API layers should all be able to access the database server directly.", 
            "title": "Database Server"
        }, 
        {
            "location": "/Extensions/Distributed-Poller/#rrd-storage", 
            "text": "Central storage should be provided so all RRD files can be read from and written to in one location. As suggested above, it's recommended that RRD Cached is configured and used.  For this example, we are running RRDCached to allow all pollers and web/api servers to read/write to the rrd files with the rrd directory also exported by NFS for simple access and maintenance.", 
            "title": "RRD Storage"
        }, 
        {
            "location": "/Extensions/Distributed-Poller/#memcache", 
            "text": "Memcache is required for the distributed pollers to be able to register to a central location and record what devices are polled. Memcache can run from any of the servers so long as it is accessible by all pollers.", 
            "title": "Memcache"
        }, 
        {
            "location": "/Extensions/Distributed-Poller/#pollers", 
            "text": "Pollers can be installed and run from anywhere, the only requirements are:  They can access the Memcache instance\nThey can create RRD files via some method such as a shared filesystem or RRDTool  =1.5.5\nThey can access the MySQL server  You can either assign pollers into groups and set a poller group against certain devices, this will mean that those devices will only be processed by certain pollers (default poller group is 0) or you can assign all pollers to the default poller group for them to process any and all devices.  This will provide the ability to have a single poller behind a NAT firewall monitor internal devices and report back to your central system. You will then be able to monitor those devices from the Web UI as normal.  Another benefit to this is that you can provide N+x pollers, i.e if you know that you require three pollers to process all devices within 300 seconds then adding a 4th poller will mean that should any one single poller fail then the remaining three will complete polling in time. You could also use this to take a poller out of service for maintenance, i.e OS updates and software updates.  It is extremely advisable to either run a central recursive dns server such as pdns-recursor and have all of your pollers use this or install a recursive dns server on each poller - the volume of DNS requests on large installs can be significant and will slow polling down enough to cause issues with a large number of devices.", 
            "title": "Pollers"
        }, 
        {
            "location": "/Extensions/Distributed-Poller/#discovery", 
            "text": "It's not necessary to run discovery services on all pollers. In fact, you should only run one discovery process per poller group. Designate a single poller to run discovery (or a separate server if required).", 
            "title": "Discovery"
        }, 
        {
            "location": "/Extensions/Distributed-Poller/#config-sample", 
            "text": "The following config is taken from a live setup which consists of a Web server, DB server, RRDCached server and 3 pollers.  Web Server:\nRunning Apache and an install of LibreNMS in /opt/librenms\n - config.php  $config['distributed_poller'] = true;\n$config['rrdcached']    =  example.com:42217 ;  Database Server:\nRunning Memcache and MariaDB\n - Memcache  Ubuntu (/etc/memcached.conf)  -d\n-m 64\n-p 11211\n-u memcache\n-l ip.ip.ip.ip  RRDCached Server:\nRunning RRDCached\n  - RRDCached  Ubuntu (/etc/default/rrdcached)  OPTS= -l 0:42217 \nOPTS= $OPTS -j /var/lib/rrdcached/journal/ -F \nOPTS= $OPTS -b /opt/librenms/rrd -B \nOPTS= $OPTS -w 1800 -z 900   Ubuntu (/etc/default/rrdcached) - RRDCached 1.5.5 and above.  OPTS= -l 0:42217 \nOPTS= $OPTS -R -j /var/lib/rrdcached/journal/ -F \nOPTS= $OPTS -b /opt/librenms/rrd -B \nOPTS= $OPTS -w 1800 -z 900   Poller 1:\nRunning an install of LibreNMS in /opt/librenms  config.php  $config['distributed_poller_name']           = file_get_contents('/etc/hostname');\n$config['distributed_poller_group']          = '0';\n$config['distributed_poller_memcached_host'] =  example.com ;\n$config['distributed_poller_memcached_port'] = 11211;\n$config['distributed_poller']                = true;\n$config['rrdcached']                         =  example.com:42217 ;\n$config['update']                            = 0;  /etc/cron.d/librenms \nRuns discovery and polling for group 0, daily.sh to deal with notifications and DB cleanup and alerts.  33   */6  * * *   librenms    /opt/librenms/cronic /opt/librenms/discovery-wrapper.py 1\n*/5  *    * * *   librenms    /opt/librenms/discovery.php -h new   /dev/null 2 1\n*/5  *    * * *   librenms    /opt/librenms/cronic /opt/librenms/poller-wrapper.py 16\n15   0    * * *   librenms    /opt/librenms/daily.sh   /dev/null 2 1\n*    *    * * *   librenms    /opt/librenms/alerts.php   /dev/null 2 1  Poller 2:\nRunning an install of LibreNMS in /opt/librenms  config.php  $config['distributed_poller_name']           = file_get_contents('/etc/hostname');\n$config['distributed_poller_group']          = '0';\n$config['distributed_poller_memcached_host'] =  example.com ;\n$config['distributed_poller_memcached_port'] = 11211;\n$config['distributed_poller']                = true;\n$config['rrdcached']                         =  example.com:42217 ;\n$config['update']                            = 0;  /etc/cron.d/librenms \nRuns billing as well as polling for group 0.  */5 * * * * librenms /opt/librenms/poller-wrapper.py 16   /opt/librenms/logs/wrapper.log\n*/5 * * * * librenms /opt/librenms/poll-billing.php   /dev/null 2 1\n01  * * * * librenms /opt/librenms/billing-calculate.php   /dev/null 2 1  Poller 3:\nRunning an install of LibreNMS in /opt/librenms  config.php  $config['distributed_poller_name']           = file_get_contents('/etc/hostname');\n$config['distributed_poller_group']          = '2,3';\n$config['distributed_poller_memcached_host'] =  example.com ;\n$config['distributed_poller_memcached_port'] = 11211;\n$config['distributed_poller']                = true;\n$config['rrdcached']                         =  example.com:42217 ;\n$config['update']                            = 0;  /etc/cron.d/librenms \nRuns discovery and polling for groups 2 and 3.  33   */6  * * *   librenms    /opt/librenms/cronic /opt/librenms/discovery-wrapper.py 1\n*/5  *    * * *   librenms    /opt/librenms/discovery.php -h new   /dev/null 2 1\n*/5  *    * * *   librenms    /opt/librenms/cronic /opt/librenms/poller-wrapper.py 16", 
            "title": "Config sample"
        }, 
        {
            "location": "/Extensions/RRDCached/", 
            "text": "Setting up RRDCached\n\n\nThis document will explain how to setup RRDCached for LibreNMS.\n\n\n\n\nSince version 1.5, rrdtool / rrdcached now supports creating rrd files over rrdcached. \nIf you have rrdcached 1.5.5 or above, you can also tune over rrdcached.\nTo enable this set the following config:\n\n\n\n\n$config['rrdtool_version'] = '1.5.5';\n\n\n\n\nNOTE: This feature requires your client version of rrdtool to be 1.5.5 or over, in addition to your rrdcached version.\n\n\nDistributed Poller Support Matrix\n\n\nShared FS: Is a shared filesystem required?\n\n\nFeatures: Supported features in the version indicated.\n\n\n      G = Graphs.\n\n      C = Create RRD files.\n\n      U = Update RRD files.\n\n      T = Tune RRD files.\n\n\n\n\n\n\n\n\n\nVersion\n\n\nShared FS\n\n\nFeatures\n\n\n\n\n\n\n\n\n\n\n1.4.x\n\n\nYes\n\n\nG,U\n\n\n\n\n\n\n1.5.5\n\n\nYes\n\n\nG,U\n\n\n\n\n\n\n=1.5.5\n\n\nNo\n\n\nG,C,U\n\n\n\n\n\n\n=1.6.x\n\n\nNo\n\n\nG,C,U\n\n\n\n\n\n\n\n\nIt is recommended that you monitor your LibreNMS server with LibreNMS so you can view the disk I/O usage delta.\n\n\nRRDCached installation CentOS 7\n\n\n\n\nCreate \n/etc/systemd/system/rrdcached.service\n with this content:\n\n\n\n\n[Unit]\nDescription=Data caching daemon for rrdtool\nAfter=network.service\n\n[Service]\nType=forking\nPIDFile=/run/rrdcached.pid\nExecStart=/usr/bin/rrdcached -w 1800 -z 1800 -f 3600 -s librenms -U librenms -G librenms -B -R -j /var/tmp -l unix:/run/rrdcached.sock -t 4 -F -b /opt/librenms/rrd/\n\n[Install]\nWantedBy=default.target\n\n\n\n\n\n\nStart rrdcached\n\n\n\n\nsystemctl enable --now rrdcached.service\n\n\n\n\n\n\nEdit \n/opt/librenms/config.php\n to include:\n\n\n\n\n$config['rrdcached'] = \nunix:/run/rrdcached.sock\n;\n\n\n\n\nRRDCached installation Ubuntu 16\n\n\n\n\nInstall rrdcached\n\n\n\n\nsudo apt-get install rrdcached\n\n\n\n\n\n\nEdit \n/etc/default/rrdcached\n to include:\n\n\n\n\nDAEMON=/usr/bin/rrdcached\nDAEMON_USER=librenms\nDAEMON_GROUP=librenms\nWRITE_THREADS=4\nWRITE_TIMEOUT=1800\nWRITE_JITTER=1800\nBASE_PATH=/opt/librenms/rrd/\nJOURNAL_PATH=/var/lib/rrdcached/journal/\nPIDFILE=/run/rrdcached.pid\nSOCKFILE=/run/rrdcached.sock\nSOCKGROUP=librenms\nBASE_OPTIONS=\n-B -F -R\n\n\n\n\n\n\n\nFix permissions\n\n\n\n\nchown librenms:librenms /var/lib/rrdcached/journal/\n\n\n\n\n\n\nRestart the rrdcached service\n\n\n\n\nsystemctl restart rrdcached.service\n\n\n\n\n\n\nEdit \n/opt/librenms/config.php\n to include:\n\n\n\n\n$config['rrdcached'] = \nunix:/var/run/rrdcached.sock\n;\n\n\n\n\nRRDCached installation Debian Jessie (rrdcached 1.4.8)\n\n\n\n\nInstall rrdcached\n\n\n\n\nsudo apt-get install rrdcached\n\n\n\n\n\n\nEdit /etc/default/rrdcached to include:\n\n\n\n\nOPTS=\n-s librenms\n\nOPTS=\n$OPTS -l unix:/var/run/rrdcached.sock\n\nOPTS=\n$OPTS -j /var/lib/rrdcached/journal/ -F\n\nOPTS=\n$OPTS -b /opt/librenms/rrd/ -B\n\nOPTS=\n$OPTS -w 1800 -z 1800 -f 3600 -t 4\n\n\n\n\n\n\n\nRestart the rrdcached service\n\n\n\n\n    systemctl restart rrdcached.service\n\n\n\n\n\n\nEdit /opt/librenms/config.php to include:\n\n\n\n\n$config['rrdcached'] = \nunix:/var/run/rrdcached.sock\n;\n\n\n\n\nRRDCached installation CentOS 6\n\n\nThis example is based on a fresh LibreNMS install, on a minimal CentOS 6 installation.\nIn this example, we'll use the Repoforge repository.\n\n\nrpm -ivh http://pkgs.repoforge.org/rpmforge-release/rpmforge-release-0.5.3-1.el6.rf.x86_64.rpm\nvi /etc/yum.repos.d/rpmforge.repo\n\n\n\n\n\n\nEnable the Extra repo\n\n\n\n\nyum update rrdtool\nvi /etc/yum.repos.d/rpmforge.repo\n\n\n\n\n\n\nDisable the [rpmforge] and [rpmforge-extras] repos again\n\n\n\n\nvi /etc/sysconfig/rrdcached\n\n# Settings for rrdcached\nOPTIONS=\n-w 1800 -z 1800 -f 3600 -s librenms -U librenms -G librenms -B -R -j /var/tmp -l unix:/var/run/rrdcached/rrdcached.sock -t 4 -F -b /opt/librenms/rrd/\n\nRRDC_USER=librenms\n\nmkdir /var/run/rrdcached\nchown librenms:librenms /var/run/rrdcached/\nchown librenms:librenms /var/rrdtool/\nchown librenms:librenms /var/rrdtool/rrdcached/\nchkconfig rrdcached on\nservice rrdcached start\n\n\n\n\n\n\nEdit /opt/librenms/config.php to include:\n\n\n\n\n$config['rrdcached']    = \nunix:/var/run/rrdcached/rrdcached.sock\n;\n\n\n\n\nVerify\n\n\nCheck to see if the graphs are being drawn in LibreNMS. This might take a few minutes.\nAfter at least one poll cycle (5 mins), check the LibreNMS disk I/O performance delta.\nDisk I/O can be found under the menu Devices\nAll Devices\n[localhost hostname]\nHealth\nDisk I/O.\n\n\nDepending on many factors, you should see the Ops/sec drop by ~30-40%.\n\n\nSecuring RRCached\n\n\nPlease see \nRRDCached Security", 
            "title": "Setting up RRDCached"
        }, 
        {
            "location": "/Extensions/RRDCached/#setting-up-rrdcached", 
            "text": "This document will explain how to setup RRDCached for LibreNMS.   Since version 1.5, rrdtool / rrdcached now supports creating rrd files over rrdcached. \nIf you have rrdcached 1.5.5 or above, you can also tune over rrdcached.\nTo enable this set the following config:   $config['rrdtool_version'] = '1.5.5';  NOTE: This feature requires your client version of rrdtool to be 1.5.5 or over, in addition to your rrdcached version.", 
            "title": "Setting up RRDCached"
        }, 
        {
            "location": "/Extensions/RRDCached/#distributed-poller-support-matrix", 
            "text": "Shared FS: Is a shared filesystem required?  Features: Supported features in the version indicated.        G = Graphs.\n\n      C = Create RRD files.\n\n      U = Update RRD files.\n\n      T = Tune RRD files.     Version  Shared FS  Features      1.4.x  Yes  G,U    1.5.5  Yes  G,U    =1.5.5  No  G,C,U    =1.6.x  No  G,C,U     It is recommended that you monitor your LibreNMS server with LibreNMS so you can view the disk I/O usage delta.", 
            "title": "Distributed Poller Support Matrix"
        }, 
        {
            "location": "/Extensions/RRDCached/#rrdcached-installation-centos-7", 
            "text": "Create  /etc/systemd/system/rrdcached.service  with this content:   [Unit]\nDescription=Data caching daemon for rrdtool\nAfter=network.service\n\n[Service]\nType=forking\nPIDFile=/run/rrdcached.pid\nExecStart=/usr/bin/rrdcached -w 1800 -z 1800 -f 3600 -s librenms -U librenms -G librenms -B -R -j /var/tmp -l unix:/run/rrdcached.sock -t 4 -F -b /opt/librenms/rrd/\n\n[Install]\nWantedBy=default.target   Start rrdcached   systemctl enable --now rrdcached.service   Edit  /opt/librenms/config.php  to include:   $config['rrdcached'] =  unix:/run/rrdcached.sock ;", 
            "title": "RRDCached installation CentOS 7"
        }, 
        {
            "location": "/Extensions/RRDCached/#rrdcached-installation-ubuntu-16", 
            "text": "Install rrdcached   sudo apt-get install rrdcached   Edit  /etc/default/rrdcached  to include:   DAEMON=/usr/bin/rrdcached\nDAEMON_USER=librenms\nDAEMON_GROUP=librenms\nWRITE_THREADS=4\nWRITE_TIMEOUT=1800\nWRITE_JITTER=1800\nBASE_PATH=/opt/librenms/rrd/\nJOURNAL_PATH=/var/lib/rrdcached/journal/\nPIDFILE=/run/rrdcached.pid\nSOCKFILE=/run/rrdcached.sock\nSOCKGROUP=librenms\nBASE_OPTIONS= -B -F -R    Fix permissions   chown librenms:librenms /var/lib/rrdcached/journal/   Restart the rrdcached service   systemctl restart rrdcached.service   Edit  /opt/librenms/config.php  to include:   $config['rrdcached'] =  unix:/var/run/rrdcached.sock ;", 
            "title": "RRDCached installation Ubuntu 16"
        }, 
        {
            "location": "/Extensions/RRDCached/#rrdcached-installation-debian-jessie-rrdcached-148", 
            "text": "Install rrdcached   sudo apt-get install rrdcached   Edit /etc/default/rrdcached to include:   OPTS= -s librenms \nOPTS= $OPTS -l unix:/var/run/rrdcached.sock \nOPTS= $OPTS -j /var/lib/rrdcached/journal/ -F \nOPTS= $OPTS -b /opt/librenms/rrd/ -B \nOPTS= $OPTS -w 1800 -z 1800 -f 3600 -t 4    Restart the rrdcached service       systemctl restart rrdcached.service   Edit /opt/librenms/config.php to include:   $config['rrdcached'] =  unix:/var/run/rrdcached.sock ;", 
            "title": "RRDCached installation Debian Jessie (rrdcached 1.4.8)"
        }, 
        {
            "location": "/Extensions/RRDCached/#rrdcached-installation-centos-6", 
            "text": "This example is based on a fresh LibreNMS install, on a minimal CentOS 6 installation.\nIn this example, we'll use the Repoforge repository.  rpm -ivh http://pkgs.repoforge.org/rpmforge-release/rpmforge-release-0.5.3-1.el6.rf.x86_64.rpm\nvi /etc/yum.repos.d/rpmforge.repo   Enable the Extra repo   yum update rrdtool\nvi /etc/yum.repos.d/rpmforge.repo   Disable the [rpmforge] and [rpmforge-extras] repos again   vi /etc/sysconfig/rrdcached\n\n# Settings for rrdcached\nOPTIONS= -w 1800 -z 1800 -f 3600 -s librenms -U librenms -G librenms -B -R -j /var/tmp -l unix:/var/run/rrdcached/rrdcached.sock -t 4 -F -b /opt/librenms/rrd/ \nRRDC_USER=librenms\n\nmkdir /var/run/rrdcached\nchown librenms:librenms /var/run/rrdcached/\nchown librenms:librenms /var/rrdtool/\nchown librenms:librenms /var/rrdtool/rrdcached/\nchkconfig rrdcached on\nservice rrdcached start   Edit /opt/librenms/config.php to include:   $config['rrdcached']    =  unix:/var/run/rrdcached/rrdcached.sock ;", 
            "title": "RRDCached installation CentOS 6"
        }, 
        {
            "location": "/Extensions/RRDCached/#verify", 
            "text": "Check to see if the graphs are being drawn in LibreNMS. This might take a few minutes.\nAfter at least one poll cycle (5 mins), check the LibreNMS disk I/O performance delta.\nDisk I/O can be found under the menu Devices All Devices [localhost hostname] Health Disk I/O.  Depending on many factors, you should see the Ops/sec drop by ~30-40%.", 
            "title": "Verify"
        }, 
        {
            "location": "/Extensions/RRDCached/#securing-rrcached", 
            "text": "Please see  RRDCached Security", 
            "title": "Securing RRCached"
        }, 
        {
            "location": "/Extensions/Sub-Directory/", 
            "text": "To run LibreNMS under a subdirectory on your Apache server, the directives for the LibreNMS directory are placed in the base server configuration, or in a virtual host\ncontainer of your choosing. If using a virtual host, place the directives in the file where the virtual host is configured. If using the base server on RHEL distributions\n(CentOS, Scientific Linux, etc.) the directives can be placed in \n/etc/httpd/conf.d/librenms.conf\n. For Debian distributions (Ubuntu, etc.) place the directives in\n\n/etc/apache2/sites-available/default\n.\n\n\n#These directives can be inside a virtual host or in the base server configuration\nAllowEncodedSlashes On\nAlias /librenms /opt/librenms/html\n\n\nDirectory \n/opt/librenms/html\n\n    AllowOverride All\n    Options FollowSymLinks MultiViews\n\n/Directory\n\n\n\n\n\nThe \nRewriteBase\n directive in \nhtml/.htaccess\n must be rewritten to reference the subdirectory name. Assuming LibreNMS is running at http://example.com/librenms/,\nyou will need to change \nRewriteBase /\n to \nRewriteBase /librenms\n.\n\n\nFinally, set \n$config[\"base_url\"] = '/librenms/';\n in config.php.", 
            "title": "Sub-directory Support"
        }, 
        {
            "location": "/Extensions/Varnish/", 
            "text": "Varnish Installation Guide\n\n\nThis document explains how to install Varnish Reverse Proxy for LibreNMS.\n\n\nVarnish is caching software that sits logically between an HTTP client and an HTTP server. Varnish caches HTTP responses from the HTTP server. If an HTTP request can not be responded to by the Varnish cache it directs the request to the HTTP Server. This type of HTTP caching is called a reverse proxy server. Caching your HTTP server can decrease page load times significantly.\n\n\n\nSimplified block diagram of an Apache HTTP server with Varnish 4.0 Reverse Proxy.\n\n\n\n\nCentOS 7 Varnish Installation\n\n\nIn this example we will assume your Apache 2.4.X HTTP server is working and\nconfigured to process HTTP requests on port 80.  If not, please see\n\nInstalling LibreNMS\n\n\nInstall Varnish 4.0 RPM\n\n\n\n\nEnable the Varnish CentOS 7 repo and install\n\n\n\n\nrpm --nosignature -i https://repo.varnish-cache.org/redhat/varnish-4.0.el7.rpm\nyum install varnish\n\n\n\n\nBy default Varnish listens for HTTP requests on port 6081.\n\n\n\n\nTemporarily add a firewalld rule for testing Varnish.\n\n\n\n\nfirewall-cmd --zone=public --add-port=6081/tcp\n\n\n\n\nTest Varnish\n\n\n\n\nStart Varnish\n\n\n\n\nsystemctl start varnish\n\n\n\n\nUsing a web browser navigate to \n:6081 or 127.0.0.1:6081. You should see a Varnish error message, this shows that Varnish is working. Example error message:\n\n\nError 503 Backend fetch failed\n\nBackend fetch failed\n\nGuru Meditation:\n\nXID: 3\n\nVarnish cache server\n\n\n\n\n\nEdit Varnish Parameters\n\n\nNow we need to configure Varnish to listen to HTTP requests on port 80 and\nrelay those requests to the Apache HTTP server on port 8080 (see block diagram).\n\n\n\n\nStop Varnish.\n\n\n\n\nsystemctl stop varnish\n\n\n\n\n\n\nCreate a back-up of varnish.params just in case you make a mistake.\n\n\n\n\ncp /etc/varnish/varnish.params /etc/varnish/varnish.params.bak\n\n\n\n\n\n\nEdit the varnish.params config.\n\n\n\n\nvim /etc/varnish/varnish.params\n\n\n\n\nSet the VCL location, IP address, port, and cache location and size. \nmalloc\n sets the cache location to RAM, and \n512M\n sets the cache size to 512MB.\n\n\nVARNISH_LISTEN_ADDRESS=192.168.1.10\nVARNISH_LISTEN_PORT=80\nVARNISH_VCL_CONF=/etc/varnish/librenms.vcl\nVARNISH_STORAGE=\nmalloc,512M\n\n\n\n\n\nExample varnish.params:\n\n\n# Set this to 1 to make systemd reload try to switch vcl without restart.\nRELOAD_VCL=1\n\n# Main configuration file. You probably want to change it.\nVARNISH_VCL_CONF=/etc/varnish/librenms.vcl\n\n# Default address and port to bind to. Blank address means all IPv4\n# and IPv6 interfaces, otherwise specify a host name, an IPv4 dotted\n# quad, or an IPv6 address in brackets.\nVARNISH_LISTEN_ADDRESS=192.168.1.10\nVARNISH_LISTEN_PORT=80\n\n# Admin interface listen address and port\nVARNISH_ADMIN_LISTEN_ADDRESS=127.0.0.1\nVARNISH_ADMIN_LISTEN_PORT=6082\n\n# Shared secret file for admin interface\nVARNISH_SECRET_FILE=/etc/varnish/secret\n\n# Backend storage specification, see Storage Types in the varnishd(5)\n# man page for details.\nVARNISH_STORAGE=\nmalloc,512M\n\n\n# Default TTL used when the backend does not specify one\nVARNISH_TTL=120\n\n# User and group for the varnishd worker processes\nVARNISH_USER=varnish\nVARNISH_GROUP=varnish\n\n# Other options, see the man page varnishd(1)\nDAEMON_OPTS=\n-p thread_pool_min=5 -p thread_pool_max=500 -p thread_pool_timeout=300\n\n\n\n\n\nConfigure Apache for Varnish\n\n\nEdit librenms.conf and modify the Apache Virtual Host listening port.\n\n\n\n\nModify:\nVirtualHost *:80\n to: \nVirtualHost *:8080\n\n\n\n\nvim /etc/httpd/conf.d/librenms.conf\n\n\n\n\nVarnish can not share a port with Apache. Change the Apache listening port to 8080.\n\n\n\n\nModify:\nListen 80\n to:\nListen 8080\n\n\n\n\nvim /etc/httpd/conf/httpd.conf\n\n\n\n\n\n\nCreate the librenms.vcl\n\n\n\n\ncd /etc/varnish\ntouch librenms.vcl\n\n\n\n\n\n\nSet ownership and permissions for Varnish files.\n\n\n\n\nchown varnish:varnish default.vcl varnish.params secret\nchmod 644 default.vcl varnish.params secret\n\n\n\n\nEdit the librenms.vcl.\n\n\nvim librenms.vcl\n\n\n\n\nPaste example VCL config, read config comments for more information.\n\n\n#\n# This is an example VCL file for Varnish.\n#\n# It does not do anything by default, delegating control to the\n# builtin VCL. The builtin VCL is called when there is no explicit\n# return statement.\n#\n# See the VCL chapters in the Users Guide at https://www.varnish-cache.org/docs/\n# and http://varnish-cache.org/trac/wiki/VCLExamples for more examples.\n\n# Marker to tell the VCL compiler that this VCL has been adapted to the\n# new 4.0 format.\nvcl 4.0;\n\n# Default backend definition. Set this to point to your Apache server.\nbackend librenms {\n    .host = \n127.0.0.1\n;\n    .port = \n8080\n;\n}\n\n# In this example our objective is to cache static content with Varnish and temporarily\n# cache dynamic content in the client web browser.\n\nsub vcl_recv {\n    # HTTP requests from client web browser.\n    # Here we remove any cookie HTTP requests for the 'librenms.domain.net' host\n    # containing the matching file extensions. We don't have to match by host if you\n    # only have LibreNMS running on Apache.\n    # If the cookies are not removed from the HTTP request then Varnish will not cache\n    # the files. 'else' function is set to 'pass', or don't cache anything that doesn't\n    # match.\n\n    if (req.http.host ~ \n^librenms.domain.net\n) {\n        set req.backend_hint = librenms;\n        if (req.url ~ \n\\.(png|gif|jpg|jpeg|ico|pdf|js|css|svg|eot|otf|woff|woff2|ttf)$\n) {\n            unset req.http.Cookie;\n        }\n\n        else{\n            return(pass);\n        }\n    }\n}\n\nsub vcl_backend_response {\n    # 'sub vcl_backend_response' is the same function as 'sub vcl_fetch' in Varnish 3, however,\n    # the syntax is slightly different\n    # This function happens after we read the response headers from the backend (Apache).\n    # First function 'if (bereq.url ~ \n\\' removes cookies from the Apache HTTP responses\n    # that match the file extensions that are between the quotes, and cache the files for 24 hours.\n    # This assumes you update LibreNMS once a day, otherwise restart Varnish to clear cache.\n    # Second function 'if (bereq.url ~ \n^/' removes the Pragma no-cache statements and sets the age\n    # of how long the client browser will cache the matching urls.\n    # LibreNMS graphs are updated every 300 seconds, 'max-age=300' is set to match this behavior.\n    # We could cache these URLs in Varnish but it would add to the complexity of the config.\n\n    if (bereq.http.host ~ \n^librenms.domain.net\n) {\n        if (bereq.url ~ \n\\.(png|gif|jpg|jpeg|ico|pdf|js|css|svg|eot|otf|woff|woff2|ttf)$\n) {\n            unset beresp.http.Set-cookie;\n            set beresp.ttl = 24h;\n        }\n\n        if (bereq.url ~ \n^/graph.php\n || \n^/device/\n || \n^/iftype/\n || \n^/customers/\n || \n^/health/\n || \n^/apps/\n || \n^/(plugin)$\n || \n^/(alert)$\n || \n^/eventlog/\n || \n^/graphs/\n || \n^/ports/\n ) {\n            unset beresp.http.Pragma;\n            set beresp.http.Cache-Control = \nmax-age=300\n;\n        }\n    }\n}\n\nsub vcl_deliver {\n    # Happens when we have all the pieces we need, and are about to send the\n    # response to the client.\n    # You can do accounting or modifying the final object here.\n\n    return (deliver);\n}\n\n\n\n\n\n\nReload rules to remove the temporary port rule we added earlier.\n\n\n\n\nfirewall-cmd --reload\n\n\n\n\nVarnish caching does not take effect immediately.  You will need to browse the LibreNMS website to build up the cache.\n\n\nUse the command \nvarnishstat\n to monitor Varnish caching.  Over time you should see 'MAIN.cache_hit' and 'MAIN.client_req' increase.  With the above VCL the hit to request ratio is approximately 84%.\n\n\n\n\n\n\nSession based VCL (coming soon)\n\n\n\n\n\n\nTesting and debugging VCL (coming soon)", 
            "title": "Varnish Installation Guide #"
        }, 
        {
            "location": "/Extensions/Varnish/#varnish-installation-guide", 
            "text": "This document explains how to install Varnish Reverse Proxy for LibreNMS.  Varnish is caching software that sits logically between an HTTP client and an HTTP server. Varnish caches HTTP responses from the HTTP server. If an HTTP request can not be responded to by the Varnish cache it directs the request to the HTTP Server. This type of HTTP caching is called a reverse proxy server. Caching your HTTP server can decrease page load times significantly.", 
            "title": "Varnish Installation Guide"
        }, 
        {
            "location": "/Extensions/Varnish/#simplified-block-diagram-of-an-apache-http-server-with-varnish-40-reverse-proxy", 
            "text": "", 
            "title": "Simplified block diagram of an Apache HTTP server with Varnish 4.0 Reverse Proxy."
        }, 
        {
            "location": "/Extensions/Varnish/#centos-7-varnish-installation", 
            "text": "In this example we will assume your Apache 2.4.X HTTP server is working and\nconfigured to process HTTP requests on port 80.  If not, please see Installing LibreNMS", 
            "title": "CentOS 7 Varnish Installation"
        }, 
        {
            "location": "/Extensions/Varnish/#install-varnish-40-rpm", 
            "text": "Enable the Varnish CentOS 7 repo and install   rpm --nosignature -i https://repo.varnish-cache.org/redhat/varnish-4.0.el7.rpm\nyum install varnish  By default Varnish listens for HTTP requests on port 6081.   Temporarily add a firewalld rule for testing Varnish.   firewall-cmd --zone=public --add-port=6081/tcp", 
            "title": "Install Varnish 4.0 RPM"
        }, 
        {
            "location": "/Extensions/Varnish/#test-varnish", 
            "text": "Start Varnish   systemctl start varnish  Using a web browser navigate to  :6081 or 127.0.0.1:6081. You should see a Varnish error message, this shows that Varnish is working. Example error message:  Error 503 Backend fetch failed\n\nBackend fetch failed\n\nGuru Meditation:\n\nXID: 3\n\nVarnish cache server", 
            "title": "Test Varnish"
        }, 
        {
            "location": "/Extensions/Varnish/#edit-varnish-parameters", 
            "text": "Now we need to configure Varnish to listen to HTTP requests on port 80 and\nrelay those requests to the Apache HTTP server on port 8080 (see block diagram).   Stop Varnish.   systemctl stop varnish   Create a back-up of varnish.params just in case you make a mistake.   cp /etc/varnish/varnish.params /etc/varnish/varnish.params.bak   Edit the varnish.params config.   vim /etc/varnish/varnish.params  Set the VCL location, IP address, port, and cache location and size.  malloc  sets the cache location to RAM, and  512M  sets the cache size to 512MB.  VARNISH_LISTEN_ADDRESS=192.168.1.10\nVARNISH_LISTEN_PORT=80\nVARNISH_VCL_CONF=/etc/varnish/librenms.vcl\nVARNISH_STORAGE= malloc,512M   Example varnish.params:  # Set this to 1 to make systemd reload try to switch vcl without restart.\nRELOAD_VCL=1\n\n# Main configuration file. You probably want to change it.\nVARNISH_VCL_CONF=/etc/varnish/librenms.vcl\n\n# Default address and port to bind to. Blank address means all IPv4\n# and IPv6 interfaces, otherwise specify a host name, an IPv4 dotted\n# quad, or an IPv6 address in brackets.\nVARNISH_LISTEN_ADDRESS=192.168.1.10\nVARNISH_LISTEN_PORT=80\n\n# Admin interface listen address and port\nVARNISH_ADMIN_LISTEN_ADDRESS=127.0.0.1\nVARNISH_ADMIN_LISTEN_PORT=6082\n\n# Shared secret file for admin interface\nVARNISH_SECRET_FILE=/etc/varnish/secret\n\n# Backend storage specification, see Storage Types in the varnishd(5)\n# man page for details.\nVARNISH_STORAGE= malloc,512M \n\n# Default TTL used when the backend does not specify one\nVARNISH_TTL=120\n\n# User and group for the varnishd worker processes\nVARNISH_USER=varnish\nVARNISH_GROUP=varnish\n\n# Other options, see the man page varnishd(1)\nDAEMON_OPTS= -p thread_pool_min=5 -p thread_pool_max=500 -p thread_pool_timeout=300", 
            "title": "Edit Varnish Parameters"
        }, 
        {
            "location": "/Extensions/Varnish/#configure-apache-for-varnish", 
            "text": "Edit librenms.conf and modify the Apache Virtual Host listening port.   Modify: VirtualHost *:80  to:  VirtualHost *:8080   vim /etc/httpd/conf.d/librenms.conf  Varnish can not share a port with Apache. Change the Apache listening port to 8080.   Modify: Listen 80  to: Listen 8080   vim /etc/httpd/conf/httpd.conf   Create the librenms.vcl   cd /etc/varnish\ntouch librenms.vcl   Set ownership and permissions for Varnish files.   chown varnish:varnish default.vcl varnish.params secret\nchmod 644 default.vcl varnish.params secret  Edit the librenms.vcl.  vim librenms.vcl  Paste example VCL config, read config comments for more information.  #\n# This is an example VCL file for Varnish.\n#\n# It does not do anything by default, delegating control to the\n# builtin VCL. The builtin VCL is called when there is no explicit\n# return statement.\n#\n# See the VCL chapters in the Users Guide at https://www.varnish-cache.org/docs/\n# and http://varnish-cache.org/trac/wiki/VCLExamples for more examples.\n\n# Marker to tell the VCL compiler that this VCL has been adapted to the\n# new 4.0 format.\nvcl 4.0;\n\n# Default backend definition. Set this to point to your Apache server.\nbackend librenms {\n    .host =  127.0.0.1 ;\n    .port =  8080 ;\n}\n\n# In this example our objective is to cache static content with Varnish and temporarily\n# cache dynamic content in the client web browser.\n\nsub vcl_recv {\n    # HTTP requests from client web browser.\n    # Here we remove any cookie HTTP requests for the 'librenms.domain.net' host\n    # containing the matching file extensions. We don't have to match by host if you\n    # only have LibreNMS running on Apache.\n    # If the cookies are not removed from the HTTP request then Varnish will not cache\n    # the files. 'else' function is set to 'pass', or don't cache anything that doesn't\n    # match.\n\n    if (req.http.host ~  ^librenms.domain.net ) {\n        set req.backend_hint = librenms;\n        if (req.url ~  \\.(png|gif|jpg|jpeg|ico|pdf|js|css|svg|eot|otf|woff|woff2|ttf)$ ) {\n            unset req.http.Cookie;\n        }\n\n        else{\n            return(pass);\n        }\n    }\n}\n\nsub vcl_backend_response {\n    # 'sub vcl_backend_response' is the same function as 'sub vcl_fetch' in Varnish 3, however,\n    # the syntax is slightly different\n    # This function happens after we read the response headers from the backend (Apache).\n    # First function 'if (bereq.url ~  \\' removes cookies from the Apache HTTP responses\n    # that match the file extensions that are between the quotes, and cache the files for 24 hours.\n    # This assumes you update LibreNMS once a day, otherwise restart Varnish to clear cache.\n    # Second function 'if (bereq.url ~  ^/' removes the Pragma no-cache statements and sets the age\n    # of how long the client browser will cache the matching urls.\n    # LibreNMS graphs are updated every 300 seconds, 'max-age=300' is set to match this behavior.\n    # We could cache these URLs in Varnish but it would add to the complexity of the config.\n\n    if (bereq.http.host ~  ^librenms.domain.net ) {\n        if (bereq.url ~  \\.(png|gif|jpg|jpeg|ico|pdf|js|css|svg|eot|otf|woff|woff2|ttf)$ ) {\n            unset beresp.http.Set-cookie;\n            set beresp.ttl = 24h;\n        }\n\n        if (bereq.url ~  ^/graph.php  ||  ^/device/  ||  ^/iftype/  ||  ^/customers/  ||  ^/health/  ||  ^/apps/  ||  ^/(plugin)$  ||  ^/(alert)$  ||  ^/eventlog/  ||  ^/graphs/  ||  ^/ports/  ) {\n            unset beresp.http.Pragma;\n            set beresp.http.Cache-Control =  max-age=300 ;\n        }\n    }\n}\n\nsub vcl_deliver {\n    # Happens when we have all the pieces we need, and are about to send the\n    # response to the client.\n    # You can do accounting or modifying the final object here.\n\n    return (deliver);\n}   Reload rules to remove the temporary port rule we added earlier.   firewall-cmd --reload  Varnish caching does not take effect immediately.  You will need to browse the LibreNMS website to build up the cache.  Use the command  varnishstat  to monitor Varnish caching.  Over time you should see 'MAIN.cache_hit' and 'MAIN.client_req' increase.  With the above VCL the hit to request ratio is approximately 84%.    Session based VCL (coming soon)    Testing and debugging VCL (coming soon)", 
            "title": "Configure Apache for Varnish"
        }, 
        {
            "location": "/Extensions/Poller-Service/", 
            "text": "Poller Service\n\n\nWARNING: THIS IS HIGHLY EXPERIMENTAL AND MAY NOT WORK\n\n\nThe Poller service is an alternative to polling and discovery cron jobs and provides support for distributed polling without memcache. It is multi-threaded and runs continuously discovering and polling devices with the oldest data attempting to honor the polling frequency configured in \nconfig.php\n. This service replaces all the required cron jobs except for \n/opt/librenms/daily.sh\n and \n/opt/librenms/alerts.php\n.\n\n\nConfigure the maximum number of threads for the service in \n$config['poller_service_workers']\n. Configure the minimum desired polling frequency in \n$config['poller_service_poll_frequency']\n and the minimum desired discovery frequency in \n$config['poller_service_discover_frequency']\n. The service will not poll or discover devices which have data newer than this this configured age in seconds. Configure how frequently the service will attempt to poll devices which are down in \n$config['poller_service_down_retry']\n. If you have enough pollers that the worker threads run out of work, the service will query looking for devices every \n$config['poller_service_retry_query']\n seconds.\n\n\nThe poller service is designed to gracefully degrade. If not all devices can be polled within the configured frequency, the service will continuously poll devices refreshing as frequently as possible using the configured number of threads.\n\n\nThe service logs to syslog. A loglevel of INFO will print status updates every 5 minutes. Loglevel of DEBUG will print updates on every device as it is scanned.\n\n\nConfiguration\n\n\n// Poller-Service settings\n$config['poller_service_loglevel']                       = \nINFO\n;\n$config['poller_service_workers']                        = 16;\n$config['poller_service_poll_frequency']                 = 300;\n$config['poller_service_discover_frequency']             = 21600;\n$config['poller_service_down_retry']                     = 60;\n$config['poller_service_retry_query']                    = 1;\n$config['poller_service_single_connection']              = false;\n\n\n\n\nDistributed Polling\n\n\nDistributed polling is possible, and uses the same configuration options as are described for traditional distributed polling, except that the memcached options are not necessary. The database must be accessible from the distributed pollers, and properly configured. Remote access to the RRD directory must also be configured as described in the Distributed Poller documentation. Memcache is not required. Concurrency is managed using mysql GET_LOCK to ensure that devices are only being polled by one device at at time. The poller service is compatible with poller groups.\n\n\nMulti-Master MySQL considerations\n\n\nBecause locks are not replicated in Multi-Master MySQL configurations, if you are using such a configuration, you will need to make sure that all pollers are using the same MySQL server.\n\n\nSingle Connection\n\n\nIf you are running MariaDB 10.2 or newer, you can tell poller-service to use a single mysql connection for managing locks by setting \n$config['poller_service_single_connection']\n to \ntrue\n. \nDO NOT\n configure this for any version of MariaDB less than 10.2 or any version of MySQL.\n\n\nService Installation\n\n\nUpstart\n\n\nAn upstart configuration file can be found in \nscripts/librenms-poller-service.conf\n. To install run \ncp /opt/librenms/scripts/librenms-poller-service.conf /etc/init/librenms-poller-service.conf\n. The service will start on boot and can be started manually by running \nstart librenms-poller-service\n. If you receive an error that the service does not exist, run \ninitctl reload-configuration\n. The service is configured to run as the user \nlibrenms\n and will fail if that user does not exist.\n\n\nLSB\n\n\nAn LSB init script can be found in \nscripts/librenms-poller-service.init\n. To install run \ncp /opt/librenms/scripts/librenms-poller-service.init /etc/init.d/librenms-poller-service \n update-rc.d librenms-poller-service defaults\n.\n\n\nsystemd\n\n\nA systemd unit file can be found in \nscripts/librenms-poller-service.service\n. To install run \ncp /opt/librenms/scripts/librenms-poller-service.service /etc/systemd/system/librenms-poller-service.service \n systemctl enable --now librenms-poller-service.service\n.", 
            "title": "Poller Service (BETA)"
        }, 
        {
            "location": "/Extensions/Poller-Service/#poller-service", 
            "text": "", 
            "title": "Poller Service"
        }, 
        {
            "location": "/Extensions/Poller-Service/#warning-this-is-highly-experimental-and-may-not-work", 
            "text": "The Poller service is an alternative to polling and discovery cron jobs and provides support for distributed polling without memcache. It is multi-threaded and runs continuously discovering and polling devices with the oldest data attempting to honor the polling frequency configured in  config.php . This service replaces all the required cron jobs except for  /opt/librenms/daily.sh  and  /opt/librenms/alerts.php .  Configure the maximum number of threads for the service in  $config['poller_service_workers'] . Configure the minimum desired polling frequency in  $config['poller_service_poll_frequency']  and the minimum desired discovery frequency in  $config['poller_service_discover_frequency'] . The service will not poll or discover devices which have data newer than this this configured age in seconds. Configure how frequently the service will attempt to poll devices which are down in  $config['poller_service_down_retry'] . If you have enough pollers that the worker threads run out of work, the service will query looking for devices every  $config['poller_service_retry_query']  seconds.  The poller service is designed to gracefully degrade. If not all devices can be polled within the configured frequency, the service will continuously poll devices refreshing as frequently as possible using the configured number of threads.  The service logs to syslog. A loglevel of INFO will print status updates every 5 minutes. Loglevel of DEBUG will print updates on every device as it is scanned.", 
            "title": "WARNING: THIS IS HIGHLY EXPERIMENTAL AND MAY NOT WORK"
        }, 
        {
            "location": "/Extensions/Poller-Service/#configuration", 
            "text": "// Poller-Service settings\n$config['poller_service_loglevel']                       =  INFO ;\n$config['poller_service_workers']                        = 16;\n$config['poller_service_poll_frequency']                 = 300;\n$config['poller_service_discover_frequency']             = 21600;\n$config['poller_service_down_retry']                     = 60;\n$config['poller_service_retry_query']                    = 1;\n$config['poller_service_single_connection']              = false;", 
            "title": "Configuration"
        }, 
        {
            "location": "/Extensions/Poller-Service/#distributed-polling", 
            "text": "Distributed polling is possible, and uses the same configuration options as are described for traditional distributed polling, except that the memcached options are not necessary. The database must be accessible from the distributed pollers, and properly configured. Remote access to the RRD directory must also be configured as described in the Distributed Poller documentation. Memcache is not required. Concurrency is managed using mysql GET_LOCK to ensure that devices are only being polled by one device at at time. The poller service is compatible with poller groups.", 
            "title": "Distributed Polling"
        }, 
        {
            "location": "/Extensions/Poller-Service/#multi-master-mysql-considerations", 
            "text": "Because locks are not replicated in Multi-Master MySQL configurations, if you are using such a configuration, you will need to make sure that all pollers are using the same MySQL server.", 
            "title": "Multi-Master MySQL considerations"
        }, 
        {
            "location": "/Extensions/Poller-Service/#single-connection", 
            "text": "If you are running MariaDB 10.2 or newer, you can tell poller-service to use a single mysql connection for managing locks by setting  $config['poller_service_single_connection']  to  true .  DO NOT  configure this for any version of MariaDB less than 10.2 or any version of MySQL.", 
            "title": "Single Connection"
        }, 
        {
            "location": "/Extensions/Poller-Service/#service-installation", 
            "text": "", 
            "title": "Service Installation"
        }, 
        {
            "location": "/Extensions/Poller-Service/#upstart", 
            "text": "An upstart configuration file can be found in  scripts/librenms-poller-service.conf . To install run  cp /opt/librenms/scripts/librenms-poller-service.conf /etc/init/librenms-poller-service.conf . The service will start on boot and can be started manually by running  start librenms-poller-service . If you receive an error that the service does not exist, run  initctl reload-configuration . The service is configured to run as the user  librenms  and will fail if that user does not exist.", 
            "title": "Upstart"
        }, 
        {
            "location": "/Extensions/Poller-Service/#lsb", 
            "text": "An LSB init script can be found in  scripts/librenms-poller-service.init . To install run  cp /opt/librenms/scripts/librenms-poller-service.init /etc/init.d/librenms-poller-service   update-rc.d librenms-poller-service defaults .", 
            "title": "LSB"
        }, 
        {
            "location": "/Extensions/Poller-Service/#systemd", 
            "text": "A systemd unit file can be found in  scripts/librenms-poller-service.service . To install run  cp /opt/librenms/scripts/librenms-poller-service.service /etc/systemd/system/librenms-poller-service.service   systemctl enable --now librenms-poller-service.service .", 
            "title": "systemd"
        }, 
        {
            "location": "/Extensions/RRDTune/", 
            "text": "RRDTune?\n\n\nWhen we create rrd files for ports, we currently do so with a max value of 12500000000 (100G). Because of this if a device sends us bad data back then it can appear as though\na 100M port is doing 40G+ which is impossible. To counter this you can enable the rrdtool tune option which will fix the max value to the interfaces physical speed (minimum of 10M).\n\n\nTo enable this you can do so in three ways!\n\n\n\n\nGlobally under Global Settings -\n External Settings -\n RRDTool Setup\n\n\nFor the actual device, Edit Device -\n Misc\n\n\nFor each port, Edit Device -\n Port Settings\n\n\n\n\nNow when a port interface speed changes (this can happen because of a physical change or just because the device has misreported) the max value is set. If you don't want to wait until\na port speed changes then you can run the included script:\n\n\n./scripts/tune_port.php -h \nhostname\n -p \nifName\n\n\nWildcards are supported using *, i.e:\n\n\n./scripts/tune_port.php -h local* -p eth*\n\n\nThis script will then perform the rrdtool tune on each port found using the provided ifSpeed for that port.\n\n\nRun \n./scripts/tune_port.php\n to see help page.", 
            "title": "RRDTune?"
        }, 
        {
            "location": "/Extensions/RRDTune/#rrdtune", 
            "text": "When we create rrd files for ports, we currently do so with a max value of 12500000000 (100G). Because of this if a device sends us bad data back then it can appear as though\na 100M port is doing 40G+ which is impossible. To counter this you can enable the rrdtool tune option which will fix the max value to the interfaces physical speed (minimum of 10M).  To enable this you can do so in three ways!   Globally under Global Settings -  External Settings -  RRDTool Setup  For the actual device, Edit Device -  Misc  For each port, Edit Device -  Port Settings   Now when a port interface speed changes (this can happen because of a physical change or just because the device has misreported) the max value is set. If you don't want to wait until\na port speed changes then you can run the included script:  ./scripts/tune_port.php -h  hostname  -p  ifName  Wildcards are supported using *, i.e:  ./scripts/tune_port.php -h local* -p eth*  This script will then perform the rrdtool tune on each port found using the provided ifSpeed for that port.  Run  ./scripts/tune_port.php  to see help page.", 
            "title": "RRDTune?"
        }, 
        {
            "location": "/Extensions/IRC-Bot/", 
            "text": "About\n\n\nConfiguration \n Defaults\n\n\nIRC-Commands\n\n\n\n\n\n\nExamples\n\n\nServer examples:\n\n\nChannel notations:\n\n\nHostmask authentication:\n\n\n\n\n\n\nExtensions?!\n\n\nSystemd start up script\n\n\n\n\n\n\nAbout\n\n\nLibreNMS has an easy to use IRC-Interface for basic tasks like viewing last log-entry, current device/port status and such.\n\n\nBy default the IRC-Bot will not start when executed and will return an error until at least \n$config['irc_host']\n and \n$config['irc_port']\n has been specified inside \nconfig.php\n. (To start the IRC-Bot run ./irc.php )\n\n\nIf no channel has been specified with \n$config['irc_chan']\n, \n##librenms\n will be used.\nThe default Nick for the bot is \nLibreNMS\n.\n\n\nThe Bot will reply the same way it's being called. If you send it the commands via Query, it will respond in the Query. If you send the commands via a Channel, then it will respond in the Channel.\n\n\nConfiguration \n Defaults\n\n\n\n\n\n\n\n\nOption\n\n\nDefault-Value\n\n\nNotes\n\n\n\n\n\n\n\n\n\n\n$config['irc_alert']\n\n\nfalse\n\n\nOptional; Enables Alerting-Socket. \nEXPERIMENTAL\n\n\n\n\n\n\n$config['irc_alert_chan']\n\n\nfalse\n\n\nOptional; Multiple channels can be defined as Array or delimited with \n,\n. \nEXPERIMENTAL\n\n\n\n\n\n\n$config['irc_alert_utf8']\n\n\nfalse\n\n\nOptional; Enables use of strikethrough in alerts via UTF-8 encoded characters. Might cause trouble for some clients.\n\n\n\n\n\n\n$config['irc_authtime']\n\n\n3\n\n\nOptional; Defines how long in Hours an auth-session is valid.\n\n\n\n\n\n\n$config['irc_chan']\n\n\n##librenms\n\n\nOptional; Multiple channels can be defined as Array or delimited with \n,\n. Passwords are defined after a \nspace-character\n.\n\n\n\n\n\n\n$config['irc_debug']\n\n\nfalse\n\n\nOptional; Enables debug output (Wall of text)\n\n\n\n\n\n\n$config['irc_external']\n\n\n\n\nOptional; Array or \n,\n delimited string with commands to include from \nincludes/ircbot/*.inc.php\n\n\n\n\n\n\n$config['irc_host']\n\n\n\n\nRequired; Domain or IP to connect. If it's an IPv6 Address, embed it in \n[]\n.  (Example: \n[::1]\n)\n\n\n\n\n\n\n$config['irc_maxretry']\n\n\n5\n\n\nOptional; How many connection attempts should be made before giving up\n\n\n\n\n\n\n$config['irc_nick']\n\n\nLibreNMS\n\n\nOptional;\n\n\n\n\n\n\n$config['irc_pass']\n\n\n\n\nOptional; This sends the IRC-PASS Sequence to IRC-Servers that require Password on Connect\n\n\n\n\n\n\n$config['irc_port']\n\n\n6667\n\n\nRequired; To enable SSL append a \n+\n before the Port. (Example: \n+6697\n)\n\n\n\n\n\n\n$config['irc_ctcp']\n\n\nfalse\n\n\nOptional; Enable/disable ctcp-replies from the bot (currently VERSION, PING and TIME).\n\n\n\n\n\n\n$config['irc_ctcp_version']\n\n\nLibreNMS IRCbot. https://www.librenms.org/\n\n\nOptional: Reply-string to CTCP VERSION requests\n\n\n\n\n\n\n$config['irc_auth']\n\n\n\n\nOptional: Array of hostmasks that are automatically authenticated.\n\n\n\n\n\n\n\n\nIRC-Commands\n\n\n\n\n\n\n\n\nCommand\n\n\nDescription\n\n\n\n\n\n\n\n\n\n\n.auth \nUser/Token\n\n\nIf \nuser\n: Request an Auth-Token. If \ntoken\n: Authenticate session.\n\n\n\n\n\n\n.device \nhostname\n\n\nPrints basic information about given \nhostname\n.\n\n\n\n\n\n\n.down\n\n\nList hostnames that are down, if any.\n\n\n\n\n\n\n.help\n\n\nList available commands.\n\n\n\n\n\n\n.join \nchannel\n\n\nJoins \nchannel\n if user has admin-level.\n\n\n\n\n\n\n.listdevices\n\n\nLists the hostnames of all known devices.\n\n\n\n\n\n\n.log [\nN\n]\n\n\nPrints \nN\n lines or last line of the eventlog.\n\n\n\n\n\n\n.port \nhostname\n \nifname\n\n\nPrints Port-related information from \nifname\n on given \nhostname\n.\n\n\n\n\n\n\n.quit\n\n\nDisconnect from IRC and exit.\n\n\n\n\n\n\n.reload\n\n\nReload configuration.\n\n\n\n\n\n\n.status \ntype\n\n\nPrints status information for given \ntype\n. Type can be \ndevices\n, \nservices\n, \nports\n. Shorthands are: \ndev\n,\nsrv\n,\nprt\n\n\n\n\n\n\n.version\n\n\nPrints \n$this-\nconfig['project_name_version']\n.\n\n\n\n\n\n\n\n\n( __/!_\n All commands are case-_insensitive\n but their arguments are case-\nsensitive\n)\n\n\nExamples\n\n\nServer examples:\n\n\nUnencrypted Connection to \nirc.freenode.org\n:\n\n\n   ...\n   $config['irc_host'] = \nirc.freenode.org\n;\n   $config['irc_port'] = 6667;\n   ...\n\n\n\n\nSSL-Encrypted Connection to \nirc.freenode.org\n:\n\n\n   ...\n   $config['irc_host'] = \nirc.freenode.org\n;\n   $config['irc_port'] = \n+6697\n;\n   ...\n\n\n\n\nSSL-Encrypted Connection to \nirc.localdomain\n with Server-Password and odd port:\n\n\n   ...\n   $config['irc_host'] = \nirc.localdomain\n;\n   $config['irc_port'] = \n+12345\n;\n   $config['irc_pass'] = \nSuper Secret Passphrase123\n;\n   ...\n\n\n\n\nChannel notations:\n\n\nChannels can be defined using Array-Notation like:\n\n\n   ...\n   $config['irc_chan'][] = \n#librenms\n;\n   $config['irc_chan'][] = \n#otherchan\n;\n   $config['irc_chan'][] = \n#noc\n;\n   ...\n\n\n\n\nOr using a single string using \n,\n as delimiter between various channels:\n\n\n   ...\n   $config['irc_chan'] = \n#librenms,#otherchan,#noc\n;\n   ...\n\n\n\n\nHostmask authentication:\n\n\n   ...\n   $config['irc_auth']['admin'][] = \n*!root@nms.host.invalid\n;\n   $config['irc_auth']['admin'][] = \n*!*peter@peters.computer.invalid\n;\n   $config['irc_auth']['john][] = \njohn!doe@login.server.invalid\n;\n   ...\n\n\n\n\nAny client matching one of the first two hostmasks will automatically be authenticated as the \"admin\" user in LibreNMS, and clients matching the last line will be authenticated as the user \"john\" in LibreNMS, without using .auth and a waiting for a valid token.\n\n\nExtensions?!\n\n\nThe bot is coded in a unified way.\nThis makes writing extensions by far less painful.\nSimply add your \ncommand\n to the \n$config['irc_external']\n directive and create a file called \nincludes/ircbot/command.inc.php\n containing your code.\nThe string behind the call of \n.command\n is passed as \n$params\n.\nThe user who requested something is accessible via \n$this-\nuser\n.\nSend your reply/ies via \n$this-\nrespond($string)\n.\n\n\nA more detailed documentation of the functions and variables available for extensions can be found at \nIRC-Bot Extensions\n;\n\n\nConfused? Here an Echo-Example:\n\n\nFile: config.php\n\n\n   ...\n   $config['irc_external'][] = \necho\n;\n   ...\n\n\n\n\nFile: includes/ircbot/echo.inc.php\n\n\n   //Prefix everything with `You said: '...'`  and return what was sent.\n   if( $this-\nuser['name'] != \nroot\n ) {\n      return $this-\nrespond(\nYou said: '\n.$params.\n'\n);\n   } else {\n      return $this-\nrespond(\nroot shouldn't be online so late!\n);\n   }\n\n\n\n\nSystemd start up script\n\n\nBasic systemd start up script to be placed in /etc/systemd/system/ to start irc service at boot. \n\n\nlibrenms-irc.service script is located at /opt/librenms/misc/\n\n\nOnce copied to /etc/systemd/system/ you must run the following commands:\n\n\na) chmod 664 /etc/systemd/system/librenms-irc.service\n\n\nb) systemctl daemon-reload\n\n\nc) systemctl enable librenms-irc.service\n\n\nd) systemctl start librenms-irc.service\n\n\nIt can be stopped or started just like any other systemd script such as systemctl start librenms-irc.service", 
            "title": "IRC Bot"
        }, 
        {
            "location": "/Extensions/IRC-Bot/#about", 
            "text": "LibreNMS has an easy to use IRC-Interface for basic tasks like viewing last log-entry, current device/port status and such.  By default the IRC-Bot will not start when executed and will return an error until at least  $config['irc_host']  and  $config['irc_port']  has been specified inside  config.php . (To start the IRC-Bot run ./irc.php )  If no channel has been specified with  $config['irc_chan'] ,  ##librenms  will be used.\nThe default Nick for the bot is  LibreNMS .  The Bot will reply the same way it's being called. If you send it the commands via Query, it will respond in the Query. If you send the commands via a Channel, then it will respond in the Channel.", 
            "title": "About"
        }, 
        {
            "location": "/Extensions/IRC-Bot/#configuration-defaults", 
            "text": "Option  Default-Value  Notes      $config['irc_alert']  false  Optional; Enables Alerting-Socket.  EXPERIMENTAL    $config['irc_alert_chan']  false  Optional; Multiple channels can be defined as Array or delimited with  , .  EXPERIMENTAL    $config['irc_alert_utf8']  false  Optional; Enables use of strikethrough in alerts via UTF-8 encoded characters. Might cause trouble for some clients.    $config['irc_authtime']  3  Optional; Defines how long in Hours an auth-session is valid.    $config['irc_chan']  ##librenms  Optional; Multiple channels can be defined as Array or delimited with  , . Passwords are defined after a  space-character .    $config['irc_debug']  false  Optional; Enables debug output (Wall of text)    $config['irc_external']   Optional; Array or  ,  delimited string with commands to include from  includes/ircbot/*.inc.php    $config['irc_host']   Required; Domain or IP to connect. If it's an IPv6 Address, embed it in  [] .  (Example:  [::1] )    $config['irc_maxretry']  5  Optional; How many connection attempts should be made before giving up    $config['irc_nick']  LibreNMS  Optional;    $config['irc_pass']   Optional; This sends the IRC-PASS Sequence to IRC-Servers that require Password on Connect    $config['irc_port']  6667  Required; To enable SSL append a  +  before the Port. (Example:  +6697 )    $config['irc_ctcp']  false  Optional; Enable/disable ctcp-replies from the bot (currently VERSION, PING and TIME).    $config['irc_ctcp_version']  LibreNMS IRCbot. https://www.librenms.org/  Optional: Reply-string to CTCP VERSION requests    $config['irc_auth']   Optional: Array of hostmasks that are automatically authenticated.", 
            "title": "Configuration &amp; Defaults"
        }, 
        {
            "location": "/Extensions/IRC-Bot/#irc-commands", 
            "text": "Command  Description      .auth  User/Token  If  user : Request an Auth-Token. If  token : Authenticate session.    .device  hostname  Prints basic information about given  hostname .    .down  List hostnames that are down, if any.    .help  List available commands.    .join  channel  Joins  channel  if user has admin-level.    .listdevices  Lists the hostnames of all known devices.    .log [ N ]  Prints  N  lines or last line of the eventlog.    .port  hostname   ifname  Prints Port-related information from  ifname  on given  hostname .    .quit  Disconnect from IRC and exit.    .reload  Reload configuration.    .status  type  Prints status information for given  type . Type can be  devices ,  services ,  ports . Shorthands are:  dev , srv , prt    .version  Prints  $this- config['project_name_version'] .     ( __/!_  All commands are case-_insensitive  but their arguments are case- sensitive )", 
            "title": "IRC-Commands"
        }, 
        {
            "location": "/Extensions/IRC-Bot/#examples", 
            "text": "", 
            "title": "Examples"
        }, 
        {
            "location": "/Extensions/IRC-Bot/#server-examples", 
            "text": "Unencrypted Connection to  irc.freenode.org :     ...\n   $config['irc_host'] =  irc.freenode.org ;\n   $config['irc_port'] = 6667;\n   ...  SSL-Encrypted Connection to  irc.freenode.org :     ...\n   $config['irc_host'] =  irc.freenode.org ;\n   $config['irc_port'] =  +6697 ;\n   ...  SSL-Encrypted Connection to  irc.localdomain  with Server-Password and odd port:     ...\n   $config['irc_host'] =  irc.localdomain ;\n   $config['irc_port'] =  +12345 ;\n   $config['irc_pass'] =  Super Secret Passphrase123 ;\n   ...", 
            "title": "Server examples:"
        }, 
        {
            "location": "/Extensions/IRC-Bot/#channel-notations", 
            "text": "Channels can be defined using Array-Notation like:     ...\n   $config['irc_chan'][] =  #librenms ;\n   $config['irc_chan'][] =  #otherchan ;\n   $config['irc_chan'][] =  #noc ;\n   ...  Or using a single string using  ,  as delimiter between various channels:     ...\n   $config['irc_chan'] =  #librenms,#otherchan,#noc ;\n   ...", 
            "title": "Channel notations:"
        }, 
        {
            "location": "/Extensions/IRC-Bot/#hostmask-authentication", 
            "text": "...\n   $config['irc_auth']['admin'][] =  *!root@nms.host.invalid ;\n   $config['irc_auth']['admin'][] =  *!*peter@peters.computer.invalid ;\n   $config['irc_auth']['john][] =  john!doe@login.server.invalid ;\n   ...  Any client matching one of the first two hostmasks will automatically be authenticated as the \"admin\" user in LibreNMS, and clients matching the last line will be authenticated as the user \"john\" in LibreNMS, without using .auth and a waiting for a valid token.", 
            "title": "Hostmask authentication:"
        }, 
        {
            "location": "/Extensions/IRC-Bot/#extensions", 
            "text": "The bot is coded in a unified way.\nThis makes writing extensions by far less painful.\nSimply add your  command  to the  $config['irc_external']  directive and create a file called  includes/ircbot/command.inc.php  containing your code.\nThe string behind the call of  .command  is passed as  $params .\nThe user who requested something is accessible via  $this- user .\nSend your reply/ies via  $this- respond($string) .  A more detailed documentation of the functions and variables available for extensions can be found at  IRC-Bot Extensions ;  Confused? Here an Echo-Example:  File: config.php     ...\n   $config['irc_external'][] =  echo ;\n   ...  File: includes/ircbot/echo.inc.php     //Prefix everything with `You said: '...'`  and return what was sent.\n   if( $this- user['name'] !=  root  ) {\n      return $this- respond( You said: ' .$params. ' );\n   } else {\n      return $this- respond( root shouldn't be online so late! );\n   }", 
            "title": "Extensions?!"
        }, 
        {
            "location": "/Extensions/IRC-Bot/#systemd-start-up-script", 
            "text": "Basic systemd start up script to be placed in /etc/systemd/system/ to start irc service at boot.   librenms-irc.service script is located at /opt/librenms/misc/  Once copied to /etc/systemd/system/ you must run the following commands:  a) chmod 664 /etc/systemd/system/librenms-irc.service  b) systemctl daemon-reload  c) systemctl enable librenms-irc.service  d) systemctl start librenms-irc.service  It can be stopped or started just like any other systemd script such as systemctl start librenms-irc.service", 
            "title": "Systemd start up script"
        }, 
        {
            "location": "/Extensions/IRC-Bot-Extensions/", 
            "text": "Quick Guide\n\n\nOkay this is a very quick walk-through in writing own \ncommands\n for the IRC-Bot.\n\n\nFirst of all, create a file in \nincludes/ircbot\n, the file-name should be in this format: \ncommand.inc.php\n.\n\n\nWhen editing the file, do not open nor close PHP-tags.\nAny variable you assign will be discarded as soon as your command returns.\nSome variables, specially all listed under \n$this-\n, have special meanings or effects.\nBefore a command is executed, the IRC-Bot ensures that the MySQL-Socket is working, that \n$this-\nuser\n points to the right user and that the user is authenticated.\nBelow you will find a table with related functions and attributes.\nYou can chain-load any built-in command by calling \n$this-\n_command(\"My Parameters\")\n.\nYou cannot chain-load external commands.\n\n\nTo enable your command, edit your \nconfig.php\n and add something like this:\n\n\n   ...\n   $config['irc_external'][] = \nmycommand\n;\n   ...\n\n\n\n\nSee: \nExample\n\n\nFunctions and Attributes\n\n\n... that are accessible from within an extension\n\n\nFunctions\n\n\n\n\n\n\n\n\nFunction( (Type) $Variable [= Default] [,...] )\n\n\nReturns\n\n\nDescription\n\n\n\n\n\n\n\n\n\n\n$this-\ngetChan( )\n\n\nString\n\n\nReturns \nchannel\n of current event.\n\n\n\n\n\n\n$this-\ngetData( (boolean) $Block = false )\n\n\nString/Boolean\n\n\nReturns a \nline\n from the IRC-Buffer if it's not matched against any other \ncommand\n. If \n$Block\n is \ntrue\n, wait until a suitable line is returned.\n\n\n\n\n\n\n$this-\ngetUser( )\n\n\nString\n\n\nReturns \nnick\n of current user. Not to confuse with \n$this-\nuser\n!\n\n\n\n\n\n\n$this-\nget_user( )\n\n\nArray\n\n\nSee \n$this-\nuser\n in Attributes.\n\n\n\n\n\n\n$this-\nirc_raw( (string) $Protocol )\n\n\nBoolean\n\n\nSends raw IRC-Protocol.\n\n\n\n\n\n\n$this-\nisAuthd( )\n\n\nBoolean\n\n\ntrue\n if the user is authenticated.\n\n\n\n\n\n\n$this-\njoinChan( (string) $Channel )\n\n\nBoolean\n\n\nJoins given \n$Channel\n.\n\n\n\n\n\n\n$this-\nlog( (string) $Message )\n\n\nBoolean\n\n\nLogs given \n$Message\n into \nSTDOUT\n.\n\n\n\n\n\n\n$this-\nread( (string) $Buffer )\n\n\nString/Boolean\n\n\nReturns a \nline\n from given \n$Buffer\n or \nfalse\n if there's nothing suitable inside the Buffer. Please use \n$this-\ngetData()\n for handler-safe data retrieval.\n\n\n\n\n\n\n$this-\nrespond( (string) $Message )\n\n\nBoolean\n\n\nResponds to the \nrequest\n auto-detecting channel or private message.\n\n\n\n\n\n\n\n\nAttributes\n\n\n\n\n\n\n\n\nAttribute\n\n\nType\n\n\nDescription\n\n\n\n\n\n\n\n\n\n\n$params\n\n\nString\n\n\nContains all arguments that are passed to the \n.command\n.\n\n\n\n\n\n\n$this-\nchan\n\n\nArray\n\n\nChannels that are configured.\n\n\n\n\n\n\n$this-\ncommands\n\n\nArray\n\n\nContains accessible \ncommands\n.\n\n\n\n\n\n\n$this-\nconfig\n\n\nArray\n\n\nContains \n$config\n from \nconfig.php\n.\n\n\n\n\n\n\n$this-\ndata\n\n\nString\n\n\nContains raw IRC-Protocol.\n\n\n\n\n\n\n$this-\ndebug\n\n\nBoolean\n\n\nDebug-Flag.\n\n\n\n\n\n\n$this-\nexternal\n\n\nArray\n\n\nContains loaded extra \ncommands\n.\n\n\n\n\n\n\n$this-\nnick\n\n\nString\n\n\nBot's \nnick\n on the IRC.\n\n\n\n\n\n\n$this-\npass\n\n\nString\n\n\nIRC-Server's passphrase.\n\n\n\n\n\n\n$this-\nport\n\n\nInt\n\n\nIRC-Server's port-number.\n\n\n\n\n\n\n$this-\nserver\n\n\nString\n\n\nIRC-Server's hostname.\n\n\n\n\n\n\n$this-\nssl\n\n\nBoolean\n\n\nSSL-Flag.\n\n\n\n\n\n\n$this-\ntick\n\n\nInt\n\n\nInterval to check buffers in microseconds.\n\n\n\n\n\n\n$this-\nuser\n\n\nArray\n\n\nArray containing details about the \nuser\n that sent the \nrequest\n.\n\n\n\n\n\n\n\n\nExample!\n\n\nincludes/ircbot/join-ng.inc.php\n\n\n   if( $this-\nuser['level'] != 10 ) {\n      return $this-\nrespond(\nSorry only admins can make me join.\n);\n   }\n   if( $this-\ngetChan() == \n#noc\n) {\n      $this-\nrespond(\nJoining $params\n);\n      $this-\njoinChan($params);\n   } else {\n      $this-\nrespond(\nSorry, only people from #noc can make join.\n);\n   }\n\n\n\n\nconfig.php\n\n\n   ...\n   $config['irc_external'][] = \njoin-ng\n;\n   ...", 
            "title": "Quick Guide"
        }, 
        {
            "location": "/Extensions/IRC-Bot-Extensions/#quick-guide", 
            "text": "Okay this is a very quick walk-through in writing own  commands  for the IRC-Bot.  First of all, create a file in  includes/ircbot , the file-name should be in this format:  command.inc.php .  When editing the file, do not open nor close PHP-tags.\nAny variable you assign will be discarded as soon as your command returns.\nSome variables, specially all listed under  $this- , have special meanings or effects.\nBefore a command is executed, the IRC-Bot ensures that the MySQL-Socket is working, that  $this- user  points to the right user and that the user is authenticated.\nBelow you will find a table with related functions and attributes.\nYou can chain-load any built-in command by calling  $this- _command(\"My Parameters\") .\nYou cannot chain-load external commands.  To enable your command, edit your  config.php  and add something like this:     ...\n   $config['irc_external'][] =  mycommand ;\n   ...  See:  Example", 
            "title": "Quick Guide"
        }, 
        {
            "location": "/Extensions/IRC-Bot-Extensions/#functions-and-attributes", 
            "text": "... that are accessible from within an extension", 
            "title": "Functions and Attributes"
        }, 
        {
            "location": "/Extensions/IRC-Bot-Extensions/#functions", 
            "text": "Function( (Type) $Variable [= Default] [,...] )  Returns  Description      $this- getChan( )  String  Returns  channel  of current event.    $this- getData( (boolean) $Block = false )  String/Boolean  Returns a  line  from the IRC-Buffer if it's not matched against any other  command . If  $Block  is  true , wait until a suitable line is returned.    $this- getUser( )  String  Returns  nick  of current user. Not to confuse with  $this- user !    $this- get_user( )  Array  See  $this- user  in Attributes.    $this- irc_raw( (string) $Protocol )  Boolean  Sends raw IRC-Protocol.    $this- isAuthd( )  Boolean  true  if the user is authenticated.    $this- joinChan( (string) $Channel )  Boolean  Joins given  $Channel .    $this- log( (string) $Message )  Boolean  Logs given  $Message  into  STDOUT .    $this- read( (string) $Buffer )  String/Boolean  Returns a  line  from given  $Buffer  or  false  if there's nothing suitable inside the Buffer. Please use  $this- getData()  for handler-safe data retrieval.    $this- respond( (string) $Message )  Boolean  Responds to the  request  auto-detecting channel or private message.", 
            "title": "Functions"
        }, 
        {
            "location": "/Extensions/IRC-Bot-Extensions/#attributes", 
            "text": "Attribute  Type  Description      $params  String  Contains all arguments that are passed to the  .command .    $this- chan  Array  Channels that are configured.    $this- commands  Array  Contains accessible  commands .    $this- config  Array  Contains  $config  from  config.php .    $this- data  String  Contains raw IRC-Protocol.    $this- debug  Boolean  Debug-Flag.    $this- external  Array  Contains loaded extra  commands .    $this- nick  String  Bot's  nick  on the IRC.    $this- pass  String  IRC-Server's passphrase.    $this- port  Int  IRC-Server's port-number.    $this- server  String  IRC-Server's hostname.    $this- ssl  Boolean  SSL-Flag.    $this- tick  Int  Interval to check buffers in microseconds.    $this- user  Array  Array containing details about the  user  that sent the  request .", 
            "title": "Attributes"
        }, 
        {
            "location": "/Extensions/IRC-Bot-Extensions/#example", 
            "text": "includes/ircbot/join-ng.inc.php     if( $this- user['level'] != 10 ) {\n      return $this- respond( Sorry only admins can make me join. );\n   }\n   if( $this- getChan() ==  #noc ) {\n      $this- respond( Joining $params );\n      $this- joinChan($params);\n   } else {\n      $this- respond( Sorry, only people from #noc can make join. );\n   }  config.php     ...\n   $config['irc_external'][] =  join-ng ;\n   ...", 
            "title": "Example!"
        }, 
        {
            "location": "/Extensions/SNMP-Proxy/", 
            "text": "SNMP Proxy\n\n\nIf you have machines that you want to monitor but are not reachable directly, you can use \nSNMPD Proxy\n. This will use the reachable SNMPD to proxy requests to the unreachable SNMPD.\n\n\nExample configuration\n\n\nWe want to poll \nunreachable.example.com\n via \nhereweare.example.com\n. Use the following config:\n\n\nOn \nhereweare.example.com\n:\n\n\n        view all included .1\n        com2sec -Cn ctx_unreachable readonly \npoller-ip\n unreachable\n        access MyROGroup ctx_unreachable any noauth prefix all none none\n        proxy -Cn ctx_unreachable -v 2c -c private unreachable.example.com  .1.3\n\n\n\n\nOn \nunreachable.example.com\n:\n\n\n        view all included .1                               80\n        com2sec readonly \nhereweare.example.com ip address\n private\n        group MyROGroup v1 readonly\n        group MyROGroup v2c readonly\n        group MyROGroup usm readonly\n        access MyROGroup \n any noauth exact all none none\n\n\n\n\nYou can now poll community \nprivate\n on \nunreachable.example.com\n via community \nunreachable\n on host \nhereweare.example.com\n. Please note that requests on \nunreachable.example.com\n will be coming from \nhereweare.example.com\n, not your poller.", 
            "title": "SNMP Proxy"
        }, 
        {
            "location": "/Extensions/SNMP-Proxy/#snmp-proxy", 
            "text": "If you have machines that you want to monitor but are not reachable directly, you can use  SNMPD Proxy . This will use the reachable SNMPD to proxy requests to the unreachable SNMPD.", 
            "title": "SNMP Proxy"
        }, 
        {
            "location": "/Extensions/SNMP-Proxy/#example-configuration", 
            "text": "We want to poll  unreachable.example.com  via  hereweare.example.com . Use the following config:  On  hereweare.example.com :          view all included .1\n        com2sec -Cn ctx_unreachable readonly  poller-ip  unreachable\n        access MyROGroup ctx_unreachable any noauth prefix all none none\n        proxy -Cn ctx_unreachable -v 2c -c private unreachable.example.com  .1.3  On  unreachable.example.com :          view all included .1                               80\n        com2sec readonly  hereweare.example.com ip address  private\n        group MyROGroup v1 readonly\n        group MyROGroup v2c readonly\n        group MyROGroup usm readonly\n        access MyROGroup   any noauth exact all none none  You can now poll community  private  on  unreachable.example.com  via community  unreachable  on host  hereweare.example.com . Please note that requests on  unreachable.example.com  will be coming from  hereweare.example.com , not your poller.", 
            "title": "Example configuration"
        }, 
        {
            "location": "/Extensions/SNMP-Trap-Handler/", 
            "text": "SNMP trap handling\n\n\nCurrently, librenms only supports port up/down SNMP traps.  Traps are handled via snmptrapd.\n\n\nConfigure snmptrapd\n\n\nInstall snmptrapd via your package manager.\n\n\nIn \n/etc/snmp/snmptrapd.conf\n, add something like the following:\n\n\ntraphandle default /opt/librenms/snmptrap.php\n\n\n\n\nAlong with any necessary configuration to receive the traps from your devices (community, etc.)", 
            "title": "SNMP trap handling"
        }, 
        {
            "location": "/Extensions/SNMP-Trap-Handler/#snmp-trap-handling", 
            "text": "Currently, librenms only supports port up/down SNMP traps.  Traps are handled via snmptrapd.", 
            "title": "SNMP trap handling"
        }, 
        {
            "location": "/Extensions/SNMP-Trap-Handler/#configure-snmptrapd", 
            "text": "Install snmptrapd via your package manager.  In  /etc/snmp/snmptrapd.conf , add something like the following:  traphandle default /opt/librenms/snmptrap.php  Along with any necessary configuration to receive the traps from your devices (community, etc.)", 
            "title": "Configure snmptrapd"
        }, 
        {
            "location": "/Support/Cleanup-options/", 
            "text": "Cleanup Options\n\n\nAs the number of devices starts to grow in your LibreNMS install, so will things such as the RRD files, MySQL database containing eventlogs, Syslogs and performance data etc. Your LibreNMS install could become quite large so it becomes necessary to clean up those entries. With Cleanup Options, you can keep in crontrol. \n\n\nThese options rely on \ndaily.sh\n running from cron as per the installation instructions.\n\n\nCleanup Options are set in \nconfig.php\n\n\n$config['syslog_purge']                                   = 30;\n$config['eventlog_purge']                                 = 30;\n$config['authlog_purge']                                  = 30;\n$config['perf_times_purge']                               = 30;\n$config['device_perf_purge']                              = 7;\n$config['rrd_purge']                                      = 90;// Not set by default\n\n\n\n\nThese options will ensure data within LibreNMS over X days old is automatically purged. You can alter these individually, values are in days.\n\n\nNOTE\n: Please be aware that \n$config['rrd_purge']\n is NOT set by default. This option will remove any rrd files that have not been updated for the set amount of days automatically - only enable this if you are comfortable with that happening. (all active rrd files are updated every polling period)\n\n\nPorts Purge\n\n\nOver time as you add devices some interfaces will need to be purged as they are set to be ignored or bad interfaces or marked as deleted.\n\n\nThis Process needs to be manually done in the Web UI by admin user. \n\n\nIn the Web UI Under the Ports Tab in the Nav Bar, Click on \"Deleted\" then click on \"Purge all deleted\". This will purge all the ports.", 
            "title": "Cleanup Options"
        }, 
        {
            "location": "/Support/Cleanup-options/#cleanup-options", 
            "text": "As the number of devices starts to grow in your LibreNMS install, so will things such as the RRD files, MySQL database containing eventlogs, Syslogs and performance data etc. Your LibreNMS install could become quite large so it becomes necessary to clean up those entries. With Cleanup Options, you can keep in crontrol.   These options rely on  daily.sh  running from cron as per the installation instructions.  Cleanup Options are set in  config.php  $config['syslog_purge']                                   = 30;\n$config['eventlog_purge']                                 = 30;\n$config['authlog_purge']                                  = 30;\n$config['perf_times_purge']                               = 30;\n$config['device_perf_purge']                              = 7;\n$config['rrd_purge']                                      = 90;// Not set by default  These options will ensure data within LibreNMS over X days old is automatically purged. You can alter these individually, values are in days.  NOTE : Please be aware that  $config['rrd_purge']  is NOT set by default. This option will remove any rrd files that have not been updated for the set amount of days automatically - only enable this if you are comfortable with that happening. (all active rrd files are updated every polling period)", 
            "title": "Cleanup Options"
        }, 
        {
            "location": "/Support/Cleanup-options/#ports-purge", 
            "text": "Over time as you add devices some interfaces will need to be purged as they are set to be ignored or bad interfaces or marked as deleted.  This Process needs to be manually done in the Web UI by admin user.   In the Web UI Under the Ports Tab in the Nav Bar, Click on \"Deleted\" then click on \"Purge all deleted\". This will purge all the ports.", 
            "title": "Ports Purge"
        }, 
        {
            "location": "/Extensions/Graylog/", 
            "text": "Graylog integration\n\n\nWe have simple integration for Graylog, you will be able to view any logs from within LibreNMS that have been parsed by the syslog input from within\nGraylog itself. This includes logs from devices which aren't in LibreNMS still, you can also see logs for a specific device under the logs section\nfor the device.\n\n\nCurrently, LibreNMS does not associate shortnames from Graylog with full FQDNS. If you have your devices in LibreNMS using full FQDNs, such as hostname.example.com, be aware that rsyslogd, by default, sends the shortname only. To fix this, add\n\n\n$PreserveFQDN on\n\n\nto your rsyslog config to send the full FQDN so device logs will be associated correctly in LibreNMS\n\n\nGraylog itself isn't included within LibreNMS, you will need to install this separately either on the same infrastructure as LibreNMS or as a totally\nstandalone appliance.\n\n\nConfig is simple, here's an example:\n\n\n$config['graylog']['server']   = 'http://127.0.0.1';\n$config['graylog']['port']     = 12900;\n$config['graylog']['username'] = 'admin';\n$config['graylog']['password'] = 'admin';\n$config['graylog']['version']  = '2.1';\n\n\n\n\nGraylog messages are stored using GMT timezone. You can display graylog messages in LibreNMS webui using your desired timezone by setting following option in config.php:\n\n\n$config['graylog']['timezone'] = 'Europe/Bucharest';\n\n\n\n\n\n\nTimezone must be PHP supported timezones, available at: \nhttp://php.net/manual/en/timezones.php\n\n\nSince Graylog 2.1, the default API path is /api/\n\n\n\n\nIf you are running a version earlier than Graylog then please set \n$config['graylog']['version']\n to the version \nnumber of your Graylog install.\n\n\nIf you have altered the default uri for your Graylog setup then you can override the default of \n/api/\n using \n\n$config['graylog']['base_uri'] = '/somepath/';\n\n\nIf you choose to use another user besides the admin user, please note that currently you must give the user \"admin\" permissions from within Graylog, \"read\" permissions alone are not sufficient.\n\n\nIf you have enabled TLS for the Graylog API and you are using a self-signed certificate, please make sure that the certificate is trusted by your LibreNMS host, otherwise the connection will fail.\nAdditionally, the certificate's Common Name (CN) has to match the FQDN or IP address specified in \n$config['graylog']['server']\n.", 
            "title": "Graylog integration"
        }, 
        {
            "location": "/Extensions/Graylog/#graylog-integration", 
            "text": "We have simple integration for Graylog, you will be able to view any logs from within LibreNMS that have been parsed by the syslog input from within\nGraylog itself. This includes logs from devices which aren't in LibreNMS still, you can also see logs for a specific device under the logs section\nfor the device.  Currently, LibreNMS does not associate shortnames from Graylog with full FQDNS. If you have your devices in LibreNMS using full FQDNs, such as hostname.example.com, be aware that rsyslogd, by default, sends the shortname only. To fix this, add  $PreserveFQDN on  to your rsyslog config to send the full FQDN so device logs will be associated correctly in LibreNMS  Graylog itself isn't included within LibreNMS, you will need to install this separately either on the same infrastructure as LibreNMS or as a totally\nstandalone appliance.  Config is simple, here's an example:  $config['graylog']['server']   = 'http://127.0.0.1';\n$config['graylog']['port']     = 12900;\n$config['graylog']['username'] = 'admin';\n$config['graylog']['password'] = 'admin';\n$config['graylog']['version']  = '2.1';  Graylog messages are stored using GMT timezone. You can display graylog messages in LibreNMS webui using your desired timezone by setting following option in config.php:  $config['graylog']['timezone'] = 'Europe/Bucharest';   Timezone must be PHP supported timezones, available at:  http://php.net/manual/en/timezones.php  Since Graylog 2.1, the default API path is /api/   If you are running a version earlier than Graylog then please set  $config['graylog']['version']  to the version \nnumber of your Graylog install.  If you have altered the default uri for your Graylog setup then you can override the default of  /api/  using  $config['graylog']['base_uri'] = '/somepath/';  If you choose to use another user besides the admin user, please note that currently you must give the user \"admin\" permissions from within Graylog, \"read\" permissions alone are not sufficient.  If you have enabled TLS for the Graylog API and you are using a self-signed certificate, please make sure that the certificate is trusted by your LibreNMS host, otherwise the connection will fail.\nAdditionally, the certificate's Common Name (CN) has to match the FQDN or IP address specified in  $config['graylog']['server'] .", 
            "title": "Graylog integration"
        }, 
        {
            "location": "/Extensions/Services/", 
            "text": "Setting up Services\n\n\nServices within LibreNMS provides the ability to use Nagios plugins to perform additional monitoring outside of SNMP.\n\n\nThese services are tied into an existing device so you need at least one device to be able to add it\nto LibreNMS - localhost is a good one. This is needed in order for alerting to work properly.\n\n\nSetup\n\n\n\n\nService checks is now distributed aware. If you run a distributed setup then you can now run \n\nservices-wrapper.py\n in cron instead of \ncheck-services.php\n across all polling nodes.\n\n\n\n\nFirstly, install Nagios plugins however you would like, this could be via yum, apt-get or direct from source.\n\n\nNext, you need to enable the services within config.php with the following:\n\n\n$config['show_services']           = 1;\n\n\n\n\nThis will enable a new service menu within your navbar.\n\n\n$config['nagios_plugins']   = \n/usr/lib/nagios/plugins\n;\n\n\n\n\nThis will point LibreNMS at the location of the nagios plugins - please ensure that any plugins you use are set to executable.\nFor example: \n\n\nchmod +x /usr/lib/nagios/plugins/*\n\n\n\n\nFinally, you now need to add check-services.php to the current cron file (/etc/cron.d/librenms typically) like:\n\n\n*/5 * * * * librenms /opt/librenms/check-services.php \n /dev/null 2\n1\n\n\n\n\nNow you can add services via the main Services link in the navbar, or via the 'Add Service' link within the device, services page.\n\n\nNote that some services (procs, inodes, load and similar) will always poll the local LibreNMS server it's running on, regardless of which device you add it to.\n\n\nPerformance data\n\n\nBy default, the check-services script will collect all performance data that the Nagios script returns and display each datasource on a separate graph.\nHowever for some modules it would be better if some of this information was consolidated on a single graph.\nAn example is the ICMP check. This check returns: Round Trip Average (rta), Round Trip Min (rtmin) and Round Trip Max (rtmax).\nThese have been combined onto a single graph.\n\n\nIf you find a check script that would benefit from having some datasources graphed together, please log an issue on GitHub with the debug information from the script, and let us know which DS's should go together. Example below:\n\n\n./check-services.php -d\n-- snip --\nNagios Service - 26\nRequest:  /usr/lib/nagios/plugins/check_icmp localhost\nPerf Data - DS: rta, Value: 0.016, UOM: ms\nPerf Data - DS: pl, Value: 0, UOM: %\nPerf Data - DS: rtmax, Value: 0.044, UOM: ms\nPerf Data - DS: rtmin, Value: 0.009, UOM: ms\nResponse: OK - localhost: rta 0.016ms, lost 0%\nService DS: {\n    \"rta\": \"ms\",\n    \"pl\": \"%\",\n    \"rtmax\": \"ms\",\n    \"rtmin\": \"ms\"\n}\nOK u:0.00 s:0.00 r:40.67\nRRD[update /opt/librenms/rrd/localhost/services-26.rrd N:0.016:0:0.044:0.009]\n-- snip --\n\n\n\nAlerting\n\n\nServices uses the Nagios Alerting scheme where:\n\n\n0 = Ok,\n1 = Warning,\n2 = Critical,\n\n\n\nTo create an alerting rule to alert on service=critical, your alerting rule would look like:\n\n\n%services.service_status = \"2\"\n\n\n\nDebug\n\n\nChange user to librenms for example \n\n\nsu - librenms\n\n\n\n\nthen you can run the following command to help troubleshoot services. \n\n\n./check-services.php -d", 
            "title": "Nagios Plugins"
        }, 
        {
            "location": "/Extensions/Services/#setting-up-services", 
            "text": "Services within LibreNMS provides the ability to use Nagios plugins to perform additional monitoring outside of SNMP.  These services are tied into an existing device so you need at least one device to be able to add it\nto LibreNMS - localhost is a good one. This is needed in order for alerting to work properly.", 
            "title": "Setting up Services"
        }, 
        {
            "location": "/Extensions/Services/#setup", 
            "text": "Service checks is now distributed aware. If you run a distributed setup then you can now run  services-wrapper.py  in cron instead of  check-services.php  across all polling nodes.   Firstly, install Nagios plugins however you would like, this could be via yum, apt-get or direct from source.  Next, you need to enable the services within config.php with the following:  $config['show_services']           = 1;  This will enable a new service menu within your navbar.  $config['nagios_plugins']   =  /usr/lib/nagios/plugins ;  This will point LibreNMS at the location of the nagios plugins - please ensure that any plugins you use are set to executable.\nFor example:   chmod +x /usr/lib/nagios/plugins/*  Finally, you now need to add check-services.php to the current cron file (/etc/cron.d/librenms typically) like:  */5 * * * * librenms /opt/librenms/check-services.php   /dev/null 2 1  Now you can add services via the main Services link in the navbar, or via the 'Add Service' link within the device, services page.  Note that some services (procs, inodes, load and similar) will always poll the local LibreNMS server it's running on, regardless of which device you add it to.", 
            "title": "Setup"
        }, 
        {
            "location": "/Extensions/Services/#performance-data", 
            "text": "By default, the check-services script will collect all performance data that the Nagios script returns and display each datasource on a separate graph.\nHowever for some modules it would be better if some of this information was consolidated on a single graph.\nAn example is the ICMP check. This check returns: Round Trip Average (rta), Round Trip Min (rtmin) and Round Trip Max (rtmax).\nThese have been combined onto a single graph.  If you find a check script that would benefit from having some datasources graphed together, please log an issue on GitHub with the debug information from the script, and let us know which DS's should go together. Example below:  ./check-services.php -d\n-- snip --\nNagios Service - 26\nRequest:  /usr/lib/nagios/plugins/check_icmp localhost\nPerf Data - DS: rta, Value: 0.016, UOM: ms\nPerf Data - DS: pl, Value: 0, UOM: %\nPerf Data - DS: rtmax, Value: 0.044, UOM: ms\nPerf Data - DS: rtmin, Value: 0.009, UOM: ms\nResponse: OK - localhost: rta 0.016ms, lost 0%\nService DS: {\n    \"rta\": \"ms\",\n    \"pl\": \"%\",\n    \"rtmax\": \"ms\",\n    \"rtmin\": \"ms\"\n}\nOK u:0.00 s:0.00 r:40.67\nRRD[update /opt/librenms/rrd/localhost/services-26.rrd N:0.016:0:0.044:0.009]\n-- snip --", 
            "title": "Performance data"
        }, 
        {
            "location": "/Extensions/Services/#alerting", 
            "text": "Services uses the Nagios Alerting scheme where:  0 = Ok,\n1 = Warning,\n2 = Critical,  To create an alerting rule to alert on service=critical, your alerting rule would look like:  %services.service_status = \"2\"", 
            "title": "Alerting"
        }, 
        {
            "location": "/Extensions/Services/#debug", 
            "text": "Change user to librenms for example   su - librenms  then you can run the following command to help troubleshoot services.   ./check-services.php -d", 
            "title": "Debug"
        }, 
        {
            "location": "/Extensions/NFSen/", 
            "text": "NFSen\n\n\n\n\nThe installation of NFSen is out of scope for this document / LibreNMS\n\n\n\n\nConfiguration\n\n\nThe following is the configuration that can be used:\n\n\n$config['nfsen_enable'] = 1;\n$config['nfsen_split_char']   = '_';\n$config['nfsen_rrds'][]   = '/var/nfsen/profiles-stat/live/';\n$config['nfsen_rrds'][] = '/var/nfsen/profiles-stat';\n$config['nfsen_suffix']   = \n_yourdomain_com\n;\n\n\n\n\nSet \n$config['nfsen_enable'] = 1;\n to enable NFSen support.\n\n\n$config['nfsen_rrds']\n This value tells us where your NFSen rrd files live. This can also be an array to \nspecify more directories like:\n\n\n$config['nfsen_rrds'][] = '/var/nfsen/profiles-stat/sitea/';\n$config['nfsen_rrds'][] = '/var/nfsen/profiles-stat/siteb/';\n\n\n\n\nAlthough for most setups, it will look like below, with the profiles-stat/live directory being where it stores the general RRDs for data sources.\n\n\n$config['nfsen_rrds'][] = '/var/nfsen/profiles-stat/live';\n\n\n\n\n$config['nfsen_split_char']\n This value tells us what to replace the full stops \n.\n in the devices hostname with.\n\n\n$config['nfsen_suffix']\n This value will be removed from the domain name and can be useful if your rrd files are \nsomething like \nhost1.rrd\n but your device hostname is \ndomain.host1.rrd\n. You can then set $config['nfsen_suffix'] = 'domain';\n\n\nIf you wish to render info for configure channels for a device, you need add the various profile-stat directories your system uses, which for most systems will be as below.\n\n\n$config['nfsen_rrds'][] = '/var/nfsen/profiles-stat';\n\n\n\n\nWhen adding sources to nfsen.conf, it is important to use the hostname that matches what is configured in LibreNMS, because the rrd files NfSen creates is named after the source name (ident), and it doesn't allow you to use an IP address instead. However, in LibreNMS, if your device is added by an IP address, add your source with any name of your choice, and create a symbolic link to the rrd file.\n\n\ncd /var/nfsen/profiles-stat/sitea/\nln -s mychannel.rrd librenmsdeviceIP.rrd\n\n\n\n\nWhen creating profiles under nfsen, be sure to use the hostname so it matches the name in LibreNMS. That is where channel data will be pulled from.\n\n\nYou should see a new tab for the device called Nfsen.", 
            "title": "NFSen"
        }, 
        {
            "location": "/Extensions/NFSen/#nfsen", 
            "text": "The installation of NFSen is out of scope for this document / LibreNMS", 
            "title": "NFSen"
        }, 
        {
            "location": "/Extensions/NFSen/#configuration", 
            "text": "The following is the configuration that can be used:  $config['nfsen_enable'] = 1;\n$config['nfsen_split_char']   = '_';\n$config['nfsen_rrds'][]   = '/var/nfsen/profiles-stat/live/';\n$config['nfsen_rrds'][] = '/var/nfsen/profiles-stat';\n$config['nfsen_suffix']   =  _yourdomain_com ;  Set  $config['nfsen_enable'] = 1;  to enable NFSen support.  $config['nfsen_rrds']  This value tells us where your NFSen rrd files live. This can also be an array to \nspecify more directories like:  $config['nfsen_rrds'][] = '/var/nfsen/profiles-stat/sitea/';\n$config['nfsen_rrds'][] = '/var/nfsen/profiles-stat/siteb/';  Although for most setups, it will look like below, with the profiles-stat/live directory being where it stores the general RRDs for data sources.  $config['nfsen_rrds'][] = '/var/nfsen/profiles-stat/live';  $config['nfsen_split_char']  This value tells us what to replace the full stops  .  in the devices hostname with.  $config['nfsen_suffix']  This value will be removed from the domain name and can be useful if your rrd files are \nsomething like  host1.rrd  but your device hostname is  domain.host1.rrd . You can then set $config['nfsen_suffix'] = 'domain';  If you wish to render info for configure channels for a device, you need add the various profile-stat directories your system uses, which for most systems will be as below.  $config['nfsen_rrds'][] = '/var/nfsen/profiles-stat';  When adding sources to nfsen.conf, it is important to use the hostname that matches what is configured in LibreNMS, because the rrd files NfSen creates is named after the source name (ident), and it doesn't allow you to use an IP address instead. However, in LibreNMS, if your device is added by an IP address, add your source with any name of your choice, and create a symbolic link to the rrd file.  cd /var/nfsen/profiles-stat/sitea/\nln -s mychannel.rrd librenmsdeviceIP.rrd  When creating profiles under nfsen, be sure to use the hostname so it matches the name in LibreNMS. That is where channel data will be pulled from.  You should see a new tab for the device called Nfsen.", 
            "title": "Configuration"
        }, 
        {
            "location": "/Extensions/Oxidized/", 
            "text": "Oxidized intro\n\n\n\n\nIntegrating LibreNMS with \nOxidized\n brings the following benefits:\n\n\n\n\nConfig viewing: Current, History, and Diffs all under the Configs tab of each device\n\n\nAutomatic addition of devices to Oxidized: Including filtering and grouping to ease credential management\n\n\nConfiguration searching (Requires oxidized-web 0.8.0 or newer)\n\n\n\n\nFirst you will need to \ninstall Oxidized following their documentation\n.\n\n\nThen you can procede to the LibreNMS Web UI and go to Oxidized Settings in the External Settings section of Global Settings. Enable it and enter the url to your oxidized instance.\n\n\nTo have devices automatically added, you will need to configure oxidized to pull them from LibreNMS \nFeeding Oxidized\n\n\nDetailed integration information\n\n\n\n\nThis is a straight forward use of Oxidized, it relies on you having a working Oxidized setup which is already taking config snapshots for your devices.\nWhen you have that, you only need the following config to enable the display of device configs within the device page itself:\n\n\n$config['oxidized']['enabled']         = TRUE;\n$config['oxidized']['url']             = 'http://127.0.0.1:8888';\n\n\n\n\nLibreNMS supports config versioning if Oxidized does.  This is known to work with the git output module.\n\n\n$config['oxidized']['features']['versioning'] = true;\n\n\n\n\nOxidized supports various ways to utilise credentials to login to devices, you can specify global username/password within Oxidized, Group level username/password or per device.\nLibreNMS currently supports sending groups back to Oxidized so that you can then define group credentials within Oxidized. To enable this support please switch on 'Enable the return of groups to Oxidized':\n\n\n$config['oxidized']['group_support'] = true;\n\n\n\n\nYou can set a default group that devices will fall back to with:\n\n\n$config['oxidized']['default_group'] = 'default';\n\n\n\n\nSELinux\n\n\nIf you're runnng SELinux, you'll need to allow httpd to connect outbound to the network, otherwise Oxidized integration in the web UI will silently fail:\n\n\nsetsebool -P httpd_can_network_connect 1\n\n\n\n\nFeeding Oxidized\n\n\n\n\nOxidized has support for feeding devices into it via an API call, support for Oxidized has been added to the LibreNMS API. A sample config for Oxidized is provided below.\n\n\nYou will need to configure default credentials for your devices in the Oxidized config, LibreNMS doesn't provide login credentials at this time.\n\n\n      source:\n        default: http\n        debug: false\n        http:\n          url: https://librenms/api/v0/oxidized\n          map:\n            name: hostname\n            model: os\n            group: group\n          headers:\n            X-Auth-Token: '01582bf94c03104ecb7953dsadsadwed'\n\n\n\n\nLibreNMS is able to reload the Oxidized list of nodes, each time a device is added to LibreNMS.\nTo do so, edit the option in Global Settings\nExternal Settings\nOxidized Integration or add the following to your config.php.\n\n\n$config['oxidized']['reload_nodes'] = true;\n\n\n\n\n\nWorking with groups\n\n\nTo return a group to Oxidized you can do this by matching a regex for either \nhostname\n, \nsysname\n, \nos\n or \nlocation\n. The order is \nhostname\n is matched first, if nothing is found then \nsysname\n is tried, then \nos\n, and finally \nlocation\n is attempted.\nThe first match found will be used. To match on the device hostnames or sysnames that contain 'lon-sw' or if the location contains 'London' then you would place the following within config.php:\n\n\n$config['oxidized']['group']['hostname'][] = array('regex' =\n '/^lon-sw/', 'group' =\n 'london-switches');\n$config['oxidized']['group']['sysname'][] = array('regex' =\n '/^lon-sw/', 'group' =\n 'london-switches');\n$config['oxidized']['group']['location'][] = array('regex' =\n '/london/', 'group' =\n 'london-switches');\n\n\n\n\nTo match on a device os of edgeos then please use the following:\n\n\n$config['oxidized']['group']['os'][] = array('match' =\n 'edgeos', 'group' =\n 'wireless');\n\n\n\n\nVerify the return of groups by querying the API:\n\n\ncurl -H 'X-Auth-Token: YOURAPITOKENHERE' https://librenms.org/api/v0/oxidized               \n\n\n\n\nIf you need to, you can specify credentials for groups by using the following in your Oxidized config:\n\n\ngroups:\n  \ngroupname\n:\n    username: \nuser\n\n    password: \npassword\n\n\n\n\n\nMiscellaneous\n\n\nIf you have devices which you do not wish to appear in Oxidized then you can edit those devices in Device -\n Edit -\n Misc and enable \"Exclude from Oxidized?\"\n\n\nIt's also possible to exclude certain device types and OS' from being output via the API. This is currently only possible via config.php:\n\n\n$config['oxidized']['ignore_types'] = array('server');\n$config['oxidized']['ignore_os'] = array('linux');\n\n\n\n\nTrigger configuration backups\n\n\nUsing the Oxidized REST API and \nSyslog Hooks\n, Oxidized can trigger configuration downloads whenever a configuration change event has been logged. An example script to do this is included in \n./scripts/syslog-notify-oxidized.php\n. Oxidized can spawn a new worker thread and perform the download immediately with the following configuration\n\n\nnext_adds_job: true\n\n\n\n\nValidate Oxidized config\n\n\nYou can perform basic validation of the Oxidized configuration by going to the Overview -\n Tools -\n Oxidized link and in the Oxidized config validation page, paste your \n yaml file into the input box and click 'Validate YAML'.\n\n\nWe check for yaml syntax errors and also actual config values to ensure they are used in the correct location.", 
            "title": "Oxidized intro"
        }, 
        {
            "location": "/Extensions/Oxidized/#oxidized-intro", 
            "text": "Integrating LibreNMS with  Oxidized  brings the following benefits:   Config viewing: Current, History, and Diffs all under the Configs tab of each device  Automatic addition of devices to Oxidized: Including filtering and grouping to ease credential management  Configuration searching (Requires oxidized-web 0.8.0 or newer)   First you will need to  install Oxidized following their documentation .  Then you can procede to the LibreNMS Web UI and go to Oxidized Settings in the External Settings section of Global Settings. Enable it and enter the url to your oxidized instance.  To have devices automatically added, you will need to configure oxidized to pull them from LibreNMS  Feeding Oxidized", 
            "title": "Oxidized intro"
        }, 
        {
            "location": "/Extensions/Oxidized/#detailed-integration-information", 
            "text": "This is a straight forward use of Oxidized, it relies on you having a working Oxidized setup which is already taking config snapshots for your devices.\nWhen you have that, you only need the following config to enable the display of device configs within the device page itself:  $config['oxidized']['enabled']         = TRUE;\n$config['oxidized']['url']             = 'http://127.0.0.1:8888';  LibreNMS supports config versioning if Oxidized does.  This is known to work with the git output module.  $config['oxidized']['features']['versioning'] = true;  Oxidized supports various ways to utilise credentials to login to devices, you can specify global username/password within Oxidized, Group level username/password or per device.\nLibreNMS currently supports sending groups back to Oxidized so that you can then define group credentials within Oxidized. To enable this support please switch on 'Enable the return of groups to Oxidized':  $config['oxidized']['group_support'] = true;  You can set a default group that devices will fall back to with:  $config['oxidized']['default_group'] = 'default';", 
            "title": "Detailed integration information"
        }, 
        {
            "location": "/Extensions/Oxidized/#selinux", 
            "text": "If you're runnng SELinux, you'll need to allow httpd to connect outbound to the network, otherwise Oxidized integration in the web UI will silently fail:  setsebool -P httpd_can_network_connect 1", 
            "title": "SELinux"
        }, 
        {
            "location": "/Extensions/Oxidized/#feeding-oxidized", 
            "text": "Oxidized has support for feeding devices into it via an API call, support for Oxidized has been added to the LibreNMS API. A sample config for Oxidized is provided below.  You will need to configure default credentials for your devices in the Oxidized config, LibreNMS doesn't provide login credentials at this time.        source:\n        default: http\n        debug: false\n        http:\n          url: https://librenms/api/v0/oxidized\n          map:\n            name: hostname\n            model: os\n            group: group\n          headers:\n            X-Auth-Token: '01582bf94c03104ecb7953dsadsadwed'  LibreNMS is able to reload the Oxidized list of nodes, each time a device is added to LibreNMS.\nTo do so, edit the option in Global Settings External Settings Oxidized Integration or add the following to your config.php.  $config['oxidized']['reload_nodes'] = true;", 
            "title": "Feeding Oxidized"
        }, 
        {
            "location": "/Extensions/Oxidized/#working-with-groups", 
            "text": "To return a group to Oxidized you can do this by matching a regex for either  hostname ,  sysname ,  os  or  location . The order is  hostname  is matched first, if nothing is found then  sysname  is tried, then  os , and finally  location  is attempted.\nThe first match found will be used. To match on the device hostnames or sysnames that contain 'lon-sw' or if the location contains 'London' then you would place the following within config.php:  $config['oxidized']['group']['hostname'][] = array('regex' =  '/^lon-sw/', 'group' =  'london-switches');\n$config['oxidized']['group']['sysname'][] = array('regex' =  '/^lon-sw/', 'group' =  'london-switches');\n$config['oxidized']['group']['location'][] = array('regex' =  '/london/', 'group' =  'london-switches');  To match on a device os of edgeos then please use the following:  $config['oxidized']['group']['os'][] = array('match' =  'edgeos', 'group' =  'wireless');  Verify the return of groups by querying the API:  curl -H 'X-Auth-Token: YOURAPITOKENHERE' https://librenms.org/api/v0/oxidized                 If you need to, you can specify credentials for groups by using the following in your Oxidized config:  groups:\n   groupname :\n    username:  user \n    password:  password", 
            "title": "Working with groups"
        }, 
        {
            "location": "/Extensions/Oxidized/#miscellaneous", 
            "text": "If you have devices which you do not wish to appear in Oxidized then you can edit those devices in Device -  Edit -  Misc and enable \"Exclude from Oxidized?\"  It's also possible to exclude certain device types and OS' from being output via the API. This is currently only possible via config.php:  $config['oxidized']['ignore_types'] = array('server');\n$config['oxidized']['ignore_os'] = array('linux');", 
            "title": "Miscellaneous"
        }, 
        {
            "location": "/Extensions/Oxidized/#trigger-configuration-backups", 
            "text": "Using the Oxidized REST API and  Syslog Hooks , Oxidized can trigger configuration downloads whenever a configuration change event has been logged. An example script to do this is included in  ./scripts/syslog-notify-oxidized.php . Oxidized can spawn a new worker thread and perform the download immediately with the following configuration  next_adds_job: true", 
            "title": "Trigger configuration backups"
        }, 
        {
            "location": "/Extensions/Oxidized/#validate-oxidized-config", 
            "text": "You can perform basic validation of the Oxidized configuration by going to the Overview -  Tools -  Oxidized link and in the Oxidized config validation page, paste your \n yaml file into the input box and click 'Validate YAML'.  We check for yaml syntax errors and also actual config values to ensure they are used in the correct location.", 
            "title": "Validate Oxidized config"
        }, 
        {
            "location": "/Extensions/PeeringDB/", 
            "text": "PeeringDB Support\n\n\nLibreNMS has integration with PeeringDB to match up your BGP sessions with the peering exchanges you are connected to.\n\n\nTo enable the integration please do so within the WebUI -\n Global Settings -\n External Settings -\n PeeringDB Integration.\n\n\nData will be collated the next time daily.sh is run or you can manually force this by running \nphp daily.php -f peeringdb\n,\nthe initial collection is delayed for a random amount of time to avoid overloading the PeeringDB API.\n\n\nOnce enabled you will have an additional menu item under Routing -\n PeeringDB", 
            "title": "PeeringDB Support"
        }, 
        {
            "location": "/Extensions/PeeringDB/#peeringdb-support", 
            "text": "LibreNMS has integration with PeeringDB to match up your BGP sessions with the peering exchanges you are connected to.  To enable the integration please do so within the WebUI -  Global Settings -  External Settings -  PeeringDB Integration.  Data will be collated the next time daily.sh is run or you can manually force this by running  php daily.php -f peeringdb ,\nthe initial collection is delayed for a random amount of time to avoid overloading the PeeringDB API.  Once enabled you will have an additional menu item under Routing -  PeeringDB", 
            "title": "PeeringDB Support"
        }, 
        {
            "location": "/Extensions/Proxmox/", 
            "text": "Proxmox graphing\n\n\nIt is possible to create graphs of the Proxmox \nVMs\n that run on your monitored machines. Currently, only traffic graphs are created. One for each interface on each VM. Possibly, IO graphs will be added later on.\n\n\nThe ultimate goal is to be able to create traffic bills for VMs, no matter on which physical machine that VM runs.\n\n\nEnabling Proxmox graphs\n\n\nTo enable Proxmox graphs, do the following:\n\n\nIn config.php, enable Proxmox:\n\n\n$config['enable_proxmox'] = 1;\n\n\n\n\nThen, install git and \nlibrenms-agent\n on the machines running Proxmox and enable the Proxmox-script using:\n\n\ncp /opt/librenms-agent/agent-local/proxmox /usr/lib/check_mk_agent/local/proxmox\nchmod +x /usr/lib/check_mk_agent/local/proxmox\n\n\n\n\nThen, enable and start the check_mk service using systemd\n\n\ncp /opt/librenms-agent/check_mk@.service /opt/librenms-agent/check_mk.socket /etc/systemd/system\nsystemctl daemon-reload\nsystemctl enable check_mk.socket \n systemctl start check_mk.socket\n\n\n\n\nThen in LibreNMS active the librenms-agent and proxmox application flag for the device you are monitoring.\nYou should now see an application in LibreNMS, as well as a new menu-item in the topmenu, allowing you to choose which cluster you want to look at.\n\n\nNote, if you want to use use xinetd instead of systemd\n\n\nIts possible to use the librenms-agent started by xinetd instead of systemd. One use case is if you are forced to use a old Proxmox installation.\nAfter installing the librenms-agent (see above) please copy enable the xinetd config, then restart the xinetd service:\n\n\ncp check_mk_xinetd /etc/xinetd.d/check_mk\n/etc/init.d/xinetd restart", 
            "title": "Proxmox graphing"
        }, 
        {
            "location": "/Extensions/Proxmox/#proxmox-graphing", 
            "text": "It is possible to create graphs of the Proxmox  VMs  that run on your monitored machines. Currently, only traffic graphs are created. One for each interface on each VM. Possibly, IO graphs will be added later on.  The ultimate goal is to be able to create traffic bills for VMs, no matter on which physical machine that VM runs.", 
            "title": "Proxmox graphing"
        }, 
        {
            "location": "/Extensions/Proxmox/#enabling-proxmox-graphs", 
            "text": "To enable Proxmox graphs, do the following:  In config.php, enable Proxmox:  $config['enable_proxmox'] = 1;  Then, install git and  librenms-agent  on the machines running Proxmox and enable the Proxmox-script using:  cp /opt/librenms-agent/agent-local/proxmox /usr/lib/check_mk_agent/local/proxmox\nchmod +x /usr/lib/check_mk_agent/local/proxmox  Then, enable and start the check_mk service using systemd  cp /opt/librenms-agent/check_mk@.service /opt/librenms-agent/check_mk.socket /etc/systemd/system\nsystemctl daemon-reload\nsystemctl enable check_mk.socket   systemctl start check_mk.socket  Then in LibreNMS active the librenms-agent and proxmox application flag for the device you are monitoring.\nYou should now see an application in LibreNMS, as well as a new menu-item in the topmenu, allowing you to choose which cluster you want to look at.", 
            "title": "Enabling Proxmox graphs"
        }, 
        {
            "location": "/Extensions/Proxmox/#note-if-you-want-to-use-use-xinetd-instead-of-systemd", 
            "text": "Its possible to use the librenms-agent started by xinetd instead of systemd. One use case is if you are forced to use a old Proxmox installation.\nAfter installing the librenms-agent (see above) please copy enable the xinetd config, then restart the xinetd service:  cp check_mk_xinetd /etc/xinetd.d/check_mk\n/etc/init.d/xinetd restart", 
            "title": "Note, if you want to use use xinetd instead of systemd"
        }, 
        {
            "location": "/Extensions/Metric-Storage/", 
            "text": "Metric storage\n\n\nBy default we ship all metrics to RRD files, either directly or via \nRRDCached\n. On top of this \nyou can ship metrics to InfluxDB, Graphite and / or OpenTSDB. At present you can't use these backends to display \ngraphs within LibreNMS and will need to use something like \nGrafana\n.\n\n\nFor further information on configuring LibreNMS to ship data to one of the other backends then please see \nthe documentation below.\n\n\n\n\n\n\nInfluxDB\n\n\nGraphite\n\n\nOpenTSDB", 
            "title": "Intro"
        }, 
        {
            "location": "/Extensions/Metric-Storage/#metric-storage", 
            "text": "By default we ship all metrics to RRD files, either directly or via  RRDCached . On top of this \nyou can ship metrics to InfluxDB, Graphite and / or OpenTSDB. At present you can't use these backends to display \ngraphs within LibreNMS and will need to use something like  Grafana .  For further information on configuring LibreNMS to ship data to one of the other backends then please see \nthe documentation below.    InfluxDB  Graphite  OpenTSDB", 
            "title": "Metric storage"
        }, 
        {
            "location": "/Extensions/metrics/InfluxDB/", 
            "text": "Enabling support for InfluxDB.\n\n\nBefore we get started it is important that you know and understand that InfluxDB support is currently alpha at best.\nAll it provides is the sending of data to a InfluxDB install. Due to the current changes that are constantly being\nmade to InfluxDB itself then we cannot guarantee that your data will be ok so enabling this support is at your own\nrisk!\n\n\nRequirements\n\n\n\n\nInfluxDB \n= 0.94\n\n\nGrafana\n\n\nPHP 5.5 for InfluxDB-PHP\n\n\n\n\nThe setup of the above is completely out of scope here and we aren't really able to provide any help with this side\nof things.\n\n\nWhat you don't get\n\n\n\n\nPretty graphs, this is why at present you need Grafana. You need to build your own graphs within Grafana.\n\n\nSupport for InfluxDB or Grafana, we would highly recommend that you have some level of experience with these.\n\n\n\n\nRRD will continue to function as normal so LibreNMS itself should continue to function as normal.\n\n\nConfiguration\n\n\n$config['influxdb']['enable'] = true;\n$config['influxdb']['transport'] = 'http'; # Default, other options: https, udp\n$config['influxdb']['host'] = '127.0.0.1';\n$config['influxdb']['port'] = '8086';\n$config['influxdb']['db'] = 'librenms';\n$config['influxdb']['username'] = 'admin';\n$config['influxdb']['password'] = 'admin';\n$config['influxdb']['timeout'] = 0; # Optional\n$config['influxdb']['verifySSL'] = false; # Optional\n\n\n\n\nNo credentials are needed if you don't use InfluxDB authentication.\n\n\nThe same data then stored within rrd will be sent to InfluxDB and recorded. You can then create graphs within Grafana\nto display the information you need.", 
            "title": "Enabling support for InfluxDB."
        }, 
        {
            "location": "/Extensions/metrics/InfluxDB/#enabling-support-for-influxdb", 
            "text": "Before we get started it is important that you know and understand that InfluxDB support is currently alpha at best.\nAll it provides is the sending of data to a InfluxDB install. Due to the current changes that are constantly being\nmade to InfluxDB itself then we cannot guarantee that your data will be ok so enabling this support is at your own\nrisk!", 
            "title": "Enabling support for InfluxDB."
        }, 
        {
            "location": "/Extensions/metrics/InfluxDB/#requirements", 
            "text": "InfluxDB  = 0.94  Grafana  PHP 5.5 for InfluxDB-PHP   The setup of the above is completely out of scope here and we aren't really able to provide any help with this side\nof things.", 
            "title": "Requirements"
        }, 
        {
            "location": "/Extensions/metrics/InfluxDB/#what-you-dont-get", 
            "text": "Pretty graphs, this is why at present you need Grafana. You need to build your own graphs within Grafana.  Support for InfluxDB or Grafana, we would highly recommend that you have some level of experience with these.   RRD will continue to function as normal so LibreNMS itself should continue to function as normal.", 
            "title": "What you don't get"
        }, 
        {
            "location": "/Extensions/metrics/InfluxDB/#configuration", 
            "text": "$config['influxdb']['enable'] = true;\n$config['influxdb']['transport'] = 'http'; # Default, other options: https, udp\n$config['influxdb']['host'] = '127.0.0.1';\n$config['influxdb']['port'] = '8086';\n$config['influxdb']['db'] = 'librenms';\n$config['influxdb']['username'] = 'admin';\n$config['influxdb']['password'] = 'admin';\n$config['influxdb']['timeout'] = 0; # Optional\n$config['influxdb']['verifySSL'] = false; # Optional  No credentials are needed if you don't use InfluxDB authentication.  The same data then stored within rrd will be sent to InfluxDB and recorded. You can then create graphs within Grafana\nto display the information you need.", 
            "title": "Configuration"
        }, 
        {
            "location": "/Extensions/metrics/Graphite/", 
            "text": "Enabling support for Graphite.\n\n\nThis module sends all metrics to a remote graphite service. You need something like Grafana for graphing.\n\n\nWhat you don't get\n\n\n\n\nPretty graphs, this is why at present you need Grafana. You need to build your own graphs within Grafana.\n\n\n\n\nRRD will continue to function as normal so LibreNMS itself should continue to function as normal.\n\n\nConfiguration\n\n\n$config['graphite']['enable'] = true;\n$config['graphite']['host'] = 'your.graphite.server';\n$config['graphite']['port'] = 2003; // this defaults to 2003 and is usually not needed\n$config['graphite']['prefix'] = 'your.metric.prefix';\n\n\n\n\nYour metric path can be prefixed if required, otherwise the metric path for Graphite will be in the form of\n\nhostname.measurement.fieldname\n, interfaces will be stored as \nhostname.ports.ifName.fieldname\n.\n\n\nThe same data then stored within rrd will be sent to Graphite and recorded. You can then create graphs within Grafana\nto display the information you need.\n\n\nGraphite Configuration\n\n\nAs LibreNMS updates its metrics every 5 minutes, the following addition to your storage-schemas.conf is suggested.\n\n\n[network]\npattern = your\\.metric\\.prefix\\..*\nretentions = 5m:30d,15m:90d,1h:1y", 
            "title": "Enabling support for Graphite."
        }, 
        {
            "location": "/Extensions/metrics/Graphite/#enabling-support-for-graphite", 
            "text": "This module sends all metrics to a remote graphite service. You need something like Grafana for graphing.", 
            "title": "Enabling support for Graphite."
        }, 
        {
            "location": "/Extensions/metrics/Graphite/#what-you-dont-get", 
            "text": "Pretty graphs, this is why at present you need Grafana. You need to build your own graphs within Grafana.   RRD will continue to function as normal so LibreNMS itself should continue to function as normal.", 
            "title": "What you don't get"
        }, 
        {
            "location": "/Extensions/metrics/Graphite/#configuration", 
            "text": "$config['graphite']['enable'] = true;\n$config['graphite']['host'] = 'your.graphite.server';\n$config['graphite']['port'] = 2003; // this defaults to 2003 and is usually not needed\n$config['graphite']['prefix'] = 'your.metric.prefix';  Your metric path can be prefixed if required, otherwise the metric path for Graphite will be in the form of hostname.measurement.fieldname , interfaces will be stored as  hostname.ports.ifName.fieldname .  The same data then stored within rrd will be sent to Graphite and recorded. You can then create graphs within Grafana\nto display the information you need.", 
            "title": "Configuration"
        }, 
        {
            "location": "/Extensions/metrics/Graphite/#graphite-configuration", 
            "text": "As LibreNMS updates its metrics every 5 minutes, the following addition to your storage-schemas.conf is suggested.  [network]\npattern = your\\.metric\\.prefix\\..*\nretentions = 5m:30d,15m:90d,1h:1y", 
            "title": "Graphite Configuration"
        }, 
        {
            "location": "/Extensions/metrics/OpenTSDB/", 
            "text": "Enabling support for OpenTSDB.\n\n\nThis module sends all metrics to OpenTSDB server. You need something like Grafana for graphing.\n\n\nRequirements\n\n\n\n\nOpenTSDB\n\n\nGrafana\n\n\n\n\nWhat you don't get\n\n\n\n\nPretty graphs, this is why at present you need Grafana. You need to build your own graphs within Grafana.\n\n\n\n\nRRD will continue to function normally so LibreNMS itself should continue to function normally.\n\n\nYou can add the following to \nconfig.php\n.\n\n\nConfiguration\n\n\n// OpenTSDB default configuration\n$config['opentsdb']['enable'] = true;\n$config['opentsdb']['host'] = '127.0.0.1';  // your OpenTSDB server\n$config['opentsdb']['port'] = 4242;\n\n\n\n\nThe same data than the one stored within rrd will be sent to OpenTSDB and recorded. You can then create graphs within Grafana to display the information you need.", 
            "title": "Enabling support for OpenTSDB."
        }, 
        {
            "location": "/Extensions/metrics/OpenTSDB/#enabling-support-for-opentsdb", 
            "text": "This module sends all metrics to OpenTSDB server. You need something like Grafana for graphing.", 
            "title": "Enabling support for OpenTSDB."
        }, 
        {
            "location": "/Extensions/metrics/OpenTSDB/#requirements", 
            "text": "OpenTSDB  Grafana", 
            "title": "Requirements"
        }, 
        {
            "location": "/Extensions/metrics/OpenTSDB/#what-you-dont-get", 
            "text": "Pretty graphs, this is why at present you need Grafana. You need to build your own graphs within Grafana.   RRD will continue to function normally so LibreNMS itself should continue to function normally.  You can add the following to  config.php .", 
            "title": "What you don't get"
        }, 
        {
            "location": "/Extensions/metrics/OpenTSDB/#configuration", 
            "text": "// OpenTSDB default configuration\n$config['opentsdb']['enable'] = true;\n$config['opentsdb']['host'] = '127.0.0.1';  // your OpenTSDB server\n$config['opentsdb']['port'] = 4242;  The same data than the one stored within rrd will be sent to OpenTSDB and recorded. You can then create graphs within Grafana to display the information you need.", 
            "title": "Configuration"
        }, 
        {
            "location": "/Extensions/Smokeping/", 
            "text": "Smokeping integration\n\n\nWe currently have two ways to use Smokeping with LibreNMS, the first is using the included script generator to generate the config for Smokeping. The\nsecond is to utilise an existing Smokeping setup.\n\n\nIncluded Smokeping script\n\n\nTo use this, please add something similar to your smokeping config file:\n\n\n@include /opt/smokeping/etc/librenms.conf\n\n\n\n\nThen you need to generate the config file (maybe even add a cron to schedule this in and reload smokeping). We've assumed a few locations for smokeping, the config file you want\nto call it and where LibreNMS is:\n\n\ncd /opt/librenms/scripts/\nphp ./gen_smokeping.php \n /opt/smokeping/etc/librenms.conf\n/opt/smokeping/bin/smokeping --reload\n\n\n\n\nSample cron:\n\n\n15   0    * * * root cd /opt/librenms/scripts \n php ./gen_smokeping.php \n /opt/smokeping/etc/librenms.conf \n /opt/smokeping/bin/smokeping --reload \n /dev/null 2\n1\n\n\n\n\nNow configure LibreNMS (make sure you point dir to your smokeping data directory:\n\n\n$config['smokeping']['dir'] = '/opt/smokeping/data';\n$config['smokeping']['pings'] = 20;     // should be equal to \npings\n in your smokeping config\n$config['smokeping']['integration'] = true;\n\n\n\n\nStandard Smokeping\n\n\nThis is quite simple, just point your dir at the smokeping data directory - please be aware that all RRD files need to be within this dir and NOT sub dirs:\n\n\n$config['smokeping']['dir'] = '/opt/smokeping/data';\n$config['smokeping']['pings'] = 20;     // should be equal to \npings\n in your smokeping config\n$config['own_hostname']\n\n\n\n\nYou should now see a new tab in your device page called ping.\n\n\nInstall and integrate Smokeping [Debian/Ubuntu]\n\n\n\n\nThis guide assumes you have already \ninstalled librenms\n, and you installed apache2 in the process. Tested with Ubuntu 14.04 and Apache 2.4.\n\n\n\n\nNearly everything we do will require root, and at one point we'll encounter a problem if we just use sudo, so we'll just switch to root at the beginning...\n\n\nsudo su -\n\n\n\n\nInstall Smokeping\n\n\napt-get install smokeping\n\n\n\n\nAt the end of installation, you may have gotten this error: \nERROR: /etc/smokeping/config.d/pathnames, line 1: File '/usr/sbin/sendmail' does not exist\n\n\nIf so, just edit smokeping's pathnames.\n\n\nnano /etc/smokeping/config.d/pathnames\n\n\n\n\nComment out the first line:\n\n\n#sendmail = /usr/sbin/sendmail\n\n\n\n\nExit and save.\n\n\nCheck if the smokeping config file was created for apache2:\n\n\nls /etc/apache2/conf-available/\n\n\n\n\nIf you don't see \nsmokeping.conf\n listed, you'll need to create a symlink for it:\n\n\nln -s /etc/smokeping/apache2.conf /etc/apache2/conf-available/smokeping.conf\n\n\n\n\nEdit the smokeping config so smokeping knows the hostname it's running on:\n\n\nnano /etc/smokeping/config.d/General\n\n\n\n\nChange the \ncgiurl\n value to \nhttp://yourhost/cgi-bin/smokeping.cgi\n\nModify any other values you wish, then exit and save.\n\n\nLibreNMS integration\n\n\nSo far this is a relatively normal Smokeping installation; next we'll set up the LibreNMS integration.\n\n\nGenerate the configuration file so Smokeping knows the hosts you have set up for monitoring in LibreNMS.\n\n\ncd /opt/librenms/scripts/\n(echo \n+ LibreNMS\n; php ./gen_smokeping.php) \n /etc/smokeping/config.d/librenms.conf\n\n\n\n\nAdd a cron job so as you add or remove hosts in librenms they'll get updated with Smokeping.\n\n\ncrontab -e\n\n\n\n\nAdd the example cron below; it's set to run daily at 02:05\n\n\n05 02 * * * root cd /opt/librenms/scripts \n (echo \n+ LibreNMS\n; php ./gen_smokeping.php) \n /etc/smokeping/config.d/librenms.conf \n service smokeping reload \n /dev/null\n\n\n\n\nExit and save.\n\n\nInclude \nlibrenms.conf\n in smokeping's config:\n\n\nnano /etc/smokeping/config\n\n\n\n\nAdd the following line at the end:\n\n\n@include /etc/smokeping/config.d/librenms.conf\n\n\n\n\nExit and save.\n\n\nSmokeping and RRDCached\n\n\nIf you are using the standard smokeping data dir (/opt/smokeping/data) then you may need to alter the rrdcached config slightly.\n\n\nIn the standard configuration the -B argument may have been used to restrict rrdcached to read only from a single base dir.\n\n\nIf this is true, when you try an open one of the smokeping graphs from within LibreNMS you will see something like this error at the end of the rrdcached command:\n\n\nERROR: rrdcached: /var/lib/smokeping/\ndevice name\n.rrd: Permission denied\n\n\n\n\nSo you will need to either change the dir in which smokeping saves its rrd files to be the same as the main librenms dir or you can remove the -B argument from the rrdcached config to allow it to read from more than one dir.\n\n\nTo remove the -B switch:\n\n\nsudo nano /etc/default/rrdcached\n\n\n\n\nthen find:\n\n\nBASE_OPTIONS=\n\n\n\n\nIf -B is in the list of arguments delete it.\n\n\nConfigure LibreNMS\n\n\nnano /opt/librenms/config.php\n\n\n\n\nScroll to the bottom, and paste in the following:\n\n\n$config['smokeping']['dir'] = '/var/lib/smokeping';\n$config['smokeping']['pings'] = 20;     // should be equal to \npings\n in your smokeping config\n$config['smokeping']['integration'] = true;\n\n\n\n\nExit and save.\n\n\nRun the following commands:\n\n\na2enconf smokeping\na2enmod cgid\nservice apache2 restart\nservice smokeping restart\n\n\n\n\nReturn to your normal user shell\n\n\nexit\n\n\n\n\nDone! You should be able to load the Smokeping web interface at \nhttp://yourhost/cgi-bin/smokeping.cgi\n\nIn LibreNMS, a Ping tab should also appear.", 
            "title": "Smokeping integration"
        }, 
        {
            "location": "/Extensions/Smokeping/#smokeping-integration", 
            "text": "We currently have two ways to use Smokeping with LibreNMS, the first is using the included script generator to generate the config for Smokeping. The\nsecond is to utilise an existing Smokeping setup.", 
            "title": "Smokeping integration"
        }, 
        {
            "location": "/Extensions/Smokeping/#included-smokeping-script", 
            "text": "To use this, please add something similar to your smokeping config file:  @include /opt/smokeping/etc/librenms.conf  Then you need to generate the config file (maybe even add a cron to schedule this in and reload smokeping). We've assumed a few locations for smokeping, the config file you want\nto call it and where LibreNMS is:  cd /opt/librenms/scripts/\nphp ./gen_smokeping.php   /opt/smokeping/etc/librenms.conf\n/opt/smokeping/bin/smokeping --reload  Sample cron:  15   0    * * * root cd /opt/librenms/scripts   php ./gen_smokeping.php   /opt/smokeping/etc/librenms.conf   /opt/smokeping/bin/smokeping --reload   /dev/null 2 1  Now configure LibreNMS (make sure you point dir to your smokeping data directory:  $config['smokeping']['dir'] = '/opt/smokeping/data';\n$config['smokeping']['pings'] = 20;     // should be equal to  pings  in your smokeping config\n$config['smokeping']['integration'] = true;", 
            "title": "Included Smokeping script"
        }, 
        {
            "location": "/Extensions/Smokeping/#standard-smokeping", 
            "text": "This is quite simple, just point your dir at the smokeping data directory - please be aware that all RRD files need to be within this dir and NOT sub dirs:  $config['smokeping']['dir'] = '/opt/smokeping/data';\n$config['smokeping']['pings'] = 20;     // should be equal to  pings  in your smokeping config\n$config['own_hostname']  You should now see a new tab in your device page called ping.", 
            "title": "Standard Smokeping"
        }, 
        {
            "location": "/Extensions/Smokeping/#install-and-integrate-smokeping-debianubuntu", 
            "text": "This guide assumes you have already  installed librenms , and you installed apache2 in the process. Tested with Ubuntu 14.04 and Apache 2.4.   Nearly everything we do will require root, and at one point we'll encounter a problem if we just use sudo, so we'll just switch to root at the beginning...  sudo su -", 
            "title": "Install and integrate Smokeping [Debian/Ubuntu]"
        }, 
        {
            "location": "/Extensions/Smokeping/#install-smokeping", 
            "text": "apt-get install smokeping  At the end of installation, you may have gotten this error:  ERROR: /etc/smokeping/config.d/pathnames, line 1: File '/usr/sbin/sendmail' does not exist  If so, just edit smokeping's pathnames.  nano /etc/smokeping/config.d/pathnames  Comment out the first line:  #sendmail = /usr/sbin/sendmail  Exit and save.  Check if the smokeping config file was created for apache2:  ls /etc/apache2/conf-available/  If you don't see  smokeping.conf  listed, you'll need to create a symlink for it:  ln -s /etc/smokeping/apache2.conf /etc/apache2/conf-available/smokeping.conf  Edit the smokeping config so smokeping knows the hostname it's running on:  nano /etc/smokeping/config.d/General  Change the  cgiurl  value to  http://yourhost/cgi-bin/smokeping.cgi \nModify any other values you wish, then exit and save.", 
            "title": "Install Smokeping"
        }, 
        {
            "location": "/Extensions/Smokeping/#librenms-integration", 
            "text": "So far this is a relatively normal Smokeping installation; next we'll set up the LibreNMS integration.  Generate the configuration file so Smokeping knows the hosts you have set up for monitoring in LibreNMS.  cd /opt/librenms/scripts/\n(echo  + LibreNMS ; php ./gen_smokeping.php)   /etc/smokeping/config.d/librenms.conf  Add a cron job so as you add or remove hosts in librenms they'll get updated with Smokeping.  crontab -e  Add the example cron below; it's set to run daily at 02:05  05 02 * * * root cd /opt/librenms/scripts   (echo  + LibreNMS ; php ./gen_smokeping.php)   /etc/smokeping/config.d/librenms.conf   service smokeping reload   /dev/null  Exit and save.  Include  librenms.conf  in smokeping's config:  nano /etc/smokeping/config  Add the following line at the end:  @include /etc/smokeping/config.d/librenms.conf  Exit and save.", 
            "title": "LibreNMS integration"
        }, 
        {
            "location": "/Extensions/Smokeping/#smokeping-and-rrdcached", 
            "text": "If you are using the standard smokeping data dir (/opt/smokeping/data) then you may need to alter the rrdcached config slightly.  In the standard configuration the -B argument may have been used to restrict rrdcached to read only from a single base dir.  If this is true, when you try an open one of the smokeping graphs from within LibreNMS you will see something like this error at the end of the rrdcached command:  ERROR: rrdcached: /var/lib/smokeping/ device name .rrd: Permission denied  So you will need to either change the dir in which smokeping saves its rrd files to be the same as the main librenms dir or you can remove the -B argument from the rrdcached config to allow it to read from more than one dir.  To remove the -B switch:  sudo nano /etc/default/rrdcached  then find:  BASE_OPTIONS=  If -B is in the list of arguments delete it.", 
            "title": "Smokeping and RRDCached"
        }, 
        {
            "location": "/Extensions/Smokeping/#configure-librenms", 
            "text": "nano /opt/librenms/config.php  Scroll to the bottom, and paste in the following:  $config['smokeping']['dir'] = '/var/lib/smokeping';\n$config['smokeping']['pings'] = 20;     // should be equal to  pings  in your smokeping config\n$config['smokeping']['integration'] = true;  Exit and save.  Run the following commands:  a2enconf smokeping\na2enmod cgid\nservice apache2 restart\nservice smokeping restart  Return to your normal user shell  exit  Done! You should be able to load the Smokeping web interface at  http://yourhost/cgi-bin/smokeping.cgi \nIn LibreNMS, a Ping tab should also appear.", 
            "title": "Configure LibreNMS"
        }, 
        {
            "location": "/Extensions/Weathermap/", 
            "text": "Network-WeatherMap with LibreNMS\n\n\nIntegrating LibreNMS with Network-Weathermap, allows you to build network maps to help visulaize network traffic flow rates.\n\nLink\n to Network-Wearthermap Offical Website\n\n\nInstalling Network-WeatherMap\n\n\nStep 1.\n\n\nExtract to your LibreNMS plugins directory \n/opt/librenms/html/plugins\n so you should see something like \n/opt/librenms/html/plugins/Weathermap/\n\nThe best way to do this is via git. Go to your install directory and then \n/opt/librenms/html/plugins\n\nEnter:\n    \ngit clone https://github.com/librenms-plugins/Weathermap.git\n\n\nStep 2.\n\n\nInside the html/plugins directory, change the ownership of the Weathermap directory by typing \nchown -R librenms:librenms Weathermap/\n\nMake the configs directory writeable \nchmod 775 /opt/librenms/html/plugins/Weathermap/configs\n\nNote if you are using SELinux you need to input the following command \nchcon -R -t httpd_cache_t Weathermap/\n\n\nStep 3.\n\n\nEnable the cron process by editing your current LibreNMS cron file (typically /etc/cron.d/librenms) and add the following:\nLibreNMS:  \n*/5 * * * * librenms /opt/librenms/html/plugins/Weathermap/map-poller.php \n /dev/null 2\n1\n\n\nStep 4.\n\n\nEnable the plugin from LibreNMS Web UI in OverView -\nPlugins -\n Plugin Admin menu.\n\n\nStep 5.\n\n\nNow you should see Weathermap Overview -\n Plugins -\n Weathermap\nCreate your maps, please note when you create a MAP, please click Map Style, ensure Overlib is selected for HTML Style and click submit.\nAlso, ensure you set an output image filename and output HTML filename in Map Properties.\nI'd recommend you use the output folder as this is excluded from git updates (i.e enter output/mymap.png and output/mymap.html).\n\n\nOptional: If your install is in another directory than standard, set \n$basehref\n within \nmap-poller.php\n.\n\n\nAutomatically generate weathermaps from a LibreNMS database using WeatherMapper \nLink\n\n\n\n\nAdding your Network Weathermaps to the Dashboards\n\n\nOnce you have created your Network Weather Map you can add it to a dashboard page by doing the following.\n\n\nStep 1\n\n\nWhen you create the Weathermap make sure to export as HTML and PNG you will need this for the out to the dashboard.\n\n\nIn the Weathermap Plugin page, you will see the output maps. \nRight click\n on one of the maps and click on \ncopy image address\n.\n\n\nExample URL: \nhttp://yourlibrenms.org/plugins/Weathermap/output/yourmap.html\n\n\nStep 2\n\n\nThen go back to your Dashboard, create a new dashboard and give it a name. select the widget as \nExternal Images\n. \n\n\nGive the Widget a Title.\n\n\nThe \nImage URL\n will need to be the address you copied but at the end remove the \n.html\n and replace it with \n.png\n \n\n\nExample  \nImage URL\n \nhttp://yourlibrenms.org/plugins/Weathermap/output/yourmap.png\n\n\nThe \nTarget URL\n will be the URL you copied but with the \n.html\n at the end of the URL. \n\n\nExample \nTarget URL\n \nhttp://yourlibrenms.org/plugins/Weathermap/output/yourmap.html\n\n\nThen Click on Set\n\n\nYou should now be able to see the Weathermap you have created in your list of dashboards. You could also add this to existing dashboards.", 
            "title": "Network-WeatherMap with LibreNMS"
        }, 
        {
            "location": "/Extensions/Weathermap/#network-weathermap-with-librenms", 
            "text": "Integrating LibreNMS with Network-Weathermap, allows you to build network maps to help visulaize network traffic flow rates. Link  to Network-Wearthermap Offical Website", 
            "title": "Network-WeatherMap with LibreNMS"
        }, 
        {
            "location": "/Extensions/Weathermap/#installing-network-weathermap", 
            "text": "", 
            "title": "Installing Network-WeatherMap"
        }, 
        {
            "location": "/Extensions/Weathermap/#step-1", 
            "text": "Extract to your LibreNMS plugins directory  /opt/librenms/html/plugins  so you should see something like  /opt/librenms/html/plugins/Weathermap/ \nThe best way to do this is via git. Go to your install directory and then  /opt/librenms/html/plugins \nEnter:\n     git clone https://github.com/librenms-plugins/Weathermap.git", 
            "title": "Step 1."
        }, 
        {
            "location": "/Extensions/Weathermap/#step-2", 
            "text": "Inside the html/plugins directory, change the ownership of the Weathermap directory by typing  chown -R librenms:librenms Weathermap/ \nMake the configs directory writeable  chmod 775 /opt/librenms/html/plugins/Weathermap/configs \nNote if you are using SELinux you need to input the following command  chcon -R -t httpd_cache_t Weathermap/", 
            "title": "Step 2."
        }, 
        {
            "location": "/Extensions/Weathermap/#step-3", 
            "text": "Enable the cron process by editing your current LibreNMS cron file (typically /etc/cron.d/librenms) and add the following:\nLibreNMS:   */5 * * * * librenms /opt/librenms/html/plugins/Weathermap/map-poller.php   /dev/null 2 1", 
            "title": "Step 3."
        }, 
        {
            "location": "/Extensions/Weathermap/#step-4", 
            "text": "Enable the plugin from LibreNMS Web UI in OverView - Plugins -  Plugin Admin menu.", 
            "title": "Step 4."
        }, 
        {
            "location": "/Extensions/Weathermap/#step-5", 
            "text": "Now you should see Weathermap Overview -  Plugins -  Weathermap\nCreate your maps, please note when you create a MAP, please click Map Style, ensure Overlib is selected for HTML Style and click submit.\nAlso, ensure you set an output image filename and output HTML filename in Map Properties.\nI'd recommend you use the output folder as this is excluded from git updates (i.e enter output/mymap.png and output/mymap.html).  Optional: If your install is in another directory than standard, set  $basehref  within  map-poller.php .  Automatically generate weathermaps from a LibreNMS database using WeatherMapper  Link", 
            "title": "Step 5."
        }, 
        {
            "location": "/Extensions/Weathermap/#adding-your-network-weathermaps-to-the-dashboards", 
            "text": "Once you have created your Network Weather Map you can add it to a dashboard page by doing the following.", 
            "title": "Adding your Network Weathermaps to the Dashboards"
        }, 
        {
            "location": "/Extensions/Weathermap/#step-1_1", 
            "text": "When you create the Weathermap make sure to export as HTML and PNG you will need this for the out to the dashboard.  In the Weathermap Plugin page, you will see the output maps.  Right click  on one of the maps and click on  copy image address .  Example URL:  http://yourlibrenms.org/plugins/Weathermap/output/yourmap.html", 
            "title": "Step 1"
        }, 
        {
            "location": "/Extensions/Weathermap/#step-2_1", 
            "text": "Then go back to your Dashboard, create a new dashboard and give it a name. select the widget as  External Images .   Give the Widget a Title.  The  Image URL  will need to be the address you copied but at the end remove the  .html  and replace it with  .png    Example   Image URL   http://yourlibrenms.org/plugins/Weathermap/output/yourmap.png  The  Target URL  will be the URL you copied but with the  .html  at the end of the URL.   Example  Target URL   http://yourlibrenms.org/plugins/Weathermap/output/yourmap.html  Then Click on Set  You should now be able to see the Weathermap you have created in your list of dashboards. You could also add this to existing dashboards.", 
            "title": "Step 2"
        }, 
        {
            "location": "/API/", 
            "text": "Versioning\n\n\nVersioning an API is a minefield which saw us looking at numerous options on how to do this. Paul wrote an excellent blog post which touches on this: \nhttps://blog.librenms.org/2014/09/restful-apis/\n\n\nWe have currently settled on using versioning within the API end point itself \n/api/v0\n. As the API itself is new and still in active development we also decided that v0 would be the best starting point to indicate it's in development.\n\n\nTokens\n\n\nTo access any of the token end points you will be required to authenticate using a token. Tokens can be created directly from within the LibreNMS web interface by going to \n/api-access/\n.\n\n\n\n\nClick on 'Create API access token'.\n\n\nSelect the user you would like to generate the token for.\n\n\nEnter an optional description.\n\n\nClick Create API Token.\n\n\n\n\nEndpoints\n\n\nWhilst this documentation will describe and show examples of the end points, we've designed the API so you should be able to traverse through it without know any of the available API routes.\n\n\nYou can do this by first calling \n/api/v0\n:\n\n\ncurl -H 'X-Auth-Token: YOURAPITOKENHERE' https://librenms.org/api/v0\n\n\n\n\nOutput:\n\n\n{\n \nlist_bgp\n: \nhttps://librenms.org/api/v0/bgp\n,\n  ...\n \nedit_rule\n: \nhttps://librenms.org/api/v0/rules\n\n}\n\n\n\n\nInput\n\n\nInput to the API is done in three different ways, sometimes a combination two or three of these.\n\n\n\n\nPassing parameters via the api route. For example when obtaining a devices details you will pass the hostname of the device in the route: \n/api/v0/devices/:hostname\n.\n\n\nPassing parameters via the query string. For example you can list all devices on your install but limit the output to devices that are currently down: \n/api/v0/devices?type=down\n\n\nPassing data in via JSON, this will mainly be used when adding or updating information via the API, for instance adding a new device:\n\n\n\n\ncurl -X POST -d '{\nhostname\n:\nlocalhost.localdomain\n,\nversion\n:\nv1\n,\ncommunity\n:\npublic\n}'-H 'X-Auth-Token: YOURAPITOKENHERE' https://librenms.org/api/v0/devices\n\n\n\n\nOutput\n\n\nOutput from the API currently is via two output types.\n\n\n\n\nJSON Most API responses will output json. As show in the example for calling the API endpoint.\n\n\nPNG This is for when the request is for an image such as a graph for a switch port.\n\n\n\n\nEndpoint Categories\n\n\n\n\nDevices\n\n\nDeviceGroups\n\n\nPorts\n\n\nPortGroups\n\n\nAlerts\n\n\nRouting\n\n\nSwitching\n\n\nInventory\n\n\nBills\n\n\nARP\n\n\nServices\n\n\nLogs", 
            "title": "Using the API"
        }, 
        {
            "location": "/API/#versioning", 
            "text": "Versioning an API is a minefield which saw us looking at numerous options on how to do this. Paul wrote an excellent blog post which touches on this:  https://blog.librenms.org/2014/09/restful-apis/  We have currently settled on using versioning within the API end point itself  /api/v0 . As the API itself is new and still in active development we also decided that v0 would be the best starting point to indicate it's in development.", 
            "title": "Versioning"
        }, 
        {
            "location": "/API/#tokens", 
            "text": "To access any of the token end points you will be required to authenticate using a token. Tokens can be created directly from within the LibreNMS web interface by going to  /api-access/ .   Click on 'Create API access token'.  Select the user you would like to generate the token for.  Enter an optional description.  Click Create API Token.", 
            "title": "Tokens"
        }, 
        {
            "location": "/API/#endpoints", 
            "text": "Whilst this documentation will describe and show examples of the end points, we've designed the API so you should be able to traverse through it without know any of the available API routes.  You can do this by first calling  /api/v0 :  curl -H 'X-Auth-Token: YOURAPITOKENHERE' https://librenms.org/api/v0  Output:  {\n  list_bgp :  https://librenms.org/api/v0/bgp ,\n  ...\n  edit_rule :  https://librenms.org/api/v0/rules \n}", 
            "title": "Endpoints"
        }, 
        {
            "location": "/API/#input", 
            "text": "Input to the API is done in three different ways, sometimes a combination two or three of these.   Passing parameters via the api route. For example when obtaining a devices details you will pass the hostname of the device in the route:  /api/v0/devices/:hostname .  Passing parameters via the query string. For example you can list all devices on your install but limit the output to devices that are currently down:  /api/v0/devices?type=down  Passing data in via JSON, this will mainly be used when adding or updating information via the API, for instance adding a new device:   curl -X POST -d '{ hostname : localhost.localdomain , version : v1 , community : public }'-H 'X-Auth-Token: YOURAPITOKENHERE' https://librenms.org/api/v0/devices", 
            "title": "Input"
        }, 
        {
            "location": "/API/#output", 
            "text": "Output from the API currently is via two output types.   JSON Most API responses will output json. As show in the example for calling the API endpoint.  PNG This is for when the request is for an image such as a graph for a switch port.", 
            "title": "Output"
        }, 
        {
            "location": "/API/#endpoint-categories", 
            "text": "Devices  DeviceGroups  Ports  PortGroups  Alerts  Routing  Switching  Inventory  Bills  ARP  Services  Logs", 
            "title": "Endpoint Categories"
        }, 
        {
            "location": "/API/Devices/", 
            "text": "del_device\n\n\nDelete a given device.\n\n\nRoute: \n/api/v0/devices/:hostname\n\n\n\n\nhostname can be either the device hostname or id\n\n\n\n\nInput:\n\n\n-\n\n\nExample:\n\n\ncurl -X DELETE -H 'X-Auth-Token: YOURAPITOKENHERE' https://librenms.org/api/v0/devices/localhost\n\n\n\n\nOutput:\n\n\n{\n    \nstatus\n: \nok\n,\n    \nmessage\n: \nRemoved device localhost\n,\n    \ndevices\n: [\n        {\n            \ndevice_id\n: \n1\n,\n            \nhostname\n: \nlocalhost\n,\n            ...\n            \nserial\n: null,\n            \nicon\n: null\n        }\n    ]\n}\n\n\n\n\nget_device\n\n\nGet details of a given device.\n\n\nRoute: \n/api/v0/devices/:hostname\n\n\n\n\nhostname can be either the device hostname or id\n\n\n\n\nInput:\n\n\n-\n\n\nExample:\n\n\ncurl -H 'X-Auth-Token: YOURAPITOKENHERE' https://librenms.org/api/v0/devices/localhost\n\n\n\n\nOutput:\n\n\n{\n    \nstatus\n: \nok\n,\n    \ndevices\n: [\n        {\n            \ndevice_id\n: \n1\n,\n            \nhostname\n: \nlocalhost\n,\n            ...\n            \nserial\n: null,\n            \nicon\n: null\n        }\n    ]\n}\n\n\n\n\nget_graphs\n\n\nGet a list of available graphs for a device, this does not include ports.\n\n\nRoute: \n/api/v0/devices/:hostname/graphs\n\n\n\n\nhostname can be either the device hostname or id\n\n\n\n\nInput:\n\n\n-\n\n\nExample:\n\n\ncurl -H 'X-Auth-Token: YOURAPITOKENHERE' https://librenms.org/api/v0/devices/localhost/graphs\n\n\n\n\nOutput:\n\n\n{\n    \nstatus\n: \nok\n,\n    \nerr-msg\n: \n,\n    \ncount\n: 3,\n    \ngraphs\n: [\n        {\n            \ndesc\n: \nPoller Time\n,\n            \nname\n: \ndevice_poller_perf\n\n        },\n        {\n            \ndesc\n: \nPing Response\n,\n            \nname\n: \ndevice_ping_perf\n\n        },\n        {\n            \ndesc\n: \nSystem Uptime\n,\n            \nname\n: \nuptime\n\n        }\n    ]\n}\n\n\n\n\nlist_available_health_graphs\n\n\nThis function allows to do three things:\n\n\n\n\nGet a list of overall health graphs available.\n\n\nGet a list of health graphs based on provided class.\n\n\nGet the health sensors information based on ID.\n\n\n\n\nRoute: \n/api/v0/devices/:hostname/health(/:type)(/:sensor_id)\n\n\n\n\nhostname can be either the device hostname or id\n\n\ntype (optional) is health type / sensor class\n\n\nsensor_id (optional) is the sensor id to retrieve specific information.\n\n\n\n\nInput:\n\n\n-\n\n\nExample:\n\n\ncurl -H 'X-Auth-Token: YOURAPITOKENHERE' https://librenms.org/api/v0/devices/localhost/health\n\n\n\n\nOutput:\n\n\n{\n    \nstatus\n: \nok\n,\n    \nerr-msg\n: \n,\n    \ncount\n: 2,\n    \ngraphs\n: [\n        {\n            \ndesc\n: \nAirflow\n,\n            \nname\n: \ndevice_airflow\n\n        },\n        {\n            \ndesc\n: \nVoltage\n,\n            \nname\n: \ndevice_voltage\n\n        }\n    ]\n}\n\n\n\n\nExample:\n\n\ncurl -H 'X-Auth-Token: YOURAPITOKENHERE' https://librenms.org/api/v0/devices/localhost/health/device_voltage\n\n\n\n\nOutput:\n\n\n{\n    \nstatus\n: \nok\n,\n    \nerr-msg\n: \n,\n    \ncount\n: 2,\n    \ngraphs\n: [\n        {\n            \nsensor_id\n: \n1\n,\n            \ndesc\n: \nInput Feed A\n\n        },\n        {\n            \nsensor_id\n: \n2\n,\n            \ndesc\n: \nOutput Feed\n\n        }\n    ]\n}\n\n\n\n\nExample:\n\n\ncurl -H 'X-Auth-Token: YOURAPITOKENHERE' https://librenms.org/api/v0/devices/localhost/health/device_voltage/1\n\n\n\n\nOutput:\n\n\n{\n    \nstatus\n: \nok\n,\n    \nerr-msg\n: \n,\n    \ncount\n: 1,\n    \ngraphs\n: [\n        {\n            \nsensor_id\n: \n1\n,\n            \nsensor_deleted\n: \n0\n,\n            \nsensor_class\n: \nvoltage\n,\n            \ndevice_id\n: \n1\n,\n            \npoller_type\n: \nsnmp\n,\n            \nsensor_oid\n: \n.1.3.6.1.4.1.318.1.1.27.1.1.0\n,\n            \nsensor_index\n: \n1\n,\n            \nsensor_type\n: \napc\n,\n            \nsensor_descr\n: \nInput\n,\n            \nsensor_divisor\n: \n1\n,\n            \nsensor_multiplier\n: \n1\n,\n            \nsensor_current\n: \n1\n,\n            \nsensor_limit\n: \n1.15\n,\n            \nsensor_limit_warn\n: null,\n            \nsensor_limit_low\n: \n0.85\n,\n            \nsensor_limit_low_warn\n: null,\n            \nsensor_alert\n: \n1\n,\n            \nsensor_custom\n: \nNo\n,\n            \nentPhysicalIndex\n: null,\n            \nentPhysicalIndex_measured\n: null,\n            \nlastupdate\n: \n2017-01-13 13:50:26\n,\n            \nsensor_prev\n: \n1\n\n        }\n    ]\n}\n\n\n\n\nlist_available_wireless_graphs\n\n\nThis function allows to do three things:\n\n\n\n\nGet a list of overall wireless graphs available.\n\n\nGet a list of wireless graphs based on provided class.\n\n\nGet the wireless sensors information based on ID.\n\n\n\n\nRoute: \n/api/v0/devices/:hostname/wireless(/:type)(/:sensor_id)\n\n\n\n\nhostname can be either the device hostname or id\n\n\ntype (optional) is wireless type / wireless class\n\n\nsensor_id (optional) is the sensor id to retrieve specific information.\n\n\n\n\nInput:\n\n\n-\n\n\nExample:\n\n\ncurl -H 'X-Auth-Token: YOURAPITOKENHERE' https://librenms.org/api/v0/devices/localhost/wireless\n\n\n\n\nOutput:\n\n\n{\n    \nstatus\n: \nok\n,\n    \ngraphs\n: [\n        {\n            \ndesc\n: \nCcq\n,\n            \nname\n: \ndevice_wireless_ccq\n\n        },\n        {\n            \ndesc\n: \nClients\n,\n            \nname\n: \ndevice_wireless_clients\n\n        }\n    ],\n    \ncount\n: 2\n}\n\n\n\n\nExample:\n\n\ncurl -H 'X-Auth-Token: YOURAPITOKENHERE' https://librenms.org/api/v0/devices/localhost/wireless/device_wireless_ccq\n\n\n\n\nOutput:\n\n\n{\n    \nstatus\n: \nok\n,\n    \ngraphs\n: [\n        {\n            \nsensor_id\n: \n791\n,\n            \ndesc\n: \nSSID: bast (ng)\n\n        },\n        {\n            \nsensor_id\n: \n792\n,\n            \ndesc\n: \nSSID: bast (na)\n\n        }\n    ],\n    \ncount\n: 2\n}\n\n\n\n\nExample:\n\n\ncurl -H 'X-Auth-Token: YOURAPITOKENHERE' https://librenms.org/api/v0/devices/localhost/health/device_wireless_ccq/1\n\n\n\n\nOutput:\n\n\n{\n    \nstatus\n: \nok\n,\n    \ngraphs\n: [\n        {\n            \nsensor_id\n: \n791\n,\n            \nsensor_deleted\n: \n0\n,\n            \nsensor_class\n: \nccq\n,\n            \ndevice_id\n: \n381\n,\n            \nsensor_index\n: \n0\n,\n            \nsensor_type\n: \nunifi\n,\n            \nsensor_descr\n: \nSSID: bast (ng)\n,\n            \nsensor_divisor\n: \n10\n,\n            \nsensor_multiplier\n: \n1\n,\n            \nsensor_aggregator\n: \nsum\n,\n            \nsensor_current\n: \n100\n,\n            \nsensor_prev\n: \n100\n,\n            \nsensor_limit\n: null,\n            \nsensor_limit_warn\n: null,\n            \nsensor_limit_low\n: null,\n            \nsensor_limit_low_warn\n: null,\n            \nsensor_alert\n: \n1\n,\n            \nsensor_custom\n: \nNo\n,\n            \nentPhysicalIndex\n: null,\n            \nentPhysicalIndex_measured\n: null,\n            \nlastupdate\n: \n2017-12-06 21:26:29\n,\n            \nsensor_oids\n: \n[\\\n.1.3.6.1.4.1.41112.1.6.1.2.1.3.0\\\n]\n,\n            \naccess_point_id\n: null\n        }\n    ],\n    \ncount\n: 1\n}\n\n\n\n\nget_health_graph\n\n\nGet a particular health class graph for a device, if you provide a sensor_id as well then a single sensor graph\nwill be provided. If no sensor_id value is provided then you will be sent a stacked sensor graph.\n\n\nRoute: \n/api/v0/devices/:hostname/graphs/health/:type(/:sensor_id)\n\n\n\n\nhostname can be either the device hostname or id\n\n\ntype is the name of the health graph as returned by \nlist_available_health_graphs\n\n\nsensor_id (optional) restricts the graph to return a particular health sensor graph.\n\n\n\n\nInput:\n\n\n-\n\n\nExample:\n\n\ncurl -H 'X-Auth-Token: YOURAPITOKENHERE' https://librenms.org/api/v0/devices/localhost/graphs/health/device_voltage\n\n\n\n\nOutput:\n\n\nOutput is a stacked graph for the health type provided.\n\n\nExample:\n\n\ncurl -H 'X-Auth-Token: YOURAPITOKENHERE' https://librenms.org/api/v0/devices/localhost/graphs/health/device_voltage/1\n\n\n\n\nOutput:\n\n\nOutput is the graph of the particular health type sensor provided.\n\n\nget_wireless_graph\n\n\nGet a particular wireless class graph for a device, if you provide a sensor_id as well then a single sensor graph\nwill be provided. If no sensor_id value is provided then you will be sent a stacked wireless graph.\n\n\nRoute: \n/api/v0/devices/:hostname/graphs/wireless/:type(/:sensor_id)\n\n\n\n\nhostname can be either the device hostname or id\n\n\ntype is the name of the wireless graph as returned by \nlist_available_wireless_graphs\n\n\nsensor_id (optional) restricts the graph to return a particular wireless sensor graph.\n\n\n\n\nInput:\n\n\n-\n\n\nExample:\n\n\ncurl -H 'X-Auth-Token: YOURAPITOKENHERE' https://librenms.org/api/v0/devices/localhost/graphs/wireless/device_wireless_ccq\n\n\n\n\nOutput:\n\n\nOutput is a stacked graph for the wireless type provided.\n\n\nExample:\n\n\ncurl -H 'X-Auth-Token: YOURAPITOKENHERE' https://librenms.org/api/v0/devices/localhost/graphs/wireless/device_wireless_ccq/1\n\n\n\n\nOutput:\n\n\nOutput is the graph of the particular wireless type sensor provided.\n\n\nget_graph_generic_by_hostname\n\n\nGet a specific graph for a device, this does not include ports.\n\n\nRoute: \n/api/v0/devices/:hostname/:type\n\n\n\n\nhostname can be either the device hostname or id\n\n\ntype is the type of graph you want, use [\nget_graphs\n](#function-get_graphs to see the graphs available. Defaults to device_uptime.\n\n\n\n\nInput:\n\n\n\n\nfrom: This is the date you would like the graph to start - See http://oss.oetiker.ch/rrdtool/doc/rrdgraph.en.html for more information.\n\n\nto: This is the date you would like the graph to end - See http://oss.oetiker.ch/rrdtool/doc/rrdgraph.en.html for more information.\n\n\nwidth: The graph width, defaults to 1075.\n\n\nheight: The graph height, defaults to 300.\n\n\n\n\nExample:\n\n\ncurl -H 'X-Auth-Token: YOURAPITOKENHERE' https://librenms.org/api/v0/devices/localhost/device_poller_perf\n\n\n\n\nOutput:\n\n\nOutput is an image.\n\n\nget_port_graphs\n\n\nGet a list of ports for a particular device.\n\n\nRoute: \n/api/v0/devices/:hostname/ports\n\n\n\n\nhostname can be either the device hostname or id\n\n\n\n\nInput:\n\n\n\n\ncolumns: Comma separated list of columns you want returned.\n\n\n\n\nExample:\n\n\ncurl -H 'X-Auth-Token: YOURAPITOKENHERE' https://librenms.org/api/v0/devices/localhost/ports\n\n\n\n\nOutput:\n\n\n{\n    \nstatus\n: \nok\n,\n    \nerr-msg\n: \n,\n    \ncount\n: 3,\n    \nports\n: [\n        {\n            \nifName\n: \nlo\n\n        },\n        {\n            \nifName\n: \neth0\n\n        },\n        {\n            \nifName\n: \neth1\n\n        }\n    ]\n}\n\n\n\n\nget_device_ip_addresses\n\n\nGet a list of IP addresses (v4 and v6) associated with a device.\n\n\nRoute: \n/api/v0/devices/:hostname/ip\n\n\n\n\nhostname can be either the device hostname or id\n\n\n\n\nExample:\n\n\ncurl -H 'X-Auth-Token: YOURAPITOKENHERE' https://librenms.org/api/v0/devices/localhost/ip\n\n\n\n\nOutput:\n\n\n{\n    \nstatus\n: \nok\n,\n    \nerr-msg\n: \n,\n    \naddresses\n: [\n        {\n          \nipv4_address_id\n: \n290\n,\n          \nipv4_address\n: \n192.168.99.292\n,\n          \nipv4_prefixlen\n: \n30\n,\n          \nipv4_network_id\n: \n247\n,\n          \nport_id\n: \n323\n,\n          \ncontext_name\n: \n\n        }\n    ]\n}\n\n\n\n\nget_port_stack\n\n\nGet a list of port mappings for a device.  This is useful for showing physical ports that are in a virtual port-channel.\n\n\nRoute: \n/api/v0/devices/:hostname/port_stack\n\n\n\n\nhostname can be either the device hostname or id\n\n\n\n\nInput:\n\n\n\n\nvalid_mappings: Filter the result by only showing valid mappings (\"0\" values not shown).\n\n\n\n\nExample:\n\n\ncurl -H 'X-Auth-Token: YOURAPITOKENHERE' https://librenms.org/api/v0/devices/localhost/port_stack?valid_mappings\n\n\n\n\nOutput:\n\n\n{\n  \nstatus\n: \nok\n,\n  \nerr-msg\n: \n,\n  \ncount\n: 2,\n  \nmappings\n: [\n    {\n      \ndevice_id\n: \n3742\n,\n      \nport_id_high\n: \n1001000\n,\n      \nport_id_low\n: \n51001\n,\n      \nifStackStatus\n: \nactive\n\n    },\n    {\n      \ndevice_id\n: \n3742\n,\n      \nport_id_high\n: \n1001000\n,\n      \nport_id_low\n: \n52001\n,\n      \nifStackStatus\n: \nactive\n\n    }\n  ]\n}\n\n\n\n\nget_components\n\n\nGet a list of components for a particular device.\n\n\nRoute: \n/api/v0/devices/:hostname/components\n\n\n\n\nhostname can be either the device hostname or id\n\n\n\n\nInput:\n\n\n\n\ntype: Filter the result by type (Equals).\n\n\nid: Filter the result by id (Equals).\n\n\nlabel: Filter the result by label (Contains).\n\n\nstatus: Filter the result by status (Equals).\n\n\ndisabled: Filter the result by disabled (Equals).\n\n\nignore: Filter the result by ignore (Equals).\n\n\n\n\nExample:\n\n\ncurl -H 'X-Auth-Token: YOURAPITOKENHERE' https://librenms.org/api/v0/devices/localhost/components\n\n\n\n\nOutput:\n\n\n{\n    \nstatus\n: \nok\n,\n    \nerr-msg\n: \n,\n    \ncount\n: 3,\n    \ncomponents\n: {\n        \n2\n: {\n            \nTestAttribute-1\n: \nValue1\n,\n            \nTestAttribute-2\n: \nValue2\n,\n            \nTestAttribute-3\n: \nValue3\n,\n            \ntype\n: \nTestComponent-1\n,\n            \nlabel\n: \nThis is a really cool blue component\n,\n            \nstatus\n: \n1\n,\n            \nignore\n: \n0\n,\n            \ndisabled\n: \n0\n\n        },\n        \n20\n: {\n            \nTestAttribute-1\n: \nValue4\n,\n            \nTestAttribute-2\n: \nValue5\n,\n            \nTestAttribute-3\n: \nValue6\n,\n            \ntype\n: \nTestComponent-1\n,\n            \nlabel\n: \nThis is a really cool red component\n,\n            \nstatus\n: \n1\n,\n            \nignore\n: \n0\n,\n            \ndisabled\n: \n0\n\n        },\n        \n27\n: {\n            \nTestAttribute-1\n: \nValue7\n,\n            \nTestAttribute-2\n: \nValue8\n,\n            \nTestAttribute-3\n: \nValue9\n,\n            \ntype\n: \nTestComponent-2\n,\n            \nlabel\n: \nThis is a really cool yellow widget\n,\n            \nstatus\n: \n1\n,\n            \nignore\n: \n0\n,\n            \ndisabled\n: \n0\n\n        }\n    }\n}\n\n\n\n\nadd_components\n\n\nCreate a new component of a type on a particular device.\n\n\nRoute: \n/api/v0/devices/:hostname/components/:type\n\n\n\n\nhostname can be either the device hostname or id\n\n\ntype is the type of component to add\n\n\n\n\nExample:\n\n\ncurl -X POST -H 'X-Auth-Token: YOURAPITOKENHERE' https://librenms.org/api/v0/devices/localhost/components/APITEST\n\n\n\n\nOutput:\n\n\n{\n    \nstatus\n: \nok\n,\n    \nerr-msg\n: \n,\n    \ncount\n: 1,\n    \ncomponents\n: {\n        \n4459\n: {\n            \ntype\n: \nAPITEST\n,\n            \nlabel\n: \n,\n            \nstatus\n: 1,\n            \nignore\n: 0,\n            \ndisabled\n: 0,\n            \nerror\n: \n\n        }\n    }\n}\n\n\n\n\nedit_components\n\n\nEdit an existing component on a particular device.\n\n\nRoute: \n/api/v0/devices/:hostname/components\n\n\n\n\nhostname can be either the device hostname or id\n\n\n\n\nIn this example we set the label and add a new field: TestField:\n\n\ncurl -X PUT -d '{\n4459\n: {\ntype\n: \nAPITEST\n,\nlabel\n: \nThis is a test label\n,\nstatus\n: 1,\nignore\n: 0,\ndisabled\n: 0,\nerror\n: \n,\nTestField\n: \nTestData\n}}' -H 'X-Auth-Token: YOURAPITOKENHERE' https://librenms.org/api/v0/devices/localhost/components\n\n\n\n\nOutput:\n\n\n{\n    \nstatus\n: \nok\n,\n    \nerr-msg\n: \n,\n    \ncount\n: 1\n}\n\n\n\n\nJust take the JSON array from add_components or edit_components, edit as you wish and submit it back to edit_components.\n\n\ndelete_components\n\n\nDelete an existing component on a particular device.\n\n\nRoute: \n/api/v0/devices/:hostname/components/:component\n\n\n\n\nhostname can be either the device hostname or id\n\n\ncomponent is the component ID to be deleted.\n\n\n\n\nExample:\n\n\ncurl -X DELETE -H 'X-Auth-Token: YOURAPITOKENHERE' https://librenms.org/api/v0/devices/localhost/components/4459\n\n\n\n\nOutput:\n\n\n{\n    \nstatus\n: \nok\n,\n    \nerr-msg\n: \n\n}\n\n\n\n\nget_port_stats_by_port_hostname\n\n\nGet information about a particular port for a device.\n\n\nRoute: \n/api/v0/devices/:hostname/ports/:ifname\n\n\n\n\nhostname can be either the device hostname or id\n\n\nifname can be any of the interface names for the device which can be obtained using \nget_port_graphs\n. Please ensure that the ifname is urlencoded if it needs to be (i.e Gi0/1/0 would need to be urlencoded.\n\n\n\n\nInput:\n\n\n\n\ncolumns: Comma separated list of columns you want returned.\n\n\n\n\nExample:\n\n\ncurl -H 'X-Auth-Token: YOURAPITOKENHERE' https://librenms.org/api/v0/devices/localhost/ports/eth0\n\n\n\n\nOutput:\n\n\n{\n \nstatus\n: \nok\n,\n \nport\n: {\n  \nport_id\n: \n2\n,\n  \ndevice_id\n: \n1\n,\n  ...\n  \npoll_prev\n: \n1418412902\n,\n  \npoll_period\n: \n300\n\n }\n}\n\n\n\n\nget_graph_by_port_hostname\n\n\nGet a graph of a port for a particular device.\n\n\nRoute: \n/api/v0/devices/:hostname/ports/:ifname/:type\n\n\n\n\nhostname can be either the device hostname or id\n\n\nifname can be any of the interface names for the device which can be obtained using \nget_port_graphs\n. Please ensure that the ifname is urlencoded if it needs to be (i.e Gi0/1/0 would need to be urlencoded.\n\n\ntype is the port type you want the graph for, you can request a list of ports for a device with \nget_port_graphs\n.\n\n\n\n\nInput:\n\n\n\n\nfrom: This is the date you would like the graph to start - See http://oss.oetiker.ch/rrdtool/doc/rrdgraph.en.html for more information.\n\n\nto: This is the date you would like the graph to end - See http://oss.oetiker.ch/rrdtool/doc/rrdgraph.en.html for more information.\n\n\nwidth: The graph width, defaults to 1075.\n\n\nheight: The graph height, defaults to 300.\n\n\nifDescr: If this is set to true then we will use ifDescr to lookup the port instead of ifName. Pass the ifDescr value you want to search as you would ifName.\n\n\n\n\nExample:\n\n\ncurl -H 'X-Auth-Token: YOURAPITOKENHERE' https://librenms.org/api/v0/devices/localhost/ports/eth0/port_bits\n\n\n\n\nOutput:\n\n\nOutput is an image.\n\n\nlist_locations\n\n\nReturn a list of locations.\n\n\nRoute: \n/api/v0/resources/locations\n\n\nInput:\n\n\n-\n\n\nExample:\n\n\ncurl -H 'X-Auth-Token: YOURAPITOKENHERE' https://librenms.org/api/v0/resources/locations\n\n\n\n\nOutput:\n\n\n{\n    \nstatus\n: \nok\n,\n    \nlocations\n: [\n        {\n            \nid\n: \n1\n,\n            \nlocation\n: \nExample location, Example city, Example Country\n,\n            \nlat\n: \n-18.911436\n,\n            \nlng\n: \n47.517446\n,\n            \ntimestamp\n: \n2017-04-01 02:40:05\n\n        },\n        ...\n    ],\n    \ncount\n: 100\n}\n\n\n\n\nlist_devices\n\n\nReturn a list of devices.\n\n\nRoute: \n/api/v0/devices\n\n\nInput:\n\n\n\n\norder: How to order the output, default is by hostname. Can be prepended by DESC or ASC to change the order.\n\n\ntype: can be one of the following to filter or search by:\n\n\nall: All devices\n\n\nignored: Only ignored devices\n\n\nup: Only devices that are up\n\n\ndown: Only devices that are down\n\n\ndisabled: Disabled devices\n\n\nos: search by os type\n\n\nmac: search by mac address\n\n\nipv4: search by IPv4 address\n\n\nipv6: search by IPv6 address (compressed or uncompressed)\n\n\nlocation: search by location\n\n\n\n\n\n\nquery: If searching by, then this will be used as the input.\nExample:\n\n\n\n\ncurl -H 'X-Auth-Token: YOURAPITOKENHERE' https://librenms.org/api/v0/devices?order=hostname%20DESC\ntype=down\n\n\n\n\nOutput:\n\n\n{\n \nstatus\n: \nok\n,\n \ncount\n: 1,\n \ndevices\n: [\n  {\n   \ndevice_id\n: \n1\n,\n   \nhostname\n: \nlocalhost\n,\n   ...\n   \nserial\n: null,\n   \nicon\n: null\n  }\n ]\n}\n\n\n\n\nExample:\n\n\ncurl -H 'X-Auth-Token: YOURAPITOKENHERE' https://librenms.org/api/v0/devices?type=mac\nquery=00000c9ff013\n\n\n\n\nOutput:\n\n\n{\n \nstatus\n: \nok\n,\n \ncount\n: 1,\n \ndevices\n: [\n  {\n   \ndevice_id\n: \n1\n,\n   \nhostname\n: \nlocalhost\n,\n   ...\n   \nserial\n: null,\n   \nicon\n: null\n  }\n ]\n}\n\n\n\n\nadd_device\n\n\nAdd a new device.\n\n\nRoute: \n/api/v0/devices\n\n\nInput (JSON):\n\n\n\n\nhostname: device hostname\n\n\nport: SNMP port (defaults to port defined in config).\n\n\ntransport: SNMP protocol (defaults to transport defined in config).\n\n\nversion: SNMP version to use, v1, v2c or v3. Defaults to v2c.\n\n\npoller_group: This is the poller_group id used for distributed poller setup. Defaults to 0.\n\n\nforce_add: Force the device to be added regardless of it being able to respond to snmp or icmp.\n\n\n\n\nFor SNMP v1 or v2c\n\n\n\n\ncommunity: Required for SNMP v1 or v2c.\n\n\n\n\nFor SNMP v3\n\n\n\n\nauthlevel: SNMP authlevel (NoAuthNoPriv, AuthNoPriv, AuthPriv).\n\n\nauthname: SNMP Auth username\n\n\nauthpass: SNMP Auth password\n\n\nauthalgo: SNMP Auth algorithm (MD5, SHA)\n\n\ncryptopass: SNMP Crypto Password\n\n\ncryptoalgo: SNMP Crypto algorithm (AES, DES)\n\n\n\n\nFor ICMP only\n\n\n\n\nsnmp_disable: Boolean, set to true for ICMP only.\n\n\nos: OS short name for the device (defaults to ping).\n\n\nhardware: Device hardware.\n\n\n\n\nExample:\n\n\ncurl -X POST -d '{\nhostname\n:\nlocalhost.localdomain\n,\nversion\n:\nv1\n,\ncommunity\n:\npublic\n}' -H 'X-Auth-Token: YOURAPITOKENHERE' https://librenms.org/api/v0/devices\n\n\n\n\nOutput:\n\n\n{\n    \nstatus\n: \nok\n,\n    \nmessage\n: \nDevice localhost.localdomain (57) has been added successfully\n\n}\n\n\n\n\nlist_oxidized\n\n\nList devices for use with Oxidized. If you have group support enabled then a group will also be returned based on your config.\n\n\nRoute: \n/api/v0/oxidized(/:hostname)\n\n\nInput (JSON):\n\n\n-\n\n\nExamples:\n\n\ncurl -H 'X-Auth-Token: YOURAPITOKENHERE' https://librenms.org/api/v0/oxidized\n\n\n\n\nOutput:\n\n\n[\n    {\n        \nhostname\n: \nlocalhost\n,\n        \nos\n: \nlinux\n\n    },\n    {\n        \nhostname\n: \notherserver\n,\n        \nos\n: \nlinux\n\n    }\n]\n\n\n\n\nupdate_device_field\n\n\nUpdate devices field in the database.\n\n\nRoute: \n/api/v0/devices/:hostname\n\n\n\n\nhostname can be either the device hostname or id\n\n\n\n\nInput (JSON):\n\n\n\n\nfield: The column name within the database (can be an array of fields)\n\n\ndata: The data to update the column with (can be an array of data))\n\n\n\n\nExamples:\n\n\ncurl -X PATCH -d '{\nfield\n: \nnotes\n, \ndata\n: \nThis server should be kept online\n}' -H 'X-Auth-Token: YOURAPITOKENHERE' https://librenms.org/api/v0/devices/localhost\n\n\n\n\nOutput:\n\n\n[\n    {\n        \nstatus\n: \nok\n,\n        \nmessage\n: \nDevice notes has been updated\n\n    }\n]\n\n\n\n\ncurl -X PATCH -d '{\nfield\n: [\nnotes\n,\npurpose\n], \ndata\n: [\nThis server should be kept online\n, \nFor serving web traffic\n]}' -H 'X-Auth-Token: YOURAPITOKENHERE' https://librenms.org/api/v0/devices/localhost\n\n\n\n\nOutput:\n\n\n[\n    {\n        \nstatus\n: \nok\n,\n        \nmessage\n: \nDevice fields have been updated\n\n    }\n]\n\n\n\n\nrename_device\n\n\nRename device.\n\n\nRoute: \n/api/v0/devices/:hostname/rename/:new_hostname\n\n\n\n\nhostname can be either the device hostname or id\n\n\n\n\nInput:\n\n\n-\n\n\nExamples:\n\n\ncurl -X PATCH  -H 'X-Auth-Token: YOURAPITOKENHERE' https://librenms.org/api/v0/devices/localhost/rename/localhost2\n\n\n\n\nOutput:\n\n\n[\n    {\n        \nstatus\n: \nok\n,\n        \nmessage\n: \nDevice has been renamed\n\n    }\n]\n\n\n\n\nget_device_groups\n\n\nList the device groups that a device is matched on.\n\n\nRoute: \n/api/v0/devices/:hostname/groups\n\n\n\n\nhostname can be either the device hostname or id\n\n\n\n\nInput (JSON):\n\n\n-\n\n\nExamples:\n\n\ncurl -H 'X-Auth-Token: YOURAPITOKENHERE' https://librenms.org/api/v0/devices/localhost/groups\n\n\n\n\nOutput:\n\n\n[\n    {\n        \nstatus\n: \nok\n,\n        \nmessage\n: \nFound 1 device groups\n,\n        \ncount\n: 1,\n        \ngroups\n: [\n        {\n            \nid\n: \n1\n,\n            \nname\n: \nTesting\n,\n            \ndesc\n: \nTesting\n,\n            \npattern\n: \n%devices.status = \\\n1\\\n \n\n        }\n        ]\n    }\n]", 
            "title": "Devices"
        }, 
        {
            "location": "/API/Devices/#del_device", 
            "text": "Delete a given device.  Route:  /api/v0/devices/:hostname   hostname can be either the device hostname or id   Input:  -  Example:  curl -X DELETE -H 'X-Auth-Token: YOURAPITOKENHERE' https://librenms.org/api/v0/devices/localhost  Output:  {\n     status :  ok ,\n     message :  Removed device localhost ,\n     devices : [\n        {\n             device_id :  1 ,\n             hostname :  localhost ,\n            ...\n             serial : null,\n             icon : null\n        }\n    ]\n}", 
            "title": "del_device"
        }, 
        {
            "location": "/API/Devices/#get_device", 
            "text": "Get details of a given device.  Route:  /api/v0/devices/:hostname   hostname can be either the device hostname or id   Input:  -  Example:  curl -H 'X-Auth-Token: YOURAPITOKENHERE' https://librenms.org/api/v0/devices/localhost  Output:  {\n     status :  ok ,\n     devices : [\n        {\n             device_id :  1 ,\n             hostname :  localhost ,\n            ...\n             serial : null,\n             icon : null\n        }\n    ]\n}", 
            "title": "get_device"
        }, 
        {
            "location": "/API/Devices/#get_graphs", 
            "text": "Get a list of available graphs for a device, this does not include ports.  Route:  /api/v0/devices/:hostname/graphs   hostname can be either the device hostname or id   Input:  -  Example:  curl -H 'X-Auth-Token: YOURAPITOKENHERE' https://librenms.org/api/v0/devices/localhost/graphs  Output:  {\n     status :  ok ,\n     err-msg :  ,\n     count : 3,\n     graphs : [\n        {\n             desc :  Poller Time ,\n             name :  device_poller_perf \n        },\n        {\n             desc :  Ping Response ,\n             name :  device_ping_perf \n        },\n        {\n             desc :  System Uptime ,\n             name :  uptime \n        }\n    ]\n}", 
            "title": "get_graphs"
        }, 
        {
            "location": "/API/Devices/#list_available_health_graphs", 
            "text": "This function allows to do three things:   Get a list of overall health graphs available.  Get a list of health graphs based on provided class.  Get the health sensors information based on ID.   Route:  /api/v0/devices/:hostname/health(/:type)(/:sensor_id)   hostname can be either the device hostname or id  type (optional) is health type / sensor class  sensor_id (optional) is the sensor id to retrieve specific information.   Input:  -  Example:  curl -H 'X-Auth-Token: YOURAPITOKENHERE' https://librenms.org/api/v0/devices/localhost/health  Output:  {\n     status :  ok ,\n     err-msg :  ,\n     count : 2,\n     graphs : [\n        {\n             desc :  Airflow ,\n             name :  device_airflow \n        },\n        {\n             desc :  Voltage ,\n             name :  device_voltage \n        }\n    ]\n}  Example:  curl -H 'X-Auth-Token: YOURAPITOKENHERE' https://librenms.org/api/v0/devices/localhost/health/device_voltage  Output:  {\n     status :  ok ,\n     err-msg :  ,\n     count : 2,\n     graphs : [\n        {\n             sensor_id :  1 ,\n             desc :  Input Feed A \n        },\n        {\n             sensor_id :  2 ,\n             desc :  Output Feed \n        }\n    ]\n}  Example:  curl -H 'X-Auth-Token: YOURAPITOKENHERE' https://librenms.org/api/v0/devices/localhost/health/device_voltage/1  Output:  {\n     status :  ok ,\n     err-msg :  ,\n     count : 1,\n     graphs : [\n        {\n             sensor_id :  1 ,\n             sensor_deleted :  0 ,\n             sensor_class :  voltage ,\n             device_id :  1 ,\n             poller_type :  snmp ,\n             sensor_oid :  .1.3.6.1.4.1.318.1.1.27.1.1.0 ,\n             sensor_index :  1 ,\n             sensor_type :  apc ,\n             sensor_descr :  Input ,\n             sensor_divisor :  1 ,\n             sensor_multiplier :  1 ,\n             sensor_current :  1 ,\n             sensor_limit :  1.15 ,\n             sensor_limit_warn : null,\n             sensor_limit_low :  0.85 ,\n             sensor_limit_low_warn : null,\n             sensor_alert :  1 ,\n             sensor_custom :  No ,\n             entPhysicalIndex : null,\n             entPhysicalIndex_measured : null,\n             lastupdate :  2017-01-13 13:50:26 ,\n             sensor_prev :  1 \n        }\n    ]\n}", 
            "title": "list_available_health_graphs"
        }, 
        {
            "location": "/API/Devices/#list_available_wireless_graphs", 
            "text": "This function allows to do three things:   Get a list of overall wireless graphs available.  Get a list of wireless graphs based on provided class.  Get the wireless sensors information based on ID.   Route:  /api/v0/devices/:hostname/wireless(/:type)(/:sensor_id)   hostname can be either the device hostname or id  type (optional) is wireless type / wireless class  sensor_id (optional) is the sensor id to retrieve specific information.   Input:  -  Example:  curl -H 'X-Auth-Token: YOURAPITOKENHERE' https://librenms.org/api/v0/devices/localhost/wireless  Output:  {\n     status :  ok ,\n     graphs : [\n        {\n             desc :  Ccq ,\n             name :  device_wireless_ccq \n        },\n        {\n             desc :  Clients ,\n             name :  device_wireless_clients \n        }\n    ],\n     count : 2\n}  Example:  curl -H 'X-Auth-Token: YOURAPITOKENHERE' https://librenms.org/api/v0/devices/localhost/wireless/device_wireless_ccq  Output:  {\n     status :  ok ,\n     graphs : [\n        {\n             sensor_id :  791 ,\n             desc :  SSID: bast (ng) \n        },\n        {\n             sensor_id :  792 ,\n             desc :  SSID: bast (na) \n        }\n    ],\n     count : 2\n}  Example:  curl -H 'X-Auth-Token: YOURAPITOKENHERE' https://librenms.org/api/v0/devices/localhost/health/device_wireless_ccq/1  Output:  {\n     status :  ok ,\n     graphs : [\n        {\n             sensor_id :  791 ,\n             sensor_deleted :  0 ,\n             sensor_class :  ccq ,\n             device_id :  381 ,\n             sensor_index :  0 ,\n             sensor_type :  unifi ,\n             sensor_descr :  SSID: bast (ng) ,\n             sensor_divisor :  10 ,\n             sensor_multiplier :  1 ,\n             sensor_aggregator :  sum ,\n             sensor_current :  100 ,\n             sensor_prev :  100 ,\n             sensor_limit : null,\n             sensor_limit_warn : null,\n             sensor_limit_low : null,\n             sensor_limit_low_warn : null,\n             sensor_alert :  1 ,\n             sensor_custom :  No ,\n             entPhysicalIndex : null,\n             entPhysicalIndex_measured : null,\n             lastupdate :  2017-12-06 21:26:29 ,\n             sensor_oids :  [\\ .1.3.6.1.4.1.41112.1.6.1.2.1.3.0\\ ] ,\n             access_point_id : null\n        }\n    ],\n     count : 1\n}", 
            "title": "list_available_wireless_graphs"
        }, 
        {
            "location": "/API/Devices/#get_health_graph", 
            "text": "Get a particular health class graph for a device, if you provide a sensor_id as well then a single sensor graph\nwill be provided. If no sensor_id value is provided then you will be sent a stacked sensor graph.  Route:  /api/v0/devices/:hostname/graphs/health/:type(/:sensor_id)   hostname can be either the device hostname or id  type is the name of the health graph as returned by  list_available_health_graphs  sensor_id (optional) restricts the graph to return a particular health sensor graph.   Input:  -  Example:  curl -H 'X-Auth-Token: YOURAPITOKENHERE' https://librenms.org/api/v0/devices/localhost/graphs/health/device_voltage  Output:  Output is a stacked graph for the health type provided.  Example:  curl -H 'X-Auth-Token: YOURAPITOKENHERE' https://librenms.org/api/v0/devices/localhost/graphs/health/device_voltage/1  Output:  Output is the graph of the particular health type sensor provided.", 
            "title": "get_health_graph"
        }, 
        {
            "location": "/API/Devices/#get_wireless_graph", 
            "text": "Get a particular wireless class graph for a device, if you provide a sensor_id as well then a single sensor graph\nwill be provided. If no sensor_id value is provided then you will be sent a stacked wireless graph.  Route:  /api/v0/devices/:hostname/graphs/wireless/:type(/:sensor_id)   hostname can be either the device hostname or id  type is the name of the wireless graph as returned by  list_available_wireless_graphs  sensor_id (optional) restricts the graph to return a particular wireless sensor graph.   Input:  -  Example:  curl -H 'X-Auth-Token: YOURAPITOKENHERE' https://librenms.org/api/v0/devices/localhost/graphs/wireless/device_wireless_ccq  Output:  Output is a stacked graph for the wireless type provided.  Example:  curl -H 'X-Auth-Token: YOURAPITOKENHERE' https://librenms.org/api/v0/devices/localhost/graphs/wireless/device_wireless_ccq/1  Output:  Output is the graph of the particular wireless type sensor provided.", 
            "title": "get_wireless_graph"
        }, 
        {
            "location": "/API/Devices/#get_graph_generic_by_hostname", 
            "text": "Get a specific graph for a device, this does not include ports.  Route:  /api/v0/devices/:hostname/:type   hostname can be either the device hostname or id  type is the type of graph you want, use [ get_graphs ](#function-get_graphs to see the graphs available. Defaults to device_uptime.   Input:   from: This is the date you would like the graph to start - See http://oss.oetiker.ch/rrdtool/doc/rrdgraph.en.html for more information.  to: This is the date you would like the graph to end - See http://oss.oetiker.ch/rrdtool/doc/rrdgraph.en.html for more information.  width: The graph width, defaults to 1075.  height: The graph height, defaults to 300.   Example:  curl -H 'X-Auth-Token: YOURAPITOKENHERE' https://librenms.org/api/v0/devices/localhost/device_poller_perf  Output:  Output is an image.", 
            "title": "get_graph_generic_by_hostname"
        }, 
        {
            "location": "/API/Devices/#get_port_graphs", 
            "text": "Get a list of ports for a particular device.  Route:  /api/v0/devices/:hostname/ports   hostname can be either the device hostname or id   Input:   columns: Comma separated list of columns you want returned.   Example:  curl -H 'X-Auth-Token: YOURAPITOKENHERE' https://librenms.org/api/v0/devices/localhost/ports  Output:  {\n     status :  ok ,\n     err-msg :  ,\n     count : 3,\n     ports : [\n        {\n             ifName :  lo \n        },\n        {\n             ifName :  eth0 \n        },\n        {\n             ifName :  eth1 \n        }\n    ]\n}", 
            "title": "get_port_graphs"
        }, 
        {
            "location": "/API/Devices/#get_device_ip_addresses", 
            "text": "Get a list of IP addresses (v4 and v6) associated with a device.  Route:  /api/v0/devices/:hostname/ip   hostname can be either the device hostname or id   Example:  curl -H 'X-Auth-Token: YOURAPITOKENHERE' https://librenms.org/api/v0/devices/localhost/ip  Output:  {\n     status :  ok ,\n     err-msg :  ,\n     addresses : [\n        {\n           ipv4_address_id :  290 ,\n           ipv4_address :  192.168.99.292 ,\n           ipv4_prefixlen :  30 ,\n           ipv4_network_id :  247 ,\n           port_id :  323 ,\n           context_name :  \n        }\n    ]\n}", 
            "title": "get_device_ip_addresses"
        }, 
        {
            "location": "/API/Devices/#get_port_stack", 
            "text": "Get a list of port mappings for a device.  This is useful for showing physical ports that are in a virtual port-channel.  Route:  /api/v0/devices/:hostname/port_stack   hostname can be either the device hostname or id   Input:   valid_mappings: Filter the result by only showing valid mappings (\"0\" values not shown).   Example:  curl -H 'X-Auth-Token: YOURAPITOKENHERE' https://librenms.org/api/v0/devices/localhost/port_stack?valid_mappings  Output:  {\n   status :  ok ,\n   err-msg :  ,\n   count : 2,\n   mappings : [\n    {\n       device_id :  3742 ,\n       port_id_high :  1001000 ,\n       port_id_low :  51001 ,\n       ifStackStatus :  active \n    },\n    {\n       device_id :  3742 ,\n       port_id_high :  1001000 ,\n       port_id_low :  52001 ,\n       ifStackStatus :  active \n    }\n  ]\n}", 
            "title": "get_port_stack"
        }, 
        {
            "location": "/API/Devices/#get_components", 
            "text": "Get a list of components for a particular device.  Route:  /api/v0/devices/:hostname/components   hostname can be either the device hostname or id   Input:   type: Filter the result by type (Equals).  id: Filter the result by id (Equals).  label: Filter the result by label (Contains).  status: Filter the result by status (Equals).  disabled: Filter the result by disabled (Equals).  ignore: Filter the result by ignore (Equals).   Example:  curl -H 'X-Auth-Token: YOURAPITOKENHERE' https://librenms.org/api/v0/devices/localhost/components  Output:  {\n     status :  ok ,\n     err-msg :  ,\n     count : 3,\n     components : {\n         2 : {\n             TestAttribute-1 :  Value1 ,\n             TestAttribute-2 :  Value2 ,\n             TestAttribute-3 :  Value3 ,\n             type :  TestComponent-1 ,\n             label :  This is a really cool blue component ,\n             status :  1 ,\n             ignore :  0 ,\n             disabled :  0 \n        },\n         20 : {\n             TestAttribute-1 :  Value4 ,\n             TestAttribute-2 :  Value5 ,\n             TestAttribute-3 :  Value6 ,\n             type :  TestComponent-1 ,\n             label :  This is a really cool red component ,\n             status :  1 ,\n             ignore :  0 ,\n             disabled :  0 \n        },\n         27 : {\n             TestAttribute-1 :  Value7 ,\n             TestAttribute-2 :  Value8 ,\n             TestAttribute-3 :  Value9 ,\n             type :  TestComponent-2 ,\n             label :  This is a really cool yellow widget ,\n             status :  1 ,\n             ignore :  0 ,\n             disabled :  0 \n        }\n    }\n}", 
            "title": "get_components"
        }, 
        {
            "location": "/API/Devices/#add_components", 
            "text": "Create a new component of a type on a particular device.  Route:  /api/v0/devices/:hostname/components/:type   hostname can be either the device hostname or id  type is the type of component to add   Example:  curl -X POST -H 'X-Auth-Token: YOURAPITOKENHERE' https://librenms.org/api/v0/devices/localhost/components/APITEST  Output:  {\n     status :  ok ,\n     err-msg :  ,\n     count : 1,\n     components : {\n         4459 : {\n             type :  APITEST ,\n             label :  ,\n             status : 1,\n             ignore : 0,\n             disabled : 0,\n             error :  \n        }\n    }\n}", 
            "title": "add_components"
        }, 
        {
            "location": "/API/Devices/#edit_components", 
            "text": "Edit an existing component on a particular device.  Route:  /api/v0/devices/:hostname/components   hostname can be either the device hostname or id   In this example we set the label and add a new field: TestField:  curl -X PUT -d '{ 4459 : { type :  APITEST , label :  This is a test label , status : 1, ignore : 0, disabled : 0, error :  , TestField :  TestData }}' -H 'X-Auth-Token: YOURAPITOKENHERE' https://librenms.org/api/v0/devices/localhost/components  Output:  {\n     status :  ok ,\n     err-msg :  ,\n     count : 1\n}  Just take the JSON array from add_components or edit_components, edit as you wish and submit it back to edit_components.", 
            "title": "edit_components"
        }, 
        {
            "location": "/API/Devices/#delete_components", 
            "text": "Delete an existing component on a particular device.  Route:  /api/v0/devices/:hostname/components/:component   hostname can be either the device hostname or id  component is the component ID to be deleted.   Example:  curl -X DELETE -H 'X-Auth-Token: YOURAPITOKENHERE' https://librenms.org/api/v0/devices/localhost/components/4459  Output:  {\n     status :  ok ,\n     err-msg :  \n}", 
            "title": "delete_components"
        }, 
        {
            "location": "/API/Devices/#get_port_stats_by_port_hostname", 
            "text": "Get information about a particular port for a device.  Route:  /api/v0/devices/:hostname/ports/:ifname   hostname can be either the device hostname or id  ifname can be any of the interface names for the device which can be obtained using  get_port_graphs . Please ensure that the ifname is urlencoded if it needs to be (i.e Gi0/1/0 would need to be urlencoded.   Input:   columns: Comma separated list of columns you want returned.   Example:  curl -H 'X-Auth-Token: YOURAPITOKENHERE' https://librenms.org/api/v0/devices/localhost/ports/eth0  Output:  {\n  status :  ok ,\n  port : {\n   port_id :  2 ,\n   device_id :  1 ,\n  ...\n   poll_prev :  1418412902 ,\n   poll_period :  300 \n }\n}", 
            "title": "get_port_stats_by_port_hostname"
        }, 
        {
            "location": "/API/Devices/#get_graph_by_port_hostname", 
            "text": "Get a graph of a port for a particular device.  Route:  /api/v0/devices/:hostname/ports/:ifname/:type   hostname can be either the device hostname or id  ifname can be any of the interface names for the device which can be obtained using  get_port_graphs . Please ensure that the ifname is urlencoded if it needs to be (i.e Gi0/1/0 would need to be urlencoded.  type is the port type you want the graph for, you can request a list of ports for a device with  get_port_graphs .   Input:   from: This is the date you would like the graph to start - See http://oss.oetiker.ch/rrdtool/doc/rrdgraph.en.html for more information.  to: This is the date you would like the graph to end - See http://oss.oetiker.ch/rrdtool/doc/rrdgraph.en.html for more information.  width: The graph width, defaults to 1075.  height: The graph height, defaults to 300.  ifDescr: If this is set to true then we will use ifDescr to lookup the port instead of ifName. Pass the ifDescr value you want to search as you would ifName.   Example:  curl -H 'X-Auth-Token: YOURAPITOKENHERE' https://librenms.org/api/v0/devices/localhost/ports/eth0/port_bits  Output:  Output is an image.", 
            "title": "get_graph_by_port_hostname"
        }, 
        {
            "location": "/API/Devices/#list_locations", 
            "text": "Return a list of locations.  Route:  /api/v0/resources/locations  Input:  -  Example:  curl -H 'X-Auth-Token: YOURAPITOKENHERE' https://librenms.org/api/v0/resources/locations  Output:  {\n     status :  ok ,\n     locations : [\n        {\n             id :  1 ,\n             location :  Example location, Example city, Example Country ,\n             lat :  -18.911436 ,\n             lng :  47.517446 ,\n             timestamp :  2017-04-01 02:40:05 \n        },\n        ...\n    ],\n     count : 100\n}", 
            "title": "list_locations"
        }, 
        {
            "location": "/API/Devices/#list_devices", 
            "text": "Return a list of devices.  Route:  /api/v0/devices  Input:   order: How to order the output, default is by hostname. Can be prepended by DESC or ASC to change the order.  type: can be one of the following to filter or search by:  all: All devices  ignored: Only ignored devices  up: Only devices that are up  down: Only devices that are down  disabled: Disabled devices  os: search by os type  mac: search by mac address  ipv4: search by IPv4 address  ipv6: search by IPv6 address (compressed or uncompressed)  location: search by location    query: If searching by, then this will be used as the input.\nExample:   curl -H 'X-Auth-Token: YOURAPITOKENHERE' https://librenms.org/api/v0/devices?order=hostname%20DESC type=down  Output:  {\n  status :  ok ,\n  count : 1,\n  devices : [\n  {\n    device_id :  1 ,\n    hostname :  localhost ,\n   ...\n    serial : null,\n    icon : null\n  }\n ]\n}  Example:  curl -H 'X-Auth-Token: YOURAPITOKENHERE' https://librenms.org/api/v0/devices?type=mac query=00000c9ff013  Output:  {\n  status :  ok ,\n  count : 1,\n  devices : [\n  {\n    device_id :  1 ,\n    hostname :  localhost ,\n   ...\n    serial : null,\n    icon : null\n  }\n ]\n}", 
            "title": "list_devices"
        }, 
        {
            "location": "/API/Devices/#add_device", 
            "text": "Add a new device.  Route:  /api/v0/devices  Input (JSON):   hostname: device hostname  port: SNMP port (defaults to port defined in config).  transport: SNMP protocol (defaults to transport defined in config).  version: SNMP version to use, v1, v2c or v3. Defaults to v2c.  poller_group: This is the poller_group id used for distributed poller setup. Defaults to 0.  force_add: Force the device to be added regardless of it being able to respond to snmp or icmp.   For SNMP v1 or v2c   community: Required for SNMP v1 or v2c.   For SNMP v3   authlevel: SNMP authlevel (NoAuthNoPriv, AuthNoPriv, AuthPriv).  authname: SNMP Auth username  authpass: SNMP Auth password  authalgo: SNMP Auth algorithm (MD5, SHA)  cryptopass: SNMP Crypto Password  cryptoalgo: SNMP Crypto algorithm (AES, DES)   For ICMP only   snmp_disable: Boolean, set to true for ICMP only.  os: OS short name for the device (defaults to ping).  hardware: Device hardware.   Example:  curl -X POST -d '{ hostname : localhost.localdomain , version : v1 , community : public }' -H 'X-Auth-Token: YOURAPITOKENHERE' https://librenms.org/api/v0/devices  Output:  {\n     status :  ok ,\n     message :  Device localhost.localdomain (57) has been added successfully \n}", 
            "title": "add_device"
        }, 
        {
            "location": "/API/Devices/#list_oxidized", 
            "text": "List devices for use with Oxidized. If you have group support enabled then a group will also be returned based on your config.  Route:  /api/v0/oxidized(/:hostname)  Input (JSON):  -  Examples:  curl -H 'X-Auth-Token: YOURAPITOKENHERE' https://librenms.org/api/v0/oxidized  Output:  [\n    {\n         hostname :  localhost ,\n         os :  linux \n    },\n    {\n         hostname :  otherserver ,\n         os :  linux \n    }\n]", 
            "title": "list_oxidized"
        }, 
        {
            "location": "/API/Devices/#update_device_field", 
            "text": "Update devices field in the database.  Route:  /api/v0/devices/:hostname   hostname can be either the device hostname or id   Input (JSON):   field: The column name within the database (can be an array of fields)  data: The data to update the column with (can be an array of data))   Examples:  curl -X PATCH -d '{ field :  notes ,  data :  This server should be kept online }' -H 'X-Auth-Token: YOURAPITOKENHERE' https://librenms.org/api/v0/devices/localhost  Output:  [\n    {\n         status :  ok ,\n         message :  Device notes has been updated \n    }\n]  curl -X PATCH -d '{ field : [ notes , purpose ],  data : [ This server should be kept online ,  For serving web traffic ]}' -H 'X-Auth-Token: YOURAPITOKENHERE' https://librenms.org/api/v0/devices/localhost  Output:  [\n    {\n         status :  ok ,\n         message :  Device fields have been updated \n    }\n]", 
            "title": "update_device_field"
        }, 
        {
            "location": "/API/Devices/#rename_device", 
            "text": "Rename device.  Route:  /api/v0/devices/:hostname/rename/:new_hostname   hostname can be either the device hostname or id   Input:  -  Examples:  curl -X PATCH  -H 'X-Auth-Token: YOURAPITOKENHERE' https://librenms.org/api/v0/devices/localhost/rename/localhost2  Output:  [\n    {\n         status :  ok ,\n         message :  Device has been renamed \n    }\n]", 
            "title": "rename_device"
        }, 
        {
            "location": "/API/Devices/#get_device_groups", 
            "text": "List the device groups that a device is matched on.  Route:  /api/v0/devices/:hostname/groups   hostname can be either the device hostname or id   Input (JSON):  -  Examples:  curl -H 'X-Auth-Token: YOURAPITOKENHERE' https://librenms.org/api/v0/devices/localhost/groups  Output:  [\n    {\n         status :  ok ,\n         message :  Found 1 device groups ,\n         count : 1,\n         groups : [\n        {\n             id :  1 ,\n             name :  Testing ,\n             desc :  Testing ,\n             pattern :  %devices.status = \\ 1\\   \n        }\n        ]\n    }\n]", 
            "title": "get_device_groups"
        }, 
        {
            "location": "/API/DeviceGroups/", 
            "text": "get_devicegroups\n\n\nList all device groups.\n\n\nRoute: \n/api/v0/devicegroups\n\n\nInput (JSON):\n\n\n-\n\n\nExamples:\n\n\ncurl -H 'X-Auth-Token: YOURAPITOKENHERE' https://librenms.org/api/v0/devicegroups\n\n\n\n\nOutput:\n\n\n[\n    {\n        \nstatus\n: \nok\n,\n        \nmessage\n: \nFound 1 device groups\n,\n        \ncount\n: 1,\n        \ngroups\n: [\n        {\n            \nid\n: \n1\n,\n            \nname\n: \nTesting\n,\n            \ndesc\n: \nTesting\n,\n            \npattern\n: \n%devices.status = \\\n1\\\n \n\n        }\n        ]\n    }\n]", 
            "title": "DeviceGroups"
        }, 
        {
            "location": "/API/DeviceGroups/#get_devicegroups", 
            "text": "List all device groups.  Route:  /api/v0/devicegroups  Input (JSON):  -  Examples:  curl -H 'X-Auth-Token: YOURAPITOKENHERE' https://librenms.org/api/v0/devicegroups  Output:  [\n    {\n         status :  ok ,\n         message :  Found 1 device groups ,\n         count : 1,\n         groups : [\n        {\n             id :  1 ,\n             name :  Testing ,\n             desc :  Testing ,\n             pattern :  %devices.status = \\ 1\\   \n        }\n        ]\n    }\n]", 
            "title": "get_devicegroups"
        }, 
        {
            "location": "/API/Ports/", 
            "text": "get_all_ports\n\n\nGet info for all ports on all devices.\nStrongly recommend that you use the \ncolumns\n parameter to avoid pulling too much data.\n\n\nRoute: \n/api/v0/ports\n\n\n-\n\n\nInput:\n\n\n\n\ncolumns: Comma separated list of columns you want returned.\n\n\n\n\nExample:\n\n\ncurl -H 'X-Auth-Token: YOURAPITOKENHERE' https://librenms.org/api/v0/ports?columns=ifName%2Cport_id\n\n\n\n\nOutput:\n\n\n{\n  \nstatus\n: \nok\n,\n  \nerr-msg\n: \n,\n  \nports\n: [\n        {\n          \nifName\n: \nGi0/0/0\n,\n          \nport_id\n: \n1\n\n        },\n        {\n          \nifName\n: \nGi0/0/1\n,\n          \nport_id\n: \n2\n\n        },\n        ...\n        {\n          \nifName\n: \nVlan 3615\n,\n          \nport_id\n: \n5488\n\n        }\n    ]\n}\n\n\n\n\nget_port_info\n\n\nGet all info for a particular port.\n\n\nRoute: \n/api/v0/ports/:portid\n\n\n\n\nportid must be an integer\n\n\n\n\nInput:\n\n\n-\n\n\nExample:\n\n\ncurl -H 'X-Auth-Token: YOURAPITOKENHERE' https://librenms.org/api/v0/ports/323\n\n\n\n\nOutput:\n\n\n{\n  \nstatus\n: \nok\n,\n  \nerr-msg\n: \n,\n  \nport\n: [\n    {\n      \nport_id\n: \n323\n,\n      \ndevice_id\n: \n55\n,\n      \nport_descr_type\n: null,\n      \nport_descr_descr\n: null,\n      \nport_descr_circuit\n: null,\n      \nport_descr_speed\n: null,\n      \nport_descr_notes\n: null,\n      \nifDescr\n: \nGigabitEthernet0/0/0\n,\n      \nifName\n: \nGi0/0/0\n,\n      \nportName\n: null,\n      \nifIndex\n: \n1\n,\n      \nifSpeed\n: \n1000000000\n,\n      \nifConnectorPresent\n: \ntrue\n,\n      \nifPromiscuousMode\n: \nfalse\n,\n      \nifHighSpeed\n: \n1000\n,\n      \nifOperStatus\n: \nup\n,\n      \nifOperStatus_prev\n: null,\n      \nifAdminStatus\n: \nup\n,\n      \nifAdminStatus_prev\n: null,\n      \nifDuplex\n: \nfullDuplex\n,\n      \nifMtu\n: \n1560\n,\n      \nifType\n: \nethernetCsmacd\n,\n      \nifAlias\n: \nASR Interconnect Trunk\n,\n      \nifPhysAddress\n: \n84bf20853e00\n,\n      \nifHardType\n: null,\n      \nifLastChange\n: \n42407358\n,\n      \nifVlan\n: \n,\n      \nifTrunk\n: \n,\n      \nifVrf\n: \n0\n,\n      \ncounter_in\n: null,\n      \ncounter_out\n: null,\n      \nignore\n: \n0\n,\n      \ndisabled\n: \n0\n,\n      \ndetailed\n: \n0\n,\n      \ndeleted\n: \n0\n,\n      \npagpOperationMode\n: null,\n      \npagpPortState\n: null,\n      \npagpPartnerDeviceId\n: null,\n      \npagpPartnerLearnMethod\n: null,\n      \npagpPartnerIfIndex\n: null,\n      \npagpPartnerGroupIfIndex\n: null,\n      \npagpPartnerDeviceName\n: null,\n      \npagpEthcOperationMode\n: null,\n      \npagpDeviceId\n: null,\n      \npagpGroupIfIndex\n: null,\n      \nifInUcastPkts\n: \n128518576\n,\n      \nifInUcastPkts_prev\n: \n128517284\n,\n      \nifInUcastPkts_delta\n: \n1292\n,\n      \nifInUcastPkts_rate\n: \n4\n,\n      \nifOutUcastPkts\n: \n128510560\n,\n      \nifOutUcastPkts_prev\n: \n128509268\n,\n      \nifOutUcastPkts_delta\n: \n1292\n,\n      \nifOutUcastPkts_rate\n: \n4\n,\n      \nifInErrors\n: \n0\n,\n      \nifInErrors_prev\n: \n0\n,\n      \nifInErrors_delta\n: \n0\n,\n      \nifInErrors_rate\n: \n0\n,\n      \nifOutErrors\n: \n0\n,\n      \nifOutErrors_prev\n: \n0\n,\n      \nifOutErrors_delta\n: \n0\n,\n      \nifOutErrors_rate\n: \n0\n,\n      \nifInOctets\n: \n12827393730\n,\n      \nifInOctets_prev\n: \n12827276736\n,\n      \nifInOctets_delta\n: \n116994\n,\n      \nifInOctets_rate\n: \n387\n,\n      \nifOutOctets\n: \n14957481766\n,\n      \nifOutOctets_prev\n: \n14957301765\n,\n      \nifOutOctets_delta\n: \n180001\n,\n      \nifOutOctets_rate\n: \n596\n,\n      \npoll_time\n: \n1483779150\n,\n      \npoll_prev\n: \n1483778848\n,\n      \npoll_period\n: \n302\n\n    }\n  ]\n}\n\n\n\n\nget_port_ip_info\n\n\nGet all IP info (v4 and v6) for a given port id.\n\n\nRoute: \n/api/v0/ports/:portid/ip\n\n\n\n\nportid must be an integer\n\n\n\n\nInput:\n\n\n-\n\n\nExample:\n\n\ncurl -H 'X-Auth-Token: YOURAPITOKENHERE' https://librenms.org/api/v0/ports/323/ip\n\n\n\n\nOutput:\n\n\n{\n  \nstatus\n: \nok\n,\n  \nerr-msg\n: \n,\n  \naddresses\n: [\n    {\n      \nipv4_address_id\n: \n290\n,\n      \nipv4_address\n: \n192.168.99.292\n,\n      \nipv4_prefixlen\n: \n30\n,\n      \nipv4_network_id\n: \n247\n,\n      \nport_id\n: \n323\n,\n      \ncontext_name\n: \n\n    }\n  ]\n}\n\n\n\n\nget_devices_by_group\n\n\nList all devices matching the group provided.\n\n\nRoute: \n/api/v0/devicegroups/:name\n\n\n\n\nname Is the name of the device group which can be obtained using \nget_devicegroups\n. Please ensure that the name is urlencoded if it needs to be (i.e Linux Servers would need to be urlencoded.\n\n\n\n\nInput (JSON):\n\n\n\n\nfull: set to any value to return all data for the devices in a given group\n\n\n\n\nExamples:\n\n\ncurl -H 'X-Auth-Token: YOURAPITOKENHERE' https://librenms.org/api/v0/devicegroups/LinuxServers\n\n\n\n\nOutput:\n\n\n[\n     {\n         \nstatus\n: \nok\n,\n         \nmessage\n: \nFound 3 in group LinuxServers\n,\n         \ncount\n: 3,\n         \ndevices\n: [\n            {\n                \ndevice_id\n: \n15\n\n            },\n            {\n                \ndevice_id\n: \n18\n\n            },\n            {\n                \ndevice_id\n: \n20\n\n            }\n         ]\n     }\n]", 
            "title": "Ports"
        }, 
        {
            "location": "/API/Ports/#get_all_ports", 
            "text": "Get info for all ports on all devices.\nStrongly recommend that you use the  columns  parameter to avoid pulling too much data.  Route:  /api/v0/ports  -  Input:   columns: Comma separated list of columns you want returned.   Example:  curl -H 'X-Auth-Token: YOURAPITOKENHERE' https://librenms.org/api/v0/ports?columns=ifName%2Cport_id  Output:  {\n   status :  ok ,\n   err-msg :  ,\n   ports : [\n        {\n           ifName :  Gi0/0/0 ,\n           port_id :  1 \n        },\n        {\n           ifName :  Gi0/0/1 ,\n           port_id :  2 \n        },\n        ...\n        {\n           ifName :  Vlan 3615 ,\n           port_id :  5488 \n        }\n    ]\n}", 
            "title": "get_all_ports"
        }, 
        {
            "location": "/API/Ports/#get_port_info", 
            "text": "Get all info for a particular port.  Route:  /api/v0/ports/:portid   portid must be an integer   Input:  -  Example:  curl -H 'X-Auth-Token: YOURAPITOKENHERE' https://librenms.org/api/v0/ports/323  Output:  {\n   status :  ok ,\n   err-msg :  ,\n   port : [\n    {\n       port_id :  323 ,\n       device_id :  55 ,\n       port_descr_type : null,\n       port_descr_descr : null,\n       port_descr_circuit : null,\n       port_descr_speed : null,\n       port_descr_notes : null,\n       ifDescr :  GigabitEthernet0/0/0 ,\n       ifName :  Gi0/0/0 ,\n       portName : null,\n       ifIndex :  1 ,\n       ifSpeed :  1000000000 ,\n       ifConnectorPresent :  true ,\n       ifPromiscuousMode :  false ,\n       ifHighSpeed :  1000 ,\n       ifOperStatus :  up ,\n       ifOperStatus_prev : null,\n       ifAdminStatus :  up ,\n       ifAdminStatus_prev : null,\n       ifDuplex :  fullDuplex ,\n       ifMtu :  1560 ,\n       ifType :  ethernetCsmacd ,\n       ifAlias :  ASR Interconnect Trunk ,\n       ifPhysAddress :  84bf20853e00 ,\n       ifHardType : null,\n       ifLastChange :  42407358 ,\n       ifVlan :  ,\n       ifTrunk :  ,\n       ifVrf :  0 ,\n       counter_in : null,\n       counter_out : null,\n       ignore :  0 ,\n       disabled :  0 ,\n       detailed :  0 ,\n       deleted :  0 ,\n       pagpOperationMode : null,\n       pagpPortState : null,\n       pagpPartnerDeviceId : null,\n       pagpPartnerLearnMethod : null,\n       pagpPartnerIfIndex : null,\n       pagpPartnerGroupIfIndex : null,\n       pagpPartnerDeviceName : null,\n       pagpEthcOperationMode : null,\n       pagpDeviceId : null,\n       pagpGroupIfIndex : null,\n       ifInUcastPkts :  128518576 ,\n       ifInUcastPkts_prev :  128517284 ,\n       ifInUcastPkts_delta :  1292 ,\n       ifInUcastPkts_rate :  4 ,\n       ifOutUcastPkts :  128510560 ,\n       ifOutUcastPkts_prev :  128509268 ,\n       ifOutUcastPkts_delta :  1292 ,\n       ifOutUcastPkts_rate :  4 ,\n       ifInErrors :  0 ,\n       ifInErrors_prev :  0 ,\n       ifInErrors_delta :  0 ,\n       ifInErrors_rate :  0 ,\n       ifOutErrors :  0 ,\n       ifOutErrors_prev :  0 ,\n       ifOutErrors_delta :  0 ,\n       ifOutErrors_rate :  0 ,\n       ifInOctets :  12827393730 ,\n       ifInOctets_prev :  12827276736 ,\n       ifInOctets_delta :  116994 ,\n       ifInOctets_rate :  387 ,\n       ifOutOctets :  14957481766 ,\n       ifOutOctets_prev :  14957301765 ,\n       ifOutOctets_delta :  180001 ,\n       ifOutOctets_rate :  596 ,\n       poll_time :  1483779150 ,\n       poll_prev :  1483778848 ,\n       poll_period :  302 \n    }\n  ]\n}", 
            "title": "get_port_info"
        }, 
        {
            "location": "/API/Ports/#get_port_ip_info", 
            "text": "Get all IP info (v4 and v6) for a given port id.  Route:  /api/v0/ports/:portid/ip   portid must be an integer   Input:  -  Example:  curl -H 'X-Auth-Token: YOURAPITOKENHERE' https://librenms.org/api/v0/ports/323/ip  Output:  {\n   status :  ok ,\n   err-msg :  ,\n   addresses : [\n    {\n       ipv4_address_id :  290 ,\n       ipv4_address :  192.168.99.292 ,\n       ipv4_prefixlen :  30 ,\n       ipv4_network_id :  247 ,\n       port_id :  323 ,\n       context_name :  \n    }\n  ]\n}", 
            "title": "get_port_ip_info"
        }, 
        {
            "location": "/API/Ports/#get_devices_by_group", 
            "text": "List all devices matching the group provided.  Route:  /api/v0/devicegroups/:name   name Is the name of the device group which can be obtained using  get_devicegroups . Please ensure that the name is urlencoded if it needs to be (i.e Linux Servers would need to be urlencoded.   Input (JSON):   full: set to any value to return all data for the devices in a given group   Examples:  curl -H 'X-Auth-Token: YOURAPITOKENHERE' https://librenms.org/api/v0/devicegroups/LinuxServers  Output:  [\n     {\n          status :  ok ,\n          message :  Found 3 in group LinuxServers ,\n          count : 3,\n          devices : [\n            {\n                 device_id :  15 \n            },\n            {\n                 device_id :  18 \n            },\n            {\n                 device_id :  20 \n            }\n         ]\n     }\n]", 
            "title": "get_devices_by_group"
        }, 
        {
            "location": "/API/PortGroups/", 
            "text": "get_graph_by_portgroup\n\n\nGet the graph based on the group type.\n\n\nRoute: \n/api/v0/devices/portgroups/:group\n\n\n\n\ngroup is the type of port group graph you want, I.e Transit, Peering, etc. You can specify multiple types comma separated.\n\n\n\n\nInput:\n\n\n\n\nfrom: This is the date you would like the graph to start - See http://oss.oetiker.ch/rrdtool/doc/rrdgraph.en.html for more information.\n\n\nto: This is the date you would like the graph to end - See http://oss.oetiker.ch/rrdtool/doc/rrdgraph.en.html for more information.\n\n\nwidth: The graph width, defaults to 1075.\n\n\nheight: The graph height, defaults to 300.\n\n\n\n\nExample:\n\n\ncurl -H 'X-Auth-Token: YOURAPITOKENHERE' https://librenms.org/api/v0/portgroups/transit,peering\n\n\n\n\nOutput:\n\n\nOutput is an image.\n\n\nget_graph_by_portgroup_multiport_bits\n\n\nGet the graph based on the multiple port id separated by commas \n,\n.\n\n\nRoute: \n/api/v0/devices/portgroups/multiport/bits/:id\n\n\n\n\nid is a comma separated list of port ids you want, I.e 1,2,3,4, etc. You can specify multiple IDs comma separated.\n\n\n\n\nInput:\n\n\n\n\nfrom: This is the date you would like the graph to start - See http://oss.oetiker.ch/rrdtool/doc/rrdgraph.en.html for more information.\n\n\nto: This is the date you would like the graph to end - See http://oss.oetiker.ch/rrdtool/doc/rrdgraph.en.html for more information.\n\n\nwidth: The graph width, defaults to 1075.\n\n\nheight: The graph height, defaults to 300.\n\n\n\n\nExample:\n\n\ncurl -H 'X-Auth-Token: YOURAPITOKENHERE' https://librenms.org/api/v0/portgroups/multiport/bits/1,2,3\n\n\n\n\nOutput:\n\n\nOutput is an image.", 
            "title": "PortGroups"
        }, 
        {
            "location": "/API/PortGroups/#get_graph_by_portgroup", 
            "text": "Get the graph based on the group type.  Route:  /api/v0/devices/portgroups/:group   group is the type of port group graph you want, I.e Transit, Peering, etc. You can specify multiple types comma separated.   Input:   from: This is the date you would like the graph to start - See http://oss.oetiker.ch/rrdtool/doc/rrdgraph.en.html for more information.  to: This is the date you would like the graph to end - See http://oss.oetiker.ch/rrdtool/doc/rrdgraph.en.html for more information.  width: The graph width, defaults to 1075.  height: The graph height, defaults to 300.   Example:  curl -H 'X-Auth-Token: YOURAPITOKENHERE' https://librenms.org/api/v0/portgroups/transit,peering  Output:  Output is an image.", 
            "title": "get_graph_by_portgroup"
        }, 
        {
            "location": "/API/PortGroups/#get_graph_by_portgroup_multiport_bits", 
            "text": "Get the graph based on the multiple port id separated by commas  , .  Route:  /api/v0/devices/portgroups/multiport/bits/:id   id is a comma separated list of port ids you want, I.e 1,2,3,4, etc. You can specify multiple IDs comma separated.   Input:   from: This is the date you would like the graph to start - See http://oss.oetiker.ch/rrdtool/doc/rrdgraph.en.html for more information.  to: This is the date you would like the graph to end - See http://oss.oetiker.ch/rrdtool/doc/rrdgraph.en.html for more information.  width: The graph width, defaults to 1075.  height: The graph height, defaults to 300.   Example:  curl -H 'X-Auth-Token: YOURAPITOKENHERE' https://librenms.org/api/v0/portgroups/multiport/bits/1,2,3  Output:  Output is an image.", 
            "title": "get_graph_by_portgroup_multiport_bits"
        }, 
        {
            "location": "/API/Alerts/", 
            "text": "get_alert\n\n\nGet details of an alert\n\n\nRoute: \n/api/v0/alerts/:id\n\n\n\n\nid is the alert id, you can obtain a list of alert ids from \nlist_alerts\n.\n\n\n\n\nInput:\n\n\n-\n\n\nExample:\n\n\ncurl -H 'X-Auth-Token: YOURAPITOKENHERE' https://librenms.org/api/v0/alerts/1\n\n\n\n\nOutput:\n\n\n{\n \nstatus\n: \nok\n,\n \nerr-msg\n: \n,\n \ncount\n: 7,\n \nalerts\n: [\n  {\n   \nhostname\n: \nlocalhost\n,\n   \nid\n: \n1\n,\n   \ndevice_id\n: \n1\n,\n   \nrule_id\n: \n1\n,\n   \nstate\n: \n1\n,\n   \nalerted\n: \n1\n,\n   \nopen\n: \n1\n,\n   \ntimestamp\n: \n2014-12-11 14:40:02\n\n  },\n}\n\n\n\n\nack_alert\n\n\nAcknowledge an alert\n\n\nRoute: \n/api/v0/alerts/:id\n\n\n\n\nid is the alert id, you can obtain a list of alert ids from \nlist_alerts\n.\n\n\n\n\nInput:\n\n\n-\n\n\nExample:\n\n\ncurl -X PUT -H 'X-Auth-Token: YOURAPITOKENHERE' https://librenms.org/api/v0/alerts/1\n\n\n\n\nOutput:\n\n\n{\n \nstatus\n: \nok\n,\n \nerr-msg\n: \n,\n \nmessage\n: \nAlert has been acknowledged\n\n}\n\n\n\n\nunmute_alert\n\n\nUnmute an alert\n\n\nRoute: \n/api/v0/alerts/unmute/:id\n\n\n\n\nid is the alert id, you can obtain a list of alert ids from \nlist_alerts\n.\n\n\n\n\nInput:\n\n\n-\n\n\nExample:\n\n\ncurl -X PUT -H 'X-Auth-Token: YOURAPITOKENHERE' https://librenms.org/api/v0/alerts/unmute/1\n\n\n\n\nOutput:\n\n\n{\n \nstatus\n: \nok\n,\n \nerr-msg\n: \n,\n \nmessage\n: \nAlert has been unmuted\n\n}\n\n\n\n\nlist_alerts\n\n\nList all alerts\n\n\nRoute: \n/api/v0/alerts\n\n\nInput:\n\n\n\n\nstate: Filter the alerts by state, 0 = ok, 1 = alert, 2 = ack\n\n\n\n\nExample:\n\n\ncurl -H 'X-Auth-Token: YOURAPITOKENHERE' https://librenms.org/api/v0/alerts?state=1\n\n\n\n\nOutput:\n\n\n{\n \nstatus\n: \nok\n,\n \nerr-msg\n: \n,\n \ncount\n: 1,\n \nalerts\n: [\n  {\n   \nid\n: \n1\n,\n   \ndevice_id\n: \n1\n,\n   \nrule_id\n: \n1\n,\n   \nstate\n: \n1\n,\n   \nalerted\n: \n1\n,\n   \nopen\n: \n1\n,\n   \ntimestamp\n: \n2014-12-11 14:40:02\n\n  }\n}\n\n\n\n\nRules\n\n\nget_alert_rule\n\n\nGet the alert rule details.\n\n\nRoute: \n/api/v0/rules/:id\n\n\n\n\nid is the rule id.\n\n\n\n\nInput:\n\n\n-\n\n\nExample:\n\n\ncurl -H 'X-Auth-Token: YOURAPITOKENHERE' https://librenms.org/api/v0/rules/1\n\n\n\n\nOutput:\n\n\n{\n \nstatus\n: \nok\n,\n \nerr-msg\n: \n,\n \ncount\n: 1,\n \nrules\n: [\n  {\n   \nid\n: \n1\n,\n   \ndevice_id\n: \n1\n,\n   \nrule\n: \n%devices.os != \\\nJuniper\\\n,\n   \nseverity\n: \nwarning\n,\n   \nextra\n: \n{\\\nmute\\\n:true,\\\ncount\\\n:\\\n15\\\n,\\\ndelay\\\n:null,\\\ninvert\\\n:false}\n,\n   \ndisabled\n: \n0\n,\n   \nname\n: \nA test rule\n\n  }\n ]\n}\n\n\n\n\ndelete_rule\n\n\nDelete an alert rule by id\n\n\nRoute: \n/api/v0/rules/:id\n\n\n\n\nid is the rule id.\n\n\n\n\nInput:\n\n\n-\n\n\nExample:\n\n\ncurl -X DELETE -H 'X-Auth-Token: YOURAPITOKENHERE' https://librenms.org/api/v0/rules/1\n\n\n\n\nOutput:\n\n\n{\n \nstatus\n: \nok\n,\n \nerr-msg\n: \n,\n \nmessage\n: \nAlert rule has been removed\n\n}\n\n\n\n\nlist_alert_rules\n\n\nList the alert rules.\n\n\nRoute: \n/api/v0/rules\n\n\n-\n\n\nInput:\n\n\n-\n\n\nExample:\n\n\ncurl -H 'X-Auth-Token: YOURAPITOKENHERE' https://librenms.org/api/v0/rules\n\n\n\n\nOutput:\n\n\n{\n \nstatus\n: \nok\n,\n \nerr-msg\n: \n,\n \ncount\n: 1,\n \nrules\n: [\n  {\n   \nid\n: \n1\n,\n   \ndevice_id\n: \n-1\n,\n   \nrule\n: \n%devices.os != \\\nJuniper\\\n,\n   \nseverity\n: \ncritical\n,\n   \nextra\n: \n{\\\nmute\\\n:false,\\\ncount\\\n:\\\n15\\\n,\\\ndelay\\\n:\\\n300\\\n,\\\ninvert\\\n:false}\n,\n   \ndisabled\n: \n0\n,\n   \nname\n: \nA test rule\n\n  },\n}\n\n\n\n\nadd_rule\n\n\nAdd a new alert rule.\n\n\nRoute: \n/api/v0/rules\n\n\n-\n\n\nInput (JSON):\n\n\n\n\ndevice_id: This is either the device id or -1 for a global rule\n\n\nrule: The rule which should be in the format %entity $condition $value (i.e %devices.status != 0 for devices marked as down).\n\n\nseverity: The severity level the alert will be raised against, Ok, Warning, Critical.\n\n\ndisabled: Whether the rule will be disabled or not, 0 = enabled, 1 = disabled\n\n\ncount: This is how many polling runs before an alert will trigger and the frequency.\n\n\ndelay: Delay is when to start alerting and how frequently. The value is stored in seconds but you can specify minutes, hours or days by doing 5 m, 5 h, 5 d for each one.\n\n\nmute: If mute is enabled then an alert will never be sent but will show up in the Web UI (true or false).\n\n\ninvert: This would invert the rules check.\n\n\nname: This is the name of the rule and is mandatory.\n\n\n\n\nExample:\n\n\ncurl -X POST -d '{\ndevice_id\n:\n-1\n, \nrule\n:\n%devices.os != \\\nCisco\\\n,\nseverity\n: \ncritical\n,\ncount\n:15,\ndelay\n:\n5 m\n,\nmute\n:false}' -H 'X-Auth-Token: YOURAPITOKENHERE' https://librenms.org/api/v0/rules\n\n\n\n\nOutput:\n\n\nrules\n{\n \nstatus\n: \nok\n,\n \nerr-msg\n: \n\n}\n\n\n\n\nedit_rule\n\n\nEdit an existing alert rule\n\n\nRoute: \n/api/v0/rules\n\n\n-\n\n\nInput (JSON):\n\n\n\n\nrule_id: You must specify the rule_id to edit an existing rule, if this is absent then a new rule will be created.\n\n\ndevice_id: This is either the device id or -1 for a global rule\n\n\nrule: The rule which should be in the format %entity $condition $value (i.e %devices.status != 0 for devices marked as down).\n\n\nseverity: The severity level the alert will be raised against, Ok, Warning, Critical.\n\n\ndisabled: Whether the rule will be disabled or not, 0 = enabled, 1 = disabled\n\n\ncount: This is how many polling runs before an alert will trigger and the frequency.\n\n\ndelay: Delay is when to start alerting and how frequently. The value is stored in seconds but you can specify minutes, hours or days by doing 5 m, 5 h, 5 d for each one.\n\n\nmute: If mute is enabled then an alert will never be sent but will show up in the Web UI (true or false).\n\n\ninvert: This would invert the rules check.\n\n\nname: This is the name of the rule and is mandatory.\n\n\n\n\nExample:\n\n\ncurl -X PUT -d '{\nrule_id\n:1,\ndevice_id\n:\n-1\n, \nrule\n:\n%devices.os != \\\nCisco\\\n,\nseverity\n: \ncritical\n,\ncount\n:15,\ndelay\n:\n5 m\n,\nmute\n:false}' -H 'X-Auth-Token: YOURAPITOKENHERE' https://librenms.org/api/v0/rules\n\n\n\n\nOutput:\n\n\nrules\n{\n \nstatus\n: \nok\n,\n \nerr-msg\n: \n\n}", 
            "title": "Alerts"
        }, 
        {
            "location": "/API/Alerts/#get_alert", 
            "text": "Get details of an alert  Route:  /api/v0/alerts/:id   id is the alert id, you can obtain a list of alert ids from  list_alerts .   Input:  -  Example:  curl -H 'X-Auth-Token: YOURAPITOKENHERE' https://librenms.org/api/v0/alerts/1  Output:  {\n  status :  ok ,\n  err-msg :  ,\n  count : 7,\n  alerts : [\n  {\n    hostname :  localhost ,\n    id :  1 ,\n    device_id :  1 ,\n    rule_id :  1 ,\n    state :  1 ,\n    alerted :  1 ,\n    open :  1 ,\n    timestamp :  2014-12-11 14:40:02 \n  },\n}", 
            "title": "get_alert"
        }, 
        {
            "location": "/API/Alerts/#ack_alert", 
            "text": "Acknowledge an alert  Route:  /api/v0/alerts/:id   id is the alert id, you can obtain a list of alert ids from  list_alerts .   Input:  -  Example:  curl -X PUT -H 'X-Auth-Token: YOURAPITOKENHERE' https://librenms.org/api/v0/alerts/1  Output:  {\n  status :  ok ,\n  err-msg :  ,\n  message :  Alert has been acknowledged \n}", 
            "title": "ack_alert"
        }, 
        {
            "location": "/API/Alerts/#unmute_alert", 
            "text": "Unmute an alert  Route:  /api/v0/alerts/unmute/:id   id is the alert id, you can obtain a list of alert ids from  list_alerts .   Input:  -  Example:  curl -X PUT -H 'X-Auth-Token: YOURAPITOKENHERE' https://librenms.org/api/v0/alerts/unmute/1  Output:  {\n  status :  ok ,\n  err-msg :  ,\n  message :  Alert has been unmuted \n}", 
            "title": "unmute_alert"
        }, 
        {
            "location": "/API/Alerts/#list_alerts", 
            "text": "List all alerts  Route:  /api/v0/alerts  Input:   state: Filter the alerts by state, 0 = ok, 1 = alert, 2 = ack   Example:  curl -H 'X-Auth-Token: YOURAPITOKENHERE' https://librenms.org/api/v0/alerts?state=1  Output:  {\n  status :  ok ,\n  err-msg :  ,\n  count : 1,\n  alerts : [\n  {\n    id :  1 ,\n    device_id :  1 ,\n    rule_id :  1 ,\n    state :  1 ,\n    alerted :  1 ,\n    open :  1 ,\n    timestamp :  2014-12-11 14:40:02 \n  }\n}", 
            "title": "list_alerts"
        }, 
        {
            "location": "/API/Alerts/#rules", 
            "text": "", 
            "title": "Rules"
        }, 
        {
            "location": "/API/Alerts/#get_alert_rule", 
            "text": "Get the alert rule details.  Route:  /api/v0/rules/:id   id is the rule id.   Input:  -  Example:  curl -H 'X-Auth-Token: YOURAPITOKENHERE' https://librenms.org/api/v0/rules/1  Output:  {\n  status :  ok ,\n  err-msg :  ,\n  count : 1,\n  rules : [\n  {\n    id :  1 ,\n    device_id :  1 ,\n    rule :  %devices.os != \\ Juniper\\ ,\n    severity :  warning ,\n    extra :  {\\ mute\\ :true,\\ count\\ :\\ 15\\ ,\\ delay\\ :null,\\ invert\\ :false} ,\n    disabled :  0 ,\n    name :  A test rule \n  }\n ]\n}", 
            "title": "get_alert_rule"
        }, 
        {
            "location": "/API/Alerts/#delete_rule", 
            "text": "Delete an alert rule by id  Route:  /api/v0/rules/:id   id is the rule id.   Input:  -  Example:  curl -X DELETE -H 'X-Auth-Token: YOURAPITOKENHERE' https://librenms.org/api/v0/rules/1  Output:  {\n  status :  ok ,\n  err-msg :  ,\n  message :  Alert rule has been removed \n}", 
            "title": "delete_rule"
        }, 
        {
            "location": "/API/Alerts/#list_alert_rules", 
            "text": "List the alert rules.  Route:  /api/v0/rules  -  Input:  -  Example:  curl -H 'X-Auth-Token: YOURAPITOKENHERE' https://librenms.org/api/v0/rules  Output:  {\n  status :  ok ,\n  err-msg :  ,\n  count : 1,\n  rules : [\n  {\n    id :  1 ,\n    device_id :  -1 ,\n    rule :  %devices.os != \\ Juniper\\ ,\n    severity :  critical ,\n    extra :  {\\ mute\\ :false,\\ count\\ :\\ 15\\ ,\\ delay\\ :\\ 300\\ ,\\ invert\\ :false} ,\n    disabled :  0 ,\n    name :  A test rule \n  },\n}", 
            "title": "list_alert_rules"
        }, 
        {
            "location": "/API/Alerts/#add_rule", 
            "text": "Add a new alert rule.  Route:  /api/v0/rules  -  Input (JSON):   device_id: This is either the device id or -1 for a global rule  rule: The rule which should be in the format %entity $condition $value (i.e %devices.status != 0 for devices marked as down).  severity: The severity level the alert will be raised against, Ok, Warning, Critical.  disabled: Whether the rule will be disabled or not, 0 = enabled, 1 = disabled  count: This is how many polling runs before an alert will trigger and the frequency.  delay: Delay is when to start alerting and how frequently. The value is stored in seconds but you can specify minutes, hours or days by doing 5 m, 5 h, 5 d for each one.  mute: If mute is enabled then an alert will never be sent but will show up in the Web UI (true or false).  invert: This would invert the rules check.  name: This is the name of the rule and is mandatory.   Example:  curl -X POST -d '{ device_id : -1 ,  rule : %devices.os != \\ Cisco\\ , severity :  critical , count :15, delay : 5 m , mute :false}' -H 'X-Auth-Token: YOURAPITOKENHERE' https://librenms.org/api/v0/rules  Output:  rules\n{\n  status :  ok ,\n  err-msg :  \n}", 
            "title": "add_rule"
        }, 
        {
            "location": "/API/Alerts/#edit_rule", 
            "text": "Edit an existing alert rule  Route:  /api/v0/rules  -  Input (JSON):   rule_id: You must specify the rule_id to edit an existing rule, if this is absent then a new rule will be created.  device_id: This is either the device id or -1 for a global rule  rule: The rule which should be in the format %entity $condition $value (i.e %devices.status != 0 for devices marked as down).  severity: The severity level the alert will be raised against, Ok, Warning, Critical.  disabled: Whether the rule will be disabled or not, 0 = enabled, 1 = disabled  count: This is how many polling runs before an alert will trigger and the frequency.  delay: Delay is when to start alerting and how frequently. The value is stored in seconds but you can specify minutes, hours or days by doing 5 m, 5 h, 5 d for each one.  mute: If mute is enabled then an alert will never be sent but will show up in the Web UI (true or false).  invert: This would invert the rules check.  name: This is the name of the rule and is mandatory.   Example:  curl -X PUT -d '{ rule_id :1, device_id : -1 ,  rule : %devices.os != \\ Cisco\\ , severity :  critical , count :15, delay : 5 m , mute :false}' -H 'X-Auth-Token: YOURAPITOKENHERE' https://librenms.org/api/v0/rules  Output:  rules\n{\n  status :  ok ,\n  err-msg :  \n}", 
            "title": "edit_rule"
        }, 
        {
            "location": "/API/Routing/", 
            "text": "list_bgp\n\n\nList the current BGP sessions.\n\n\nRoute: \n/api/v0/bgp\n\n\nInput:\n\n\n\n\nhostname = Either the devices hostname or id.\n\nOR\n\n\nasn = The ASN you would like to filter by\n\n\n\n\nExample:\n\n\ncurl -H 'X-Auth-Token: YOURAPITOKENHERE' https://librenms.org/api/v0/bgp\ncurl -H 'X-Auth-Token: YOURAPITOKENHERE' https://librenms.org/api/v0/bgp?hostname=host.example.com\ncurl -H 'X-Auth-Token: YOURAPITOKENHERE' https://librenms.org/api/v0/bgp?asn=1234\n\n\n\n\nOutput:\n\n\n{\n \nstatus\n: \nok\n,\n \nerr-msg\n: \n,\n \nbgp_sessions\n: [\n        {\n            \nbgpPeer_id\n: \n4\n,\n            \ndevice_id\n: \n2\n,\n            \nastext\n: \n,\n            \nbgpPeerIdentifier\n: \n1234:1b80:1:12::2\n,\n            \nbgpPeerRemoteAs\n: \n54321\n,\n            \nbgpPeerState\n: \nestablished\n,\n            \nbgpPeerAdminStatus\n: \nrunning\n,\n            \nbgpLocalAddr\n: \n1234:1b80:1:12::1\n,\n            \nbgpPeerRemoteAddr\n: \n0.0.0.0\n,\n            \nbgpPeerInUpdates\n: \n3\n,\n            \nbgpPeerOutUpdates\n: \n1\n,\n            \nbgpPeerInTotalMessages\n: \n0\n,\n            \nbgpPeerOutTotalMessages\n: \n0\n,\n            \nbgpPeerFsmEstablishedTime\n: \n0\n,\n            \nbgpPeerInUpdateElapsedTime\n: \n0\n,\n            \ncontext_name\n: \n\n        },\n    ...\n    ],\n    \ncount\n: 100\n}\n\n\n\n\nget_bgp\n\n\nRetrieves a BGP session by ID\n\n\nRoute: \n/api/v0/bgp/:id\n\n\nInput:\n\n\n-\n\n\nExample:\n\n\ncurl -H 'X-Auth-Token: YOURAPITOKENHERE' https://librenms.org/api/v0/bgp/4\n\n\n\n\nOutput:\n\n\n{\n    \nstatus\n: \nok\n,\n    \nbgp_session\n: [\n        {\n            \nbgpPeer_id\n: \n4\n,\n            \ndevice_id\n: \n2\n,\n            \nastext\n: \n,\n            \nbgpPeerIdentifier\n: \n1234:1b80:1:12::2\n,\n            \nbgpPeerRemoteAs\n: \n54321\n,\n            \nbgpPeerState\n: \nestablished\n,\n            \nbgpPeerAdminStatus\n: \nrunning\n,\n            \nbgpLocalAddr\n: \n1234:1b80:1:12::1\n,\n            \nbgpPeerRemoteAddr\n: \n0.0.0.0\n,\n            \nbgpPeerInUpdates\n: \n3\n,\n            \nbgpPeerOutUpdates\n: \n1\n,\n            \nbgpPeerInTotalMessages\n: \n0\n,\n            \nbgpPeerOutTotalMessages\n: \n0\n,\n            \nbgpPeerFsmEstablishedTime\n: \n0\n,\n            \nbgpPeerInUpdateElapsedTime\n: \n0\n,\n            \ncontext_name\n: \n\n        }\n    ],\n    \ncount\n: 1\n}\n\n\n\n\nlist_cbgp\n\n\nList the current BGP sessions counters.\n\n\nRoute: \n/api/v0/routing/bgp/cbgp\n\n\nInput:\n\n\n\n\nhostname = Either the devices hostname or id\n\n\n\n\nExample:\n\n\ncurl -H 'X-Auth-Token: YOURAPITOKENHERE' https://librenms.org/api/v0/routing/bgp/cbgp\ncurl -H 'X-Auth-Token: YOURAPITOKENHERE' https://librenms.org/api/v0/routing/bgp/cbgp?hostname=host.example.com\n\n\n\n\nOutput:\n\n\n{\n    \nstatus\n: \nok\n,\n    \nbgp_counters\n: [\n        {\n            \ndevice_id\n: \n9\n,\n            \nbgpPeerIdentifier\n: \n192.168.99.31\n,\n            \nafi\n: \nipv4\n,\n            \nsafi\n: \nmulticast\n,\n            \nAcceptedPrefixes\n: \n2\n,\n            \nDeniedPrefixes\n: \n0\n,\n            \nPrefixAdminLimit\n: \n0\n,\n            \nPrefixThreshold\n: \n0\n,\n            \nPrefixClearThreshold\n: \n0\n,\n            \nAdvertisedPrefixes\n: \n11487\n,\n            \nSuppressedPrefixes\n: \n0\n,\n            \nWithdrawnPrefixes\n: \n10918\n,\n            \nAcceptedPrefixes_delta\n: \n-2\n,\n            \nAcceptedPrefixes_prev\n: \n2\n,\n            \nDeniedPrefixes_delta\n: \n0\n,\n            \nDeniedPrefixes_prev\n: \n0\n,\n            \nAdvertisedPrefixes_delta\n: \n-11487\n,\n            \nAdvertisedPrefixes_prev\n: \n11487\n,\n            \nSuppressedPrefixes_delta\n: \n0\n,\n            \nSuppressedPrefixes_prev\n: \n0\n,\n            \nWithdrawnPrefixes_delta\n: \n-10918\n,\n            \nWithdrawnPrefixes_prev\n: \n10918\n,\n            \ncontext_name\n: \n\n        },\n        ...\n    ],\n    \ncount\n: 100\n}\n\n\n\n\nlist_ip_addresses\n\n\nList all IPv4 and IPv6 addresses.\n\n\nRoute: \n/api/v0/resources/ip/addresses\n\n\nInput:\n\n\n-\n\n\nExample:\n\n\ncurl -H 'X-Auth-Token: YOURAPITOKENHERE' https://librenms.org/api/v0/resources/ip/addresses\n\n\n\n\nOutput:\n\n\n{\n    \nstatus\n: \nok\n,\n    \nip_addresses\n: [\n        {\n            \nipv4_address_id\n: \n69\n,\n            \nipv4_address\n: \n127.0.0.1\n,\n            \nipv4_prefixlen\n: \n8\n,\n            \nipv4_network_id\n: \n55\n,\n            \nport_id\n: \n135\n,\n            \ncontext_name\n: \n\n        },\n        ...\n    ],\n    \ncount\n: 55\n}\n\n\n\n\nget_network_ip_addresses\n\n\nGet all IPv4 and IPv6 addresses for particular network.\n\n\nRoute: \n/api/v0/resources/ip/networks/:id/ip\n\n\n\n\nid must be integer\n\n\n\n\nInput:\n\n\n-\n\n\nExample:\n\n\ncurl -H 'X-Auth-Token: YOURAPITOKENHERE' https://librenms.org/api/v0/resources/ip/networks/55/ip\n\n\n\n\nOutput:\n\n\n{\n    \nstatus\n: \nok\n,\n    \naddresses\n: [\n        {\n            \nipv4_address_id\n: \n69\n,\n            \nipv4_address\n: \n127.0.0.1\n,\n            \nipv4_prefixlen\n: \n8\n,\n            \nipv4_network_id\n: \n55\n,\n            \nport_id\n: \n135\n,\n            \ncontext_name\n: \n\n        }\n    ],\n    \ncount\n: 1\n}\n\n\n\n\nlist_ip_networks\n\n\nList all IPv4 and IPv6 networks.\n\n\nRoute: \n/api/v0/resources/ip/networks\n\n\nInput:\n\n\n-\n\n\nExample:\n\n\ncurl -H 'X-Auth-Token: YOURAPITOKENHERE' https://librenms.org/api/v0/resources/ip/networks\n\n\n\n\nOutput:\n\n\n{\n    \nstatus\n: \nok\n,\n    \nip_networks\n: [\n        {\n            \nipv4_network_id\n: \n1\n,\n            \nipv4_network\n: \n127.0.0.0/8\n,\n            \ncontext_name\n: \n\n        },\n        ...\n    ],\n    \ncount\n: 100\n}\n\n\n\n\nlist_ipsec\n\n\nList the current IPSec tunnels which are active.\n\n\nRoute: \n/api/v0/routing/ipsec/data/:hostname\n\n\n\n\nhostname can be either the device hostname or id\n\n\n\n\nInput:\n\n\n-\n\n\nExample:\n\n\ncurl -H 'X-Auth-Token: YOURAPITOKENHERE' https://librenms.org/api/v0/routing/ipsec/data/localhost\n\n\n\n\nOutput:\n\n\n{\n    \nstatus\n: \nok\n,\n    \nerr-msg\n: \n,\n    \ncount\n: 0,\n    \nipsec\n: [\n        \ntunnel_id\n: \n1\n,\n        \ndevice_id\n: \n1\n,\n        \npeer_port\n: \n0\n,\n        \npeer_addr\n: \n127.0.0.1\n,\n        \nlocal_addr\n: \n127.0.0.2\n,\n        \nlocal_port\n: \n0\n,\n        \ntunnel_name\n: \n,\n        \ntunnel_status\n: \nactive\n\n    ]\n}\n\n\n\n\n\n\nPlease note, this will only show active VPN sessions not all configured.\n\n\n\n\nlist_ospf\n\n\nList the current OSPF neighbours.\n\n\nRoute: \n/api/v0/ospf\n\n\nInput:\n\n\n\n\nhostname = Either the devices hostname or id.\n\n\n\n\nExample:\n\n\ncurl -H 'X-Auth-Token: YOURAPITOKENHERE' https://librenms.org/api/v0/ospf\ncurl -H 'X-Auth-Token: YOURAPITOKENHERE' https://librenms.org/api/v0/ospf?hostname=host.example.com\n\n\n\n\nOutput:\n\n\n{\n \nstatus\n: \nok\n,\n \nospf_neighbours\n: [\n        {\n            \ndevice_id\n: \n1\n,\n            \nport_id\n: \n0\n,\n            \nospf_nbr_id\n: \n172.16.1.145.0\n,\n            \nospfNbrIpAddr\n: \n172.16.1.145\n,\n            \nospfNbrAddressLessIndex\n: \n0\n,\n            \nospfNbrRtrId\n: \n172.16.0.140\n,\n            \nospfNbrOptions\n: \n82\n,\n            \nospfNbrPriority\n: \n1\n,\n            \nospfNbrState\n: \nfull\n,\n            \nospfNbrEvents\n: \n5\n,\n            \nospfNbrLsRetransQLen\n: \n0\n,\n            \nospfNbmaNbrStatus\n: \nactive\n,\n            \nospfNbmaNbrPermanence\n: \ndynamic\n,\n            \nospfNbrHelloSuppressed\n: \nfalse\n,\n            \ncontext_name\n: \n\n        }\n    ],\n    \ncount\n: 1\n}\n\n\n\n\nlist_vrf\n\n\nList the current VRFs.\n\n\nRoute: \n/api/v0/routing/vrf\n\n\nInput:\n\n\n\n\nhostname = Either the devices hostname or id\n\nOR\n\n\nvrfname = The VRF name you would like to filter by\n\n\n\n\nExample:\n\n\ncurl -H 'X-Auth-Token: YOURAPITOKENHERE' https://librenms.org/api/v0/routing/vrf\ncurl -H 'X-Auth-Token: YOURAPITOKENHERE' https://librenms.org/api/v0/routing/vrf?hostname=host.example.com\ncurl -H 'X-Auth-Token: YOURAPITOKENHERE' https://librenms.org/api/v0/routing/vrf?vrfname=Mgmt-vrf\n\n\n\n\nOutput:\n\n\n{\n    \nstatus\n: \nok\n,\n    \nvrfs\n: [\n        {\n            \nvrf_id\n: \n2\n,\n            \nvrf_oid\n: \n8.77.103.109.116.45.118.114.102\n,\n            \nvrf_name\n: \nMgmt-vrf\n,\n            \nmplsVpnVrfRouteDistinguisher\n: \n,\n            \nmplsVpnVrfDescription\n: \n,\n            \ndevice_id\n: \n8\n\n        },\n        ...\n    ],\n    \ncount\n: 100\n}\n\n\n\n\nget_vrf\n\n\nRetrieves VRF by ID\n\n\nRoute: \n/api/v0/routing/vrf/:id\n\n\nInput:\n\n\n-\n\n\nExample:\n\n\ncurl -H 'X-Auth-Token: YOURAPITOKENHERE' https://librenms.org/api/v0/routing/vrf/2\n\n\n\n\nOutput:\n\n\n{\n    \nstatus\n: \nok\n,\n    \nvrf\n: [\n        {\n            \nvrf_id\n: \n2\n,\n            \nvrf_oid\n: \n8.77.103.109.116.45.118.114.102\n,\n            \nvrf_name\n: \nMgmt-vrf\n,\n            \nmplsVpnVrfRouteDistinguisher\n: \n,\n            \nmplsVpnVrfDescription\n: \n,\n            \ndevice_id\n: \n8\n\n        }\n    ],\n    \ncount\n: 1\n}", 
            "title": "Routing"
        }, 
        {
            "location": "/API/Routing/#list_bgp", 
            "text": "List the current BGP sessions.  Route:  /api/v0/bgp  Input:   hostname = Either the devices hostname or id. OR  asn = The ASN you would like to filter by   Example:  curl -H 'X-Auth-Token: YOURAPITOKENHERE' https://librenms.org/api/v0/bgp\ncurl -H 'X-Auth-Token: YOURAPITOKENHERE' https://librenms.org/api/v0/bgp?hostname=host.example.com\ncurl -H 'X-Auth-Token: YOURAPITOKENHERE' https://librenms.org/api/v0/bgp?asn=1234  Output:  {\n  status :  ok ,\n  err-msg :  ,\n  bgp_sessions : [\n        {\n             bgpPeer_id :  4 ,\n             device_id :  2 ,\n             astext :  ,\n             bgpPeerIdentifier :  1234:1b80:1:12::2 ,\n             bgpPeerRemoteAs :  54321 ,\n             bgpPeerState :  established ,\n             bgpPeerAdminStatus :  running ,\n             bgpLocalAddr :  1234:1b80:1:12::1 ,\n             bgpPeerRemoteAddr :  0.0.0.0 ,\n             bgpPeerInUpdates :  3 ,\n             bgpPeerOutUpdates :  1 ,\n             bgpPeerInTotalMessages :  0 ,\n             bgpPeerOutTotalMessages :  0 ,\n             bgpPeerFsmEstablishedTime :  0 ,\n             bgpPeerInUpdateElapsedTime :  0 ,\n             context_name :  \n        },\n    ...\n    ],\n     count : 100\n}", 
            "title": "list_bgp"
        }, 
        {
            "location": "/API/Routing/#get_bgp", 
            "text": "Retrieves a BGP session by ID  Route:  /api/v0/bgp/:id  Input:  -  Example:  curl -H 'X-Auth-Token: YOURAPITOKENHERE' https://librenms.org/api/v0/bgp/4  Output:  {\n     status :  ok ,\n     bgp_session : [\n        {\n             bgpPeer_id :  4 ,\n             device_id :  2 ,\n             astext :  ,\n             bgpPeerIdentifier :  1234:1b80:1:12::2 ,\n             bgpPeerRemoteAs :  54321 ,\n             bgpPeerState :  established ,\n             bgpPeerAdminStatus :  running ,\n             bgpLocalAddr :  1234:1b80:1:12::1 ,\n             bgpPeerRemoteAddr :  0.0.0.0 ,\n             bgpPeerInUpdates :  3 ,\n             bgpPeerOutUpdates :  1 ,\n             bgpPeerInTotalMessages :  0 ,\n             bgpPeerOutTotalMessages :  0 ,\n             bgpPeerFsmEstablishedTime :  0 ,\n             bgpPeerInUpdateElapsedTime :  0 ,\n             context_name :  \n        }\n    ],\n     count : 1\n}", 
            "title": "get_bgp"
        }, 
        {
            "location": "/API/Routing/#list_cbgp", 
            "text": "List the current BGP sessions counters.  Route:  /api/v0/routing/bgp/cbgp  Input:   hostname = Either the devices hostname or id   Example:  curl -H 'X-Auth-Token: YOURAPITOKENHERE' https://librenms.org/api/v0/routing/bgp/cbgp\ncurl -H 'X-Auth-Token: YOURAPITOKENHERE' https://librenms.org/api/v0/routing/bgp/cbgp?hostname=host.example.com  Output:  {\n     status :  ok ,\n     bgp_counters : [\n        {\n             device_id :  9 ,\n             bgpPeerIdentifier :  192.168.99.31 ,\n             afi :  ipv4 ,\n             safi :  multicast ,\n             AcceptedPrefixes :  2 ,\n             DeniedPrefixes :  0 ,\n             PrefixAdminLimit :  0 ,\n             PrefixThreshold :  0 ,\n             PrefixClearThreshold :  0 ,\n             AdvertisedPrefixes :  11487 ,\n             SuppressedPrefixes :  0 ,\n             WithdrawnPrefixes :  10918 ,\n             AcceptedPrefixes_delta :  -2 ,\n             AcceptedPrefixes_prev :  2 ,\n             DeniedPrefixes_delta :  0 ,\n             DeniedPrefixes_prev :  0 ,\n             AdvertisedPrefixes_delta :  -11487 ,\n             AdvertisedPrefixes_prev :  11487 ,\n             SuppressedPrefixes_delta :  0 ,\n             SuppressedPrefixes_prev :  0 ,\n             WithdrawnPrefixes_delta :  -10918 ,\n             WithdrawnPrefixes_prev :  10918 ,\n             context_name :  \n        },\n        ...\n    ],\n     count : 100\n}", 
            "title": "list_cbgp"
        }, 
        {
            "location": "/API/Routing/#list_ip_addresses", 
            "text": "List all IPv4 and IPv6 addresses.  Route:  /api/v0/resources/ip/addresses  Input:  -  Example:  curl -H 'X-Auth-Token: YOURAPITOKENHERE' https://librenms.org/api/v0/resources/ip/addresses  Output:  {\n     status :  ok ,\n     ip_addresses : [\n        {\n             ipv4_address_id :  69 ,\n             ipv4_address :  127.0.0.1 ,\n             ipv4_prefixlen :  8 ,\n             ipv4_network_id :  55 ,\n             port_id :  135 ,\n             context_name :  \n        },\n        ...\n    ],\n     count : 55\n}", 
            "title": "list_ip_addresses"
        }, 
        {
            "location": "/API/Routing/#get_network_ip_addresses", 
            "text": "Get all IPv4 and IPv6 addresses for particular network.  Route:  /api/v0/resources/ip/networks/:id/ip   id must be integer   Input:  -  Example:  curl -H 'X-Auth-Token: YOURAPITOKENHERE' https://librenms.org/api/v0/resources/ip/networks/55/ip  Output:  {\n     status :  ok ,\n     addresses : [\n        {\n             ipv4_address_id :  69 ,\n             ipv4_address :  127.0.0.1 ,\n             ipv4_prefixlen :  8 ,\n             ipv4_network_id :  55 ,\n             port_id :  135 ,\n             context_name :  \n        }\n    ],\n     count : 1\n}", 
            "title": "get_network_ip_addresses"
        }, 
        {
            "location": "/API/Routing/#list_ip_networks", 
            "text": "List all IPv4 and IPv6 networks.  Route:  /api/v0/resources/ip/networks  Input:  -  Example:  curl -H 'X-Auth-Token: YOURAPITOKENHERE' https://librenms.org/api/v0/resources/ip/networks  Output:  {\n     status :  ok ,\n     ip_networks : [\n        {\n             ipv4_network_id :  1 ,\n             ipv4_network :  127.0.0.0/8 ,\n             context_name :  \n        },\n        ...\n    ],\n     count : 100\n}", 
            "title": "list_ip_networks"
        }, 
        {
            "location": "/API/Routing/#list_ipsec", 
            "text": "List the current IPSec tunnels which are active.  Route:  /api/v0/routing/ipsec/data/:hostname   hostname can be either the device hostname or id   Input:  -  Example:  curl -H 'X-Auth-Token: YOURAPITOKENHERE' https://librenms.org/api/v0/routing/ipsec/data/localhost  Output:  {\n     status :  ok ,\n     err-msg :  ,\n     count : 0,\n     ipsec : [\n         tunnel_id :  1 ,\n         device_id :  1 ,\n         peer_port :  0 ,\n         peer_addr :  127.0.0.1 ,\n         local_addr :  127.0.0.2 ,\n         local_port :  0 ,\n         tunnel_name :  ,\n         tunnel_status :  active \n    ]\n}   Please note, this will only show active VPN sessions not all configured.", 
            "title": "list_ipsec"
        }, 
        {
            "location": "/API/Routing/#list_ospf", 
            "text": "List the current OSPF neighbours.  Route:  /api/v0/ospf  Input:   hostname = Either the devices hostname or id.   Example:  curl -H 'X-Auth-Token: YOURAPITOKENHERE' https://librenms.org/api/v0/ospf\ncurl -H 'X-Auth-Token: YOURAPITOKENHERE' https://librenms.org/api/v0/ospf?hostname=host.example.com  Output:  {\n  status :  ok ,\n  ospf_neighbours : [\n        {\n             device_id :  1 ,\n             port_id :  0 ,\n             ospf_nbr_id :  172.16.1.145.0 ,\n             ospfNbrIpAddr :  172.16.1.145 ,\n             ospfNbrAddressLessIndex :  0 ,\n             ospfNbrRtrId :  172.16.0.140 ,\n             ospfNbrOptions :  82 ,\n             ospfNbrPriority :  1 ,\n             ospfNbrState :  full ,\n             ospfNbrEvents :  5 ,\n             ospfNbrLsRetransQLen :  0 ,\n             ospfNbmaNbrStatus :  active ,\n             ospfNbmaNbrPermanence :  dynamic ,\n             ospfNbrHelloSuppressed :  false ,\n             context_name :  \n        }\n    ],\n     count : 1\n}", 
            "title": "list_ospf"
        }, 
        {
            "location": "/API/Routing/#list_vrf", 
            "text": "List the current VRFs.  Route:  /api/v0/routing/vrf  Input:   hostname = Either the devices hostname or id OR  vrfname = The VRF name you would like to filter by   Example:  curl -H 'X-Auth-Token: YOURAPITOKENHERE' https://librenms.org/api/v0/routing/vrf\ncurl -H 'X-Auth-Token: YOURAPITOKENHERE' https://librenms.org/api/v0/routing/vrf?hostname=host.example.com\ncurl -H 'X-Auth-Token: YOURAPITOKENHERE' https://librenms.org/api/v0/routing/vrf?vrfname=Mgmt-vrf  Output:  {\n     status :  ok ,\n     vrfs : [\n        {\n             vrf_id :  2 ,\n             vrf_oid :  8.77.103.109.116.45.118.114.102 ,\n             vrf_name :  Mgmt-vrf ,\n             mplsVpnVrfRouteDistinguisher :  ,\n             mplsVpnVrfDescription :  ,\n             device_id :  8 \n        },\n        ...\n    ],\n     count : 100\n}", 
            "title": "list_vrf"
        }, 
        {
            "location": "/API/Routing/#get_vrf", 
            "text": "Retrieves VRF by ID  Route:  /api/v0/routing/vrf/:id  Input:  -  Example:  curl -H 'X-Auth-Token: YOURAPITOKENHERE' https://librenms.org/api/v0/routing/vrf/2  Output:  {\n     status :  ok ,\n     vrf : [\n        {\n             vrf_id :  2 ,\n             vrf_oid :  8.77.103.109.116.45.118.114.102 ,\n             vrf_name :  Mgmt-vrf ,\n             mplsVpnVrfRouteDistinguisher :  ,\n             mplsVpnVrfDescription :  ,\n             device_id :  8 \n        }\n    ],\n     count : 1\n}", 
            "title": "get_vrf"
        }, 
        {
            "location": "/API/Switching/", 
            "text": "list_vlans\n\n\nGet a list of all VLANs.\n\n\nRoute: \n/api/v0/resources/vlans\n\n\nInput:\n\n\n-\n\n\nExample:\n\n\ncurl -H 'X-Auth-Token: YOURAPITOKENHERE' https://librenms.org/api/v0/resources/vlans\n\n\n\n\nOutput:\n\n\n{\n    \nstatus\n: \nok\n,\n    \nvlans\n: [\n        {\n            \nvlan_id\n: \n31\n,\n            \ndevice_id\n: \n10\n,\n            \nvlan_vlan\n: \n1\n,\n            \nvlan_domain\n: \n1\n,\n            \nvlan_name\n: \ndefault\n,\n            \nvlan_type\n: \nethernet\n,\n            \nvlan_mtu\n: null\n        },\n        ...\n    ],\n    \ncount\n: 100\n}\n\n\n\n\nget_vlans\n\n\nGet a list of all VLANs for a given device.\n\n\nRoute: \n/api/v0/devices/:hostname/vlans\n\n\n\n\nhostname can be either the device hostname or id\n\n\n\n\nInput:\n\n\n-\n\n\nExample:\n\n\ncurl -H 'X-Auth-Token: YOURAPITOKENHERE' https://librenms.org/api/v0/devices/localhost/vlans\n\n\n\n\nOutput:\n\n\n{\n    \nstatus\n: \nok\n,\n    \ncount\n: 0,\n    \nvlans\n: [\n    {\n   \nvlan_vlan\n: \n1\n,\n   \nvlan_domain\n: \n1\n,\n   \nvlan_name\n: \ndefault\n,\n   \nvlan_type\n: \nethernet\n,\n   \nvlan_mtu\n: null\n    }\n  ]\n}", 
            "title": "Switching"
        }, 
        {
            "location": "/API/Switching/#list_vlans", 
            "text": "Get a list of all VLANs.  Route:  /api/v0/resources/vlans  Input:  -  Example:  curl -H 'X-Auth-Token: YOURAPITOKENHERE' https://librenms.org/api/v0/resources/vlans  Output:  {\n     status :  ok ,\n     vlans : [\n        {\n             vlan_id :  31 ,\n             device_id :  10 ,\n             vlan_vlan :  1 ,\n             vlan_domain :  1 ,\n             vlan_name :  default ,\n             vlan_type :  ethernet ,\n             vlan_mtu : null\n        },\n        ...\n    ],\n     count : 100\n}", 
            "title": "list_vlans"
        }, 
        {
            "location": "/API/Switching/#get_vlans", 
            "text": "Get a list of all VLANs for a given device.  Route:  /api/v0/devices/:hostname/vlans   hostname can be either the device hostname or id   Input:  -  Example:  curl -H 'X-Auth-Token: YOURAPITOKENHERE' https://librenms.org/api/v0/devices/localhost/vlans  Output:  {\n     status :  ok ,\n     count : 0,\n     vlans : [\n    {\n    vlan_vlan :  1 ,\n    vlan_domain :  1 ,\n    vlan_name :  default ,\n    vlan_type :  ethernet ,\n    vlan_mtu : null\n    }\n  ]\n}", 
            "title": "get_vlans"
        }, 
        {
            "location": "/API/Inventory/", 
            "text": "get_inventory\n\n\nRetrieve the inventory for a device. If you call this without any parameters then you will only get part of the inventory. This is because a lot of devices nest each component, for instance you may initially have the chassis, within this the ports - 1 being an sfp cage, then the sfp itself. The way this API call is designed is to enable a recursive lookup. The first call will retrieve the root entry, included within this response will be entPhysicalIndex, you can then call for entPhysicalContainedIn which will then return the next layer of results.\n\n\nRoute: \n/api/v0/inventory/:hostname\n\n\n\n\nhostname can be either the device hostname or the device id\n\n\n\n\nInput:\n\n\n\n\nentPhysicalClass: This is used to restrict the class of the inventory, for example you can specify chassis to only return items in the inventory that are labelled as chassis.\n\n\nentPhysicalContainedIn: This is used to retrieve items within the inventory assigned to a previous component, for example specifying the chassis (entPhysicalIndex) will retrieve all items where the chassis is the parent.\n\n\n\n\nExample:\n\n\ncurl -H 'X-Auth-Token: YOURAPITOKENHERE' https://librenms.org/api/v0/inventory/localhost?entPhysicalContainedIn=65536\n\n\n\n\nOutput:\n\n\n{\n    \nstatus\n: \nok\n,\n    \nerr-msg\n: \n,\n    \ncount\n: 1,\n    \ninventory\n: [\n        {\n            \nentPhysical_id\n: \n2\n,\n            \ndevice_id\n: \n32\n,\n            \nentPhysicalIndex\n: \n262145\n,\n            \nentPhysicalDescr\n: \nLinux 3.3.5 ehci_hcd RB400 EHCI\n,\n            \nentPhysicalClass\n: \nunknown\n,\n            \nentPhysicalName\n: \n1:1\n,\n            \nentPhysicalHardwareRev\n: \n,\n            \nentPhysicalFirmwareRev\n: \n,\n            \nentPhysicalSoftwareRev\n: \n,\n            \nentPhysicalAlias\n: \n,\n            \nentPhysicalAssetID\n: \n,\n            \nentPhysicalIsFRU\n: \nfalse\n,\n            \nentPhysicalModelName\n: \n0x0002\n,\n            \nentPhysicalVendorType\n: \nzeroDotZero\n,\n            \nentPhysicalSerialNum\n: \nrb400_usb\n,\n            \nentPhysicalContainedIn\n: \n65536\n,\n            \nentPhysicalParentRelPos\n: \n-1\n,\n            \nentPhysicalMfgName\n: \n0x1d6b\n,\n            \nifIndex\n: \n0\n\n        }\n    ]\n}", 
            "title": "Inventory"
        }, 
        {
            "location": "/API/Inventory/#get_inventory", 
            "text": "Retrieve the inventory for a device. If you call this without any parameters then you will only get part of the inventory. This is because a lot of devices nest each component, for instance you may initially have the chassis, within this the ports - 1 being an sfp cage, then the sfp itself. The way this API call is designed is to enable a recursive lookup. The first call will retrieve the root entry, included within this response will be entPhysicalIndex, you can then call for entPhysicalContainedIn which will then return the next layer of results.  Route:  /api/v0/inventory/:hostname   hostname can be either the device hostname or the device id   Input:   entPhysicalClass: This is used to restrict the class of the inventory, for example you can specify chassis to only return items in the inventory that are labelled as chassis.  entPhysicalContainedIn: This is used to retrieve items within the inventory assigned to a previous component, for example specifying the chassis (entPhysicalIndex) will retrieve all items where the chassis is the parent.   Example:  curl -H 'X-Auth-Token: YOURAPITOKENHERE' https://librenms.org/api/v0/inventory/localhost?entPhysicalContainedIn=65536  Output:  {\n     status :  ok ,\n     err-msg :  ,\n     count : 1,\n     inventory : [\n        {\n             entPhysical_id :  2 ,\n             device_id :  32 ,\n             entPhysicalIndex :  262145 ,\n             entPhysicalDescr :  Linux 3.3.5 ehci_hcd RB400 EHCI ,\n             entPhysicalClass :  unknown ,\n             entPhysicalName :  1:1 ,\n             entPhysicalHardwareRev :  ,\n             entPhysicalFirmwareRev :  ,\n             entPhysicalSoftwareRev :  ,\n             entPhysicalAlias :  ,\n             entPhysicalAssetID :  ,\n             entPhysicalIsFRU :  false ,\n             entPhysicalModelName :  0x0002 ,\n             entPhysicalVendorType :  zeroDotZero ,\n             entPhysicalSerialNum :  rb400_usb ,\n             entPhysicalContainedIn :  65536 ,\n             entPhysicalParentRelPos :  -1 ,\n             entPhysicalMfgName :  0x1d6b ,\n             ifIndex :  0 \n        }\n    ]\n}", 
            "title": "get_inventory"
        }, 
        {
            "location": "/API/Bills/", 
            "text": "list_bills\n\n\nRetrieve the list of bills currently in the system.\n\n\nRoute: \n/api/v0/bills\n\n\nInput:\n\n\nExample:\n\n\ncurl -H 'X-Auth-Token: YOURAPITOKENHERE' https://librenms.org/api/v0/bills\n\n\n\n\nOutput:\n\n\n{\n \nstatus\n: \nok\n,\n \nerr-msg\n: \n,\n \ncount\n: 1,\n \nbills\n: [\n  {\n   \nbill_id\n: \n1\n,\n   \nbill_name\n: \nRouter bills\n,\n   \nbill_type\n: \ncdr\n,\n   \nbill_cdr\n: \n10000000\n,\n   \nbill_day\n: \n1\n,\n   \nbill_quota\n: \n0\n,\n   \nrate_95th_in\n: \n0\n,\n   \nrate_95th_out\n: \n0\n,\n   \nrate_95th\n: \n0\n,\n   \ndir_95th\n: \nin\n,\n   \ntotal_data\n: \n0\n,\n   \ntotal_data_in\n: \n0\n,\n   \ntotal_data_out\n: \n0\n,\n   \nrate_average_in\n: \n0\n,\n   \nrate_average_out\n: \n0\n,\n   \nrate_average\n: \n0\n,\n   \nbill_last_calc\n: \n2015-07-02 17:01:26\n,\n   \nbill_custid\n: \nRouter\n,\n   \nbill_ref\n: \nRouter\n,\n   \nbill_notes\n: \nBill me\n,\n   \nbill_autoadded\n: \n0\n,\n   \nports_total\n: \n0\n,\n   \nallowed\n: \n10Mbps\n,\n   \nused\n: \n0bps\n,\n   \npercent\n: 0,\n   \noveruse\n: \n-\n,\n   \nports\n: [\n       {\n           \ndevice_id\n: \n168\n,\n           \nport_id\n: \n35146\n,\n           \nifName\n: \neth0\n\n       }\n   ]\n  }\n ]\n}\n\n\n\n\nget_bill\n\n\nRetrieve a specific bill\n\n\nRoute: \n/api/v0/bills/:id\n\n       \n/api/v0/bills?ref=:ref\n\n       \n/api/v0/bills?custid=:custid\n\n\n\n\nid is the specific bill id\n\n\nref is the billing reference\n\n\ncustid is the customer reference\n\n\n\n\nInput:\n\n\nExample:\n\n\ncurl -H 'X-Auth-Token: YOURAPITOKENHERE' https://librenms.org/api/v0/bills/1\ncurl -H 'X-Auth-Token: YOURAPITOKENHERE' https://librenms.org/api/v0/bills?ref=:customerref\ncurl -H 'X-Auth-Token: YOURAPITOKENHERE' https://librenms.org/api/v0/bills?custid=:custid\n\n\n\n\nOutput:\n\n\n{\n \nstatus\n: \nok\n,\n \nerr-msg\n: \n,\n \ncount\n: 1,\n \nbills\n: [\n  {\n   \nbill_id\n: \n1\n,\n   \nbill_name\n: \nRouter bills\n,\n   \nbill_type\n: \ncdr\n,\n   \nbill_cdr\n: \n10000000\n,\n   \nbill_day\n: \n1\n,\n   \nbill_quota\n: \n0\n,\n   \nrate_95th_in\n: \n0\n,\n   \nrate_95th_out\n: \n0\n,\n   \nrate_95th\n: \n0\n,\n   \ndir_95th\n: \nin\n,\n   \ntotal_data\n: \n0\n,\n   \ntotal_data_in\n: \n0\n,\n   \ntotal_data_out\n: \n0\n,\n   \nrate_average_in\n: \n0\n,\n   \nrate_average_out\n: \n0\n,\n   \nrate_average\n: \n0\n,\n   \nbill_last_calc\n: \n2015-07-02 17:01:26\n,\n   \nbill_custid\n: \nRouter\n,\n   \nbill_ref\n: \nRouter\n,\n   \nbill_notes\n: \nBill me\n,\n   \nbill_autoadded\n: \n0\n,\n   \nports_total\n: \n0\n,\n   \nallowed\n: \n10Mbps\n,\n   \nused\n: \n0bps\n,\n   \npercent\n: 0,\n   \noveruse\n: \n-\n,\n   \nports\n: [\n       {\n           \ndevice_id\n: \n168\n,\n           \nport_id\n: \n35146\n,\n           \nifName\n: \neth0\n\n       }\n   ]\n  }\n ]\n}", 
            "title": "Bills"
        }, 
        {
            "location": "/API/Bills/#list_bills", 
            "text": "Retrieve the list of bills currently in the system.  Route:  /api/v0/bills  Input:  Example:  curl -H 'X-Auth-Token: YOURAPITOKENHERE' https://librenms.org/api/v0/bills  Output:  {\n  status :  ok ,\n  err-msg :  ,\n  count : 1,\n  bills : [\n  {\n    bill_id :  1 ,\n    bill_name :  Router bills ,\n    bill_type :  cdr ,\n    bill_cdr :  10000000 ,\n    bill_day :  1 ,\n    bill_quota :  0 ,\n    rate_95th_in :  0 ,\n    rate_95th_out :  0 ,\n    rate_95th :  0 ,\n    dir_95th :  in ,\n    total_data :  0 ,\n    total_data_in :  0 ,\n    total_data_out :  0 ,\n    rate_average_in :  0 ,\n    rate_average_out :  0 ,\n    rate_average :  0 ,\n    bill_last_calc :  2015-07-02 17:01:26 ,\n    bill_custid :  Router ,\n    bill_ref :  Router ,\n    bill_notes :  Bill me ,\n    bill_autoadded :  0 ,\n    ports_total :  0 ,\n    allowed :  10Mbps ,\n    used :  0bps ,\n    percent : 0,\n    overuse :  - ,\n    ports : [\n       {\n            device_id :  168 ,\n            port_id :  35146 ,\n            ifName :  eth0 \n       }\n   ]\n  }\n ]\n}", 
            "title": "list_bills"
        }, 
        {
            "location": "/API/Bills/#get_bill", 
            "text": "Retrieve a specific bill  Route:  /api/v0/bills/:id \n        /api/v0/bills?ref=:ref \n        /api/v0/bills?custid=:custid   id is the specific bill id  ref is the billing reference  custid is the customer reference   Input:  Example:  curl -H 'X-Auth-Token: YOURAPITOKENHERE' https://librenms.org/api/v0/bills/1\ncurl -H 'X-Auth-Token: YOURAPITOKENHERE' https://librenms.org/api/v0/bills?ref=:customerref\ncurl -H 'X-Auth-Token: YOURAPITOKENHERE' https://librenms.org/api/v0/bills?custid=:custid  Output:  {\n  status :  ok ,\n  err-msg :  ,\n  count : 1,\n  bills : [\n  {\n    bill_id :  1 ,\n    bill_name :  Router bills ,\n    bill_type :  cdr ,\n    bill_cdr :  10000000 ,\n    bill_day :  1 ,\n    bill_quota :  0 ,\n    rate_95th_in :  0 ,\n    rate_95th_out :  0 ,\n    rate_95th :  0 ,\n    dir_95th :  in ,\n    total_data :  0 ,\n    total_data_in :  0 ,\n    total_data_out :  0 ,\n    rate_average_in :  0 ,\n    rate_average_out :  0 ,\n    rate_average :  0 ,\n    bill_last_calc :  2015-07-02 17:01:26 ,\n    bill_custid :  Router ,\n    bill_ref :  Router ,\n    bill_notes :  Bill me ,\n    bill_autoadded :  0 ,\n    ports_total :  0 ,\n    allowed :  10Mbps ,\n    used :  0bps ,\n    percent : 0,\n    overuse :  - ,\n    ports : [\n       {\n            device_id :  168 ,\n            port_id :  35146 ,\n            ifName :  eth0 \n       }\n   ]\n  }\n ]\n}", 
            "title": "get_bill"
        }, 
        {
            "location": "/API/ARP/", 
            "text": "list_arp\n\n\nRetrieve a specific ARP entry or all ARP enties for a device\n\n\nRoute: \n/api/v0/resources/ip/arp/:ip\n\n\n\n\nip is the specific IP you would like to query, if this is all then you need to pass ?device=\nhostname\n (or device id)\n\n\nThis may also be a cidr network, for example 192.168.1.0/24\n\n\n\n\nInput:\n\n\n\n\ndevice if you specify all for the IP then you need to populate this with the hostname or id of the device.\n\n\n\n\nExample:\n\n\ncurl -H 'X-Auth-Token: YOURAPITOKENHERE' https://librenms.org/api/v0/resources/ip/arp/1.1.1.1\ncurl -H 'X-Auth-Token: YOURAPITOKENHERE' https://librenms.org/api/v0/resources/ip/arp/192.168.1.0/24\ncurl -H 'X-Auth-Token: YOURAPITOKENHERE' https://librenms.org/api/v0/resources/ip/arp/all?device=localhost\n\n\n\n\nOutput:\n\n\n{\n    \nstatus\n: \nok\n,\n    \nerr-msg\n: \n,\n    \ncount\n: 1,\n    \narp\n: [\n        {\n            \nport_id\n: \n229\n,\n            \nmac_address\n: \nda160e5c2002\n,\n            \nipv4_address\n: \n1.1.1.1\n,\n            \ncontext_name\n: \n\n        }\n    ]\n}", 
            "title": "ARP"
        }, 
        {
            "location": "/API/ARP/#list_arp", 
            "text": "Retrieve a specific ARP entry or all ARP enties for a device  Route:  /api/v0/resources/ip/arp/:ip   ip is the specific IP you would like to query, if this is all then you need to pass ?device= hostname  (or device id)  This may also be a cidr network, for example 192.168.1.0/24   Input:   device if you specify all for the IP then you need to populate this with the hostname or id of the device.   Example:  curl -H 'X-Auth-Token: YOURAPITOKENHERE' https://librenms.org/api/v0/resources/ip/arp/1.1.1.1\ncurl -H 'X-Auth-Token: YOURAPITOKENHERE' https://librenms.org/api/v0/resources/ip/arp/192.168.1.0/24\ncurl -H 'X-Auth-Token: YOURAPITOKENHERE' https://librenms.org/api/v0/resources/ip/arp/all?device=localhost  Output:  {\n     status :  ok ,\n     err-msg :  ,\n     count : 1,\n     arp : [\n        {\n             port_id :  229 ,\n             mac_address :  da160e5c2002 ,\n             ipv4_address :  1.1.1.1 ,\n             context_name :  \n        }\n    ]\n}", 
            "title": "list_arp"
        }, 
        {
            "location": "/API/Services/", 
            "text": "list_services\n\n\nRetrieve all services\n\n\nRoute: \n/api/v0/services\n\n\nInput:\n\n\n\n\nstate: only which have a certain state (valid options are 0=Ok, 1=Warning, 2=Critical).\n\n\ntype: service type, used sql LIKE to find services, so for tcp, use type=tcp for http use type=http\n\n\n\n\nExample:\n\n\ncurl -H 'X-Auth-Token: YOURAPITOKENHERE' https://librenms.org/api/v0/services\ncurl -H 'X-Auth-Token: YOURAPITOKENHERE' https://librenms.org/api/v0/services?state=2\ncurl -H 'X-Auth-Token: YOURAPITOKENHERE' https://librenms.org/api/v0/services?state=0\ntype=tcp\n\n\n\n\nOutput:\n\n\n{\n    \nstatus\n: \nok\n,\n    \nerr-msg\n: \n,\n    \ncount\n: 1,\n    \nservices\n: [\n        [\n            {\n                \nservice_id\n: \n13\n,\n                \ndevice_id\n: \n1\n,\n                \nservice_ip\n: \ndemo1.yourdomian.net\n,\n                \nservice_type\n: \nntp_peer\n,\n                \nservice_desc\n: \nNTP\n,\n                \nservice_param\n: \n-H 192.168.1.10\n,\n                \nservice_ignore\n: \n0\n,\n                \nservice_status\n: \n0\n,\n                \nservice_changed\n: \n1470962470\n,\n                \nservice_message\n: \nNTP OK: Offset -0.000717 secs\n,\n                \nservice_disabled\n: \n0\n,\n                \nservice_ds\n: \n{\\\noffset\\\n:\\\ns\\\n}\n\n            }\n        ],\n        [\n            {\n                \nservice_id\n: \n2\n,\n                \ndevice_id\n: \n2\n,\n                \nservice_ip\n: \ndemo2.yourdomian.net\n,\n                \nservice_type\n: \nesxi_hardware.py\n,\n                \nservice_desc\n: \nvmware hardware\n,\n                \nservice_param\n: \n-H 192.168.1.11 -U USER -P PASS -p\n,\n                \nservice_ignore\n: \n0\n,\n                \nservice_status\n: \n0\n,\n                \nservice_changed\n: \n1471702206\n,\n                \nservice_message\n: \nOK - Server: Supermicro X9SCL/X9SCM s/n: 0123456789 System BIOS: 2.2 2015-02-20\n,\n                \nservice_disabled\n: \n0\n,\n                \nservice_ds\n: \n{\\\nP2Vol_0_Processor_1_Vcore\\\n:\\\n\\\n,\\\nP2Vol_1_System_Board_1_-12V\\\n:\\\n\\\n,\\\nP2Vol_2_System_Board_1_12V\\\n:\\\n\\\n,\\\nP2Vol_3_System_Board_1_3.3VCC\\\n:\\\n\\\n,\\\nP2Vol_4_System_Board_1_5VCC\\\n:\\\n\\\n,\\\nP2Vol_5_System_Board_1_AVCC\\\n:\\\n\\\n,\\\nP2Vol_6_System_Board_1_VBAT\\\n:\\\n\\\n,\\\nP2Vol_7_System_Board_1_\n\n            }\n        ]\n    ]\n}\n\n\n\n\nget_service_for_host\n\n\nRetrieve services for device\n\n\nRoute: \n/api/v0/services/:hostname\n\n\n\n\nid or hostname is the specific device\n\n\n\n\nInput:\n\n\n\n\nstate: only which have a certain state (valid options are 0=Ok, 1=Warning, 2=Critical).\n\n\ntype: service type, used sql LIKE to find services, so for tcp, use type=tcp for http use type=http\n\n\n\n\nExample:\n\n\ncurl -H 'X-Auth-Token: YOURAPITOKENHERE' https://librenms.org/api/v0/services/:hostname\ncurl -H 'X-Auth-Token: YOURAPITOKENHERE' https://librenms.org/api/v0/services/:hostname?state=2\ncurl -H 'X-Auth-Token: YOURAPITOKENHERE' https://librenms.org/api/v0/services/:hostname?state=0\ntype=tcp\n\n\n\n\nOutput:\n\n\n{\n    \nstatus\n: \nok\n,\n    \nerr-msg\n: \n,\n    \ncount\n: 1,\n    \nservices\n: [\n        [\n            {\n                \nservice_id\n: \n2\n,\n                \ndevice_id\n: \n2\n,\n                \nservice_ip\n: \ndemo2.yourdomian.net\n,\n                \nservice_type\n: \nesxi_hardware.py\n,\n                \nservice_desc\n: \nvmware hardware\n,\n                \nservice_param\n: \n-H 192.168.1.11 -U USER -P PASS -p\n,\n                \nservice_ignore\n: \n0\n,\n                \nservice_status\n: \n0\n,\n                \nservice_changed\n: \n1471702206\n,\n                \nservice_message\n: \nOK - Server: Supermicro X9SCL/X9SCM s/n: 0123456789 System BIOS: 2.2 2015-02-20\n,\n                \nservice_disabled\n: \n0\n,\n                \nservice_ds\n: \n{\\\nP2Vol_0_Processor_1_Vcore\\\n:\\\n\\\n,\\\nP2Vol_1_System_Board_1_-12V\\\n:\\\n\\\n,\\\nP2Vol_2_System_Board_1_12V\\\n:\\\n\\\n,\\\nP2Vol_3_System_Board_1_3.3VCC\\\n:\\\n\\\n,\\\nP2Vol_4_System_Board_1_5VCC\\\n:\\\n\\\n,\\\nP2Vol_5_System_Board_1_AVCC\\\n:\\\n\\\n,\\\nP2Vol_6_System_Board_1_VBAT\\\n:\\\n\\\n,\\\nP2Vol_7_System_Board_1_\n\n            }\n        ]\n    ]\n}\n\n\n\n\nadd_service_for_host\n\n\nAdd a service for device\n\n\nRoute: \n/api/v0/services/:hostname\n\n\n\n\nid or hostname is the specific device\n\n\n\n\nInput:\n\n\n\n\ntype: service type\n\n\nip: ip of the service\n\n\ndesc: description for the service\n\n\nparam: parameters for the service\n\n\nignore: ignore the service for checks\n\n\n\n\nExample:\n\n\ncurl -X POST -d '{\ntype\n:\nping\n,\nip\n: \n192.168.1.10\n,\ndesc\n:\ntest ping\n,\nparam\n: \n-t 10 -c 5\n}' -H 'X-Auth-Token: YOURAPITOKENHERE' https://librenms.org/api/v0/services/192.168.1.10\n\n\n\n\nOutput:\n\n\n{\n    \nstatus\n: \nok\n,\n    \nmessage\n: \nService ping has been added to device 192.168.1.10 (#10)\n\n}", 
            "title": "Services"
        }, 
        {
            "location": "/API/Services/#list_services", 
            "text": "Retrieve all services  Route:  /api/v0/services  Input:   state: only which have a certain state (valid options are 0=Ok, 1=Warning, 2=Critical).  type: service type, used sql LIKE to find services, so for tcp, use type=tcp for http use type=http   Example:  curl -H 'X-Auth-Token: YOURAPITOKENHERE' https://librenms.org/api/v0/services\ncurl -H 'X-Auth-Token: YOURAPITOKENHERE' https://librenms.org/api/v0/services?state=2\ncurl -H 'X-Auth-Token: YOURAPITOKENHERE' https://librenms.org/api/v0/services?state=0 type=tcp  Output:  {\n     status :  ok ,\n     err-msg :  ,\n     count : 1,\n     services : [\n        [\n            {\n                 service_id :  13 ,\n                 device_id :  1 ,\n                 service_ip :  demo1.yourdomian.net ,\n                 service_type :  ntp_peer ,\n                 service_desc :  NTP ,\n                 service_param :  -H 192.168.1.10 ,\n                 service_ignore :  0 ,\n                 service_status :  0 ,\n                 service_changed :  1470962470 ,\n                 service_message :  NTP OK: Offset -0.000717 secs ,\n                 service_disabled :  0 ,\n                 service_ds :  {\\ offset\\ :\\ s\\ } \n            }\n        ],\n        [\n            {\n                 service_id :  2 ,\n                 device_id :  2 ,\n                 service_ip :  demo2.yourdomian.net ,\n                 service_type :  esxi_hardware.py ,\n                 service_desc :  vmware hardware ,\n                 service_param :  -H 192.168.1.11 -U USER -P PASS -p ,\n                 service_ignore :  0 ,\n                 service_status :  0 ,\n                 service_changed :  1471702206 ,\n                 service_message :  OK - Server: Supermicro X9SCL/X9SCM s/n: 0123456789 System BIOS: 2.2 2015-02-20 ,\n                 service_disabled :  0 ,\n                 service_ds :  {\\ P2Vol_0_Processor_1_Vcore\\ :\\ \\ ,\\ P2Vol_1_System_Board_1_-12V\\ :\\ \\ ,\\ P2Vol_2_System_Board_1_12V\\ :\\ \\ ,\\ P2Vol_3_System_Board_1_3.3VCC\\ :\\ \\ ,\\ P2Vol_4_System_Board_1_5VCC\\ :\\ \\ ,\\ P2Vol_5_System_Board_1_AVCC\\ :\\ \\ ,\\ P2Vol_6_System_Board_1_VBAT\\ :\\ \\ ,\\ P2Vol_7_System_Board_1_ \n            }\n        ]\n    ]\n}", 
            "title": "list_services"
        }, 
        {
            "location": "/API/Services/#get_service_for_host", 
            "text": "Retrieve services for device  Route:  /api/v0/services/:hostname   id or hostname is the specific device   Input:   state: only which have a certain state (valid options are 0=Ok, 1=Warning, 2=Critical).  type: service type, used sql LIKE to find services, so for tcp, use type=tcp for http use type=http   Example:  curl -H 'X-Auth-Token: YOURAPITOKENHERE' https://librenms.org/api/v0/services/:hostname\ncurl -H 'X-Auth-Token: YOURAPITOKENHERE' https://librenms.org/api/v0/services/:hostname?state=2\ncurl -H 'X-Auth-Token: YOURAPITOKENHERE' https://librenms.org/api/v0/services/:hostname?state=0 type=tcp  Output:  {\n     status :  ok ,\n     err-msg :  ,\n     count : 1,\n     services : [\n        [\n            {\n                 service_id :  2 ,\n                 device_id :  2 ,\n                 service_ip :  demo2.yourdomian.net ,\n                 service_type :  esxi_hardware.py ,\n                 service_desc :  vmware hardware ,\n                 service_param :  -H 192.168.1.11 -U USER -P PASS -p ,\n                 service_ignore :  0 ,\n                 service_status :  0 ,\n                 service_changed :  1471702206 ,\n                 service_message :  OK - Server: Supermicro X9SCL/X9SCM s/n: 0123456789 System BIOS: 2.2 2015-02-20 ,\n                 service_disabled :  0 ,\n                 service_ds :  {\\ P2Vol_0_Processor_1_Vcore\\ :\\ \\ ,\\ P2Vol_1_System_Board_1_-12V\\ :\\ \\ ,\\ P2Vol_2_System_Board_1_12V\\ :\\ \\ ,\\ P2Vol_3_System_Board_1_3.3VCC\\ :\\ \\ ,\\ P2Vol_4_System_Board_1_5VCC\\ :\\ \\ ,\\ P2Vol_5_System_Board_1_AVCC\\ :\\ \\ ,\\ P2Vol_6_System_Board_1_VBAT\\ :\\ \\ ,\\ P2Vol_7_System_Board_1_ \n            }\n        ]\n    ]\n}", 
            "title": "get_service_for_host"
        }, 
        {
            "location": "/API/Services/#add_service_for_host", 
            "text": "Add a service for device  Route:  /api/v0/services/:hostname   id or hostname is the specific device   Input:   type: service type  ip: ip of the service  desc: description for the service  param: parameters for the service  ignore: ignore the service for checks   Example:  curl -X POST -d '{ type : ping , ip :  192.168.1.10 , desc : test ping , param :  -t 10 -c 5 }' -H 'X-Auth-Token: YOURAPITOKENHERE' https://librenms.org/api/v0/services/192.168.1.10  Output:  {\n     status :  ok ,\n     message :  Service ping has been added to device 192.168.1.10 (#10) \n}", 
            "title": "add_service_for_host"
        }, 
        {
            "location": "/API/Logs/", 
            "text": "All the \nlist_*logs\n calls are aliased to \nlist_logs\n.\n\n\nRetrieve all logs or logs for a specific device.\n\n\n\n\nid or hostname is the specific device\n\n\n\n\nInput:\n\n\n\n\nstart: The page number to request.\n\n\nlimit: The limit of results to be returned.\n\n\nfrom: The date and time to search from.\n\n\nto: The data and time to search to.\n\n\n\n\nlist_eventlog\n\n\nRoute: \n/api/v0/logs/eventlog/:hostname\n\n\nlist_syslog\n\n\nRoute: \n/api/v0/logs/syslog/:hostname\n\n\nlist_alertlog\n\n\nRoute: \n/api/v0/logs/alertlog/:hostname\n\n\nlist_authlog\n\n\nRoute: \n/api/v0/logs/authlog/:hostname\n\n\nExample:\n\n\ncurl -H 'X-Auth-Token: YOURAPITOKENHERE' https://librenms.org/api/v0/logs/eventlog/:hostname\ncurl -H 'X-Auth-Token: YOURAPITOKENHERE' https://librenms.org/api/v0/logs/syslog/:hostname?limit=20\ncurl -H 'X-Auth-Token: YOURAPITOKENHERE' https://librenms.org/api/v0/logs/eventlog/:hostname?limit=20\nstart=5\nfrom=2017-07-22%2023:00:00\n\n\n\n\nOutput:\n\n\n{\n    \nstatus\n: \nok\n,\n    \nerr-msg\n: \n,\n    \ncount\n: 5,\n    \ntotal\n: \n15\n,\n    \nlogs\n: [\n        {\n            \nhostname\n: \nlocalhost\n,\n            \nsysName\n: \nweb01.1.novalocal\n,\n            \nevent_id\n: \n10050349\n,\n            \nhost\n: \n279\n,\n            \ndevice_id\n: \n279\n,\n            \ndatetime\n: \n2017-07-22 19:57:47\n,\n            \nmessage\n: \nifAlias:  -\n  \npptp-something-something-tunnel-something\n,\n            \ntype\n: \ninterface\n,\n            \nreference\n: \nNULL\n,\n            \nusername\n: \n,\n            \nseverity\n: \n3\n\n        },\n        ....\n        {\n            \nhostname\n: \nlocalhost\n,\n            \nsysName\n: \nweb01.1.novalocal\n,\n            \nevent_id\n: \n10050353\n,\n            \nhost\n: \n279\n,\n            \ndevice_id\n: \n279\n,\n            \ndatetime\n: \n2017-07-22 19:57:47\n,\n            \nmessage\n: \nifHighSpeed:  -\n  0\n,\n            \ntype\n: \ninterface\n,\n            \nreference\n: \nNULL\n,\n            \nusername\n: \n,\n            \nseverity\n: \n3\n\n        }\n    ]\n}", 
            "title": "Logs"
        }, 
        {
            "location": "/API/Logs/#list_eventlog", 
            "text": "Route:  /api/v0/logs/eventlog/:hostname", 
            "title": "list_eventlog"
        }, 
        {
            "location": "/API/Logs/#list_syslog", 
            "text": "Route:  /api/v0/logs/syslog/:hostname", 
            "title": "list_syslog"
        }, 
        {
            "location": "/API/Logs/#list_alertlog", 
            "text": "Route:  /api/v0/logs/alertlog/:hostname", 
            "title": "list_alertlog"
        }, 
        {
            "location": "/API/Logs/#list_authlog", 
            "text": "Route:  /api/v0/logs/authlog/:hostname  Example:  curl -H 'X-Auth-Token: YOURAPITOKENHERE' https://librenms.org/api/v0/logs/eventlog/:hostname\ncurl -H 'X-Auth-Token: YOURAPITOKENHERE' https://librenms.org/api/v0/logs/syslog/:hostname?limit=20\ncurl -H 'X-Auth-Token: YOURAPITOKENHERE' https://librenms.org/api/v0/logs/eventlog/:hostname?limit=20 start=5 from=2017-07-22%2023:00:00  Output:  {\n     status :  ok ,\n     err-msg :  ,\n     count : 5,\n     total :  15 ,\n     logs : [\n        {\n             hostname :  localhost ,\n             sysName :  web01.1.novalocal ,\n             event_id :  10050349 ,\n             host :  279 ,\n             device_id :  279 ,\n             datetime :  2017-07-22 19:57:47 ,\n             message :  ifAlias:  -    pptp-something-something-tunnel-something ,\n             type :  interface ,\n             reference :  NULL ,\n             username :  ,\n             severity :  3 \n        },\n        ....\n        {\n             hostname :  localhost ,\n             sysName :  web01.1.novalocal ,\n             event_id :  10050353 ,\n             host :  279 ,\n             device_id :  279 ,\n             datetime :  2017-07-22 19:57:47 ,\n             message :  ifHighSpeed:  -   0 ,\n             type :  interface ,\n             reference :  NULL ,\n             username :  ,\n             severity :  3 \n        }\n    ]\n}", 
            "title": "list_authlog"
        }, 
        {
            "location": "/Alerting/", 
            "text": "About\n\n\nLibreNMS includes a highly customizable alerting system.\nThe system requires a set of user-defined rules to evaluate the situation of each device, port, service or any other entity.\n\n\n\n\nYou can configure all options for alerting and transports via the WebUI, config options in this document are crossed out but left for reference.\n\n\n\n\nTable of Content:\n\n\n\n\nRules\n\n\nSyntax\n\n\nOptions\n\n\nExamples\n\n\nProcedure\n\n\n\n\n\n\nTemplates\n\n\nSyntax\n\n\nTesting\n\n\nExamples\n\n\nIncluded\n\n\n\n\n\n\n\n\nTransports\n\n\n\n\nE-Mail\n\n\nAPI\n\n\nNagios-Compatible\n\n\nIRC\n\n\nSlack\n\n\nRocket.chat\n\n\nHipChat\n\n\nPagerDuty\n\n\nPushover\n\n\nBoxcar\n\n\nTelegram\n\n\nPushbullet\n\n\nClickatell\n\n\nPlaySMS\n\n\nVictorOps\n\n\nCanopsis\n\n\nosTicket\n\n\nMicrosoft Teams\n\n\nCisco Spark\n\n\nSMSEagle\n\n\nSyslog\n\n\nElasticsearch\n\n\nJira\n\n\n\n\n\n\n\n\nEntities\n\n\n\n\nDevices\n\n\nBGP Peers\n\n\nIPSec Tunnels\n\n\nMemory Pools\n\n\nPorts\n\n\nProcessors\n\n\nStorage\n\n\nSensors\n\n\n\n\n\n\nMacros\n\n\nDevice\n\n\nPort\n\n\nTime\n\n\nSensors\n\n\nMisc\n\n\n\n\n\n\nDevice Dependencies", 
            "title": "Intro"
        }, 
        {
            "location": "/Alerting/#about", 
            "text": "LibreNMS includes a highly customizable alerting system.\nThe system requires a set of user-defined rules to evaluate the situation of each device, port, service or any other entity.   You can configure all options for alerting and transports via the WebUI, config options in this document are crossed out but left for reference.   Table of Content:   Rules  Syntax  Options  Examples  Procedure    Templates  Syntax  Testing  Examples  Included     Transports   E-Mail  API  Nagios-Compatible  IRC  Slack  Rocket.chat  HipChat  PagerDuty  Pushover  Boxcar  Telegram  Pushbullet  Clickatell  PlaySMS  VictorOps  Canopsis  osTicket  Microsoft Teams  Cisco Spark  SMSEagle  Syslog  Elasticsearch  Jira     Entities   Devices  BGP Peers  IPSec Tunnels  Memory Pools  Ports  Processors  Storage  Sensors    Macros  Device  Port  Time  Sensors  Misc    Device Dependencies", 
            "title": "About"
        }, 
        {
            "location": "/Alerting/Rules/", 
            "text": "Rules\n\n\nRules are defined using a logical language.\nThe GUI provides a simple way of creating basic rules.\nCreating more complicated rules which may include maths calculations and MySQL queries can be \ndone using \nmacros\n\n\nVideo on how the alert rules work in LibreNMS\n\n\nAlert Rules\n\n\nVideo on how to use alert rule with wildcards\n\n\nAlert Rules wildcard\n\n\nSyntax\n\n\nRules must consist of at least 3 elements: An \nEntity\n, a \nCondition\n and a \nValue\n.\nRules can contain braces and \nGlues\n.\n\nEntities\n are provided from Table and Field from the database. For Example: \n%ports.ifOperStatus\n.\n\n\n\n\nPlease note that % is not required when adding alert rules via the WebUI. \n\nConditions\n can be any of:\n\n\n\n\n\n\nEquals \n=\n\n\nNot Equals \n!=\n\n\nLike \n~\n\n\nNot Like \n!~\n\n\nGreater \n\n\nGreater or Equal \n=\n\n\nSmaller \n\n\nSmaller or Equal \n=\n\n\n\n\nValues\n can be an entity or any single-quoted data.\n\nGlues\n can be \n for \nAND\n.\n\n\nNote\n if you need to use \nOR\n \n||\n please use a \nmacros\n\n\nNote\n: The difference between \nEquals\n and \nLike\n (and its negation) is that \nEquals\n does a strict comparison and \nLike\n allows the usage of MySQL RegExp.\n\n\nArithmetics are allowed as well.\n\n\nOptions\n\n\nHere are some of the other options available when adding an alerting rule:\n\n\n\n\nRule name: The name associated with the rule.\n\n\nSeverity: How \"important\" the rule is.\n\n\nMax alerts: The maximum number of alerts sent for the event.  \n-1\n means unlimited.\n\n\nDelay: The amount of time in seconds to wait after a rule is matched before sending an alert out transport.\n\n\nInterval: The interval of time in seconds between alerts for an event until Max alert is reached.\n\n\nMute alerts: Disables sending alert rule through alert transport. But will still show the alert in the Web UI.\n\n\nInvert match: Invert the matching rule (ie. alert on items that \ndon't\n match the rule).\n\n\n\n\nProcedure\n\n\nYou can associate a rule to a procedure by giving the URL of the procedure when creating the rule. Only links like \"http://\" are supported, otherwise an error will be returned. Once configured, procedure can be opened from the Alert widget through the \"Open\" button, which can be shown/hidden from the widget configuration box.\n\n\nExamples\n\n\nAlert when:\n\n\n\n\nDevice goes down: \n%devices.status != '1'\n\n\nAny port changes: \n%ports.ifOperStatus != 'up'\n\n\nRoot-directory gets too full: \n%storage.storage_descr = '/' \n %storage.storage_perc \n= '75'\n\n\nAny storage gets fuller than the 'warning': \n%storage.storage_perc \n= %storage_perc_warn\n\n\nIf device is a server and the used storage is above the warning level, but ignore /boot partitions: \n%storage.storage_perc \n %storage.storage_perc_warn \n %devices.type = \"server\" \n %storage.storage_descr !~ \"/boot\"\n\n\nVMware LAG is not using \"Source ip address hash\" load balancing: \n%devices.os = \"vmware\" \n %ports.ifType = \"ieee8023adLag\" \n %ports.ifDescr !~ \"Link Aggregation @, load balancing algorithm: Source ip address hash\"\n\n\nSyslog, authentication failure during the last 5m: \n%syslog.timestamp \n= %macros.past_5m \n %syslog.msg ~ \"@authentication failure@\"\n\n\nHigh memory usage: \n%macros.device_up = \"1\" \n %mempools.mempool_perc \n= \"90\" \n %mempools.mempool_descr = \"Virtual@\"\n\n\nHigh CPU usage(per core usage, not overall): \n%macros.device_up = \"1\" \n %processors.processor_usage \n= \"90\"\n\n\nHigh port usage, where description is not client \n ifType is not softwareLoopback: \n%macros.port_usage_perc \n= \"80\" \n %port.port_descr_type != \"client\" \n %ports.ifType != \"softwareLoopback\"\n\n\nAlert when mac address is located on your network \n%ipv4_mac.mac_address = \"2c233a756912\"\n\n\n\n\nAlert Rules Collection\n\n\nYou can also select Alert Rule from the Alerts Collection. These Alert Rules are submitted by users in the community :)\nIf would like to submit your alert rules to the collection, please submit them here \nAlert Rules Collection", 
            "title": "Rules"
        }, 
        {
            "location": "/Alerting/Rules/#rules", 
            "text": "Rules are defined using a logical language.\nThe GUI provides a simple way of creating basic rules.\nCreating more complicated rules which may include maths calculations and MySQL queries can be \ndone using  macros", 
            "title": "Rules"
        }, 
        {
            "location": "/Alerting/Rules/#video-on-how-the-alert-rules-work-in-librenms", 
            "text": "Alert Rules", 
            "title": "Video on how the alert rules work in LibreNMS"
        }, 
        {
            "location": "/Alerting/Rules/#video-on-how-to-use-alert-rule-with-wildcards", 
            "text": "Alert Rules wildcard", 
            "title": "Video on how to use alert rule with wildcards"
        }, 
        {
            "location": "/Alerting/Rules/#syntax", 
            "text": "Rules must consist of at least 3 elements: An  Entity , a  Condition  and a  Value .\nRules can contain braces and  Glues . Entities  are provided from Table and Field from the database. For Example:  %ports.ifOperStatus .   Please note that % is not required when adding alert rules via the WebUI.  Conditions  can be any of:    Equals  =  Not Equals  !=  Like  ~  Not Like  !~  Greater   Greater or Equal  =  Smaller   Smaller or Equal  =   Values  can be an entity or any single-quoted data. Glues  can be   for  AND .  Note  if you need to use  OR   ||  please use a  macros  Note : The difference between  Equals  and  Like  (and its negation) is that  Equals  does a strict comparison and  Like  allows the usage of MySQL RegExp.  Arithmetics are allowed as well.", 
            "title": "Syntax"
        }, 
        {
            "location": "/Alerting/Rules/#options", 
            "text": "Here are some of the other options available when adding an alerting rule:   Rule name: The name associated with the rule.  Severity: How \"important\" the rule is.  Max alerts: The maximum number of alerts sent for the event.   -1  means unlimited.  Delay: The amount of time in seconds to wait after a rule is matched before sending an alert out transport.  Interval: The interval of time in seconds between alerts for an event until Max alert is reached.  Mute alerts: Disables sending alert rule through alert transport. But will still show the alert in the Web UI.  Invert match: Invert the matching rule (ie. alert on items that  don't  match the rule).", 
            "title": "Options"
        }, 
        {
            "location": "/Alerting/Rules/#procedure", 
            "text": "You can associate a rule to a procedure by giving the URL of the procedure when creating the rule. Only links like \"http://\" are supported, otherwise an error will be returned. Once configured, procedure can be opened from the Alert widget through the \"Open\" button, which can be shown/hidden from the widget configuration box.", 
            "title": "Procedure"
        }, 
        {
            "location": "/Alerting/Rules/#examples", 
            "text": "Alert when:   Device goes down:  %devices.status != '1'  Any port changes:  %ports.ifOperStatus != 'up'  Root-directory gets too full:  %storage.storage_descr = '/'   %storage.storage_perc  = '75'  Any storage gets fuller than the 'warning':  %storage.storage_perc  = %storage_perc_warn  If device is a server and the used storage is above the warning level, but ignore /boot partitions:  %storage.storage_perc   %storage.storage_perc_warn   %devices.type = \"server\"   %storage.storage_descr !~ \"/boot\"  VMware LAG is not using \"Source ip address hash\" load balancing:  %devices.os = \"vmware\"   %ports.ifType = \"ieee8023adLag\"   %ports.ifDescr !~ \"Link Aggregation @, load balancing algorithm: Source ip address hash\"  Syslog, authentication failure during the last 5m:  %syslog.timestamp  = %macros.past_5m   %syslog.msg ~ \"@authentication failure@\"  High memory usage:  %macros.device_up = \"1\"   %mempools.mempool_perc  = \"90\"   %mempools.mempool_descr = \"Virtual@\"  High CPU usage(per core usage, not overall):  %macros.device_up = \"1\"   %processors.processor_usage  = \"90\"  High port usage, where description is not client   ifType is not softwareLoopback:  %macros.port_usage_perc  = \"80\"   %port.port_descr_type != \"client\"   %ports.ifType != \"softwareLoopback\"  Alert when mac address is located on your network  %ipv4_mac.mac_address = \"2c233a756912\"", 
            "title": "Examples"
        }, 
        {
            "location": "/Alerting/Rules/#alert-rules-collection", 
            "text": "You can also select Alert Rule from the Alerts Collection. These Alert Rules are submitted by users in the community :)\nIf would like to submit your alert rules to the collection, please submit them here  Alert Rules Collection", 
            "title": "Alert Rules Collection"
        }, 
        {
            "location": "/Alerting/Templates/", 
            "text": "Templates\n\n\nTemplates can be assigned to a single or a group of rules and can contain any kind of text. There is also a default template which is used for any rule that isn't associated with a template. This template can be found under \nAlert Templates\n page and can be edited. It also has an option revert it back to its default content. \n\n\nThe template-parser understands \nif\n and \nforeach\n controls and replaces certain placeholders with information gathered about the alert.\n\n\nSyntax\n\n\nControls:\n\n\n\n\nif-else (Else can be omitted):\n\n{if %placeholder == value}Some Text{else}Other Text{/if}\n\n\nforeach-loop:\n\n{foreach %faults}Key: %key\nbr/\nValue: %value{/foreach}\n\n\n\n\nPlaceholders:\n\n\nPlaceholders are special variables that if used within the template will be replaced with the relevant data, I.e:\n\n\nThe device %hostname has been up for %uptime seconds\n would result in the following \nThe device localhost has been up for 30344 seconds\n.\n\n\n\n\nHostname of the Device: \n%hostname\n\n\nsysName of the Device: \n%sysName\n\n\nlocation of the Device: \n%location\n\n\nuptime of the Device (in seconds): \n%uptime\n\n\nshort uptime of the Device (28d 22h 30m 7s): \n%uptime_short\n\n\nlong uptime of the Device (28 days, 22h 30m 7s): \n%uptime_long\n\n\ndescription (purpose db field) of the Device: \n%description\n\n\nnotes of the Device: \n%notes\n\n\nTitle for the Alert: \n%title\n\n\nTime Elapsed, Only available on recovery (\n%state == 0\n): \n%elapsed\n\n\nAlert-ID: \n%id\n\n\nUnique-ID: \n%uid\n\n\nFaults, Only available on alert (\n%state != 0\n), must be iterated in a foreach (\n{foreach %faults}\n). Holds all available information about the Fault, accessible in the format \n%value.Column\n, for example: \n%value.ifDescr\n. Special field \n%value.string\n has most Identification-information (IDs, Names, Descrs) as single string, this is the equivalent of the default used.\n\n\nState: \n%state\n\n\nSeverity: \n%severity\n\n\nRule: \n%rule\n\n\nRule-Name: \n%name\n\n\nTimestamp: \n%timestamp\n\n\nTransport name: \n%transport\n\n\nContacts, must be iterated in a foreach, \n%key\n holds email and \n%value\n holds name: \n%contacts\n\n\n\n\nPlaceholders can be used within the subjects for templates as well although %faults is most likely going to be worthless.\n\n\n\n\nNOTE: Placeholder names which are contained within another need to be ordered correctly. As an example:\n\n\n\n\nLimit: %value.sensor_limit / %value.sensor_limit_low\n\n\n\n\nShould be done as:\n\n\nLimit: %value.sensor_limit_low / %value.sensor_limit\n\n\n\n\nThe Default Template is a 'one-size-fit-all'. We highly recommend defining your own templates for your rules to include more specific information.\n\n\nExamples\n\n\nDefault Template:\n\n\n%title\nSeverity: %severity\n{if %state == 0}Time elapsed: %elapsed{/if}\nTimestamp: %timestamp\nUnique-ID: %uid\nRule: {if %name}%name{else}%rule{/if}\n{if %faults}Faults:\n{foreach %faults}  #%key: %value.string{/foreach}{/if}\nAlert sent to: {foreach %contacts}%value \n%key\n {/foreach}\n\n\n\n\nPorts Utilization Template:\n\n\n%title\nDevice Name: %hostname\nSeverity: %severity\n{if %state == 0}Time elapsed: %elapsed{/if}\nTimestamp: %timestamp\nRule: {if %name}%name{else}%rule{/if}\n{foreach %faults}\nPhysical Interface: %value.ifDescr\nInterface Description: %value.ifAlias\nInterface Speed: {calc (%value.ifSpeed/1000000000)} Gbs\nInbound Utilization: {calc ((%value.ifInOctets_rate*8)/%value.ifSpeed)*100}%\nOutbound Utilization: {calc ((%value.ifOutOctets_rate*8)/%value.ifSpeed)*100}%\n{/foreach}\n\n\n\n\nStorage:\n\n\n\n%title\n\nDevice Name: %hostname\nSeverity: %severity \nUptime: %uptime_short\n{if %state == 0}Time elapsed: %elapsed{/if}\nTimestamp: %timestamp\nLocation: %location\nDescription: %description\nFeatures: %features\nPurpose: %purpose\nNotes: %notes\n\nServer: %sysName {foreach %faults}Mount Point: %value.storage_descr Percent Utilized: %value.storage_perc{/foreach}\n\n\n\n\nTemperature Sensors:\n\n\n\n%title\n\nDevice Name: %hostname\nSeverity: %severity \nTimestamp: %timestamp\nUptime: %uptime_short\n{if %state == 0}Time elapsed: %elapsed{/if}\nLocation: %location\nDescription: %description\nFeatures: %features\nPurpose: %purpose\nNotes: %notes\n\nRule: {if %name}%name{else}%rule{/if}\n{if %faults}Faults:\n{foreach %faults}\n#%key: Temperature: %value.sensor_current\u00b0C\n** {calc(%value.sensor_current-%value.sensor_limit)}\u00b0C over limit\nPrevious Measurement: %value.sensor_prev\u00b0C\nHigh Temperature Limit: %value.sensor_limit\u00b0C\n{/foreach}\n{/if}\n\n\n\n\nValue Sensors:\n\n\n\n%title\n\nDevice Name: %hostname\nSeverity: %severity \nTimestamp: %timestamp\nUptime: %uptime_short\n{if %state == 0}Time elapsed: %elapsed{/if}\nLocation: %location\nDescription: %description\nFeatures: %features\nPurpose: %purpose\nNotes: %notes\n\nRule: {if %name}%name{else}%rule{/if}\n{if %faults}Faults:\n{foreach %faults}\n#%key: Sensor%value.sensor_current\n** {calc(%value.sensor_current-%value.sensor_limit)}over limit\nPrevious Measurement: %value.sensor_prev\nLimit: %value.sensor_limit\n{/foreach}\n{/if}\n\n\n\n\nMemory Alert:\n\n\n%title\n\nDevice Name: %hostname\nSeverity: %severity \nUptime: %uptime_short\n{if %state == 0}Time elapsed: %elapsed{/if}\nTimestamp: %timestamp\nLocation: %location\nDescription: %description\nNotes: %notes\n\nServer: %hostname {foreach %faults}\nMemory Description: %value.mempool_descr \nPercent Utilized: %value.mempool_perc{/foreach}\n\n\n\n\nConditional formatting example, will display a link to the host in email or just the hostname in any other transport:\n\n\n{if %transport == mail}\na href=\nhttps://my.librenms.install/device/device=%hostname/\n%hostname\n/a\n\n{else}\n%hostname\n{/if}\n\n\n\n\nNote the use of double-quotes.  Single quotes (\n'\n) in templates will be escaped (replaced with \n\\'\n) in the output and should therefore be avoided.\n\n\nIncluded\n\n\nWe include a few templates for you to use, these are specific to the type of alert rules you are creating. For example if you create a rule that would alert on BGP sessions then you can \nassign the BGP template to this rule to provide more information.\n\n\nThe included templates apart from the default template are:\n\n\n\n\nBGP Sessions\n\n\nPorts\n\n\nTemperature", 
            "title": "Templates"
        }, 
        {
            "location": "/Alerting/Templates/#templates", 
            "text": "Templates can be assigned to a single or a group of rules and can contain any kind of text. There is also a default template which is used for any rule that isn't associated with a template. This template can be found under  Alert Templates  page and can be edited. It also has an option revert it back to its default content.   The template-parser understands  if  and  foreach  controls and replaces certain placeholders with information gathered about the alert.", 
            "title": "Templates"
        }, 
        {
            "location": "/Alerting/Templates/#syntax", 
            "text": "Controls:   if-else (Else can be omitted): {if %placeholder == value}Some Text{else}Other Text{/if}  foreach-loop: {foreach %faults}Key: %key br/ Value: %value{/foreach}   Placeholders:  Placeholders are special variables that if used within the template will be replaced with the relevant data, I.e:  The device %hostname has been up for %uptime seconds  would result in the following  The device localhost has been up for 30344 seconds .   Hostname of the Device:  %hostname  sysName of the Device:  %sysName  location of the Device:  %location  uptime of the Device (in seconds):  %uptime  short uptime of the Device (28d 22h 30m 7s):  %uptime_short  long uptime of the Device (28 days, 22h 30m 7s):  %uptime_long  description (purpose db field) of the Device:  %description  notes of the Device:  %notes  Title for the Alert:  %title  Time Elapsed, Only available on recovery ( %state == 0 ):  %elapsed  Alert-ID:  %id  Unique-ID:  %uid  Faults, Only available on alert ( %state != 0 ), must be iterated in a foreach ( {foreach %faults} ). Holds all available information about the Fault, accessible in the format  %value.Column , for example:  %value.ifDescr . Special field  %value.string  has most Identification-information (IDs, Names, Descrs) as single string, this is the equivalent of the default used.  State:  %state  Severity:  %severity  Rule:  %rule  Rule-Name:  %name  Timestamp:  %timestamp  Transport name:  %transport  Contacts, must be iterated in a foreach,  %key  holds email and  %value  holds name:  %contacts   Placeholders can be used within the subjects for templates as well although %faults is most likely going to be worthless.   NOTE: Placeholder names which are contained within another need to be ordered correctly. As an example:   Limit: %value.sensor_limit / %value.sensor_limit_low  Should be done as:  Limit: %value.sensor_limit_low / %value.sensor_limit  The Default Template is a 'one-size-fit-all'. We highly recommend defining your own templates for your rules to include more specific information.", 
            "title": "Syntax"
        }, 
        {
            "location": "/Alerting/Templates/#examples", 
            "text": "Default Template:  %title\nSeverity: %severity\n{if %state == 0}Time elapsed: %elapsed{/if}\nTimestamp: %timestamp\nUnique-ID: %uid\nRule: {if %name}%name{else}%rule{/if}\n{if %faults}Faults:\n{foreach %faults}  #%key: %value.string{/foreach}{/if}\nAlert sent to: {foreach %contacts}%value  %key  {/foreach}  Ports Utilization Template:  %title\nDevice Name: %hostname\nSeverity: %severity\n{if %state == 0}Time elapsed: %elapsed{/if}\nTimestamp: %timestamp\nRule: {if %name}%name{else}%rule{/if}\n{foreach %faults}\nPhysical Interface: %value.ifDescr\nInterface Description: %value.ifAlias\nInterface Speed: {calc (%value.ifSpeed/1000000000)} Gbs\nInbound Utilization: {calc ((%value.ifInOctets_rate*8)/%value.ifSpeed)*100}%\nOutbound Utilization: {calc ((%value.ifOutOctets_rate*8)/%value.ifSpeed)*100}%\n{/foreach}  Storage:  \n%title\n\nDevice Name: %hostname\nSeverity: %severity \nUptime: %uptime_short\n{if %state == 0}Time elapsed: %elapsed{/if}\nTimestamp: %timestamp\nLocation: %location\nDescription: %description\nFeatures: %features\nPurpose: %purpose\nNotes: %notes\n\nServer: %sysName {foreach %faults}Mount Point: %value.storage_descr Percent Utilized: %value.storage_perc{/foreach}  Temperature Sensors:  \n%title\n\nDevice Name: %hostname\nSeverity: %severity \nTimestamp: %timestamp\nUptime: %uptime_short\n{if %state == 0}Time elapsed: %elapsed{/if}\nLocation: %location\nDescription: %description\nFeatures: %features\nPurpose: %purpose\nNotes: %notes\n\nRule: {if %name}%name{else}%rule{/if}\n{if %faults}Faults:\n{foreach %faults}\n#%key: Temperature: %value.sensor_current\u00b0C\n** {calc(%value.sensor_current-%value.sensor_limit)}\u00b0C over limit\nPrevious Measurement: %value.sensor_prev\u00b0C\nHigh Temperature Limit: %value.sensor_limit\u00b0C\n{/foreach}\n{/if}  Value Sensors:  \n%title\n\nDevice Name: %hostname\nSeverity: %severity \nTimestamp: %timestamp\nUptime: %uptime_short\n{if %state == 0}Time elapsed: %elapsed{/if}\nLocation: %location\nDescription: %description\nFeatures: %features\nPurpose: %purpose\nNotes: %notes\n\nRule: {if %name}%name{else}%rule{/if}\n{if %faults}Faults:\n{foreach %faults}\n#%key: Sensor%value.sensor_current\n** {calc(%value.sensor_current-%value.sensor_limit)}over limit\nPrevious Measurement: %value.sensor_prev\nLimit: %value.sensor_limit\n{/foreach}\n{/if}  Memory Alert:  %title\n\nDevice Name: %hostname\nSeverity: %severity \nUptime: %uptime_short\n{if %state == 0}Time elapsed: %elapsed{/if}\nTimestamp: %timestamp\nLocation: %location\nDescription: %description\nNotes: %notes\n\nServer: %hostname {foreach %faults}\nMemory Description: %value.mempool_descr \nPercent Utilized: %value.mempool_perc{/foreach}  Conditional formatting example, will display a link to the host in email or just the hostname in any other transport:  {if %transport == mail} a href= https://my.librenms.install/device/device=%hostname/ %hostname /a \n{else}\n%hostname\n{/if}  Note the use of double-quotes.  Single quotes ( ' ) in templates will be escaped (replaced with  \\' ) in the output and should therefore be avoided.", 
            "title": "Examples"
        }, 
        {
            "location": "/Alerting/Templates/#included", 
            "text": "We include a few templates for you to use, these are specific to the type of alert rules you are creating. For example if you create a rule that would alert on BGP sessions then you can \nassign the BGP template to this rule to provide more information.  The included templates apart from the default template are:   BGP Sessions  Ports  Temperature", 
            "title": "Included"
        }, 
        {
            "location": "/Alerting/Transports/", 
            "text": "Transports\n\n\nTransports are located within \nLibreNMS/Alert/Transport/\n and defined as well as configured via \n$config['alert']['transports']['Example'] = 'Some Options'\n.\n\n\nContacts will be gathered automatically and passed to the configured transports.\nBy default the Contacts will be only gathered when the alert triggers and will ignore future changes in contacts for the incident. If you want contacts to be re-gathered before each dispatch, please set \n$config['alert']['fixed-contacts'] = false;\n in your config.php.\n\n\nThe contacts will always include the \nSysContact\n defined in the Device's SNMP configuration and also every LibreNMS-User that has at least \nread\n-permissions on the entity that is to be alerted.\n\n\nAt the moment LibreNMS only supports Port or Device permissions.\n\n\nYou can exclude the \nSysContact\n by setting:\n\n\n$config['alert']['syscontact'] = false;\n\n\n\n\nTo include users that have \nGlobal-Read\n or \nAdministrator\n permissions it is required to add these additions to the \nconfig.php\n respectively:\n\n\n$config['alert']['globals'] = true; //Include Global-Read into alert-contacts\n$config['alert']['admins']  = true; //Include Administrators into alert-contacts\n\n\n\n\nE-Mail\n\n\n\n\nYou can configure these options within the WebUI now, please avoid setting these options within config.php\n\n\n\n\nFor all but the default contact, we support setting multiple email addresses separated by a comma. So you can \nset the devices sysContact, override the sysContact or have your users emails set like:\n\n\nemail@domain.com, alerting@domain.com\n\n\nE-Mail transport is enabled with adding the following to your \nconfig.php\n:\n\n\n$config['alert']['transports']['mail'] = true;\n\n\n\n\nThe E-Mail transports uses the same email-configuration like the rest of LibreNMS.\nAs a small reminder, here is it's configuration directives including defaults:\n\n\n$config['email_backend']                   = 'mail';               // Mail backend. Allowed: \nmail\n (PHP's built-in), \nsendmail\n, \nsmtp\n.\n$config['email_from']                      = NULL;                 // Mail from. Default: \nProjectName\n \nprojectid@`hostname`\n\n$config['email_user']                      = $config['project_id'];\n$config['email_sendmail_path']             = '/usr/sbin/sendmail'; // The location of the sendmail program.\n$config['email_html']                      = FALSE;                // Whether to send HTML email as opposed to plaintext\n$config['email_smtp_host']                 = 'localhost';          // Outgoing SMTP server name.\n$config['email_smtp_port']                 = 25;                   // The port to connect.\n$config['email_smtp_timeout']              = 10;                   // SMTP connection timeout in seconds.\n$config['email_smtp_secure']               = NULL;                 // Enable encryption. Use 'tls' or 'ssl'\n$config['email_smtp_auth']                 = FALSE;                // Whether or not to use SMTP authentication.\n$config['email_smtp_username']             = NULL;                 // SMTP username.\n$config['email_smtp_password']             = NULL;                 // Password for SMTP authentication.\n\n$config['alert']['default_only']           = false;                //Only issue to default_mail\n$config['alert']['default_mail']           = '';                   //Default email\n\n\n\n\nAPI\n\n\n\n\nYou can configure these options within the WebUI now, please avoid setting these options within config.php\n\n\n\n\nAPI transports definitions are a bit more complex than the E-Mail configuration.\nThe basis for configuration is \n$config['alert']['transports']['api'][METHOD]\n where \nMETHOD\n can be \nget\n,\npost\n or \nput\n.\nThis basis has to contain an array with URLs of each API to call.\nThe URL can have the same placeholders as defined in the \nTemplate-Syntax\n.\nIf the \nMETHOD\n is \nget\n, all placeholders will be URL-Encoded.\nThe API transport uses cURL to call the APIs, therefore you might need to install \nphp5-curl\n or similar in order to make it work.\n\nNote\n: it is highly recommended to define own \nTemplates\n when you want to use the API transport. The default template might exceed URL-length for GET requests and therefore cause all sorts of errors.\n\n\nExample:\n\n\n$config['alert']['transports']['api']['get'][] = \nhttps://api.thirdparti.es/issue?apikey=abcdefg\nsubject=%title\n;\n\n\n\n\nNagios Compatible\n\n\n\n\nYou can configure these options within the WebUI now, please avoid setting these options within config.php\n\n\n\n\nThe nagios transport will feed a FIFO at the defined location with the same format that nagios would.\nThis allows you to use other Alerting-Systems to work with LibreNMS, for example \nFlapjack\n.\n\n\n$config['alert']['transports']['nagios'] = \n/path/to/my.fifo\n; //Flapjack expects it to be at '/var/cache/nagios3/event_stream.fifo'\n\n\n\n\nIRC\n\n\n\n\nYou can configure these options within the WebUI now, please avoid setting these options within config.php\n\n\n\n\nThe IRC transports only works together with the LibreNMS IRC-Bot.\nConfiguration of the LibreNMS IRC-Bot is described \nhere\n.\n\n\n$config['alert']['transports']['irc'] = true;\n\n\n\n\nSlack\n\n\n\n\nYou can configure these options within the WebUI now, please avoid setting these options within config.php\n\n\n\n\nUsing a proxy?\n\n\nThe Slack transport will POST the alert message to your Slack Incoming WebHook using the \nattachments\n option, you are able to specify multiple webhooks along with the relevant options to go with it. Simple html tags are stripped from the message. All options are optional, the only required value is for url, without this then no call to Slack will be made. Below is an example of how to send alerts to two channels with different customised options: \n\n\n$config['alert']['transports']['slack'][] = array('url' =\n \nhttps://hooks.slack.com/services/A12B34CDE/F56GH78JK/L901LmNopqrSTUVw2w3XYZAB4C\n, 'channel' =\n '#Alerting');\n\n$config['alert']['transports']['slack'][] = array('url' =\n \nhttps://hooks.slack.com/services/A12B34CDE/F56GH78JK/L901LmNopqrSTUVw2w3XYZAB4C\n, 'channel' =\n '@john', 'username' =\n 'LibreNMS', 'icon_emoji' =\n ':ghost:');\n\n\n\n\nRocket.chat\n\n\nUsing a proxy?\n\n\nThe Rocket.chat transport will POST the alert message to your Rocket.chat Incoming WebHook using the \nattachments\n option, you are able to specify multiple webhooks along with the relevant options to go with it. Simple html tags are stripped from the message. All options are optional, the only required value is for url, without this then no call to Rocket.chat will be made. Below is an example of how to send alerts to two channels with different customised options:\n\n\n$config['alert']['transports']['rocket'][] = array('url' =\n \nhttps://rocket.url/api/v1/chat.postMessage\n, 'channel' =\n '#Alerting');\n\n$config['alert']['transports']['rocket'][] = array('url' =\n \nhttps://rocket.url/api/v1/chat.postMessage\n, 'channel' =\n '@john', 'username' =\n 'LibreNMS', 'icon_emoji' =\n ':ghost:');\n\n\n\n\nHipChat\n\n\n\n\nYou can configure these options within the WebUI now, please avoid setting these options within config.php\n\n\n\n\nUsing a proxy?\n\n\nThe HipChat transport requires the following:\n\n\nroom_id\n = HipChat Room ID\n\n\nurl\n = HipChat API URL+API Key\n\n\nfrom\n = The name that will be displayed\n\n\nThe HipChat transport makes the following optional:\n\n\ncolor\n = Any of HipChat's supported message colors\n\n\nmessage_format\n = Any of HipChat's supported message formats\n\n\nnotify\n = 0 or 1\n\n\nSee the HipChat API Documentation for\n\nrooms/message\n\nfor details on acceptable values.\n\n\n\n\nYou may notice that the link points at the \"deprecated\" v1 API.  This is\nbecause the v2 API is still in beta.\n\n\n\n\nBelow are two examples of sending messages to a HipChat room.\n\n\n$config['alert']['transports']['hipchat'][] = array(\nurl\n =\n \nhttps://api.hipchat.com/v1/rooms/message?auth_token=9109jawregoaih\n,\n                                                    \nroom_id\n =\n \n1234567\n,\n                                                    \nfrom\n =\n \nLibreNMS\n);\n\n$config['alert']['transports']['hipchat'][] = array(\nurl\n =\n \nhttps://api.hipchat.com/v1/rooms/message?auth_token=109jawregoaihj\n,\n                                                    \nroom_id\n =\n \n7654321\n,\n                                                    \nfrom\n =\n \nLibreNMS\n,\n                                                    \ncolor\n =\n \nred\n,\n                                                    \nnotify\n =\n 1,\n                                                    \nmessage_format\n =\n \ntext\n);\n\n\n\n\nThese settings can also be configured from the WebUI, here's an example used for the HipChat V2 API:\n\n\n\n\n\nNote: The default message format for HipChat messages is HTML.  It is\nrecommended that you specify the \ntext\n message format to prevent unexpected\nresults, such as HipChat attempting to interpret angled brackets (\n and\n\n).\n\n\n\n\nPagerDuty\n\n\n\n\nYou can configure these options within the WebUI now, please avoid setting these options within config.php\n\n\n\n\nUsing a proxy?\n\n\nEnabling PagerDuty transports is almost as easy as enabling email-transports.\n\n\nAll you need is to create a Service with type Generic API on your PagerDuty dashboard.\n\n\nNow copy your API-Key from the newly created Service and setup the transport like:\n\n\n$config['alert']['transports']['pagerduty'] = 'MYAPIKEYGOESHERE';\n\n\n\n\nThat's it!\n\n\nNote\n: Currently ACK notifications are not transported to PagerDuty, This is going to be fixed within the next major version (version by date of writing: 2015.05)\n\n\nPushover\n\n\nUsing a proxy?\n\n\nEnabling Pushover support is fairly easy, there are only two required parameters.\n\n\nFirstly you need to create a new Application (called LibreNMS, for example) in your account on the Pushover website (https://pushover.net/apps)\n\n\nNow copy your API Token/Key from the newly created Application and setup the transport in your config.php like:\n\n\n$config['alert']['transports']['pushover'][] = array(\n                                                    \nappkey\n =\n 'APPLICATIONAPIKEYGOESHERE',\n                                                    \nuserkey\n =\n 'USERKEYGOESHERE',\n                                                    );\n\n\n\n\nTo modify the Critical alert sound, add the 'sound_critical' parameter, example:\n\n\n$config['alert']['transports']['pushover'][] = array(\n                                                    \nappkey\n =\n 'APPLICATIONAPIKEYGOESHERE',\n                                                    \nuserkey\n =\n 'USERKEYGOESHERE',\n                                                    \nsound_critical\n =\n 'siren',\n                                                    );\n\n\n\n\nBoxcar\n\n\nUsing a proxy?\n\n\nEnabling Boxcar support is super easy.\nCopy your access token from the Boxcar app or from the Boxcar.io website and setup the transport in your config.php like:\n\n\n$config['alert']['transports']['boxcar'][] = array(\n                                                    \naccess_token\n =\n 'ACCESSTOKENGOESHERE',\n                                                    );\n\n\n\n\nTo modify the Critical alert sound, add the 'sound_critical' parameter, example:\n\n\n$config['alert']['transports']['boxcar'][] = array(\n                                                    \naccess_token\n =\n 'ACCESSTOKENGOESHERE',\n                                                    \nsound_critical\n =\n 'detonator-charge',\n                                                    );\n\n\n\n\nTelegram\n\n\nUsing a proxy?\n\n\n\n\nThank you to \nsnis\n for these instructions.\n\n\n\n\n\n\n\n\nFirst you must create a telegram account and add BotFather to you list. To do this click on the following url: https://telegram.me/botfather\n\n\n\n\n\n\nGenerate a new bot with the command \"/newbot\" BotFather is then asking for a username and a normal name. After that your bot is created and you get a HTTP token. (for more options for your bot type \"/help\")\n\n\n\n\n\n\nAdd your bot to telegram with the following url: \nhttp://telegram.me/\nbotname\n and send some text to the bot.\n\n\n\n\n\n\nNow copy your token code and go to the following page in chrome: \nhttps://api.telegram.org/bot\ntokencode\n/getUpdates\n\n\n\n\n\n\nYou see a json code with the message you sent to the bot. Copy the Chat id. In this example that is \u201c-9787468\u201d\n   \n\"message\":{\"message_id\":7,\"from\":\"id\":656556,\"first_name\":\"Joo\",\"last_name\":\"Doo\",\"username\":\"JohnDoo\"},\"chat\":{\"id\":-9787468,\"title\":\"Telegram Group\"},\"date\":1435216924,\"text\":\"Hi\"}}]}\n\n\n\n\n\n\nNow create a new \"Telegram transport\" in LibreNMS (Global Settings -\n Alerting Settings -\n Telegram transport).\nClick on 'Add Telegram config' and put your chat id and token into the relevant box.\n\n\n\n\n\n\nPushbullet\n\n\nUsing a proxy?\n\n\nEnabling Pushbullet is a piece of cake.\nGet your Access Token from your Pushbullet's settings page and set it in your config like:\n\n\n$config['alert']['transports']['pushbullet'] = 'MYFANCYACCESSTOKEN';\n\n\n\n\nClickatell\n\n\nUsing a proxy?\n\n\nClickatell provides a REST-API requiring an Authorization-Token and at least one Cellphone number.\nPlease consult Clickatell's documentation regarding number formatting.\nHere an example using 3 numbers, any amount of numbers is supported:\n\n\n$config['alert']['transports']['clickatell']['token'] = 'MYFANCYACCESSTOKEN';\n$config['alert']['transports']['clickatell']['to'][]  = '+1234567890';\n$config['alert']['transports']['clickatell']['to'][]  = '+1234567891';\n$config['alert']['transports']['clickatell']['to'][]  = '+1234567892';\n\n\n\n\nPlaySMS\n\n\nUsing a proxy?\n\n\nPlaySMS is an open source SMS-Gateway that can be used via their HTTP-API using a Username and WebService-Token.\nPlease consult PlaySMS's documentation regarding number formatting.\nHere an example using 3 numbers, any amount of numbers is supported:\n\n\n$config['alert']['transports']['playsms']['url']   = 'https://localhost/index.php?app=ws';\n$config['alert']['transports']['playsms']['user']  = 'user1';\n$config['alert']['transports']['playsms']['token'] = 'MYFANCYACCESSTOKEN';\n$config['alert']['transports']['playsms']['from']  = '+1234567892'; //Optional\n$config['alert']['transports']['playsms']['to'][]  = '+1234567890';\n$config['alert']['transports']['playsms']['to'][]  = '+1234567891';\n\n\n\n\nVictorOps\n\n\nUsing a proxy?\n\n\nVictorOps provide a webHook url to make integration extremely simple. To get the URL required login to your VictorOps account and go to:\n\n\nSettings -\n Integrations -\n REST Endpoint -\n Enable Integration.\n\n\nThe URL provided will have $routing_key at the end, you need to change this to something that is unique to the system sending the alerts such as librenms. I.e:\n\n\nhttps://alert.victorops.com/integrations/generic/20132414/alert/2f974ce1-08fc-4dg8-a4f4-9aee6cf35c98/librenms\n\n\n$config['alert']['transports']['victorops']['url'] = 'https://alert.victorops.com/integrations/generic/20132414/alert/2f974ce1-08fc-4dg8-a4f4-9aee6cf35c98/librenms';\n\n\n\n\nCanopsis\n\n\nCanopsis is a hypervision tool. LibreNMS can send alerts to Canopsis which are then converted to canopsis events. To configure the transport, go to:\n\n\nGlobal Settings -\n Alerting Settings -\n Canopsis Transport.\n\n\nYou will need to fill this paramaters :\n\n\n$config['alert']['transports']['canopsis']['host'] = 'www.xxx.yyy.zzz';\n$config['alert']['transports']['canopsis']['port'] = '5672';\n$config['alert']['transports']['canopsis']['user'] = 'admin';\n$config['alert']['transports']['canopsis']['passwd'] = 'my_password';\n$config['alert']['transports']['canopsis']['vhost'] = 'canopsis';\n\n\n\n\nFor more information about canopsis and its events, take a look here :\n http://www.canopsis.org/\n http://www.canopsis.org/wp-content/themes/canopsis/doc/sakura/user-guide/event-spec.html\n\n\nosTicket\n\n\nUsing a proxy?\n\n\nosTicket, open source ticket system. LibreNMS can send alerts to osTicket API which are then converted to osTicket tickets. To configure the transport, go to:\n\n\nGlobal Settings -\n Alerting Settings -\n osTicket Transport.\n\n\nThis can also be done manually in config.php :\n\n\n$config['alert']['transports']['osticket']['url'] = 'http://osticket.example.com/api/http.php/tickets.json';\n$config['alert']['transports']['osticket']['token'] = '123456789';\n\n\n\n\nMicrosoft Teams\n\n\nUsing a proxy?\n\n\nMicrosoft Teams. LibreNMS can send alerts to Microsoft Teams Connector API which are then posted to a specific channel. To configure the transport, go to:\n\n\nGlobal Settings -\n Alerting Settings -\n Microsoft Teams Transport.\n\n\nThis can also be done manually in config.php :\n\n\n$config['alert']['transports']['msteams']['url'] = 'https://outlook.office365.com/webhook/123456789';\n\n\n\n\nCisco Spark\n\n\nUsing a proxy?\n\n\nCisco Spark. LibreNMS can send alerts to a Cisco Spark room. To make this possible you need to have a RoomID and a token. \n\n\nFor more information about Cisco Spark RoomID and token, take a look here :\n https://developer.ciscospark.com/getting-started.html\n https://developer.ciscospark.com/resource-rooms.html\n\n\nTo configure the transport, go to:\n\n\nGlobal Settings -\n Alerting Settings -\n Cisco Spark transport.\n\n\nThis can also be done manually in config.php :\n\n\n$config['alert']['transports']['ciscospark']['token'] = '1234567890QWERTYUIOP';\n$config['alert']['transports']['ciscospark']['roomid'] = '1234567890QWERTYUIOP';\n\n\n\n\nSMSEagle\n\n\nUsing a proxy?\n\n\nSMSEagle is a hardware SMS Gateway that can be used via their HTTP-API using a Username and password\nPlease consult their documentation at \nwww.smseagle.eu\n\nDestination numbers are one per line, with no spaces. They can be in either local or international dialling format.\n\n\n$config['alert']['transports']['smseagle']['url']   = 'ip.add.re.ss';\n$config['alert']['transports']['smseagle']['user']  = 'smseagle_user';\n$config['alert']['transports']['smseagle']['token'] = 'smseagle_user_password';\n$config['alert']['transports']['smseagle']['to'][]  = '+3534567890';\n$config['alert']['transports']['smseagle']['to'][]  = '0834567891';\n\n\n\n\nSyslog\n\n\nYou can have LibreNMS emit alerts as syslogs complying with RFC 3164.\nMore information on RFC 3164 can be found here: https://tools.ietf.org/html/rfc3164\nExample output: \n26\n Mar 22 00:59:03 librenms.host.net librenms[233]: [Critical] network.device.net: Port Down - port_id =\n 98939; ifDescr =\n xe-1/1/0;\n\nEach fault will be sent as a separate syslog.\n\n\n$config['alert']['transports']['syslog']['syslog_host']   = '127.0.0.1';\n$config['alert']['transports']['syslog']['syslog_port']  = 514;\n$config['alert']['transports']['syslog']['syslog_facility'] = 3;\n\n\n\n\nElasticsearch\n\n\nYou can have LibreNMS emit alerts to an elasticsearch database. Each fault will be sent as a separate document.\nThe index pattern uses strftime() formatting.\nThe proxy setting uses the proxy set in config.php if true and does not if false; this allows you to use local servers.\n\n\n$config['alert']['transports']['elasticsearch']['es_host']   = '127.0.0.1';\n$config['alert']['transports']['elasticsearch']['es_port']  = 9200;\n$config['alert']['transports']['elasticsearch']['es_index']  = 'librenms-%Y.%m.%d';\n$config['alert']['transports']['elasticsearch']['es_proxy'] = false;\n\n\n\n\nJIRA\n\n\nYou can have LibreNMS create issues on a Jira instance for critical and warning alerts. The Jira transport only sets summary and description fiels. Therefore your Jira project must not have any other mandatory field for the provided issuetype. The config fields that need to set are Jira URL, Jira username, Jira password, Project key, and issue type. \nCurrently http authentication is used to access Jira and Jira username and password will be stored as cleartext in the LibreNMS database.\n\n\n$config['alert']['transports']['jira']['url']   = 'https://myjira.mysite.com';\n$config['alert']['transports']['jira']['username']  = 'myjirauser';\n$config['alert']['transports']['jira']['password'] = 'myjirapass';\n$config['alert']['transports']['jira']['prjkey'][]  = 'JIRAPROJECTKEY';\n$config['alert']['transports']['jira']['issuetype'][]  = 'Myissuetype';", 
            "title": "Transports"
        }, 
        {
            "location": "/Alerting/Transports/#transports", 
            "text": "Transports are located within  LibreNMS/Alert/Transport/  and defined as well as configured via  $config['alert']['transports']['Example'] = 'Some Options' .  Contacts will be gathered automatically and passed to the configured transports.\nBy default the Contacts will be only gathered when the alert triggers and will ignore future changes in contacts for the incident. If you want contacts to be re-gathered before each dispatch, please set  $config['alert']['fixed-contacts'] = false;  in your config.php.  The contacts will always include the  SysContact  defined in the Device's SNMP configuration and also every LibreNMS-User that has at least  read -permissions on the entity that is to be alerted.  At the moment LibreNMS only supports Port or Device permissions.  You can exclude the  SysContact  by setting:  $config['alert']['syscontact'] = false;  To include users that have  Global-Read  or  Administrator  permissions it is required to add these additions to the  config.php  respectively:  $config['alert']['globals'] = true; //Include Global-Read into alert-contacts\n$config['alert']['admins']  = true; //Include Administrators into alert-contacts", 
            "title": "Transports"
        }, 
        {
            "location": "/Alerting/Transports/#e-mail", 
            "text": "You can configure these options within the WebUI now, please avoid setting these options within config.php   For all but the default contact, we support setting multiple email addresses separated by a comma. So you can \nset the devices sysContact, override the sysContact or have your users emails set like:  email@domain.com, alerting@domain.com  E-Mail transport is enabled with adding the following to your  config.php :  $config['alert']['transports']['mail'] = true;  The E-Mail transports uses the same email-configuration like the rest of LibreNMS.\nAs a small reminder, here is it's configuration directives including defaults:  $config['email_backend']                   = 'mail';               // Mail backend. Allowed:  mail  (PHP's built-in),  sendmail ,  smtp .\n$config['email_from']                      = NULL;                 // Mail from. Default:  ProjectName   projectid@`hostname` \n$config['email_user']                      = $config['project_id'];\n$config['email_sendmail_path']             = '/usr/sbin/sendmail'; // The location of the sendmail program.\n$config['email_html']                      = FALSE;                // Whether to send HTML email as opposed to plaintext\n$config['email_smtp_host']                 = 'localhost';          // Outgoing SMTP server name.\n$config['email_smtp_port']                 = 25;                   // The port to connect.\n$config['email_smtp_timeout']              = 10;                   // SMTP connection timeout in seconds.\n$config['email_smtp_secure']               = NULL;                 // Enable encryption. Use 'tls' or 'ssl'\n$config['email_smtp_auth']                 = FALSE;                // Whether or not to use SMTP authentication.\n$config['email_smtp_username']             = NULL;                 // SMTP username.\n$config['email_smtp_password']             = NULL;                 // Password for SMTP authentication.\n\n$config['alert']['default_only']           = false;                //Only issue to default_mail\n$config['alert']['default_mail']           = '';                   //Default email", 
            "title": "E-Mail"
        }, 
        {
            "location": "/Alerting/Transports/#api", 
            "text": "You can configure these options within the WebUI now, please avoid setting these options within config.php   API transports definitions are a bit more complex than the E-Mail configuration.\nThe basis for configuration is  $config['alert']['transports']['api'][METHOD]  where  METHOD  can be  get , post  or  put .\nThis basis has to contain an array with URLs of each API to call.\nThe URL can have the same placeholders as defined in the  Template-Syntax .\nIf the  METHOD  is  get , all placeholders will be URL-Encoded.\nThe API transport uses cURL to call the APIs, therefore you might need to install  php5-curl  or similar in order to make it work. Note : it is highly recommended to define own  Templates  when you want to use the API transport. The default template might exceed URL-length for GET requests and therefore cause all sorts of errors.  Example:  $config['alert']['transports']['api']['get'][] =  https://api.thirdparti.es/issue?apikey=abcdefg subject=%title ;", 
            "title": "API"
        }, 
        {
            "location": "/Alerting/Transports/#nagios-compatible", 
            "text": "You can configure these options within the WebUI now, please avoid setting these options within config.php   The nagios transport will feed a FIFO at the defined location with the same format that nagios would.\nThis allows you to use other Alerting-Systems to work with LibreNMS, for example  Flapjack .  $config['alert']['transports']['nagios'] =  /path/to/my.fifo ; //Flapjack expects it to be at '/var/cache/nagios3/event_stream.fifo'", 
            "title": "Nagios Compatible"
        }, 
        {
            "location": "/Alerting/Transports/#irc", 
            "text": "You can configure these options within the WebUI now, please avoid setting these options within config.php   The IRC transports only works together with the LibreNMS IRC-Bot.\nConfiguration of the LibreNMS IRC-Bot is described  here .  $config['alert']['transports']['irc'] = true;", 
            "title": "IRC"
        }, 
        {
            "location": "/Alerting/Transports/#slack", 
            "text": "You can configure these options within the WebUI now, please avoid setting these options within config.php   Using a proxy?  The Slack transport will POST the alert message to your Slack Incoming WebHook using the  attachments  option, you are able to specify multiple webhooks along with the relevant options to go with it. Simple html tags are stripped from the message. All options are optional, the only required value is for url, without this then no call to Slack will be made. Below is an example of how to send alerts to two channels with different customised options:   $config['alert']['transports']['slack'][] = array('url' =   https://hooks.slack.com/services/A12B34CDE/F56GH78JK/L901LmNopqrSTUVw2w3XYZAB4C , 'channel' =  '#Alerting');\n\n$config['alert']['transports']['slack'][] = array('url' =   https://hooks.slack.com/services/A12B34CDE/F56GH78JK/L901LmNopqrSTUVw2w3XYZAB4C , 'channel' =  '@john', 'username' =  'LibreNMS', 'icon_emoji' =  ':ghost:');", 
            "title": "Slack"
        }, 
        {
            "location": "/Alerting/Transports/#rocketchat", 
            "text": "Using a proxy?  The Rocket.chat transport will POST the alert message to your Rocket.chat Incoming WebHook using the  attachments  option, you are able to specify multiple webhooks along with the relevant options to go with it. Simple html tags are stripped from the message. All options are optional, the only required value is for url, without this then no call to Rocket.chat will be made. Below is an example of how to send alerts to two channels with different customised options:  $config['alert']['transports']['rocket'][] = array('url' =   https://rocket.url/api/v1/chat.postMessage , 'channel' =  '#Alerting');\n\n$config['alert']['transports']['rocket'][] = array('url' =   https://rocket.url/api/v1/chat.postMessage , 'channel' =  '@john', 'username' =  'LibreNMS', 'icon_emoji' =  ':ghost:');", 
            "title": "Rocket.chat"
        }, 
        {
            "location": "/Alerting/Transports/#hipchat", 
            "text": "You can configure these options within the WebUI now, please avoid setting these options within config.php   Using a proxy?  The HipChat transport requires the following:  room_id  = HipChat Room ID  url  = HipChat API URL+API Key  from  = The name that will be displayed  The HipChat transport makes the following optional:  color  = Any of HipChat's supported message colors  message_format  = Any of HipChat's supported message formats  notify  = 0 or 1  See the HipChat API Documentation for rooms/message \nfor details on acceptable values.   You may notice that the link points at the \"deprecated\" v1 API.  This is\nbecause the v2 API is still in beta.   Below are two examples of sending messages to a HipChat room.  $config['alert']['transports']['hipchat'][] = array( url  =   https://api.hipchat.com/v1/rooms/message?auth_token=9109jawregoaih ,\n                                                     room_id  =   1234567 ,\n                                                     from  =   LibreNMS );\n\n$config['alert']['transports']['hipchat'][] = array( url  =   https://api.hipchat.com/v1/rooms/message?auth_token=109jawregoaihj ,\n                                                     room_id  =   7654321 ,\n                                                     from  =   LibreNMS ,\n                                                     color  =   red ,\n                                                     notify  =  1,\n                                                     message_format  =   text );  These settings can also be configured from the WebUI, here's an example used for the HipChat V2 API:   Note: The default message format for HipChat messages is HTML.  It is\nrecommended that you specify the  text  message format to prevent unexpected\nresults, such as HipChat attempting to interpret angled brackets (  and ).", 
            "title": "HipChat"
        }, 
        {
            "location": "/Alerting/Transports/#pagerduty", 
            "text": "You can configure these options within the WebUI now, please avoid setting these options within config.php   Using a proxy?  Enabling PagerDuty transports is almost as easy as enabling email-transports.  All you need is to create a Service with type Generic API on your PagerDuty dashboard.  Now copy your API-Key from the newly created Service and setup the transport like:  $config['alert']['transports']['pagerduty'] = 'MYAPIKEYGOESHERE';  That's it!  Note : Currently ACK notifications are not transported to PagerDuty, This is going to be fixed within the next major version (version by date of writing: 2015.05)", 
            "title": "PagerDuty"
        }, 
        {
            "location": "/Alerting/Transports/#pushover", 
            "text": "Using a proxy?  Enabling Pushover support is fairly easy, there are only two required parameters.  Firstly you need to create a new Application (called LibreNMS, for example) in your account on the Pushover website (https://pushover.net/apps)  Now copy your API Token/Key from the newly created Application and setup the transport in your config.php like:  $config['alert']['transports']['pushover'][] = array(\n                                                     appkey  =  'APPLICATIONAPIKEYGOESHERE',\n                                                     userkey  =  'USERKEYGOESHERE',\n                                                    );  To modify the Critical alert sound, add the 'sound_critical' parameter, example:  $config['alert']['transports']['pushover'][] = array(\n                                                     appkey  =  'APPLICATIONAPIKEYGOESHERE',\n                                                     userkey  =  'USERKEYGOESHERE',\n                                                     sound_critical  =  'siren',\n                                                    );", 
            "title": "Pushover"
        }, 
        {
            "location": "/Alerting/Transports/#boxcar", 
            "text": "Using a proxy?  Enabling Boxcar support is super easy.\nCopy your access token from the Boxcar app or from the Boxcar.io website and setup the transport in your config.php like:  $config['alert']['transports']['boxcar'][] = array(\n                                                     access_token  =  'ACCESSTOKENGOESHERE',\n                                                    );  To modify the Critical alert sound, add the 'sound_critical' parameter, example:  $config['alert']['transports']['boxcar'][] = array(\n                                                     access_token  =  'ACCESSTOKENGOESHERE',\n                                                     sound_critical  =  'detonator-charge',\n                                                    );", 
            "title": "Boxcar"
        }, 
        {
            "location": "/Alerting/Transports/#telegram", 
            "text": "Using a proxy?   Thank you to  snis  for these instructions.     First you must create a telegram account and add BotFather to you list. To do this click on the following url: https://telegram.me/botfather    Generate a new bot with the command \"/newbot\" BotFather is then asking for a username and a normal name. After that your bot is created and you get a HTTP token. (for more options for your bot type \"/help\")    Add your bot to telegram with the following url:  http://telegram.me/ botname  and send some text to the bot.    Now copy your token code and go to the following page in chrome:  https://api.telegram.org/bot tokencode /getUpdates    You see a json code with the message you sent to the bot. Copy the Chat id. In this example that is \u201c-9787468\u201d\n    \"message\":{\"message_id\":7,\"from\":\"id\":656556,\"first_name\":\"Joo\",\"last_name\":\"Doo\",\"username\":\"JohnDoo\"},\"chat\":{\"id\":-9787468,\"title\":\"Telegram Group\"},\"date\":1435216924,\"text\":\"Hi\"}}]}    Now create a new \"Telegram transport\" in LibreNMS (Global Settings -  Alerting Settings -  Telegram transport).\nClick on 'Add Telegram config' and put your chat id and token into the relevant box.", 
            "title": "Telegram"
        }, 
        {
            "location": "/Alerting/Transports/#pushbullet", 
            "text": "Using a proxy?  Enabling Pushbullet is a piece of cake.\nGet your Access Token from your Pushbullet's settings page and set it in your config like:  $config['alert']['transports']['pushbullet'] = 'MYFANCYACCESSTOKEN';", 
            "title": "Pushbullet"
        }, 
        {
            "location": "/Alerting/Transports/#clickatell", 
            "text": "Using a proxy?  Clickatell provides a REST-API requiring an Authorization-Token and at least one Cellphone number.\nPlease consult Clickatell's documentation regarding number formatting.\nHere an example using 3 numbers, any amount of numbers is supported:  $config['alert']['transports']['clickatell']['token'] = 'MYFANCYACCESSTOKEN';\n$config['alert']['transports']['clickatell']['to'][]  = '+1234567890';\n$config['alert']['transports']['clickatell']['to'][]  = '+1234567891';\n$config['alert']['transports']['clickatell']['to'][]  = '+1234567892';", 
            "title": "Clickatell"
        }, 
        {
            "location": "/Alerting/Transports/#playsms", 
            "text": "Using a proxy?  PlaySMS is an open source SMS-Gateway that can be used via their HTTP-API using a Username and WebService-Token.\nPlease consult PlaySMS's documentation regarding number formatting.\nHere an example using 3 numbers, any amount of numbers is supported:  $config['alert']['transports']['playsms']['url']   = 'https://localhost/index.php?app=ws';\n$config['alert']['transports']['playsms']['user']  = 'user1';\n$config['alert']['transports']['playsms']['token'] = 'MYFANCYACCESSTOKEN';\n$config['alert']['transports']['playsms']['from']  = '+1234567892'; //Optional\n$config['alert']['transports']['playsms']['to'][]  = '+1234567890';\n$config['alert']['transports']['playsms']['to'][]  = '+1234567891';", 
            "title": "PlaySMS"
        }, 
        {
            "location": "/Alerting/Transports/#victorops", 
            "text": "Using a proxy?  VictorOps provide a webHook url to make integration extremely simple. To get the URL required login to your VictorOps account and go to:  Settings -  Integrations -  REST Endpoint -  Enable Integration.  The URL provided will have $routing_key at the end, you need to change this to something that is unique to the system sending the alerts such as librenms. I.e:  https://alert.victorops.com/integrations/generic/20132414/alert/2f974ce1-08fc-4dg8-a4f4-9aee6cf35c98/librenms  $config['alert']['transports']['victorops']['url'] = 'https://alert.victorops.com/integrations/generic/20132414/alert/2f974ce1-08fc-4dg8-a4f4-9aee6cf35c98/librenms';", 
            "title": "VictorOps"
        }, 
        {
            "location": "/Alerting/Transports/#canopsis", 
            "text": "Canopsis is a hypervision tool. LibreNMS can send alerts to Canopsis which are then converted to canopsis events. To configure the transport, go to:  Global Settings -  Alerting Settings -  Canopsis Transport.  You will need to fill this paramaters :  $config['alert']['transports']['canopsis']['host'] = 'www.xxx.yyy.zzz';\n$config['alert']['transports']['canopsis']['port'] = '5672';\n$config['alert']['transports']['canopsis']['user'] = 'admin';\n$config['alert']['transports']['canopsis']['passwd'] = 'my_password';\n$config['alert']['transports']['canopsis']['vhost'] = 'canopsis';  For more information about canopsis and its events, take a look here :\n http://www.canopsis.org/\n http://www.canopsis.org/wp-content/themes/canopsis/doc/sakura/user-guide/event-spec.html", 
            "title": "Canopsis"
        }, 
        {
            "location": "/Alerting/Transports/#osticket", 
            "text": "Using a proxy?  osTicket, open source ticket system. LibreNMS can send alerts to osTicket API which are then converted to osTicket tickets. To configure the transport, go to:  Global Settings -  Alerting Settings -  osTicket Transport.  This can also be done manually in config.php :  $config['alert']['transports']['osticket']['url'] = 'http://osticket.example.com/api/http.php/tickets.json';\n$config['alert']['transports']['osticket']['token'] = '123456789';", 
            "title": "osTicket"
        }, 
        {
            "location": "/Alerting/Transports/#microsoft-teams", 
            "text": "Using a proxy?  Microsoft Teams. LibreNMS can send alerts to Microsoft Teams Connector API which are then posted to a specific channel. To configure the transport, go to:  Global Settings -  Alerting Settings -  Microsoft Teams Transport.  This can also be done manually in config.php :  $config['alert']['transports']['msteams']['url'] = 'https://outlook.office365.com/webhook/123456789';", 
            "title": "Microsoft Teams"
        }, 
        {
            "location": "/Alerting/Transports/#cisco-spark", 
            "text": "Using a proxy?  Cisco Spark. LibreNMS can send alerts to a Cisco Spark room. To make this possible you need to have a RoomID and a token.   For more information about Cisco Spark RoomID and token, take a look here :\n https://developer.ciscospark.com/getting-started.html\n https://developer.ciscospark.com/resource-rooms.html  To configure the transport, go to:  Global Settings -  Alerting Settings -  Cisco Spark transport.  This can also be done manually in config.php :  $config['alert']['transports']['ciscospark']['token'] = '1234567890QWERTYUIOP';\n$config['alert']['transports']['ciscospark']['roomid'] = '1234567890QWERTYUIOP';", 
            "title": "Cisco Spark"
        }, 
        {
            "location": "/Alerting/Transports/#smseagle", 
            "text": "Using a proxy?  SMSEagle is a hardware SMS Gateway that can be used via their HTTP-API using a Username and password\nPlease consult their documentation at  www.smseagle.eu \nDestination numbers are one per line, with no spaces. They can be in either local or international dialling format.  $config['alert']['transports']['smseagle']['url']   = 'ip.add.re.ss';\n$config['alert']['transports']['smseagle']['user']  = 'smseagle_user';\n$config['alert']['transports']['smseagle']['token'] = 'smseagle_user_password';\n$config['alert']['transports']['smseagle']['to'][]  = '+3534567890';\n$config['alert']['transports']['smseagle']['to'][]  = '0834567891';", 
            "title": "SMSEagle"
        }, 
        {
            "location": "/Alerting/Transports/#syslog", 
            "text": "You can have LibreNMS emit alerts as syslogs complying with RFC 3164.\nMore information on RFC 3164 can be found here: https://tools.ietf.org/html/rfc3164\nExample output:  26  Mar 22 00:59:03 librenms.host.net librenms[233]: [Critical] network.device.net: Port Down - port_id =  98939; ifDescr =  xe-1/1/0; \nEach fault will be sent as a separate syslog.  $config['alert']['transports']['syslog']['syslog_host']   = '127.0.0.1';\n$config['alert']['transports']['syslog']['syslog_port']  = 514;\n$config['alert']['transports']['syslog']['syslog_facility'] = 3;", 
            "title": "Syslog"
        }, 
        {
            "location": "/Alerting/Transports/#elasticsearch", 
            "text": "You can have LibreNMS emit alerts to an elasticsearch database. Each fault will be sent as a separate document.\nThe index pattern uses strftime() formatting.\nThe proxy setting uses the proxy set in config.php if true and does not if false; this allows you to use local servers.  $config['alert']['transports']['elasticsearch']['es_host']   = '127.0.0.1';\n$config['alert']['transports']['elasticsearch']['es_port']  = 9200;\n$config['alert']['transports']['elasticsearch']['es_index']  = 'librenms-%Y.%m.%d';\n$config['alert']['transports']['elasticsearch']['es_proxy'] = false;", 
            "title": "Elasticsearch"
        }, 
        {
            "location": "/Alerting/Transports/#jira", 
            "text": "You can have LibreNMS create issues on a Jira instance for critical and warning alerts. The Jira transport only sets summary and description fiels. Therefore your Jira project must not have any other mandatory field for the provided issuetype. The config fields that need to set are Jira URL, Jira username, Jira password, Project key, and issue type. \nCurrently http authentication is used to access Jira and Jira username and password will be stored as cleartext in the LibreNMS database.  $config['alert']['transports']['jira']['url']   = 'https://myjira.mysite.com';\n$config['alert']['transports']['jira']['username']  = 'myjirauser';\n$config['alert']['transports']['jira']['password'] = 'myjirapass';\n$config['alert']['transports']['jira']['prjkey'][]  = 'JIRAPROJECTKEY';\n$config['alert']['transports']['jira']['issuetype'][]  = 'Myissuetype';", 
            "title": "JIRA"
        }, 
        {
            "location": "/Alerting/Entities/", 
            "text": "Entities\n\n\nEntities as described earlier are based on the table and column names within the database, if you are unsure of what the entity is you want then have a browse around inside MySQL using \nshow tables\n and \ndesc \ntablename\n.\n\n\nDevices\n\n\n\n\n\n\n\n\nEntity\n\n\nDescription\n\n\n\n\n\n\n\n\n\n\ndevices.hostname\n\n\nThe device hostname\n\n\n\n\n\n\ndevices.sysName\n\n\nThe device sysName\n\n\n\n\n\n\ndevices.sysDescr\n\n\nThe device sysDescr\n\n\n\n\n\n\ndevices.hardware\n\n\nThe device hardware\n\n\n\n\n\n\ndevices.version\n\n\nThe device os version\n\n\n\n\n\n\ndevices.location\n\n\nThe device location\n\n\n\n\n\n\ndevices.status\n\n\nThe status of the device, 1\n\n\n\n\n\n\ndevices.status_reason\n\n\nThe reason the device was detected as down (icmp or snmp)\n\n\n\n\n\n\ndevices.ignore\n\n\nIf the device is ignored this will be set to 1\n\n\n\n\n\n\ndevices.disabled\n\n\nIf the device is disabled this will be set to 1\n\n\n\n\n\n\ndevices.last_polled\n\n\nThe the last polled datetime (yyyy-mm-dd hh:mm:ss)\n\n\n\n\n\n\ndevices.type\n\n\nThe device type such as network, server, firewall, etc.\n\n\n\n\n\n\n\n\nBGP Peers\n\n\n\n\n\n\n\n\nEntity\n\n\nDescription\n\n\n\n\n\n\n\n\n\n\nbgpPeers.astext\n\n\nThis is the description of the BGP Peer\n\n\n\n\n\n\nbgpPeers.bgpPeerIdentifier\n\n\nThe IP address of the BGP Peer\n\n\n\n\n\n\nbgpPeers.bgpPeerRemoteAs\n\n\nThe AS number of the BGP Peer\n\n\n\n\n\n\nbgpPeers.bgpPeerState\n\n\nThe operational state of the BGP session\n\n\n\n\n\n\nbgpPeers.bgpPeerAdminStatus\n\n\nThe administrative state of the BGP session\n\n\n\n\n\n\nbgpPeers.bgpLocalAddr\n\n\nThe local address of the BGP session.\n\n\n\n\n\n\n\n\nIPSec Tunnels\n\n\n\n\n\n\n\n\nEntity\n\n\nDescription\n\n\n\n\n\n\n\n\n\n\nipsec_tunnels.peer_addr\n\n\nThe remote VPN peer address\n\n\n\n\n\n\nipsec_tunnels.local_addr\n\n\nThe local VPN address\n\n\n\n\n\n\nipsec_tunnels.tunnel_status\n\n\nThe VPN tunnels operational status.\n\n\n\n\n\n\n\n\nMemory pools\n\n\n\n\n\n\n\n\nEntity\n\n\nDescription\n\n\n\n\n\n\n\n\n\n\nmempools.mempool_type\n\n\nThe memory pool type such as hrstorage, cmp and cemp\n\n\n\n\n\n\nmempools.mempool_descr\n\n\nThe description of the pool such as Physical memory, Virtual memory and System memory\n\n\n\n\n\n\nmempools.mempool_perc\n\n\nThe used percentage of the memory pool.\n\n\n\n\n\n\n\n\nPorts\n\n\n\n\n\n\n\n\nEntity\n\n\nDescription\n\n\n\n\n\n\n\n\n\n\nports.ifDescr\n\n\nThe interface description\n\n\n\n\n\n\nports.ifName\n\n\nThe interface name\n\n\n\n\n\n\nports.ifSpeed\n\n\nThe port speed in bps\n\n\n\n\n\n\nports.ifHighSpeed\n\n\nThe port speed in mbps\n\n\n\n\n\n\nports.ifOperStatus\n\n\nThe operational status of the port (up or down)\n\n\n\n\n\n\nports.ifAdminStatus\n\n\nThe administrative status of the port (up or down)\n\n\n\n\n\n\nports.ifDuplex\n\n\nDuplex setting of the port\n\n\n\n\n\n\nports.ifMtu\n\n\nThe MTU setting of the port.\n\n\n\n\n\n\n\n\nProcessors\n\n\n\n\n\n\n\n\nEntity\n\n\nDescription\n\n\n\n\n\n\n\n\n\n\nprocessors.processor_usage\n\n\nThe usage of the processor as a percentage\n\n\n\n\n\n\nprocessors.processor_descr\n\n\nThe description of the processor.\n\n\n\n\n\n\n\n\nStorage\n\n\n\n\n\n\n\n\nEntity\n\n\nDescription\n\n\n\n\n\n\n\n\n\n\nstorage.storage_descr\n\n\nThe description of the storage\n\n\n\n\n\n\nstorage.storage_perc\n\n\nThe usage of the storage as a percentage.\n\n\n\n\n\n\n\n\nHealth / Sensors\n\n\n\n\n\n\n\n\nEntity\n\n\nDescription\n\n\n\n\n\n\n\n\n\n\nsensors.sensor_desc\n\n\nThe sensors description.\n\n\n\n\n\n\nsensors.sensor_current\n\n\nThe current sensors value.\n\n\n\n\n\n\nsensors.sensor_prev\n\n\nThe previous sensor value.\n\n\n\n\n\n\nsensors.lastupdate\n\n\nThe sensors last updated datetime stamp.", 
            "title": "Entities"
        }, 
        {
            "location": "/Alerting/Entities/#entities", 
            "text": "Entities as described earlier are based on the table and column names within the database, if you are unsure of what the entity is you want then have a browse around inside MySQL using  show tables  and  desc  tablename .", 
            "title": "Entities"
        }, 
        {
            "location": "/Alerting/Entities/#devices", 
            "text": "Entity  Description      devices.hostname  The device hostname    devices.sysName  The device sysName    devices.sysDescr  The device sysDescr    devices.hardware  The device hardware    devices.version  The device os version    devices.location  The device location    devices.status  The status of the device, 1    devices.status_reason  The reason the device was detected as down (icmp or snmp)    devices.ignore  If the device is ignored this will be set to 1    devices.disabled  If the device is disabled this will be set to 1    devices.last_polled  The the last polled datetime (yyyy-mm-dd hh:mm:ss)    devices.type  The device type such as network, server, firewall, etc.", 
            "title": "Devices"
        }, 
        {
            "location": "/Alerting/Entities/#bgp-peers", 
            "text": "Entity  Description      bgpPeers.astext  This is the description of the BGP Peer    bgpPeers.bgpPeerIdentifier  The IP address of the BGP Peer    bgpPeers.bgpPeerRemoteAs  The AS number of the BGP Peer    bgpPeers.bgpPeerState  The operational state of the BGP session    bgpPeers.bgpPeerAdminStatus  The administrative state of the BGP session    bgpPeers.bgpLocalAddr  The local address of the BGP session.", 
            "title": "BGP Peers"
        }, 
        {
            "location": "/Alerting/Entities/#ipsec-tunnels", 
            "text": "Entity  Description      ipsec_tunnels.peer_addr  The remote VPN peer address    ipsec_tunnels.local_addr  The local VPN address    ipsec_tunnels.tunnel_status  The VPN tunnels operational status.", 
            "title": "IPSec Tunnels"
        }, 
        {
            "location": "/Alerting/Entities/#memory-pools", 
            "text": "Entity  Description      mempools.mempool_type  The memory pool type such as hrstorage, cmp and cemp    mempools.mempool_descr  The description of the pool such as Physical memory, Virtual memory and System memory    mempools.mempool_perc  The used percentage of the memory pool.", 
            "title": "Memory pools"
        }, 
        {
            "location": "/Alerting/Entities/#ports", 
            "text": "Entity  Description      ports.ifDescr  The interface description    ports.ifName  The interface name    ports.ifSpeed  The port speed in bps    ports.ifHighSpeed  The port speed in mbps    ports.ifOperStatus  The operational status of the port (up or down)    ports.ifAdminStatus  The administrative status of the port (up or down)    ports.ifDuplex  Duplex setting of the port    ports.ifMtu  The MTU setting of the port.", 
            "title": "Ports"
        }, 
        {
            "location": "/Alerting/Entities/#processors", 
            "text": "Entity  Description      processors.processor_usage  The usage of the processor as a percentage    processors.processor_descr  The description of the processor.", 
            "title": "Processors"
        }, 
        {
            "location": "/Alerting/Entities/#storage", 
            "text": "Entity  Description      storage.storage_descr  The description of the storage    storage.storage_perc  The usage of the storage as a percentage.", 
            "title": "Storage"
        }, 
        {
            "location": "/Alerting/Entities/#health-sensors", 
            "text": "Entity  Description      sensors.sensor_desc  The sensors description.    sensors.sensor_current  The current sensors value.    sensors.sensor_prev  The previous sensor value.    sensors.lastupdate  The sensors last updated datetime stamp.", 
            "title": "Health / Sensors"
        }, 
        {
            "location": "/Alerting/Macros/", 
            "text": "Macros\n\n\nMacros are shorthands to either portion of rules or pure SQL enhanced with placeholders.\n\n\nYou can define your own macros in your \nconfig.php\n.\n\n\nExample macro-implementation of Debian-Devices\n\n\n$config['alert']['macros']['rule']['is_debian'] = '%devices.features ~ \n@debian@\n';\n\n\n\n\nAnd in the Rule:\n\n\n...  \n %macros.is_debian = \n1\n \n ...\n\n\n\n\nThis Example-macro is a Boolean-macro, it applies a form of filter to the set of results defined by the rule.\nAll macros that are not unary should return Boolean.\n\n\nYou can only apply \nEqual\n or \nNot-Equal\n Operations on Boolean-macros where \nTrue\n is represented by \n\"1\"\n and \nFalse\n by \n\"0\"\n.\n\n\nExample \n\n\n((%ports.ifInOctets_rate*8) / %ports.ifSpeed)*100\n\n\n\n\nDevice (Boolean)\n\n\nEntity: \n%macros.device\n\n\nDescription: Only select devices that aren't deleted, ignored or disabled.\n\n\nSource: \n(%devices.disabled = \"0\" \n %devices.ignore = \"0\")\n\n\nDevice is up (Boolean)\n\n\nEntity: \n%macros.device_up\n\n\nDescription: Only select devices that are up.\n\n\nImplies: %macros.device\n\n\nSource: \n(%devices.status = \"1\" \n %macros.device)\n\n\nDevice is down (Boolean)\n\n\nEntity: \n%macros.device_down\n\n\nDescription: Only select devices that are down.\n\n\nImplies: %macros.device\n\n\nSource: \n(%devices.status = \"0\" \n %macros.device)\n\n\nPort (Boolean)\n\n\nEntity: \n%macros.port\n\n\nDescription: Only select ports that aren't deleted, ignored or disabled.\n\n\nSource: \n(%ports.deleted = \"0\" \n %ports.ignore = \"0\" \n %ports.disabled = \"0\")\n\n\nPort is up (Boolean)\n\n\nEntity: \n%macros.port_up\n\n\nDescription: Only select ports that are up and also should be up.\n\n\nImplies: %macros.port\n\n\nSource: \n(%ports.ifOperStatus = \"up\" \n %ports.ifAdminStatus = \"up\" \n %macros.port)\n\n\nPort is down (Boolean)\n\n\nEntity: \n%macros.port_down\n\n\nDescription: Only select ports that are down.\n\n\nImplies: %macros.port\n\n\nSource: \n(%ports.ifOperStatus = \"down\" \n %ports.ifAdminStatus != \"down\" \n %macros.port)\n\n\nPort-Usage in Percent (Decimal)\n\n\nEntity: \n%macros.port_usage_perc\n\n\nDescription: Return port-usage in percent.\n\n\nSource: \n((%ports.ifInOctets_rate*8) / %ports.ifSpeed)*100\n\n\nTime\n\n\nNow (Datetime)\n\n\nEntity: \n%macros.now\n\n\nDescription: Alias of MySQL's NOW()\n\n\nSource: \nNOW()\n\n\nPast N Minutes (Datetime)\n\n\nEntity: \n%macros.past_$m\n\n\nDescription: Returns a MySQL Timestamp dated \n$\n Minutes in the past. \n$\n can only be a supported Resolution.\n\n\nExample: \n%macros.past_5m\n is Last 5 Minutes.\n\n\nResolution: 5,10,15,30,60\n\n\nSource: \nDATE_SUB(NOW(),INTERVAL $ MINUTE)\n\n\nSensors (Boolean)\n\n\nEntity: \n%macros.sensor\n\n\nDescription: Only select sensors that aren't ignored.\n\n\nSource: \n(%sensors.sensor_alert = 1)\n\n\nEntity: \n%macros.sensor_port_link\n\n\nDescription: Only selects sensors that have a port linked to them, the port is up and the device is up.\n\n\nSource: \n(%sensors.entity_link_type = 'port' \n %sensors.entity_link_index = %ports.ifIndex \n %macros.port_up \n %macros.device_up))\n\n\nState Sensors (Boolean)\n\n\nEntity: \n%macros.state_sensor_ok\n, \n%macros.state_sensor_warning\n, \n%macros.state_sensor_critical\n, \n%macros.state_sensor_unknown\n\n\nDescription: Select state sensors by their generic status ok (0), warning (1), critical (2), unknown (3)\n\n\nSource: \n(%sensors.sensor_current = %state_translations.state_value \n %state_translations.state_generic_value = 2)\n\n\nMisc (Boolean)\n\n\nPacket Loss\n\n\nEntity: \n(%macros.packet_loss_5m)\n\n\nDescription: Packet loss % value for the device within the last 5 minutes.\n\n\nExample: \n%macros.packet_loss_5m\n \n 50\n\n\nEntity: \n(%macros.packet_loss_15m)\n\n\nDescription: Packet loss % value for the device within the last 15 minutes.\n\n\nExample: \n%macros.packet_loss_15m\n \n 50\n\n\nPorts in usage perc (Int)\n\n\nEntity: \n((%ports.ifInOctets_rate*8)/%ports.ifSpeed)*100\n\n\nDescription: Port in used more than 50%\n\n\nExample: `%macros.port_in_usage_perc \n 50\n\n\nPorts out usage perc (Int)\n\n\nEntity: \n((%ports.ifOutOctets_rate*8)/%ports.ifSpeed)*100\n\n\nDescription: Port out used more than 50%\n\n\nExample: `%macros.port_out_usage_perc \n 50\n\n\nPorts now down (Boolean)\n\n\nEntity: \n%ports.ifOperStatus != %ports.ifOperStatus_prev \n %ports.ifOperStatus_prev = \"up\" \n %ports.ifAdminStatus = \"up\"\n\n\nDescription: Ports that were previously up and have now gone down.\n\n\nExample: \n%macros.port_now_down = \"1\"\n\n\nDevice component down [JunOS]\n\n\nEntity: \n%sensors.sensor_class = \"state\" \n %sensors.sensor_current != \"6\" \n %sensors.sensor_type = \"jnxFruState\" \n %sensors.sensor_current != \"2\"\n\n\nDescription: Device component is down such as Fan, PSU, etc for JunOS devices.\n\n\nExample: \n%macros.device_component_down_junos = \"1\"\n\n\nDevice component down [Cisco]\n\n\nEntity: \n%sensors.sensor_current != \"1\" \n %sensors.sensor_current != \"5\" \n %sensors.sensor_type ~ \"^cisco.*State$\"\n\n\nDescription: Device component is down such as Fan, PSU, etc for Cisco devices.\n\n\nExample: \n%macros.device_component_down_cisco = \"1\"\n\n\nPDU over amperage [APC]\n\n\nEntity: \n%sensors.sensor_class = \"current\" \n %sensors.sensor_descr = \"Bank Total\" \n %sensors.sensor_current \n %sensors.sensor_limit \n %devices.os = \"apc\"\n\n\nDescription: APC PDU over amperage\n\n\nExample: \n%macros.pdu_over_amperage_apc = \"1\"", 
            "title": "Macros"
        }, 
        {
            "location": "/Alerting/Macros/#macros", 
            "text": "Macros are shorthands to either portion of rules or pure SQL enhanced with placeholders.  You can define your own macros in your  config.php .  Example macro-implementation of Debian-Devices  $config['alert']['macros']['rule']['is_debian'] = '%devices.features ~  @debian@ ';  And in the Rule:  ...    %macros.is_debian =  1    ...  This Example-macro is a Boolean-macro, it applies a form of filter to the set of results defined by the rule.\nAll macros that are not unary should return Boolean.  You can only apply  Equal  or  Not-Equal  Operations on Boolean-macros where  True  is represented by  \"1\"  and  False  by  \"0\" .  Example   ((%ports.ifInOctets_rate*8) / %ports.ifSpeed)*100", 
            "title": "Macros"
        }, 
        {
            "location": "/Alerting/Macros/#device-boolean", 
            "text": "Entity:  %macros.device  Description: Only select devices that aren't deleted, ignored or disabled.  Source:  (%devices.disabled = \"0\"   %devices.ignore = \"0\")", 
            "title": "Device (Boolean)"
        }, 
        {
            "location": "/Alerting/Macros/#device-is-up-boolean", 
            "text": "Entity:  %macros.device_up  Description: Only select devices that are up.  Implies: %macros.device  Source:  (%devices.status = \"1\"   %macros.device)", 
            "title": "Device is up (Boolean)"
        }, 
        {
            "location": "/Alerting/Macros/#device-is-down-boolean", 
            "text": "Entity:  %macros.device_down  Description: Only select devices that are down.  Implies: %macros.device  Source:  (%devices.status = \"0\"   %macros.device)", 
            "title": "Device is down (Boolean)"
        }, 
        {
            "location": "/Alerting/Macros/#port-boolean", 
            "text": "Entity:  %macros.port  Description: Only select ports that aren't deleted, ignored or disabled.  Source:  (%ports.deleted = \"0\"   %ports.ignore = \"0\"   %ports.disabled = \"0\")", 
            "title": "Port (Boolean)"
        }, 
        {
            "location": "/Alerting/Macros/#port-is-up-boolean", 
            "text": "Entity:  %macros.port_up  Description: Only select ports that are up and also should be up.  Implies: %macros.port  Source:  (%ports.ifOperStatus = \"up\"   %ports.ifAdminStatus = \"up\"   %macros.port)", 
            "title": "Port is up (Boolean)"
        }, 
        {
            "location": "/Alerting/Macros/#port-is-down-boolean", 
            "text": "Entity:  %macros.port_down  Description: Only select ports that are down.  Implies: %macros.port  Source:  (%ports.ifOperStatus = \"down\"   %ports.ifAdminStatus != \"down\"   %macros.port)", 
            "title": "Port is down (Boolean)"
        }, 
        {
            "location": "/Alerting/Macros/#port-usage-in-percent-decimal", 
            "text": "Entity:  %macros.port_usage_perc  Description: Return port-usage in percent.  Source:  ((%ports.ifInOctets_rate*8) / %ports.ifSpeed)*100", 
            "title": "Port-Usage in Percent (Decimal)"
        }, 
        {
            "location": "/Alerting/Macros/#time", 
            "text": "", 
            "title": "Time"
        }, 
        {
            "location": "/Alerting/Macros/#now-datetime", 
            "text": "Entity:  %macros.now  Description: Alias of MySQL's NOW()  Source:  NOW()", 
            "title": "Now (Datetime)"
        }, 
        {
            "location": "/Alerting/Macros/#past-n-minutes-datetime", 
            "text": "Entity:  %macros.past_$m  Description: Returns a MySQL Timestamp dated  $  Minutes in the past.  $  can only be a supported Resolution.  Example:  %macros.past_5m  is Last 5 Minutes.  Resolution: 5,10,15,30,60  Source:  DATE_SUB(NOW(),INTERVAL $ MINUTE)", 
            "title": "Past N Minutes (Datetime)"
        }, 
        {
            "location": "/Alerting/Macros/#sensors-boolean", 
            "text": "Entity:  %macros.sensor  Description: Only select sensors that aren't ignored.  Source:  (%sensors.sensor_alert = 1)  Entity:  %macros.sensor_port_link  Description: Only selects sensors that have a port linked to them, the port is up and the device is up.  Source:  (%sensors.entity_link_type = 'port'   %sensors.entity_link_index = %ports.ifIndex   %macros.port_up   %macros.device_up))", 
            "title": "Sensors (Boolean)"
        }, 
        {
            "location": "/Alerting/Macros/#state-sensors-boolean", 
            "text": "Entity:  %macros.state_sensor_ok ,  %macros.state_sensor_warning ,  %macros.state_sensor_critical ,  %macros.state_sensor_unknown  Description: Select state sensors by their generic status ok (0), warning (1), critical (2), unknown (3)  Source:  (%sensors.sensor_current = %state_translations.state_value   %state_translations.state_generic_value = 2)", 
            "title": "State Sensors (Boolean)"
        }, 
        {
            "location": "/Alerting/Macros/#misc-boolean", 
            "text": "", 
            "title": "Misc (Boolean)"
        }, 
        {
            "location": "/Alerting/Macros/#packet-loss", 
            "text": "Entity:  (%macros.packet_loss_5m)  Description: Packet loss % value for the device within the last 5 minutes.  Example:  %macros.packet_loss_5m    50  Entity:  (%macros.packet_loss_15m)  Description: Packet loss % value for the device within the last 15 minutes.  Example:  %macros.packet_loss_15m    50", 
            "title": "Packet Loss"
        }, 
        {
            "location": "/Alerting/Macros/#ports-in-usage-perc-int", 
            "text": "Entity:  ((%ports.ifInOctets_rate*8)/%ports.ifSpeed)*100  Description: Port in used more than 50%  Example: `%macros.port_in_usage_perc   50", 
            "title": "Ports in usage perc (Int)"
        }, 
        {
            "location": "/Alerting/Macros/#ports-out-usage-perc-int", 
            "text": "Entity:  ((%ports.ifOutOctets_rate*8)/%ports.ifSpeed)*100  Description: Port out used more than 50%  Example: `%macros.port_out_usage_perc   50", 
            "title": "Ports out usage perc (Int)"
        }, 
        {
            "location": "/Alerting/Macros/#ports-now-down-boolean", 
            "text": "Entity:  %ports.ifOperStatus != %ports.ifOperStatus_prev   %ports.ifOperStatus_prev = \"up\"   %ports.ifAdminStatus = \"up\"  Description: Ports that were previously up and have now gone down.  Example:  %macros.port_now_down = \"1\"", 
            "title": "Ports now down (Boolean)"
        }, 
        {
            "location": "/Alerting/Macros/#device-component-down-junos", 
            "text": "Entity:  %sensors.sensor_class = \"state\"   %sensors.sensor_current != \"6\"   %sensors.sensor_type = \"jnxFruState\"   %sensors.sensor_current != \"2\"  Description: Device component is down such as Fan, PSU, etc for JunOS devices.  Example:  %macros.device_component_down_junos = \"1\"", 
            "title": "Device component down [JunOS]"
        }, 
        {
            "location": "/Alerting/Macros/#device-component-down-cisco", 
            "text": "Entity:  %sensors.sensor_current != \"1\"   %sensors.sensor_current != \"5\"   %sensors.sensor_type ~ \"^cisco.*State$\"  Description: Device component is down such as Fan, PSU, etc for Cisco devices.  Example:  %macros.device_component_down_cisco = \"1\"", 
            "title": "Device component down [Cisco]"
        }, 
        {
            "location": "/Alerting/Macros/#pdu-over-amperage-apc", 
            "text": "Entity:  %sensors.sensor_class = \"current\"   %sensors.sensor_descr = \"Bank Total\"   %sensors.sensor_current   %sensors.sensor_limit   %devices.os = \"apc\"  Description: APC PDU over amperage  Example:  %macros.pdu_over_amperage_apc = \"1\"", 
            "title": "PDU over amperage [APC]"
        }, 
        {
            "location": "/Alerting/Testing/", 
            "text": "Rules\n\n\nThe simplest way of testing if an alert rule will match a device is by going to the device, clicking edit (the cog),\nselect Capture. From this new screen choose Alerts and click run.\n\n\nThe output will cycle through all alerts applicable to this device and show you the Rule name, rule, \nMySQL query and if the rule matches.\n\n\nSee \nDevice Troubleshooting\n\n\n\n\nTransports\n\n\nYou can test your transports by forcing an actual active alert to run regardless of the interval or delay values.\n\n\n./scripts/test-alert.php\n. This script accepts -r for the rule id, -h for the device id or hostname and -d for debug.\n\n\n\n\nTemplates\n\n\nIt's possible to test your new template before assigning it to a rule. To do so you can run \n./scripts/test-template.php\n. The script will provide the help \ninfo when ran without any parameters.\n\n\nAs an example, if you wanted to test template ID 10 against localhost running rule ID 2 then you would run:\n\n\n./scripts/test-template.php -t 10 -d -h localhost -r 2\n\n\nIf the rule is currently alerting for localhost then you will get the full template as expected to see on email, if it's not then you will just see the \ntemplate without any fault information.", 
            "title": "Testing"
        }, 
        {
            "location": "/Alerting/Testing/#rules", 
            "text": "The simplest way of testing if an alert rule will match a device is by going to the device, clicking edit (the cog),\nselect Capture. From this new screen choose Alerts and click run.  The output will cycle through all alerts applicable to this device and show you the Rule name, rule, \nMySQL query and if the rule matches.  See  Device Troubleshooting", 
            "title": "Rules"
        }, 
        {
            "location": "/Alerting/Testing/#transports", 
            "text": "You can test your transports by forcing an actual active alert to run regardless of the interval or delay values.  ./scripts/test-alert.php . This script accepts -r for the rule id, -h for the device id or hostname and -d for debug.", 
            "title": "Transports"
        }, 
        {
            "location": "/Alerting/Testing/#templates", 
            "text": "It's possible to test your new template before assigning it to a rule. To do so you can run  ./scripts/test-template.php . The script will provide the help \ninfo when ran without any parameters.  As an example, if you wanted to test template ID 10 against localhost running rule ID 2 then you would run:  ./scripts/test-template.php -t 10 -d -h localhost -r 2  If the rule is currently alerting for localhost then you will get the full template as expected to see on email, if it's not then you will just see the \ntemplate without any fault information.", 
            "title": "Templates"
        }, 
        {
            "location": "/Alerting/Rule-Mapping/", 
            "text": "Alert Rule Mapping\n\n\nAlert Rule Mapping can be found in the WebUI. In the Nav bar click on Alerts then Rule Mapping.\nIn LibreNMS you can create alert rules and map those alert rules to devices or you can create device groups and map alert rules to those groups.\nThis could be useful for alerts rules that you don't want to be checked against devices that may not match with your alert rule or may give you false positive etc.\n\n\nExample: Alert Rule Mapping\n\n\n\nIn this example we have an alert rule that checks HPE iLo Power Supply Failure. You probably don't want this alert rule being checked on none HPE iLo devices.  So in the picture below you can see the Alert rule is mapped to a Device group that was created just for HPE iLo devices.\n\n\nExample: HPE iLo Rule map\n\n\n\nYou have two options when mapping the alert rule.\n\n\n\n\nFirst option: you can map alert rule to one device.\n\n\nSecond option: you create a device group and group all your devices together. \nLink to Device Groups", 
            "title": "Alert Rule Mapping"
        }, 
        {
            "location": "/Alerting/Rule-Mapping/#alert-rule-mapping", 
            "text": "Alert Rule Mapping can be found in the WebUI. In the Nav bar click on Alerts then Rule Mapping.\nIn LibreNMS you can create alert rules and map those alert rules to devices or you can create device groups and map alert rules to those groups.\nThis could be useful for alerts rules that you don't want to be checked against devices that may not match with your alert rule or may give you false positive etc.  Example: Alert Rule Mapping  In this example we have an alert rule that checks HPE iLo Power Supply Failure. You probably don't want this alert rule being checked on none HPE iLo devices.  So in the picture below you can see the Alert rule is mapped to a Device group that was created just for HPE iLo devices.  Example: HPE iLo Rule map", 
            "title": "Alert Rule Mapping"
        }, 
        {
            "location": "/Alerting/Rule-Mapping/#you-have-two-options-when-mapping-the-alert-rule", 
            "text": "First option: you can map alert rule to one device.  Second option: you create a device group and group all your devices together.  Link to Device Groups", 
            "title": "You have two options when mapping the alert rule."
        }, 
        {
            "location": "/Alerting/Device-Dependencies/", 
            "text": "Device Dependencies\n\n\nIt is possible to set one or more parents for a device. The aim for that is, if all parent devices are down, alert contacts will not receive redundant alerts for dependent devices. This is very useful when you have an outage, say in a branch office, where normally you'd receive hundreds of alerts, but when this is properly configured, you'd only receive an alert for the parent hosts.\n\n\nThere are three ways to configure this feature. First one is from general settings of a device. The other two can be done in the 'Device Dependencies' item under 'Devices' menu. In this page, you can see all devices and with its parents. Clicking on the 'bin' icon will clear the dependency setting. Clicking on the 'pen' icon will let you edit or change the current setting for chosen device. There's also a 'Manage Device Dependencies' button on the top. This will let you set parents for multiple devices at once. \n\n\nFor an intro on getting started with Device Dependencies, take a look at our \nYoutube video", 
            "title": "Device Dependencies"
        }, 
        {
            "location": "/Alerting/Device-Dependencies/#device-dependencies", 
            "text": "It is possible to set one or more parents for a device. The aim for that is, if all parent devices are down, alert contacts will not receive redundant alerts for dependent devices. This is very useful when you have an outage, say in a branch office, where normally you'd receive hundreds of alerts, but when this is properly configured, you'd only receive an alert for the parent hosts.  There are three ways to configure this feature. First one is from general settings of a device. The other two can be done in the 'Device Dependencies' item under 'Devices' menu. In this page, you can see all devices and with its parents. Clicking on the 'bin' icon will clear the dependency setting. Clicking on the 'pen' icon will let you edit or change the current setting for chosen device. There's also a 'Manage Device Dependencies' button on the top. This will let you set parents for multiple devices at once.   For an intro on getting started with Device Dependencies, take a look at our  Youtube video", 
            "title": "Device Dependencies"
        }, 
        {
            "location": "/Support/", 
            "text": "How to get Help\n\n\n\n\nBrowse through the navigation on the left\n\n\nSearch in the upper right\n\n\nCheck the \nfrequently asked questions\n\n\n\n\nAdditional Support\n\n\nWe have a few methods for you to get in touch to ask for help.\n\n\nCommunity Forum\n\n  - \nAsk for Help\n\n  - \nFeature Requests\n\n\nDiscord\n Active chat and discussion\n\n\nBug Reports", 
            "title": "How to get help"
        }, 
        {
            "location": "/Support/#how-to-get-help", 
            "text": "Browse through the navigation on the left  Search in the upper right  Check the  frequently asked questions", 
            "title": "How to get Help"
        }, 
        {
            "location": "/Support/#additional-support", 
            "text": "We have a few methods for you to get in touch to ask for help.  Community Forum \n  -  Ask for Help \n  -  Feature Requests  Discord  Active chat and discussion  Bug Reports", 
            "title": "Additional Support"
        }, 
        {
            "location": "/Support/FAQ/", 
            "text": "Getting started\n\n\n\n\nHow do I install LibreNMS?\n\n\nHow do I add a device?\n\n\nHow do I get help?\n\n\nWhat are the supported OSes for installing LibreNMS on?\n\n\nDo you have a demo available?\n\n\n\n\nSupport\n\n\n\n\nWhy do I get blank pages sometimes in the WebUI?\n\n\nWhy do I not see any graphs?\n\n\nHow do I debug pages not loading correctly?\n\n\nHow do I debug the discovery process?\n\n\nHow do I debug the poller process?\n\n\nWhy do I get a lot apache or rrdtool zombies in my process list?\n\n\nWhy do I see traffic spikes in my graphs?\n\n\nWhy do I see gaps in my graphs?\n\n\nHow do I change the IP / hostname of a device?\n\n\nMy device doesn't finish polling within 300 seconds\n\n\nThings aren't working correctly?\n\n\nWhat do the values mean in my graphs?\n\n\nWhy does a device show as a warning?\n\n\nWhy do I not see all interfaces in the Overall traffic graph for a device?\n\n\nHow do I move my LibreNMS install to another server?\n\n\nWhy is my EdgeRouter device not detected?\n\n\nWhy are some of my disks not showing?\n\n\nWhy are my disks reporting an incorrect size?\n\n\nWhat is the Difference between Disable Device and Ignore a Device?\n\n\nWhy can't Normal and Global View users see Oxidized?\n\n\nWhat is the Demo User for?\n\n\nWhy does modifying 'Default Alert Template' fail?\n\n\nWhy would alert un-mute itself\n\n\n\n\nDeveloping\n\n\n\n\nHow do I add support for a new OS?\n\n\nWhat information do you need to add a new OS?\n\n\nWhat can I do to help?\n\n\nHow can I test another users branch?\n\n\n\n\n How do I install LibreNMS?\n\n\nThis is currently well documented within the doc folder of the installation files.\n\n\nPlease see the following \ndoc\n\n\n How do I add a device?\n\n\nYou have two options for adding a new device into LibreNMS.\n\n\n\n\nUsing the command line via ssh you can add a new device by changing to the directory of your LibreNMS install and typing (be sure to put the correct details).\n\n\n\n\n./addhost.php [community] [v1|v2c] [port] [udp|udp6|tcp|tcp6]\n\n\n\n\n\n\nPlease note that if the community contains special characters such as \n$\n then you will need to wrap it in \n'\n. I.e: \n'Pa$$w0rd'\n.\n\n\n\n\n\n\nUsing the web interface, go to Devices and then Add Device. Enter the details required for the device that you want to add and then click 'Add Host'.\n\n\n\n\n How do I get help?\n\n\nGetting Help\n\n\n What are the supported OSes for installing LibreNMS on?\n\n\nSupported is quite a strong word :) The 'officially' supported distros are:\n\n\n\n\nUbuntu / Debian\n\n\nRed Hat / CentOS\n\n\nGentoo\n\n\n\n\nHowever we will always aim to help wherever possible so if you are running a distro that isn't one of the above then give it a try anyway and if you need help then jump on the \ndiscord server\n.\n\n\n Do you have a demo available?\n\n\nWe do indeed, you can find access to the demo \nhere\n\n\n Why do I get blank pages sometimes in the WebUI?\n\n\nThe first thing to do is to add /debug=yes/ to the end of the URI (I.e /devices/debug=yes/).\n\n\nIf the page you are trying to load has a substantial amount of data in it then it could be that the php memory limit needs to be increased in \nconfig.php\n.\n\n\n Why do I not see any graphs?\n\n\nThe easiest way to check if all is well is to run \n./validate.php\n as root from within your install directory. This should give you info on why things aren't working.\n\n\nOne other reason could be a restricted snmpd.conf file or snmp view which limits the data sent back. If you use net-snmp then we suggest using \nthe \nincluded snmpd.conf\n file.\n\n\n How do I debug pages not loading correctly?\n\n\nA debug system is in place which enables you to see the output from php errors, warnings and notices along with the MySQL queries that have been run for that page.\n\n\nTo enable the debug option, add /debug=yes/ to the end of any URI (I.e /devices/debug=yes/) or ?debug=yes if you are debugging a graph directly.\n\n\nYou will then have a two options in the footer of the website - Show SQL Debug and Show PHP Debug. These will both popup that pages debug window for you to view. If the page itself has generated a fatal error then this will be displayed directly on the page.\n\n\n How do I debug the discovery process?\n\n\nPlease see the \nDiscovery Support\n document for further details.\n\n\n How do I debug the poller process?\n\n\nPlease see the \nPoller Support\n document for further details.\n\n\n Why do I get a lot apache or rrdtool zombies in my process list?\n\n\nIf this is related to your web service for LibreNMS then this has been tracked down to an issue within php which the developers aren't fixing. We have implemented a work around which means you\nshouldn't be seeing this. If you are, please report this in \nissue 443\n.\n\n\n Why do I see traffic spikes in my graphs?\n\n\nThis occurs either when a counter resets or the device sends back bogus data making it look like a counter reset. We have enabled support for setting a maximum value for rrd files for ports.\n\n\nBefore this all rrd files were set to 100G max values, now you can enable support to limit this to the actual port speed.\n\n\nrrdtool tune will change the max value when the interface speed is detected as being changed (min value will be set for anything 10M or over) or when you run the included script (./scripts/tune_port.php) - see \nRRDTune doc\n\n\nSNMP ifInOctets and ifOutOctets are counters, which means they start at 0 (at device boot) and count up from there. LibreNMS records the value every 5 minutes and uses the difference between the previous value and the current value to calculate rate. (Also, this value resets to 0 when it hits the max value)\n\n\nNow, when the value is not recorded for awhile RRD (our time series storage) does not record a 0, it records the last value, otherwise, there would be even worse problems. Then finally we get the current ifIn/OutOctets value and record that. Now, it appears as though all of the traffic since it stopped getting values have occurred in the last 5 minute interval.\n\n\nSo whenever you see spikes like this, it means we have not received data from the device for several polling intervals. The cause can vary quite a bit: bad snmp implementations, intermittant network connectivity, broken poller, and more.\n\n\n Why do I see gaps in my graphs?\n\n\nThis is most commonly due to the poller not being able to complete it's run within 300 seconds. Check which devices are causing this by going to /poll-log/ within the Web interface.\n\n\nWhen you find the device(s) which are taking the longest you can then look at the Polling module graph under Graphs -\n Poller -\n Poller Modules Performance. Take a look at what modules are taking the longest and disabled un used modules.\n\n\nIf you poll a large number of devices / ports then it's recommended to run a local recurisve dns server such as pdns-recursor.\n\n\nRunning RRDCached is also highly advised in larger installs but has benefits no matter the size.\n\n\n How do I change the IP / hostname of a device?\n\n\nThere is a host rename tool called renamehost.php in your librenms root directory. When renaming you are also changing the device's IP / hostname address for monitoring.\nUsage:\n\n\n./renamehost.php \nold hostname\n \nnew hostname\n\n\n\n\n\nYou can also rename a device in the Web UI by going to the device, then clicking settings Icon -\n Edit.\n\n\n My device doesn't finish polling within 300 seconds\n\n\nWe have a few things you can try:\n\n\n\n\nDisable unnecessary polling modules under edit device.\n\n\nSet a max repeater value within the snmp settings for a device.\n    What to set this to is tricky, you really should run an snmpbulkwalk with -Cr10 through -Cr50 to see what works best. 50 is usually a good choice if the device can cope.\n\n\n\n\n Things aren't working correctly?\n\n\nRun \n./validate.php\n as root from within your install.\n\n\nRe-run \n./validate.php\n once you've resolved any issues raised.\n\n\nYou have an odd issue - we'd suggest you join our \ndiscord server\n to discuss.\n\n\n What do the values mean in my graphs?\n\n\nThe values you see are reported as metric values. Thanks to a post on \nReddit\n \nhere are those values:\n\n\n10^-18  a - atto\n10^-15  f - femto\n10^-12  p - pico\n10^-9   n - nano\n10^-6   u - micro\n10^-3   m - milli\n0    (no unit)\n10^3    k - kilo\n10^6    M - mega\n10^9    G - giga\n10^12   T - tera\n10^15   P - peta\n\n\n\n\n Why does a device show as a warning?\n\n\nThis is indicating that the device has rebooted within the last 24 hours (by default). If you want to adjust this \nthreshold then you can do so by setting \n$config['uptime_warning'] = '84600';\n in \nconfig.php\n. The value must be in seconds.\n\n\n Why do I not see all interfaces in the Overall traffic graph for a device?\n\n\nBy default numerous interface types and interface descriptions are excluded from this graph. The excluded defailts are:\n\n\n$config['device_traffic_iftype'][] = '/loopback/';\n$config['device_traffic_iftype'][] = '/tunnel/';\n$config['device_traffic_iftype'][] = '/virtual/';\n$config['device_traffic_iftype'][] = '/mpls/';\n$config['device_traffic_iftype'][] = '/ieee8023adLag/';\n$config['device_traffic_iftype'][] = '/l2vlan/';\n$config['device_traffic_iftype'][] = '/ppp/';\n\n$config['device_traffic_descr'][] = '/loopback/';\n$config['device_traffic_descr'][] = '/vlan/';\n$config['device_traffic_descr'][] = '/tunnel/';\n$config['device_traffic_descr'][] = '/bond/';\n$config['device_traffic_descr'][] = '/null/';\n$config['device_traffic_descr'][] = '/dummy/';\n\n\n\n\nIf you would like to re-include l2vlan interfaces for instance, you first need to \nunset\n the config array and set your options:\n\n\nunset($config['device_traffic_iftype']);\n$config['device_traffic_iftype'][] = '/loopback/';\n$config['device_traffic_iftype'][] = '/tunnel/';\n$config['device_traffic_iftype'][] = '/virtual/';\n$config['device_traffic_iftype'][] = '/mpls/';\n$config['device_traffic_iftype'][] = '/ieee8023adLag/';\n$config['device_traffic_iftype'][] = '/ppp/';\n\n\n\n\n How do I move my LibreNMS install to another server?\n\n\nIf you are moving from one CPU architecture to another then you will need to dump the rrd files and re-create them. If you are in   \n\nthis scenario then you can use \nDan Brown's migration scripts\n.    \n\n\nIf you are just moving to another server with the same CPU architecture then the following steps should be all that's needed:   \n\n\n- Install LibreNMS as per our normal documentation, you don't need to run through the web installer or building the sql schema.   \n- Stop cron by commenting out all lines in `/etc/cron.d/librenms`\n- Dump the MySQL database `librenms` and import this into your new server.\n- Copy the `rrd/` folder to the new server.\n- Copy the `config.php` file to the new server.\n- Renable cron by uncommenting all lines in `/etc/cron.d/librenms`\n\n\n\n Why is my EdgeRouter device not detected?\n\n\nIf you have \nservice snmp description\n set in your config then this will be why, please remove this. For some reason Ubnt have decided setting this \n value should override the sysDescr value returned which breaks our detection.\n\n\nIf you don't have that set then this may be then due to an update of EdgeOS or a new device type, please \ncreate an issue\n.\n\n\n Why are some of my disks not showing?\n\n\nIf you are monitoring a linux server then net-snmp doesn't always expose all disks via hrStorage (HOST-RESOURCES-MIB). We have additional support which will retrieve disks via dskTable (UCD-SNMP-MIB). \nTo expose these disks you need to add additional config to your snmpd.conf file. For example, to expose \n/dev/sda1\n which may be mounted as \n/storage\n you can specify:\n\n\ndisk /dev/sda1\n\n\nOr\n\n\ndisk /storage\n\n\nRestart snmpd and LibreNMS should populate the additional disk after a fresh discovery.\n\n\n Why are my disks reporting an incorrect size?\n\n\nThere is a known issue for net-snmp, which causes it to report incorrect disk size and disk usage when the size of the disk (or raid) are larger then 16TB, a workaround has been implemented but is not active on Centos 6.8 by default due to the fact that this workaround breaks official SNMP specs, and as such could cause unexpected behaviour in other SNMP tools. You can activate the workaround by adding to /etc/snmp/snmpd.conf :\n\n\nrealStorageUnits 0\n\n\n What is the Difference between Disable Device and Ignore a Device?\n\n\n\n\nDisable stops polling.\n\n\nIgnore disables alerting.\n\n\n\n\n How do I add support for a new OS?\n\n\nPlease see \nSupporting a new OS\n\n\n What information do you need to add a new OS?\n\n\nUnder the device, click the gear and select Capture. \nPlease provide the output of Discovery, Poller, and Snmpwalk as separate non-expiring https://p.libren.ms/ links.\n\n\nYou can also use the command line to obtain the information.  Especially, if snmpwalk results in a large amount of data.\nReplace the relevant information in these commands such as HOSTNAME and COMMUNITY. Use \nsnmpwalk\n instead of \nsnmpbulkwalk\n for v1 devices.\n\n\n\n\nThese commands will automatically upload the data to LibreNMS servers.\n\n\n\n\n./discovery.php -h HOSTNAME -d | ./pbin.sh\n./poller.php -h HOSTNAME -r -f -d | ./pbin.sh\nsnmpbulkwalk -OUneb -v2c -c COMMUNITY HOSTNAME .  | ./pbin.sh\n\n\n\n\nYou can use the links provided by these commands within the issue.\n\n\nIf possible please also provide what the OS name should be if it doesn't exist already.\n\n\n What can I do to help?\n\n\nThanks for asking, sometimes it's not quite so obvious and everyone can contribute something different. So here are some ways you can help LibreNMS improve.\n\n\n\n\nCode. This is a big thing. We want this community to grow by the software developing and evolving to cater for users needs. The biggest area that people can help make this happen is by providing code support. This doesn't necessarily mean contributing code for discovering a new device:\n\n\nWeb UI, a new look and feel has been adopted but we are not finished by any stretch of the imagination. Make suggestions, find and fix bugs, update the design / layout.\n\n\nPoller / Discovery code. Improving it (we think a lot can be done to speed things up), adding new device support and updating old ones.\n\n\nThe LibreNMS main website, this is hosted on GitHub like the main repo and we accept use contributions here as well :)\n\n\n\n\n\n\nHardware. We don't physically need it but if we are to add device support, it's made a whole lot easier with access to the kit via SNMP.\n\n\nIf you've got MIBs, they are handy as well :)\n\n\nIf you know the vendor and can get permission to use logos that's also great.\n\n\n\n\n\n\nBugs. Found one? We want to know about it. Most bugs are fixed after being spotted and reported by someone, I'd love to say we are amazing developers and will fix all bugs before you spot them but that's just not true.\n\n\nFeature requests. Can't code / won't code. No worries, chuck a feature request into our \ncommunity forum\n with enough detail and someone will take a look. A lot of the time this might be what interests someone, they need the same feature or they just have time. Please be patient, everyone who contributes does so in their own time.\n\n\nDocumentation. Documentation can always be improved and every little bit helps. Not all features are currently documented or documented well, there's speeling mistakes etc. It's very easy to submit updates \nthrough the GitHub website\n, no git experience needed.\n\n\nBe nice, this is the foundation of this project. We expect everyone to be nice. People will fall out, people will disagree but please do it so in a respectable way.\n\n\nAsk questions. Sometimes just by asking questions you prompt deeper conversations that can lead us to somewhere amazing so please never be afraid to ask a question.\n\n\n\n\n How can I test another users branch?\n\n\nLibreNMS can and is developed by anyone, this means someone may be working on a new feature or support for a device that you want.\nIt can be helpful for others to test these new features, using Git, this is made easy.\n\n\ncd /opt/librenms\n\n\n\n\nFirstly ensure that your current branch is in good state:\n\n\ngit status\n\n\n\n\nIf you see \nnothing to commit, working directory clean\n then let's go for it :)\n\n\nLet's say that you want to test a users (f0o) new development branch (issue-1337) then you can do the following:\n\n\ngit remote add f0o https://github.com/f0o/librenms.git\ngit remote update f0o\ngit checkout issue-1337\n\n\n\n\nOnce you are done testing, you can easily switch back to the master branch:\n\n\ngit checkout master\n\n\n\n\nIf you want to pull any new updates provided by f0o's branch then whilst you are still in it, do the following:\n\n\ngit pull f0o issue-1337\n\n\n\n\n Why can't Normal and Global View users see Oxidized?\n\n\nConfigs can often contain sensitive data. Because of that only global admins can see configs.\n\n\n What is the Demo User for?\n\n\nDemo users allow full access except adding/editing users and deleting devices and can't change passwords.\n\n\n Why does modifying 'Default Alert Template' fail?\n\n\nThis template's entry could be missing in the database. Please run:\n\n\nmysql -u librenms -p \n sql-schema/202.sql\n\n\n\n\n Why would alert un-mute itself?\n\n\nIf alert un-mutes itself then it most likely means that the alert cleared and is then triggered again.\nPlease review eventlog as it will tell you in there.", 
            "title": "FAQ"
        }, 
        {
            "location": "/Support/FAQ/#getting-started", 
            "text": "How do I install LibreNMS?  How do I add a device?  How do I get help?  What are the supported OSes for installing LibreNMS on?  Do you have a demo available?", 
            "title": "Getting started"
        }, 
        {
            "location": "/Support/FAQ/#support", 
            "text": "Why do I get blank pages sometimes in the WebUI?  Why do I not see any graphs?  How do I debug pages not loading correctly?  How do I debug the discovery process?  How do I debug the poller process?  Why do I get a lot apache or rrdtool zombies in my process list?  Why do I see traffic spikes in my graphs?  Why do I see gaps in my graphs?  How do I change the IP / hostname of a device?  My device doesn't finish polling within 300 seconds  Things aren't working correctly?  What do the values mean in my graphs?  Why does a device show as a warning?  Why do I not see all interfaces in the Overall traffic graph for a device?  How do I move my LibreNMS install to another server?  Why is my EdgeRouter device not detected?  Why are some of my disks not showing?  Why are my disks reporting an incorrect size?  What is the Difference between Disable Device and Ignore a Device?  Why can't Normal and Global View users see Oxidized?  What is the Demo User for?  Why does modifying 'Default Alert Template' fail?  Why would alert un-mute itself", 
            "title": "Support"
        }, 
        {
            "location": "/Support/FAQ/#developing", 
            "text": "How do I add support for a new OS?  What information do you need to add a new OS?  What can I do to help?  How can I test another users branch?", 
            "title": "Developing"
        }, 
        {
            "location": "/Support/FAQ/#how-do-i-install-librenms", 
            "text": "This is currently well documented within the doc folder of the installation files.  Please see the following  doc", 
            "title": " How do I install LibreNMS?"
        }, 
        {
            "location": "/Support/FAQ/#how-do-i-add-a-device", 
            "text": "You have two options for adding a new device into LibreNMS.   Using the command line via ssh you can add a new device by changing to the directory of your LibreNMS install and typing (be sure to put the correct details).   ./addhost.php [community] [v1|v2c] [port] [udp|udp6|tcp|tcp6]   Please note that if the community contains special characters such as  $  then you will need to wrap it in  ' . I.e:  'Pa$$w0rd' .    Using the web interface, go to Devices and then Add Device. Enter the details required for the device that you want to add and then click 'Add Host'.", 
            "title": " How do I add a device?"
        }, 
        {
            "location": "/Support/FAQ/#how-do-i-get-help", 
            "text": "Getting Help", 
            "title": " How do I get help?"
        }, 
        {
            "location": "/Support/FAQ/#what-are-the-supported-oses-for-installing-librenms-on", 
            "text": "Supported is quite a strong word :) The 'officially' supported distros are:   Ubuntu / Debian  Red Hat / CentOS  Gentoo   However we will always aim to help wherever possible so if you are running a distro that isn't one of the above then give it a try anyway and if you need help then jump on the  discord server .", 
            "title": " What are the supported OSes for installing LibreNMS on?"
        }, 
        {
            "location": "/Support/FAQ/#do-you-have-a-demo-available", 
            "text": "We do indeed, you can find access to the demo  here", 
            "title": " Do you have a demo available?"
        }, 
        {
            "location": "/Support/FAQ/#why-do-i-get-blank-pages-sometimes-in-the-webui", 
            "text": "The first thing to do is to add /debug=yes/ to the end of the URI (I.e /devices/debug=yes/).  If the page you are trying to load has a substantial amount of data in it then it could be that the php memory limit needs to be increased in  config.php .", 
            "title": " Why do I get blank pages sometimes in the WebUI?"
        }, 
        {
            "location": "/Support/FAQ/#why-do-i-not-see-any-graphs", 
            "text": "The easiest way to check if all is well is to run  ./validate.php  as root from within your install directory. This should give you info on why things aren't working.  One other reason could be a restricted snmpd.conf file or snmp view which limits the data sent back. If you use net-snmp then we suggest using \nthe  included snmpd.conf  file.", 
            "title": " Why do I not see any graphs?"
        }, 
        {
            "location": "/Support/FAQ/#how-do-i-debug-pages-not-loading-correctly", 
            "text": "A debug system is in place which enables you to see the output from php errors, warnings and notices along with the MySQL queries that have been run for that page.  To enable the debug option, add /debug=yes/ to the end of any URI (I.e /devices/debug=yes/) or ?debug=yes if you are debugging a graph directly.  You will then have a two options in the footer of the website - Show SQL Debug and Show PHP Debug. These will both popup that pages debug window for you to view. If the page itself has generated a fatal error then this will be displayed directly on the page.", 
            "title": " How do I debug pages not loading correctly?"
        }, 
        {
            "location": "/Support/FAQ/#how-do-i-debug-the-discovery-process", 
            "text": "Please see the  Discovery Support  document for further details.", 
            "title": " How do I debug the discovery process?"
        }, 
        {
            "location": "/Support/FAQ/#how-do-i-debug-the-poller-process", 
            "text": "Please see the  Poller Support  document for further details.", 
            "title": " How do I debug the poller process?"
        }, 
        {
            "location": "/Support/FAQ/#why-do-i-get-a-lot-apache-or-rrdtool-zombies-in-my-process-list", 
            "text": "If this is related to your web service for LibreNMS then this has been tracked down to an issue within php which the developers aren't fixing. We have implemented a work around which means you\nshouldn't be seeing this. If you are, please report this in  issue 443 .", 
            "title": " Why do I get a lot apache or rrdtool zombies in my process list?"
        }, 
        {
            "location": "/Support/FAQ/#why-do-i-see-traffic-spikes-in-my-graphs", 
            "text": "This occurs either when a counter resets or the device sends back bogus data making it look like a counter reset. We have enabled support for setting a maximum value for rrd files for ports.  Before this all rrd files were set to 100G max values, now you can enable support to limit this to the actual port speed.  rrdtool tune will change the max value when the interface speed is detected as being changed (min value will be set for anything 10M or over) or when you run the included script (./scripts/tune_port.php) - see  RRDTune doc  SNMP ifInOctets and ifOutOctets are counters, which means they start at 0 (at device boot) and count up from there. LibreNMS records the value every 5 minutes and uses the difference between the previous value and the current value to calculate rate. (Also, this value resets to 0 when it hits the max value)  Now, when the value is not recorded for awhile RRD (our time series storage) does not record a 0, it records the last value, otherwise, there would be even worse problems. Then finally we get the current ifIn/OutOctets value and record that. Now, it appears as though all of the traffic since it stopped getting values have occurred in the last 5 minute interval.  So whenever you see spikes like this, it means we have not received data from the device for several polling intervals. The cause can vary quite a bit: bad snmp implementations, intermittant network connectivity, broken poller, and more.", 
            "title": " Why do I see traffic spikes in my graphs?"
        }, 
        {
            "location": "/Support/FAQ/#why-do-i-see-gaps-in-my-graphs", 
            "text": "This is most commonly due to the poller not being able to complete it's run within 300 seconds. Check which devices are causing this by going to /poll-log/ within the Web interface.  When you find the device(s) which are taking the longest you can then look at the Polling module graph under Graphs -  Poller -  Poller Modules Performance. Take a look at what modules are taking the longest and disabled un used modules.  If you poll a large number of devices / ports then it's recommended to run a local recurisve dns server such as pdns-recursor.  Running RRDCached is also highly advised in larger installs but has benefits no matter the size.", 
            "title": " Why do I see gaps in my graphs?"
        }, 
        {
            "location": "/Support/FAQ/#how-do-i-change-the-ip-hostname-of-a-device", 
            "text": "There is a host rename tool called renamehost.php in your librenms root directory. When renaming you are also changing the device's IP / hostname address for monitoring.\nUsage:  ./renamehost.php  old hostname   new hostname   You can also rename a device in the Web UI by going to the device, then clicking settings Icon -  Edit.", 
            "title": " How do I change the IP / hostname of a device?"
        }, 
        {
            "location": "/Support/FAQ/#my-device-doesnt-finish-polling-within-300-seconds", 
            "text": "We have a few things you can try:   Disable unnecessary polling modules under edit device.  Set a max repeater value within the snmp settings for a device.\n    What to set this to is tricky, you really should run an snmpbulkwalk with -Cr10 through -Cr50 to see what works best. 50 is usually a good choice if the device can cope.", 
            "title": " My device doesn't finish polling within 300 seconds"
        }, 
        {
            "location": "/Support/FAQ/#things-arent-working-correctly", 
            "text": "Run  ./validate.php  as root from within your install.  Re-run  ./validate.php  once you've resolved any issues raised.  You have an odd issue - we'd suggest you join our  discord server  to discuss.", 
            "title": " Things aren't working correctly?"
        }, 
        {
            "location": "/Support/FAQ/#what-do-the-values-mean-in-my-graphs", 
            "text": "The values you see are reported as metric values. Thanks to a post on  Reddit  \nhere are those values:  10^-18  a - atto\n10^-15  f - femto\n10^-12  p - pico\n10^-9   n - nano\n10^-6   u - micro\n10^-3   m - milli\n0    (no unit)\n10^3    k - kilo\n10^6    M - mega\n10^9    G - giga\n10^12   T - tera\n10^15   P - peta", 
            "title": " What do the values mean in my graphs?"
        }, 
        {
            "location": "/Support/FAQ/#why-does-a-device-show-as-a-warning", 
            "text": "This is indicating that the device has rebooted within the last 24 hours (by default). If you want to adjust this \nthreshold then you can do so by setting  $config['uptime_warning'] = '84600';  in  config.php . The value must be in seconds.", 
            "title": " Why does a device show as a warning?"
        }, 
        {
            "location": "/Support/FAQ/#why-do-i-not-see-all-interfaces-in-the-overall-traffic-graph-for-a-device", 
            "text": "By default numerous interface types and interface descriptions are excluded from this graph. The excluded defailts are:  $config['device_traffic_iftype'][] = '/loopback/';\n$config['device_traffic_iftype'][] = '/tunnel/';\n$config['device_traffic_iftype'][] = '/virtual/';\n$config['device_traffic_iftype'][] = '/mpls/';\n$config['device_traffic_iftype'][] = '/ieee8023adLag/';\n$config['device_traffic_iftype'][] = '/l2vlan/';\n$config['device_traffic_iftype'][] = '/ppp/';\n\n$config['device_traffic_descr'][] = '/loopback/';\n$config['device_traffic_descr'][] = '/vlan/';\n$config['device_traffic_descr'][] = '/tunnel/';\n$config['device_traffic_descr'][] = '/bond/';\n$config['device_traffic_descr'][] = '/null/';\n$config['device_traffic_descr'][] = '/dummy/';  If you would like to re-include l2vlan interfaces for instance, you first need to  unset  the config array and set your options:  unset($config['device_traffic_iftype']);\n$config['device_traffic_iftype'][] = '/loopback/';\n$config['device_traffic_iftype'][] = '/tunnel/';\n$config['device_traffic_iftype'][] = '/virtual/';\n$config['device_traffic_iftype'][] = '/mpls/';\n$config['device_traffic_iftype'][] = '/ieee8023adLag/';\n$config['device_traffic_iftype'][] = '/ppp/';", 
            "title": " Why do I not see all interfaces in the Overall traffic graph for a device?"
        }, 
        {
            "location": "/Support/FAQ/#how-do-i-move-my-librenms-install-to-another-server", 
            "text": "If you are moving from one CPU architecture to another then you will need to dump the rrd files and re-create them. If you are in    \nthis scenario then you can use  Dan Brown's migration scripts .      If you are just moving to another server with the same CPU architecture then the following steps should be all that's needed:     - Install LibreNMS as per our normal documentation, you don't need to run through the web installer or building the sql schema.   \n- Stop cron by commenting out all lines in `/etc/cron.d/librenms`\n- Dump the MySQL database `librenms` and import this into your new server.\n- Copy the `rrd/` folder to the new server.\n- Copy the `config.php` file to the new server.\n- Renable cron by uncommenting all lines in `/etc/cron.d/librenms`", 
            "title": " How do I move my LibreNMS install to another server?"
        }, 
        {
            "location": "/Support/FAQ/#why-is-my-edgerouter-device-not-detected", 
            "text": "If you have  service snmp description  set in your config then this will be why, please remove this. For some reason Ubnt have decided setting this \n value should override the sysDescr value returned which breaks our detection.  If you don't have that set then this may be then due to an update of EdgeOS or a new device type, please  create an issue .", 
            "title": " Why is my EdgeRouter device not detected?"
        }, 
        {
            "location": "/Support/FAQ/#why-are-some-of-my-disks-not-showing", 
            "text": "If you are monitoring a linux server then net-snmp doesn't always expose all disks via hrStorage (HOST-RESOURCES-MIB). We have additional support which will retrieve disks via dskTable (UCD-SNMP-MIB). \nTo expose these disks you need to add additional config to your snmpd.conf file. For example, to expose  /dev/sda1  which may be mounted as  /storage  you can specify:  disk /dev/sda1  Or  disk /storage  Restart snmpd and LibreNMS should populate the additional disk after a fresh discovery.", 
            "title": " Why are some of my disks not showing?"
        }, 
        {
            "location": "/Support/FAQ/#why-are-my-disks-reporting-an-incorrect-size", 
            "text": "There is a known issue for net-snmp, which causes it to report incorrect disk size and disk usage when the size of the disk (or raid) are larger then 16TB, a workaround has been implemented but is not active on Centos 6.8 by default due to the fact that this workaround breaks official SNMP specs, and as such could cause unexpected behaviour in other SNMP tools. You can activate the workaround by adding to /etc/snmp/snmpd.conf :  realStorageUnits 0", 
            "title": " Why are my disks reporting an incorrect size?"
        }, 
        {
            "location": "/Support/FAQ/#what-is-the-difference-between-disable-device-and-ignore-a-device", 
            "text": "Disable stops polling.  Ignore disables alerting.", 
            "title": " What is the Difference between Disable Device and Ignore a Device?"
        }, 
        {
            "location": "/Support/FAQ/#how-do-i-add-support-for-a-new-os", 
            "text": "Please see  Supporting a new OS", 
            "title": " How do I add support for a new OS?"
        }, 
        {
            "location": "/Support/FAQ/#what-information-do-you-need-to-add-a-new-os", 
            "text": "Under the device, click the gear and select Capture. \nPlease provide the output of Discovery, Poller, and Snmpwalk as separate non-expiring https://p.libren.ms/ links.  You can also use the command line to obtain the information.  Especially, if snmpwalk results in a large amount of data.\nReplace the relevant information in these commands such as HOSTNAME and COMMUNITY. Use  snmpwalk  instead of  snmpbulkwalk  for v1 devices.   These commands will automatically upload the data to LibreNMS servers.   ./discovery.php -h HOSTNAME -d | ./pbin.sh\n./poller.php -h HOSTNAME -r -f -d | ./pbin.sh\nsnmpbulkwalk -OUneb -v2c -c COMMUNITY HOSTNAME .  | ./pbin.sh  You can use the links provided by these commands within the issue.  If possible please also provide what the OS name should be if it doesn't exist already.", 
            "title": " What information do you need to add a new OS?"
        }, 
        {
            "location": "/Support/FAQ/#what-can-i-do-to-help", 
            "text": "Thanks for asking, sometimes it's not quite so obvious and everyone can contribute something different. So here are some ways you can help LibreNMS improve.   Code. This is a big thing. We want this community to grow by the software developing and evolving to cater for users needs. The biggest area that people can help make this happen is by providing code support. This doesn't necessarily mean contributing code for discovering a new device:  Web UI, a new look and feel has been adopted but we are not finished by any stretch of the imagination. Make suggestions, find and fix bugs, update the design / layout.  Poller / Discovery code. Improving it (we think a lot can be done to speed things up), adding new device support and updating old ones.  The LibreNMS main website, this is hosted on GitHub like the main repo and we accept use contributions here as well :)    Hardware. We don't physically need it but if we are to add device support, it's made a whole lot easier with access to the kit via SNMP.  If you've got MIBs, they are handy as well :)  If you know the vendor and can get permission to use logos that's also great.    Bugs. Found one? We want to know about it. Most bugs are fixed after being spotted and reported by someone, I'd love to say we are amazing developers and will fix all bugs before you spot them but that's just not true.  Feature requests. Can't code / won't code. No worries, chuck a feature request into our  community forum  with enough detail and someone will take a look. A lot of the time this might be what interests someone, they need the same feature or they just have time. Please be patient, everyone who contributes does so in their own time.  Documentation. Documentation can always be improved and every little bit helps. Not all features are currently documented or documented well, there's speeling mistakes etc. It's very easy to submit updates  through the GitHub website , no git experience needed.  Be nice, this is the foundation of this project. We expect everyone to be nice. People will fall out, people will disagree but please do it so in a respectable way.  Ask questions. Sometimes just by asking questions you prompt deeper conversations that can lead us to somewhere amazing so please never be afraid to ask a question.", 
            "title": " What can I do to help?"
        }, 
        {
            "location": "/Support/FAQ/#how-can-i-test-another-users-branch", 
            "text": "LibreNMS can and is developed by anyone, this means someone may be working on a new feature or support for a device that you want.\nIt can be helpful for others to test these new features, using Git, this is made easy.  cd /opt/librenms  Firstly ensure that your current branch is in good state:  git status  If you see  nothing to commit, working directory clean  then let's go for it :)  Let's say that you want to test a users (f0o) new development branch (issue-1337) then you can do the following:  git remote add f0o https://github.com/f0o/librenms.git\ngit remote update f0o\ngit checkout issue-1337  Once you are done testing, you can easily switch back to the master branch:  git checkout master  If you want to pull any new updates provided by f0o's branch then whilst you are still in it, do the following:  git pull f0o issue-1337", 
            "title": " How can I test another users branch?"
        }, 
        {
            "location": "/Support/FAQ/#why-cant-normal-and-global-view-users-see-oxidized", 
            "text": "Configs can often contain sensitive data. Because of that only global admins can see configs.", 
            "title": " Why can't Normal and Global View users see Oxidized?"
        }, 
        {
            "location": "/Support/FAQ/#what-is-the-demo-user-for", 
            "text": "Demo users allow full access except adding/editing users and deleting devices and can't change passwords.", 
            "title": " What is the Demo User for?"
        }, 
        {
            "location": "/Support/FAQ/#why-does-modifying-default-alert-template-fail", 
            "text": "This template's entry could be missing in the database. Please run:  mysql -u librenms -p   sql-schema/202.sql", 
            "title": " Why does modifying 'Default Alert Template' fail?"
        }, 
        {
            "location": "/Support/FAQ/#why-would-alert-un-mute-itself", 
            "text": "If alert un-mutes itself then it most likely means that the alert cleared and is then triggered again.\nPlease review eventlog as it will tell you in there.", 
            "title": " Why would alert un-mute itself?"
        }, 
        {
            "location": "/Support/Install Validation/", 
            "text": "Install validation\n\n\nWith a lot of configuration possibilities, manually editing config.php means it's not\nuncommon that mistakes get made. It's also impossible to validate user input in config.php when you're just using a text editor :)\n\n\nSo, to try and help with some of the general issues people come across we've put together a simple validation tool which at present will:\n\n\n\n\nValidate config.php from a php perspective including whitespace where it shouldn't be.\n\n\nConnection to your MySQL server to verify credentials.\n\n\nChecks if you are running the older alerting system.\n\n\nChecks your rrd directory setup if not running rrdcached.\n\n\nChecks disk space for where /opt/librenms is installed.\n\n\nChecks location to fping\n\n\nTests MySQL strict mode being enabled\n\n\nTests for files not owned by librenms user (if configured)\n\n\n\n\nOptionally you can also pass -m and a module name for that to be tested. Current modules are:\n\n\n\n\nmail - This will validate your mail transport configuration.\n\n\ndist-poller - This will test your distributed poller configuration.\n\n\nrrdcheck - This will test your rrd files to see if they are unreadable or corrupted (source of broken graphs).\n\n\n\n\nYou can run validate.php as \nroot\n by executing \n./validate.php\n within your install directory.\n\n\nThe output will provide you either a clean bill of health or a list of things you need to fix:\n\n\nOK\n - This is a good thing, you can skip over these :)\n\n\nWARN\n - You probably want to check this out.\n\n\nFAIL\n - This is going to need your attention!\n\n\nValidate from the WebUI\n\n\nYou can validate your LibreNMS install from the WebUI, using the nav bar and clicking on the little Gear Icon -\n Validate Config.\n\n\nThen You should see the results of validate. \nBelow is just example of the results.", 
            "title": "Install validation"
        }, 
        {
            "location": "/Support/Install Validation/#install-validation", 
            "text": "With a lot of configuration possibilities, manually editing config.php means it's not\nuncommon that mistakes get made. It's also impossible to validate user input in config.php when you're just using a text editor :)  So, to try and help with some of the general issues people come across we've put together a simple validation tool which at present will:   Validate config.php from a php perspective including whitespace where it shouldn't be.  Connection to your MySQL server to verify credentials.  Checks if you are running the older alerting system.  Checks your rrd directory setup if not running rrdcached.  Checks disk space for where /opt/librenms is installed.  Checks location to fping  Tests MySQL strict mode being enabled  Tests for files not owned by librenms user (if configured)   Optionally you can also pass -m and a module name for that to be tested. Current modules are:   mail - This will validate your mail transport configuration.  dist-poller - This will test your distributed poller configuration.  rrdcheck - This will test your rrd files to see if they are unreadable or corrupted (source of broken graphs).   You can run validate.php as  root  by executing  ./validate.php  within your install directory.  The output will provide you either a clean bill of health or a list of things you need to fix:  OK  - This is a good thing, you can skip over these :)  WARN  - You probably want to check this out.  FAIL  - This is going to need your attention!", 
            "title": "Install validation"
        }, 
        {
            "location": "/Support/Install Validation/#validate-from-the-webui", 
            "text": "You can validate your LibreNMS install from the WebUI, using the nav bar and clicking on the little Gear Icon -  Validate Config. \nThen You should see the results of validate. \nBelow is just example of the results.", 
            "title": "Validate from the WebUI"
        }, 
        {
            "location": "/Support/Performance/", 
            "text": "Performance optimisations\n\n\nThis document will give you some guidance on optimising your setup.\n\n\nThe suggestions are in a rough order of how much impact they will have.\n\n\nRRDCached\n\n\nWe absolutely recommend running this, it will save on IO load\n. \nRRDCached\n\n\nMySQL Optimisation\n\n\nIt's advisable after 24 hours of running MySQL that you run \nMySQL Tuner\n\nwhich will make suggestions on things you can change specific to your setup.\n\n\nOne recommendation we can make is that you set the following in my.cnf under a [mysqld] group: \n\n\ninnodb_flush_log_at_trx_commit = 0\n\n\n\n\nYou can also set this to 2. This will have the possibility that you could lose up to 1 second on mysql data in the event\nMySQL crashes or your server does but it provides an amazing difference in IO use.\n\n\nPolling modules\n\n\nDisable polling (and discovery) modules that you do not need. You can do this globally in \nconfig.php\n like:\n\n\nDisable OSPF polling\n\n\n$config['poller_modules']['ospf'] = 0;\n\n\n\n\nYou can disable modules globally then re-enable the module per device or the opposite way. For a list of modules please see\n\nPoller modules\n\n\nSNMP Max Repeaters\n\n\nWe have support for SNMP Max repeaters which can be handy on devices where we poll a lot of ports or bgp sessions for instance and \nwhere snmpwalk or snmpbulkwalk is used. This needs to be enabled on a per device basis under edit device -\n snmp -\n Max repeaters.\n\n\nYou can also set this globally with the config option \n$config['snmp']['max_repeaters'] = X;\n.\n\n\nIt's advisable to test the time taken to snmpwalk IF-MIB or something similar to work out what the best value is. To do this run the following \nbut replace \n with varying numbers from 10 upto around 50. You will also need to set the correct snmp version, hostname and community string:\n\n\ntime snmpbulkwalk -v2c -cpublic HOSTNAME -Cr\nREPEATERS\n -M /opt/librenms/mibs -m IF-MIB IfEntry\n\n\n\n\nNOTE: Do not go blindly setting this value as you can impact polling negatively.\n\n\n\n\nSNMP Max OIDs\n\n\nFor sensors polling we now do bulk snmp gets to speed things up. By default this is ten but you can overwrite this per device under \nedit device -\n snmp -\n Max OIDs.\n\n\nYou can also set this globally with the config option \n$config['snmp']['max_oid'] = X;\n.\n\n\n\n\nNOTE: It is advisable to monitor sensor polling when you change this to ensure you don't set the value too high.\n\n\n\n\nfping tuning\n\n\nYou can change some of the default fping options used globally or per device. The defaults are:\n\n\n$config['fping_options']['timeout'] = 500;\n$config['fping_options']['count']   = 3;\n$config['fping_options']['interval'] = 500;\n\n\n\n\nIf your devices are slow to respond then you will need to increase the timeout value and potentially the interval value.\nHowever if your network is stable, you can increase poller performance by dropping the count value to 1 and/or the timeout+millsec value to 200 or 300:\n\n\n$config['fping_options']['timeout'] = 300;\n$config['fping_options']['count']   = 1;\n$config['fping_options']['interval'] = 300;\n\n\n\n\nThis will mean that we no longer delay each icmp packet sent (we send 3 in total by default) by 0.5 seconds. With only 1 icmp packet\nbeing sent then we will receive a response quicker. The defaults mean it will take at least 1 second for a response no matter how \nquick the icmp packet is returned.\n\n\nOptimise poller-wrapper\n\n\nThe default 16 threads that \npoller-wrapper.py\n runs as isn't necessarily the optimal number. A general rule of thumb is \n2 threads per core but we suggest that you play around with lowering / increasing the number until you get the optimal value.\n\nNote\n KEEP in MIND that this doesn't always help, it depends on your system and CPU. So be careful. \nThis can be changed by going to the cron job for librenms. Usually in \n/etc/cron.d/librenms\n and changing the \"16\"\n\n\n*/5  *    * * *   librenms    /opt/librenms/cronic /opt/librenms/poller-wrapper.py 16\n\n\n\n\nRecursive DNS\n\n\nIf your install uses hostnames for devices and you have quite a lot then it's advisable to setup a local recursive dns instance on the \nLibreNMS server. Something like pdns-recursor can be used and then configure \n/etc/resolv.conf\n to use 127.0.0.1 for queries.\n\n\nPer port polling - experimental\n\n\nBy default the polling ports module will walk ifXEntry + some items from ifEntry regardless of the port. So if a port is marked as deleted because you don't want to see them \nor it's disabled then we still collect data. For the most part this is fine as the walks are quite quick. However for devices with a lot of ports and good % of those are \neither deleted or disabled then this approach isn't optimal. So to counter this you can enable 'selected port polling' per device within the edit device -\n misc section or by\nglobally enabling it (\nnot recommended\n): \n$config['polling']['selected_ports'] = true;\n. You can also set it for a specific OS: \n$config['os']['ios']['polling']['selected_ports'] = true;\n. \n\n\nRunning \n./scripts/collect-port-polling.php\n will poll your devices with both full and selective polling, display a table with the difference and optionally enable or disable selected ports polling for devices which would benefit from a change.\nNote that it doesn't continously re-evaluate this, it will only be updated when the script is run. There are a number of options:\n\n\n-h \ndevice id\n | \ndevice hostname wildcard\n  Poll single device or wildcard hostname\n-e \npercentage\n                              Enable/disable selected ports polling for devices which would benefit \npercentage\n from a change\n\n\n\n\nWeb interface\n\n\nHTTP/2\n\n\nIf you are running https then you should enable http/2 support in whatever web server you use:\n\n\nFor Nginx (1.9.5 and above) change \nlisten 443 ssl;\n to \nlisten 443 ssl http2;\n in the Virtualhost config.\n\n\nFor Apache (2.4.17 an above) set \nProtocols h2 http/1.1\n in the Virtualhost config.", 
            "title": "Performance optimisations"
        }, 
        {
            "location": "/Support/Performance/#performance-optimisations", 
            "text": "This document will give you some guidance on optimising your setup.  The suggestions are in a rough order of how much impact they will have.", 
            "title": "Performance optimisations"
        }, 
        {
            "location": "/Support/Performance/#rrdcached", 
            "text": "We absolutely recommend running this, it will save on IO load .  RRDCached", 
            "title": "RRDCached"
        }, 
        {
            "location": "/Support/Performance/#mysql-optimisation", 
            "text": "It's advisable after 24 hours of running MySQL that you run  MySQL Tuner \nwhich will make suggestions on things you can change specific to your setup.  One recommendation we can make is that you set the following in my.cnf under a [mysqld] group:   innodb_flush_log_at_trx_commit = 0  You can also set this to 2. This will have the possibility that you could lose up to 1 second on mysql data in the event\nMySQL crashes or your server does but it provides an amazing difference in IO use.", 
            "title": "MySQL Optimisation"
        }, 
        {
            "location": "/Support/Performance/#polling-modules", 
            "text": "Disable polling (and discovery) modules that you do not need. You can do this globally in  config.php  like:  Disable OSPF polling  $config['poller_modules']['ospf'] = 0;  You can disable modules globally then re-enable the module per device or the opposite way. For a list of modules please see Poller modules", 
            "title": "Polling modules"
        }, 
        {
            "location": "/Support/Performance/#snmp-max-repeaters", 
            "text": "We have support for SNMP Max repeaters which can be handy on devices where we poll a lot of ports or bgp sessions for instance and \nwhere snmpwalk or snmpbulkwalk is used. This needs to be enabled on a per device basis under edit device -  snmp -  Max repeaters.  You can also set this globally with the config option  $config['snmp']['max_repeaters'] = X; .  It's advisable to test the time taken to snmpwalk IF-MIB or something similar to work out what the best value is. To do this run the following \nbut replace   with varying numbers from 10 upto around 50. You will also need to set the correct snmp version, hostname and community string:  time snmpbulkwalk -v2c -cpublic HOSTNAME -Cr REPEATERS  -M /opt/librenms/mibs -m IF-MIB IfEntry   NOTE: Do not go blindly setting this value as you can impact polling negatively.", 
            "title": "SNMP Max Repeaters"
        }, 
        {
            "location": "/Support/Performance/#snmp-max-oids", 
            "text": "For sensors polling we now do bulk snmp gets to speed things up. By default this is ten but you can overwrite this per device under \nedit device -  snmp -  Max OIDs.  You can also set this globally with the config option  $config['snmp']['max_oid'] = X; .   NOTE: It is advisable to monitor sensor polling when you change this to ensure you don't set the value too high.", 
            "title": "SNMP Max OIDs"
        }, 
        {
            "location": "/Support/Performance/#fping-tuning", 
            "text": "You can change some of the default fping options used globally or per device. The defaults are:  $config['fping_options']['timeout'] = 500;\n$config['fping_options']['count']   = 3;\n$config['fping_options']['interval'] = 500;  If your devices are slow to respond then you will need to increase the timeout value and potentially the interval value.\nHowever if your network is stable, you can increase poller performance by dropping the count value to 1 and/or the timeout+millsec value to 200 or 300:  $config['fping_options']['timeout'] = 300;\n$config['fping_options']['count']   = 1;\n$config['fping_options']['interval'] = 300;  This will mean that we no longer delay each icmp packet sent (we send 3 in total by default) by 0.5 seconds. With only 1 icmp packet\nbeing sent then we will receive a response quicker. The defaults mean it will take at least 1 second for a response no matter how \nquick the icmp packet is returned.", 
            "title": "fping tuning"
        }, 
        {
            "location": "/Support/Performance/#optimise-poller-wrapper", 
            "text": "The default 16 threads that  poller-wrapper.py  runs as isn't necessarily the optimal number. A general rule of thumb is \n2 threads per core but we suggest that you play around with lowering / increasing the number until you get the optimal value. Note  KEEP in MIND that this doesn't always help, it depends on your system and CPU. So be careful. \nThis can be changed by going to the cron job for librenms. Usually in  /etc/cron.d/librenms  and changing the \"16\"  */5  *    * * *   librenms    /opt/librenms/cronic /opt/librenms/poller-wrapper.py 16", 
            "title": "Optimise poller-wrapper"
        }, 
        {
            "location": "/Support/Performance/#recursive-dns", 
            "text": "If your install uses hostnames for devices and you have quite a lot then it's advisable to setup a local recursive dns instance on the \nLibreNMS server. Something like pdns-recursor can be used and then configure  /etc/resolv.conf  to use 127.0.0.1 for queries.", 
            "title": "Recursive DNS"
        }, 
        {
            "location": "/Support/Performance/#per-port-polling-experimental", 
            "text": "By default the polling ports module will walk ifXEntry + some items from ifEntry regardless of the port. So if a port is marked as deleted because you don't want to see them \nor it's disabled then we still collect data. For the most part this is fine as the walks are quite quick. However for devices with a lot of ports and good % of those are \neither deleted or disabled then this approach isn't optimal. So to counter this you can enable 'selected port polling' per device within the edit device -  misc section or by\nglobally enabling it ( not recommended ):  $config['polling']['selected_ports'] = true; . You can also set it for a specific OS:  $config['os']['ios']['polling']['selected_ports'] = true; .   Running  ./scripts/collect-port-polling.php  will poll your devices with both full and selective polling, display a table with the difference and optionally enable or disable selected ports polling for devices which would benefit from a change.\nNote that it doesn't continously re-evaluate this, it will only be updated when the script is run. There are a number of options:  -h  device id  |  device hostname wildcard   Poll single device or wildcard hostname\n-e  percentage                               Enable/disable selected ports polling for devices which would benefit  percentage  from a change", 
            "title": "Per port polling - experimental"
        }, 
        {
            "location": "/Support/Performance/#web-interface", 
            "text": "", 
            "title": "Web interface"
        }, 
        {
            "location": "/Support/Performance/#http2", 
            "text": "If you are running https then you should enable http/2 support in whatever web server you use:  For Nginx (1.9.5 and above) change  listen 443 ssl;  to  listen 443 ssl http2;  in the Virtualhost config.  For Apache (2.4.17 an above) set  Protocols h2 http/1.1  in the Virtualhost config.", 
            "title": "HTTP/2"
        }, 
        {
            "location": "/Support/Discovery Support/", 
            "text": "discovery.php\n\n\nThis document will explain how to use discovery.php to debug issues or manually running to process data.\n\n\nCommand options\n\n\n-h \ndevice id\n | \ndevice hostname wildcard\n  Poll single device\n-h odd                                       Poll odd numbered devices  (same as -i 2 -n 0)\n-h even                                      Poll even numbered devices (same as -i 2 -n 1)\n-h all                                       Poll all devices\n-h new                                       Poll all devices that have not had a discovery run before\n--os \nos_name\n                               Poll devices only with specified operating system\n--type \ntype\n                                Poll devices only with specified type\n-i \ninstances\n -n \nnumber\n                   Poll as instance \nnumber\n of \ninstances\n\n                                             Instances start at 0. 0-3 for -n 4\n\nDebugging and testing options:\n-d                                           Enable debugging output\n-v                                           Enable verbose debugging output\n-m                                           Specify single module to be run\n\n\n\n\n\n\n-h\n Use this to specify a device via either id or hostname (including wildcard using *). You can also specify odd and\neven. all will run discovery against all devices whilst\nnew will poll only those devices that have recently been added or have been selected for rediscovery.\n\n\n-i\n This can be used to stagger the discovery process.\n\n\n-d\n Enables debugging output (verbose output but with most sensitive data masked) so that you can see what is happening during a discovery run. This includes things like rrd updates, SQL queries and response from snmp.\n\n\n-v\n Enables verbose debugging output with all data in tact.\n\n\n-m\n This enables you to specify the module you want to run for discovery.\n\n\nDiscovery wrapper\n\n\nWe have a \ndiscovery-wrapper.py\n script which is based on \npoller-wrapper.py\n by \nJob Snijders\n. This script is currently the default.\n\n\nIf you want to switch back to discovery.php then you can replace:\n\n\n33  */6   * * *   librenms    /opt/librenms/discovery-wrapper.py 1 \n /dev/null 2\n1\n\n\nWith:\n\n\n33  */6   * * *   librenms    /opt/librenms/discovery.php -h all \n /dev/null 2\n1\n\n\nDiscovery config\n\n\nThese are the default discovery config items. You can globally disable a module by setting it to 0. If you just want to\ndisable it for one device then you can do this within the WebUI -\n Device -\n Settings -\n Modules.\n\n\n$config['discovery_modules']['os']                   = 1;\n$config['discovery_modules']['ports']                = 1;\n$config['discovery_modules']['ports-stack']          = 1;\n$config['discovery_modules']['entity-physical']      = 1;\n$config['discovery_modules']['entity-state']         = 0;\n$config['discovery_modules']['processors']           = 1;\n$config['discovery_modules']['mempools']             = 1;\n$config['discovery_modules']['cisco-vrf-lite']       = 1;\n$config['discovery_modules']['cisco-mac-accounting'] = 0;\n$config['discovery_modules']['cisco-pw']             = 0;\n$config['discovery_modules']['vrf']                  = 0;\n$config['discovery_modules']['cisco-cef']            = 0;\n$config['discovery_modules']['cisco-sla']            = 0;\n$config['discovery_modules']['cisco-cbqos']          = 0;\n$config['discovery_modules']['cisco-otv']            = 0;\n$config['discovery_modules']['ipv4-addresses']       = 1;\n$config['discovery_modules']['ipv6-addresses']       = 1;\n$config['discovery_modules']['route']                = 0;\n$config['discovery_modules']['sensors']              = 1;\n$config['discovery_modules']['storage']              = 1;\n$config['discovery_modules']['hr-device']            = 1;\n$config['discovery_modules']['discovery-protocols']  = 1;\n$config['discovery_modules']['arp-table']            = 1;\n$config['discovery_modules']['discovery-arp']        = 0;\n$config['discovery_modules']['junose-atm-vp']        = 0;\n$config['discovery_modules']['bgp-peers']            = 1;\n$config['discovery_modules']['vlans']                = 1;\n$config['discovery_modules']['vmware-vminfo']        = 0;\n$config['discovery_modules']['libvirt-vminfo']       = 0;\n$config['discovery_modules']['toner']                = 0;\n$config['discovery_modules']['ucd-diskio']           = 1;\n$config['discovery_modules']['applications']         = 0;\n$config['discovery_modules']['services']             = 1;\n$config['discovery_modules']['stp']                  = 1;\n$config['discovery_modules']['ntp']                  = 1;\n$config['discovery_modules']['loadbalancers']        = 0;\n$config['discovery_modules']['mef']                  = 0;\n$config['discovery_modules']['wireless']             = 1;\n$config['discovery_modules']['fdb-table']            = 1;\n\n\n\n\nOS based Discovery config\n\n\nYou can enable or disable modules for a specific OS by add corresponding line in \nconfig.php\n\nOS based settings have preference over global. Device based settings have preference over all others\n\n\nDiscover performance improvement can be achieved by deactivating all modules that are not supported by specific OS.\n\n\nE.g. to deactivate spanning tree but activate discovery-arp module for linux OS\n\n\n$config['os']['linux']['discovery_modules']['stp'] = 0;\n$config['os']['linux']['discovery_modules']['discovery-arp'] = 1;\n\n\n\n\nDiscovery modules\n\n\nos\n: Os detection. This module will pick up the OS of the device.\n\n\nports\n: This module will detect all ports on a device excluding ones configured to be ignored by config options.\n\n\nports-stack\n: Same as ports except for stacks.\n\n\nentity-physical\n: Module to pick up the devices hardware support.\n\n\nprocessors\n: Processor support for devices.\n\n\nmempools\n: Memory detection support for devices.\n\n\ncisco-vrf-lite\n: VRF-Lite detection and support.\n\n\nipv4-addresses\n: IPv4 Address detection\n\n\nipv6-addresses\n: IPv6 Address detection\n\n\nroute\n: Route detection\n\n\nsensors\n: Sensor detection such as Temperature, Humidity, Voltages + More\n\n\nstorage\n: Storage detection for hard disks\n\n\nhr-device\n: Processor and Memory support via HOST-RESOURCES-MIB.\n\n\ndiscovery-protocols\n: Auto discovery module for xDP, OSPF and BGP.\n\n\narp-table\n: Detection of the ARP table for the device.\n\n\ndiscovery-arp\n: Auto discovery via ARP.\n\n\njunose-atm-vp\n: Juniper ATM support.\n\n\nbgp-peers\n: BGP detection and support.\n\n\nvlans\n: VLAN detection and support.\n\n\ncisco-mac-accounting\n: MAC Address account support.\n\n\ncisco-pw\n: Pseudowires wires detection and support.\n\n\nvrf\n: VRF detection and support.\n\n\ncisco-cef\n: CEF detection and support.\n\n\ncisco-sla\n: SLA detection and support.\n\n\nvmware-vminfo\n: Detection of vmware guests on an ESXi host\n\n\nlibvirt-vminfo\n: Detection of libvirt guests.\n\n\ntoner\n: Toner levels support.\n\n\nucd-diskio\n: Disk I/O support.\n\n\nservices\n: *Nix services support.\n\n\ncharge\n: APC Charge detection and support.\n\n\nRunning\n\n\nHere are some examples of running discovery from within your install directory.\n\n\n./discovery.php -h localhost\n\n./discovery.php -h localhost -m ports\n\n\n\n\nDebugging\n\n\nTo provide debugging output you will need to run the discovery process with the \n-d\n flag. You can do this either against\nall modules, single or multiple modules:\n\n\nAll Modules\n\n\n./discovery.php -h localhost -d\n\n\n\n\nSingle Module\n\n\n./discovery.php -h localhost -m ports -d\n\n\n\n\nMultiple Modules\n\n\n./discovery.php -h localhost -m ports,entity-physical -d\n\n\n\n\nUsing \n-d\n shouldn't output much sensitive information, \n-v\n will so it is then advisable to sanitise the output before pasting it somewhere as the debug output will contain snmp details amongst other items including port descriptions.\n\n\nThe output will contain:\n\n\nDB Updates\n\n\nSNMP Response", 
            "title": "Discovery Support"
        }, 
        {
            "location": "/Support/Discovery Support/#discoveryphp", 
            "text": "This document will explain how to use discovery.php to debug issues or manually running to process data.", 
            "title": "discovery.php"
        }, 
        {
            "location": "/Support/Discovery Support/#command-options", 
            "text": "-h  device id  |  device hostname wildcard   Poll single device\n-h odd                                       Poll odd numbered devices  (same as -i 2 -n 0)\n-h even                                      Poll even numbered devices (same as -i 2 -n 1)\n-h all                                       Poll all devices\n-h new                                       Poll all devices that have not had a discovery run before\n--os  os_name                                Poll devices only with specified operating system\n--type  type                                 Poll devices only with specified type\n-i  instances  -n  number                    Poll as instance  number  of  instances \n                                             Instances start at 0. 0-3 for -n 4\n\nDebugging and testing options:\n-d                                           Enable debugging output\n-v                                           Enable verbose debugging output\n-m                                           Specify single module to be run  -h  Use this to specify a device via either id or hostname (including wildcard using *). You can also specify odd and\neven. all will run discovery against all devices whilst\nnew will poll only those devices that have recently been added or have been selected for rediscovery.  -i  This can be used to stagger the discovery process.  -d  Enables debugging output (verbose output but with most sensitive data masked) so that you can see what is happening during a discovery run. This includes things like rrd updates, SQL queries and response from snmp.  -v  Enables verbose debugging output with all data in tact.  -m  This enables you to specify the module you want to run for discovery.", 
            "title": "Command options"
        }, 
        {
            "location": "/Support/Discovery Support/#discovery-wrapper", 
            "text": "We have a  discovery-wrapper.py  script which is based on  poller-wrapper.py  by  Job Snijders . This script is currently the default.  If you want to switch back to discovery.php then you can replace:  33  */6   * * *   librenms    /opt/librenms/discovery-wrapper.py 1   /dev/null 2 1  With:  33  */6   * * *   librenms    /opt/librenms/discovery.php -h all   /dev/null 2 1", 
            "title": "Discovery wrapper"
        }, 
        {
            "location": "/Support/Discovery Support/#discovery-config", 
            "text": "These are the default discovery config items. You can globally disable a module by setting it to 0. If you just want to\ndisable it for one device then you can do this within the WebUI -  Device -  Settings -  Modules.  $config['discovery_modules']['os']                   = 1;\n$config['discovery_modules']['ports']                = 1;\n$config['discovery_modules']['ports-stack']          = 1;\n$config['discovery_modules']['entity-physical']      = 1;\n$config['discovery_modules']['entity-state']         = 0;\n$config['discovery_modules']['processors']           = 1;\n$config['discovery_modules']['mempools']             = 1;\n$config['discovery_modules']['cisco-vrf-lite']       = 1;\n$config['discovery_modules']['cisco-mac-accounting'] = 0;\n$config['discovery_modules']['cisco-pw']             = 0;\n$config['discovery_modules']['vrf']                  = 0;\n$config['discovery_modules']['cisco-cef']            = 0;\n$config['discovery_modules']['cisco-sla']            = 0;\n$config['discovery_modules']['cisco-cbqos']          = 0;\n$config['discovery_modules']['cisco-otv']            = 0;\n$config['discovery_modules']['ipv4-addresses']       = 1;\n$config['discovery_modules']['ipv6-addresses']       = 1;\n$config['discovery_modules']['route']                = 0;\n$config['discovery_modules']['sensors']              = 1;\n$config['discovery_modules']['storage']              = 1;\n$config['discovery_modules']['hr-device']            = 1;\n$config['discovery_modules']['discovery-protocols']  = 1;\n$config['discovery_modules']['arp-table']            = 1;\n$config['discovery_modules']['discovery-arp']        = 0;\n$config['discovery_modules']['junose-atm-vp']        = 0;\n$config['discovery_modules']['bgp-peers']            = 1;\n$config['discovery_modules']['vlans']                = 1;\n$config['discovery_modules']['vmware-vminfo']        = 0;\n$config['discovery_modules']['libvirt-vminfo']       = 0;\n$config['discovery_modules']['toner']                = 0;\n$config['discovery_modules']['ucd-diskio']           = 1;\n$config['discovery_modules']['applications']         = 0;\n$config['discovery_modules']['services']             = 1;\n$config['discovery_modules']['stp']                  = 1;\n$config['discovery_modules']['ntp']                  = 1;\n$config['discovery_modules']['loadbalancers']        = 0;\n$config['discovery_modules']['mef']                  = 0;\n$config['discovery_modules']['wireless']             = 1;\n$config['discovery_modules']['fdb-table']            = 1;", 
            "title": "Discovery config"
        }, 
        {
            "location": "/Support/Discovery Support/#os-based-discovery-config", 
            "text": "You can enable or disable modules for a specific OS by add corresponding line in  config.php \nOS based settings have preference over global. Device based settings have preference over all others  Discover performance improvement can be achieved by deactivating all modules that are not supported by specific OS.  E.g. to deactivate spanning tree but activate discovery-arp module for linux OS  $config['os']['linux']['discovery_modules']['stp'] = 0;\n$config['os']['linux']['discovery_modules']['discovery-arp'] = 1;", 
            "title": "OS based Discovery config"
        }, 
        {
            "location": "/Support/Discovery Support/#discovery-modules", 
            "text": "os : Os detection. This module will pick up the OS of the device.  ports : This module will detect all ports on a device excluding ones configured to be ignored by config options.  ports-stack : Same as ports except for stacks.  entity-physical : Module to pick up the devices hardware support.  processors : Processor support for devices.  mempools : Memory detection support for devices.  cisco-vrf-lite : VRF-Lite detection and support.  ipv4-addresses : IPv4 Address detection  ipv6-addresses : IPv6 Address detection  route : Route detection  sensors : Sensor detection such as Temperature, Humidity, Voltages + More  storage : Storage detection for hard disks  hr-device : Processor and Memory support via HOST-RESOURCES-MIB.  discovery-protocols : Auto discovery module for xDP, OSPF and BGP.  arp-table : Detection of the ARP table for the device.  discovery-arp : Auto discovery via ARP.  junose-atm-vp : Juniper ATM support.  bgp-peers : BGP detection and support.  vlans : VLAN detection and support.  cisco-mac-accounting : MAC Address account support.  cisco-pw : Pseudowires wires detection and support.  vrf : VRF detection and support.  cisco-cef : CEF detection and support.  cisco-sla : SLA detection and support.  vmware-vminfo : Detection of vmware guests on an ESXi host  libvirt-vminfo : Detection of libvirt guests.  toner : Toner levels support.  ucd-diskio : Disk I/O support.  services : *Nix services support.  charge : APC Charge detection and support.", 
            "title": "Discovery modules"
        }, 
        {
            "location": "/Support/Discovery Support/#running", 
            "text": "Here are some examples of running discovery from within your install directory.  ./discovery.php -h localhost\n\n./discovery.php -h localhost -m ports", 
            "title": "Running"
        }, 
        {
            "location": "/Support/Discovery Support/#debugging", 
            "text": "To provide debugging output you will need to run the discovery process with the  -d  flag. You can do this either against\nall modules, single or multiple modules:  All Modules  ./discovery.php -h localhost -d  Single Module  ./discovery.php -h localhost -m ports -d  Multiple Modules  ./discovery.php -h localhost -m ports,entity-physical -d  Using  -d  shouldn't output much sensitive information,  -v  will so it is then advisable to sanitise the output before pasting it somewhere as the debug output will contain snmp details amongst other items including port descriptions.  The output will contain:  DB Updates  SNMP Response", 
            "title": "Debugging"
        }, 
        {
            "location": "/Support/Poller Support/", 
            "text": "poller.php\n\n\nThis document will explain how to use poller.php to debug issues or manually running to process data.\n\n\nCommand options\n\n\n    LibreNMS 2014.master Poller\n\n-h \ndevice id\n | \ndevice hostname wildcard\n  Poll single device\n-h odd                                       Poll odd numbered devices  (same as -i 2 -n 0)\n-h even                                      Poll even numbered devices (same as -i 2 -n 1)\n-h all                                       Poll all devices\n\n-i \ninstances\n -n \nnumber\n                   Poll as instance \nnumber\n of \ninstances\n\n                                             Instances start at 0. 0-3 for -n 4\n\nDebugging and testing options:\n-r                                           Do not create or update RRDs\n-f                                           Do not insert data into InfluxDB\n-d                                           Enable debugging output\n-v                                           Enable verbose debugging output\n-m                                           Specify module(s) to be run\n\n\n\n\n-h\n Use this to specify a device via either id or hostname (including wildcard using *). You can also specify odd and\neven. all will run poller against all devices.\n\n\n-i\n This can be used to stagger the poller process.\n\n\n-r\n This option will suppress the creation or update of RRD files.\n\n\n-d\n Enables debugging output (verbose output but with most sensitive data masked) so that you can see what is happening during a poller run. This includes things like rrd updates, SQL queries and response from snmp.\n\n\n-v\n Enables verbose debugging output with all data in tact.\n\n\n-m\n This enables you to specify the module you want to run for poller.\n\n\nPoller config\n\n\nThese are the default poller config items. You can globally disable a module by setting it to 0. If you just want to\ndisable it for one device then you can do this within the WebUI -\n Settings -\n Modules.\n\n\n$config['poller_modules']['unix-agent']                  = 0;\n$config['poller_modules']['os']                          = 1;\n$config['poller_modules']['ipmi']                        = 1;\n$config['poller_modules']['sensors']                     = 1;\n$config['poller_modules']['processors']                  = 1;\n$config['poller_modules']['mempools']                    = 1;\n$config['poller_modules']['storage']                     = 1;\n$config['poller_modules']['netstats']                    = 1;\n$config['poller_modules']['hr-mib']                      = 1;\n$config['poller_modules']['ucd-mib']                     = 1;\n$config['poller_modules']['ipSystemStats']               = 1;\n$config['poller_modules']['ports']                       = 1;\n$config['poller_modules']['bgp-peers']                   = 1;\n$config['poller_modules']['junose-atm-vp']               = 0;\n$config['poller_modules']['toner']                       = 0;\n$config['poller_modules']['ucd-diskio']                  = 1;\n$config['poller_modules']['wireless']                    = 1;\n$config['poller_modules']['ospf']                        = 1;\n$config['poller_modules']['cisco-ipsec-flow-monitor']    = 0;\n$config['poller_modules']['cisco-remote-access-monitor'] = 0;\n$config['poller_modules']['cisco-cef']                   = 0;\n$config['poller_modules']['cisco-sla']                   = 0;\n$config['poller_modules']['cisco-mac-accounting']        = 0;\n$config['poller_modules']['cipsec-tunnels']              = 0;\n$config['poller_modules']['cisco-ace-loadbalancer']      = 0;\n$config['poller_modules']['cisco-ace-serverfarms']       = 0;\n$config['poller_modules']['cisco-asa-firewall']          = 0;\n$config['poller_modules']['cisco-voice']                 = 0;\n$config['poller_modules']['cisco-cbqos']                 = 0;\n$config['poller_modules']['cisco-otv']                   = 0;\n$config['poller_modules']['cisco-vpdn']                  = 0;\n$config['poller_modules']['netscaler-vsvr']              = 0;\n$config['poller_modules']['aruba-controller']            = 0;\n$config['poller_modules']['entity-physical']             = 1;\n$config['poller_modules']['entity-state']                = 0;\n$config['poller_modules']['applications']                = 1;\n$config['poller_modules']['mib']                         = 0;\n$config['poller_modules']['stp']                         = 1;\n$config['poller_modules']['ntp']                         = 1;\n$config['poller_modules']['services']                    = 1;\n$config['poller_modules']['loadbalancers']               = 0;\n$config['poller_modules']['mef']                         = 0;\n\n\n\n\nOS based Poller config\n\n\nYou can enable or disable modules for a specific OS by add corresponding line in \nconfig.php\n\nOS based settings have preference over global. Device based settings have preference over all others\n\n\nPoller performance improvement can be achieved by deactivating all modules that are not supported by specific OS.\n\n\nE.g. to deactivate spanning tree but activate unix-agent module for linux OS\n\n\n$config['os']['linux']['poller_modules']['stp']  = 0;\n$config['os']['linux']['poller_modules']['unix-agent'] = 1;\n\n\n\n\nPoller modules\n\n\nunix-agent\n: Enable the check_mk agent for external support for applications.\n\n\nsystem\n: Provides information on some common items like uptime, sysDescr and sysContact.\n\n\nos\n: Os detection. This module will pick up the OS of the device.\n\n\nipmi\n: Enables support for IPMI if login details have been provided for IPMI.\n\n\nsensors\n: Sensor detection such as Temperature, Humidity, Voltages + More.\n\n\nprocessors\n: Processor support for devices.\n\n\nmempools\n: Memory detection support for devices.\n\n\nstorage\n: Storage detection for hard disks\n\n\nnetstats\n: Statistics for IP, TCP, UDP, ICMP and SNMP.\n\n\nhr-mib\n: Host resource support.\n\n\nucd-mib\n: Support for CPU, Memory and Load.\n\n\nipSystemStats\n: IP statistics for device.\n\n\nports\n: This module will detect all ports on a device excluding ones configured to be ignored by config options.\n\n\nbgp-peers\n: BGP detection and support.\n\n\njunose-atm-vp\n: Juniper ATM support.\n\n\ntoner\n: Toner levels support.\n\n\nucd-diskio\n: Disk I/O support.\n\n\nwifi\n: WiFi Support for those devices with support.\n\n\nospf\n: OSPF Support.\n\n\ncisco-ipsec-flow-monitor\n: IPSec statistics support.\n\n\ncisco-remote-access-monitor\n: Cisco remote access support.\n\n\ncisco-cef\n: CEF detection and support.\n\n\ncisco-sla\n: SLA detection and support.\n\n\ncisco-mac-accounting\n: MAC Address account support.\n\n\ncipsec-tunnels\n: IPSec tunnel support.\n\n\ncisco-ace-loadbalancer\n: Cisco ACE Support.\n\n\ncisco-ace-serverfarms\n: Cisco ACE Support.\n\n\nnetscaler-vsvr\n: Netscaler support.\n\n\naruba-controller\n: Aruba wireless controller support.\n\n\nentity-physical\n: Module to pick up the devices hardware support.\n\n\napplications\n: Device application support.\n\n\ncisco-asa-firewall\n: Cisco ASA firewall support.\n\n\nmib\n: Support for generic MIB parsing.\n\n\nRunning\n\n\nHere are some examples of running poller from within your install directory.\n\n\n./poller.php -h localhost\n\n./poller.php -h localhost -m ports\n\n\n\n\nDebugging\n\n\nTo provide debugging output you will need to run the poller process with the \n-d\n flag. You can do this either against\nall modules, single or multiple modules:\n\n\nAll Modules\n\n\n./poller.php -h localhost -d\n\n\n\n\nSingle Module\n\n\n./poller.php -h localhost -m ports -d\n\n\n\n\nMultiple Modules\n\n\n./poller.php -h localhost -m ports,entity-physical -d\n\n\n\n\nUsing \n-d\n shouldn't output much sensitive information, \n-v\n will so it is then advisable to sanitise the output before pasting it somewhere as the debug output will contain snmp details amongst other items including port descriptions.\n\n\nThe output will contain:\n\n\nDB Updates\n\n\nRRD Updates\n\n\nSNMP Response", 
            "title": "Poller Support"
        }, 
        {
            "location": "/Support/Poller Support/#pollerphp", 
            "text": "This document will explain how to use poller.php to debug issues or manually running to process data.", 
            "title": "poller.php"
        }, 
        {
            "location": "/Support/Poller Support/#command-options", 
            "text": "LibreNMS 2014.master Poller\n\n-h  device id  |  device hostname wildcard   Poll single device\n-h odd                                       Poll odd numbered devices  (same as -i 2 -n 0)\n-h even                                      Poll even numbered devices (same as -i 2 -n 1)\n-h all                                       Poll all devices\n\n-i  instances  -n  number                    Poll as instance  number  of  instances \n                                             Instances start at 0. 0-3 for -n 4\n\nDebugging and testing options:\n-r                                           Do not create or update RRDs\n-f                                           Do not insert data into InfluxDB\n-d                                           Enable debugging output\n-v                                           Enable verbose debugging output\n-m                                           Specify module(s) to be run  -h  Use this to specify a device via either id or hostname (including wildcard using *). You can also specify odd and\neven. all will run poller against all devices.  -i  This can be used to stagger the poller process.  -r  This option will suppress the creation or update of RRD files.  -d  Enables debugging output (verbose output but with most sensitive data masked) so that you can see what is happening during a poller run. This includes things like rrd updates, SQL queries and response from snmp.  -v  Enables verbose debugging output with all data in tact.  -m  This enables you to specify the module you want to run for poller.", 
            "title": "Command options"
        }, 
        {
            "location": "/Support/Poller Support/#poller-config", 
            "text": "These are the default poller config items. You can globally disable a module by setting it to 0. If you just want to\ndisable it for one device then you can do this within the WebUI -  Settings -  Modules.  $config['poller_modules']['unix-agent']                  = 0;\n$config['poller_modules']['os']                          = 1;\n$config['poller_modules']['ipmi']                        = 1;\n$config['poller_modules']['sensors']                     = 1;\n$config['poller_modules']['processors']                  = 1;\n$config['poller_modules']['mempools']                    = 1;\n$config['poller_modules']['storage']                     = 1;\n$config['poller_modules']['netstats']                    = 1;\n$config['poller_modules']['hr-mib']                      = 1;\n$config['poller_modules']['ucd-mib']                     = 1;\n$config['poller_modules']['ipSystemStats']               = 1;\n$config['poller_modules']['ports']                       = 1;\n$config['poller_modules']['bgp-peers']                   = 1;\n$config['poller_modules']['junose-atm-vp']               = 0;\n$config['poller_modules']['toner']                       = 0;\n$config['poller_modules']['ucd-diskio']                  = 1;\n$config['poller_modules']['wireless']                    = 1;\n$config['poller_modules']['ospf']                        = 1;\n$config['poller_modules']['cisco-ipsec-flow-monitor']    = 0;\n$config['poller_modules']['cisco-remote-access-monitor'] = 0;\n$config['poller_modules']['cisco-cef']                   = 0;\n$config['poller_modules']['cisco-sla']                   = 0;\n$config['poller_modules']['cisco-mac-accounting']        = 0;\n$config['poller_modules']['cipsec-tunnels']              = 0;\n$config['poller_modules']['cisco-ace-loadbalancer']      = 0;\n$config['poller_modules']['cisco-ace-serverfarms']       = 0;\n$config['poller_modules']['cisco-asa-firewall']          = 0;\n$config['poller_modules']['cisco-voice']                 = 0;\n$config['poller_modules']['cisco-cbqos']                 = 0;\n$config['poller_modules']['cisco-otv']                   = 0;\n$config['poller_modules']['cisco-vpdn']                  = 0;\n$config['poller_modules']['netscaler-vsvr']              = 0;\n$config['poller_modules']['aruba-controller']            = 0;\n$config['poller_modules']['entity-physical']             = 1;\n$config['poller_modules']['entity-state']                = 0;\n$config['poller_modules']['applications']                = 1;\n$config['poller_modules']['mib']                         = 0;\n$config['poller_modules']['stp']                         = 1;\n$config['poller_modules']['ntp']                         = 1;\n$config['poller_modules']['services']                    = 1;\n$config['poller_modules']['loadbalancers']               = 0;\n$config['poller_modules']['mef']                         = 0;", 
            "title": "Poller config"
        }, 
        {
            "location": "/Support/Poller Support/#os-based-poller-config", 
            "text": "You can enable or disable modules for a specific OS by add corresponding line in  config.php \nOS based settings have preference over global. Device based settings have preference over all others  Poller performance improvement can be achieved by deactivating all modules that are not supported by specific OS.  E.g. to deactivate spanning tree but activate unix-agent module for linux OS  $config['os']['linux']['poller_modules']['stp']  = 0;\n$config['os']['linux']['poller_modules']['unix-agent'] = 1;", 
            "title": "OS based Poller config"
        }, 
        {
            "location": "/Support/Poller Support/#poller-modules", 
            "text": "unix-agent : Enable the check_mk agent for external support for applications.  system : Provides information on some common items like uptime, sysDescr and sysContact.  os : Os detection. This module will pick up the OS of the device.  ipmi : Enables support for IPMI if login details have been provided for IPMI.  sensors : Sensor detection such as Temperature, Humidity, Voltages + More.  processors : Processor support for devices.  mempools : Memory detection support for devices.  storage : Storage detection for hard disks  netstats : Statistics for IP, TCP, UDP, ICMP and SNMP.  hr-mib : Host resource support.  ucd-mib : Support for CPU, Memory and Load.  ipSystemStats : IP statistics for device.  ports : This module will detect all ports on a device excluding ones configured to be ignored by config options.  bgp-peers : BGP detection and support.  junose-atm-vp : Juniper ATM support.  toner : Toner levels support.  ucd-diskio : Disk I/O support.  wifi : WiFi Support for those devices with support.  ospf : OSPF Support.  cisco-ipsec-flow-monitor : IPSec statistics support.  cisco-remote-access-monitor : Cisco remote access support.  cisco-cef : CEF detection and support.  cisco-sla : SLA detection and support.  cisco-mac-accounting : MAC Address account support.  cipsec-tunnels : IPSec tunnel support.  cisco-ace-loadbalancer : Cisco ACE Support.  cisco-ace-serverfarms : Cisco ACE Support.  netscaler-vsvr : Netscaler support.  aruba-controller : Aruba wireless controller support.  entity-physical : Module to pick up the devices hardware support.  applications : Device application support.  cisco-asa-firewall : Cisco ASA firewall support.  mib : Support for generic MIB parsing.", 
            "title": "Poller modules"
        }, 
        {
            "location": "/Support/Poller Support/#running", 
            "text": "Here are some examples of running poller from within your install directory.  ./poller.php -h localhost\n\n./poller.php -h localhost -m ports", 
            "title": "Running"
        }, 
        {
            "location": "/Support/Poller Support/#debugging", 
            "text": "To provide debugging output you will need to run the poller process with the  -d  flag. You can do this either against\nall modules, single or multiple modules:  All Modules  ./poller.php -h localhost -d  Single Module  ./poller.php -h localhost -m ports -d  Multiple Modules  ./poller.php -h localhost -m ports,entity-physical -d  Using  -d  shouldn't output much sensitive information,  -v  will so it is then advisable to sanitise the output before pasting it somewhere as the debug output will contain snmp details amongst other items including port descriptions.  The output will contain:  DB Updates  RRD Updates  SNMP Response", 
            "title": "Debugging"
        }, 
        {
            "location": "/Support/Example-Hardware-Setup/", 
            "text": "Example hardware setups\n\n\nThe information in this document is direct from users, it's a place for people to share their \nsetups so you have an idea of what may be required for your install.\n\n\nTo obtain the device, port and sensor counts you can run:\n\n\nselect count(*) from devices;\nselect count(*) from ports where `deleted` = 0;\nselect count(*) from sensors where `sensor_deleted` = 0;\n\n\n\n\nlaf\n\n\n\n\nHome\n\n\n\n\nRunning in Proxmox.\n\n\n\n\n\n\n\n\n\n\nLibreNMS\n\n\nMySQL\n\n\n\n\n\n\n\n\n\n\nType\n\n\nVirtual\n\n\nVirtual\n\n\n\n\n\n\nOS\n\n\nCentOS 7\n\n\nCentOS 7\n\n\n\n\n\n\nCPU\n\n\n2 Sockets, 4 Cores\n\n\n1 Socket, 2 Cores\n\n\n\n\n\n\nMemory\n\n\n2GB\n\n\n2GB\n\n\n\n\n\n\nDisk Type\n\n\nRaid 1, SSD\n\n\nRaid 1, SSD\n\n\n\n\n\n\nDisk Space\n\n\n18GB\n\n\n30GB\n\n\n\n\n\n\nDevices\n\n\n20\n\n\n-\n\n\n\n\n\n\nPorts\n\n\n133\n\n\n-\n\n\n\n\n\n\nHealth sensors\n\n\n47\n\n\n-\n\n\n\n\n\n\nLoad\n\n\n 0.1\n\n\n 0.1\n\n\n\n\n\n\n\n\nVente-Priv\u00e9e\n\n\n\n\nNOC\n\n\n\n\n\n\n\n\n\n\n\n\nLibreNMS\n\n\nMariaDB\n\n\n\n\n\n\n\n\n\n\nType\n\n\nDell R430\n\n\nDell R430\n\n\n\n\n\n\nOS\n\n\nDebian 7 (dotdeb)\n\n\nDebian 7 (dotdeb)\n\n\n\n\n\n\nCPU\n\n\n2 Sockets, 14 Cores\n\n\n1 Socket, 2 Cores\n\n\n\n\n\n\nMemory\n\n\n256GB\n\n\n256GB\n\n\n\n\n\n\nDisk Type\n\n\nRaid 10, SSD\n\n\nRaid 10, SSD\n\n\n\n\n\n\nDisk Space\n\n\n1TB\n\n\n1TB\n\n\n\n\n\n\nDevices\n\n\n1028\n\n\n-\n\n\n\n\n\n\nPorts\n\n\n26745\n\n\n-\n\n\n\n\n\n\nHealth sensors\n\n\n6238\n\n\n-\n\n\n\n\n\n\nLoad\n\n\n 0.5\n\n\n 0.5\n\n\n\n\n\n\n\n\nKKrumm\n\n\n\n\nHome\n\n\n\n\n\n\n\n\n\n\n\n\nLibreNMS\n\n\nMySQL\n\n\n\n\n\n\n\n\n\n\nType\n\n\nVM\n\n\nSame Server\n\n\n\n\n\n\nOS\n\n\nCentOS 7\n\n\n\n\n\n\n\n\nCPU\n\n\n2 Sockets, 4 Cores\n\n\n\n\n\n\n\n\nMemory\n\n\n4GB\n\n\n\n\n\n\n\n\nDisk Type\n\n\nRaid 10, SAS Drives\n\n\n\n\n\n\n\n\nDisk Space\n\n\n40 GB\n\n\n\n\n\n\n\n\nDevices\n\n\n12\n\n\n\n\n\n\n\n\nPorts\n\n\n130\n\n\n\n\n\n\n\n\nHealth sensors\n\n\n44\n\n\n\n\n\n\n\n\nLoad\n\n\n 2.5\n\n\n\n\n\n\n\n\n\n\nKKrumm\n\n\n\n\nWork\n\n\n\n\n\n\n\n\n\n\n\n\nLibreNMS\n\n\nMySQl\n\n\n\n\n\n\n\n\n\n\nType\n\n\nHP Proliantdl380gen8\n\n\nSame Server\n\n\n\n\n\n\nOS\n\n\nCentOS 7\n\n\n\n\n\n\n\n\nCPU\n\n\n2 Sockets, 24 Cores\n\n\n\n\n\n\n\n\nMemory\n\n\n32GB\n\n\n\n\n\n\n\n\nDisk Type\n\n\nRaid 10, SAS Drives\n\n\n\n\n\n\n\n\nDisk Space\n\n\n250 GB\n\n\n\n\n\n\n\n\nDevices\n\n\n390\n\n\n\n\n\n\n\n\nPorts\n\n\n16167\n\n\n\n\n\n\n\n\nHealth sensors\n\n\n3223\n\n\n\n\n\n\n\n\nLoad\n\n\n 14.5", 
            "title": "Example Hardware Setup"
        }, 
        {
            "location": "/Support/Example-Hardware-Setup/#example-hardware-setups", 
            "text": "The information in this document is direct from users, it's a place for people to share their \nsetups so you have an idea of what may be required for your install.  To obtain the device, port and sensor counts you can run:  select count(*) from devices;\nselect count(*) from ports where `deleted` = 0;\nselect count(*) from sensors where `sensor_deleted` = 0;", 
            "title": "Example hardware setups"
        }, 
        {
            "location": "/Support/Example-Hardware-Setup/#laf", 
            "text": "Home   Running in Proxmox.      LibreNMS  MySQL      Type  Virtual  Virtual    OS  CentOS 7  CentOS 7    CPU  2 Sockets, 4 Cores  1 Socket, 2 Cores    Memory  2GB  2GB    Disk Type  Raid 1, SSD  Raid 1, SSD    Disk Space  18GB  30GB    Devices  20  -    Ports  133  -    Health sensors  47  -    Load   0.1   0.1", 
            "title": "laf"
        }, 
        {
            "location": "/Support/Example-Hardware-Setup/#vente-privee", 
            "text": "NOC       LibreNMS  MariaDB      Type  Dell R430  Dell R430    OS  Debian 7 (dotdeb)  Debian 7 (dotdeb)    CPU  2 Sockets, 14 Cores  1 Socket, 2 Cores    Memory  256GB  256GB    Disk Type  Raid 10, SSD  Raid 10, SSD    Disk Space  1TB  1TB    Devices  1028  -    Ports  26745  -    Health sensors  6238  -    Load   0.5   0.5", 
            "title": "Vente-Priv\u00e9e"
        }, 
        {
            "location": "/Support/Example-Hardware-Setup/#kkrumm", 
            "text": "Home       LibreNMS  MySQL      Type  VM  Same Server    OS  CentOS 7     CPU  2 Sockets, 4 Cores     Memory  4GB     Disk Type  Raid 10, SAS Drives     Disk Space  40 GB     Devices  12     Ports  130     Health sensors  44     Load   2.5", 
            "title": "KKrumm"
        }, 
        {
            "location": "/Support/Example-Hardware-Setup/#kkrumm_1", 
            "text": "Work       LibreNMS  MySQl      Type  HP Proliantdl380gen8  Same Server    OS  CentOS 7     CPU  2 Sockets, 24 Cores     Memory  32GB     Disk Type  Raid 10, SAS Drives     Disk Space  250 GB     Devices  390     Ports  16167     Health sensors  3223     Load   14.5", 
            "title": "KKrumm"
        }, 
        {
            "location": "/Support/Remote-Monitoring-VPN/", 
            "text": "Remote monitoring using tinc VPN\n\n\nThis article describes how to use tinc to connect several remote sites and their subnets to your central monitoring server. This will let you connect to devices on remote private IP ranges through one gateway on each site, routing them securely back to your LibreNMS installation.\n\n\nConfiguring the monitoring server\n\n\ntinc should be available on nearly all Linux distributions via package management. If you are running something different, just take a look at tinc's homepage to find an appropriate version for your operating system: https://www.tinc-vpn.org/download/\nI am going to describe the setup for Debian-based systems, but there are virtually no differences for e.g. CentOS or similar.\n\n\n\n\nFirst make sure your firewall accepts connections on port 655 UDP and TCP. \n\n\nThen install tinc via \napt-get install tinc\n. \n\n\nCreate the following directory structure to hold all your configuration files: \nmkdir -p /etc/tinc/myvpn/hosts\n \"myvpn\" is your VPN network's name and can be chosen freely.\n\n\nCreate your main configuration file: \nvim /etc/tinc/myvpn/tinc.conf\n\n\n\n\nName = monitoring\nAddressFamily = ipv4\nDevice = /dev/net/tun\n\n\n\n\n\n\nNext we need network up- and down scripts to define a few network settings for inside our VPN: \nvim /etc/tinc/myvpn/tinc-up\n\n\n\n\n#!/bin/sh\nifconfig $INTERFACE 10.6.1.1 netmask 255.255.255.0\nip route add 10.6.1.1/24 dev $INTERFACE\nip route add 10.0.0.0/22 dev $INTERFACE\nip route add 10.100.0.0/22 dev $INTERFACE\nip route add 10.200.0.0/22 dev $INTERFACE\n\n\n\n\nIn this example we have 10.6.1.1 as the VPN IP address for the monitoring server on a /24 subnet. $INTERFACE will be automatically substituted with the name of the VPN, \"myvpn\" in this case. Then we have a route for the VPN subnet, so we can reach other sites via their VPN address. The last 3 lines designate the remote subnets. In the example I want to reach devices on three different remote private /22 subnets and be able to monitor devices on them from this server, so I set up routes for each of those remote sites in my tinc-up script.\n\n\n\n\nThe tinc-down script is relatively simple as it just removes the custom interface, which should get rid of the routes as well: \nvim /etc/tinc/myvpn/tinc-down\n\n\n\n\n#!/bin/sh\nifconfig $INTERFACE down\n\n\n\n\n\n\nMake sure your scripts scan be executed: \nchmod +x /etc/tinc/myvpn/tinc-*\n\n\nAs a last step we need a host configuration file. This should be named the same as the \"Name\" you defined in tinc.conf: \nvim /etc/tinc/myvpn/hosts/monitoring\n\n\n\n\nSubnet = 10.6.1.1/32\n\n\n\n\nOn the monitoring server we will just fill in the subnet and not define its external IP address to make sure it listens on all available external interfaces.\n\n\n\n\nIt's time to use tinc to create our key-pair: \ntincd -n myvpn -K\n\n\nNow the file \n/etc/tinc/myvpn/hosts/monitoring\n should have an RSA public key appended to it and your private key should reside in \n/etc/tinc/myvpn/rsa_key.priv\n.\n\n\nTo make sure that the connection will be restored after each reboot, you can add your VPN name to \n/etc/tinc/nets.boot\n.\n\n\nNow you can start tinc with \ntincd -n myvpn\n and it will listen for your remote sites to connect to it.\n\n\n\n\nRemote site configuration\n\n\nEssentially the same steps as for your central monitoring server apply for all remote gateway devices. These can be routers, or just any computer or VM running on the remote subnet, able to reach the internet with the ability to forward IP packets externally.\n\n\n\n\nInstall tinc\n\n\nCreate directory structure: \nmkdir -p /etc/tinc/myvpn/hosts\n\n\nCreate main configuration: \nvim /etc/tinc/myvpn/tinc.conf\n\n\n\n\nName = remote1\nAddressFamily = ipv4\nDevice = /dev/net/tun\nConnectTo = monitoring\n\n\n\n\n\n\nCreate up script: \nvim /etc/tinc/myvpn/tinc-up\n\n\n\n\n#!/bin/sh\nifconfig $INTERFACE 10.6.1.2 netmask 255.255.255.0\nip route add 10.6.1.2/32 dev $INTERFACE\n\n\n\n\n\n\nCreate down script: \nvim /etc/tinc/myvpn/tinc-down\n\n\n\n\n#!/bin/sh\nifconfig $INTERFACE down\n\n\n\n\n\n\nMake executable: \nchmod +x /etc/tinc/myvpn/tinc*\n\n\nCreate device configuration: \nvim /etc/tinc/myvpn/hosts/remote1\n\n\n\n\nAddress = 198.51.100.2\nSubnet = 10.0.0.0/22\n\n\n\n\nThis defines the device IP address outside of the VPN and the subnet it will expose.\n\n\n\n\nCopy over the monitoring server's host configuration (including the embedded public key) and add it's external IP address: \nvim /etc/tinc/myvpn/hosts/monitoring\n\n\n\n\nAddress = 203.0.113.6\nSubnet = 10.6.1.1/32\n\n-----BEGIN RSA PUBLIC KEY-----\nVeDyaqhKd4o2Fz...\n\n\n\n\n\n\nGenerate this device's keys: \ntincd -n myvpn -K\n\n\nCopy over this devices host file including the embedded public key to your monitoring server.\n\n\nAdd the name for the VPN to\n/etc/tinc/nets.boot\n if you want to autostart the connection upon reboot.\n\n\nStart tinc: \ntincd -n myvpn\n\n\n\n\nThese steps can basically be repeated for every remote site just choosing different names and other internal IP addresses. In my case I connected 3 remote sites running behind Ubiquiti EdgeRouters. Since those devices let me install software through Debian's package management it was very easy to set up. Just create the necessary configuration files and network scripts on each device and distribute the host configurations including the public keys to each device that will actively connect back.\n\n\nNow you can add all devices you want to monitor in LibreNMS using their internal IP address on the remote subnets or using some form of name resolution. I opted to declare the most important devices in my \n/etc/hosts\n file on the monitoring server.\n\n\nAs an added bonus tinc is a mesh VPN, so in theory you could specify several \"ConnectTo\" on each device and they should hold connections even if one network path goes down.", 
            "title": "Remote monitoring using tinc VPN"
        }, 
        {
            "location": "/Support/Remote-Monitoring-VPN/#remote-monitoring-using-tinc-vpn", 
            "text": "This article describes how to use tinc to connect several remote sites and their subnets to your central monitoring server. This will let you connect to devices on remote private IP ranges through one gateway on each site, routing them securely back to your LibreNMS installation.", 
            "title": "Remote monitoring using tinc VPN"
        }, 
        {
            "location": "/Support/Remote-Monitoring-VPN/#configuring-the-monitoring-server", 
            "text": "tinc should be available on nearly all Linux distributions via package management. If you are running something different, just take a look at tinc's homepage to find an appropriate version for your operating system: https://www.tinc-vpn.org/download/\nI am going to describe the setup for Debian-based systems, but there are virtually no differences for e.g. CentOS or similar.   First make sure your firewall accepts connections on port 655 UDP and TCP.   Then install tinc via  apt-get install tinc .   Create the following directory structure to hold all your configuration files:  mkdir -p /etc/tinc/myvpn/hosts  \"myvpn\" is your VPN network's name and can be chosen freely.  Create your main configuration file:  vim /etc/tinc/myvpn/tinc.conf   Name = monitoring\nAddressFamily = ipv4\nDevice = /dev/net/tun   Next we need network up- and down scripts to define a few network settings for inside our VPN:  vim /etc/tinc/myvpn/tinc-up   #!/bin/sh\nifconfig $INTERFACE 10.6.1.1 netmask 255.255.255.0\nip route add 10.6.1.1/24 dev $INTERFACE\nip route add 10.0.0.0/22 dev $INTERFACE\nip route add 10.100.0.0/22 dev $INTERFACE\nip route add 10.200.0.0/22 dev $INTERFACE  In this example we have 10.6.1.1 as the VPN IP address for the monitoring server on a /24 subnet. $INTERFACE will be automatically substituted with the name of the VPN, \"myvpn\" in this case. Then we have a route for the VPN subnet, so we can reach other sites via their VPN address. The last 3 lines designate the remote subnets. In the example I want to reach devices on three different remote private /22 subnets and be able to monitor devices on them from this server, so I set up routes for each of those remote sites in my tinc-up script.   The tinc-down script is relatively simple as it just removes the custom interface, which should get rid of the routes as well:  vim /etc/tinc/myvpn/tinc-down   #!/bin/sh\nifconfig $INTERFACE down   Make sure your scripts scan be executed:  chmod +x /etc/tinc/myvpn/tinc-*  As a last step we need a host configuration file. This should be named the same as the \"Name\" you defined in tinc.conf:  vim /etc/tinc/myvpn/hosts/monitoring   Subnet = 10.6.1.1/32  On the monitoring server we will just fill in the subnet and not define its external IP address to make sure it listens on all available external interfaces.   It's time to use tinc to create our key-pair:  tincd -n myvpn -K  Now the file  /etc/tinc/myvpn/hosts/monitoring  should have an RSA public key appended to it and your private key should reside in  /etc/tinc/myvpn/rsa_key.priv .  To make sure that the connection will be restored after each reboot, you can add your VPN name to  /etc/tinc/nets.boot .  Now you can start tinc with  tincd -n myvpn  and it will listen for your remote sites to connect to it.", 
            "title": "Configuring the monitoring server"
        }, 
        {
            "location": "/Support/Remote-Monitoring-VPN/#remote-site-configuration", 
            "text": "Essentially the same steps as for your central monitoring server apply for all remote gateway devices. These can be routers, or just any computer or VM running on the remote subnet, able to reach the internet with the ability to forward IP packets externally.   Install tinc  Create directory structure:  mkdir -p /etc/tinc/myvpn/hosts  Create main configuration:  vim /etc/tinc/myvpn/tinc.conf   Name = remote1\nAddressFamily = ipv4\nDevice = /dev/net/tun\nConnectTo = monitoring   Create up script:  vim /etc/tinc/myvpn/tinc-up   #!/bin/sh\nifconfig $INTERFACE 10.6.1.2 netmask 255.255.255.0\nip route add 10.6.1.2/32 dev $INTERFACE   Create down script:  vim /etc/tinc/myvpn/tinc-down   #!/bin/sh\nifconfig $INTERFACE down   Make executable:  chmod +x /etc/tinc/myvpn/tinc*  Create device configuration:  vim /etc/tinc/myvpn/hosts/remote1   Address = 198.51.100.2\nSubnet = 10.0.0.0/22  This defines the device IP address outside of the VPN and the subnet it will expose.   Copy over the monitoring server's host configuration (including the embedded public key) and add it's external IP address:  vim /etc/tinc/myvpn/hosts/monitoring   Address = 203.0.113.6\nSubnet = 10.6.1.1/32\n\n-----BEGIN RSA PUBLIC KEY-----\nVeDyaqhKd4o2Fz...   Generate this device's keys:  tincd -n myvpn -K  Copy over this devices host file including the embedded public key to your monitoring server.  Add the name for the VPN to /etc/tinc/nets.boot  if you want to autostart the connection upon reboot.  Start tinc:  tincd -n myvpn   These steps can basically be repeated for every remote site just choosing different names and other internal IP addresses. In my case I connected 3 remote sites running behind Ubiquiti EdgeRouters. Since those devices let me install software through Debian's package management it was very easy to set up. Just create the necessary configuration files and network scripts on each device and distribute the host configurations including the public keys to each device that will actively connect back.  Now you can add all devices you want to monitor in LibreNMS using their internal IP address on the remote subnets or using some form of name resolution. I opted to declare the most important devices in my  /etc/hosts  file on the monitoring server.  As an added bonus tinc is a mesh VPN, so in theory you could specify several \"ConnectTo\" on each device and they should hold connections even if one network path goes down.", 
            "title": "Remote site configuration"
        }, 
        {
            "location": "/Support/SNMP-Configuration-Examples/", 
            "text": "SNMP configuration examples\n\n\nTable of Content:\n- \nDevices\n\n    - \nCisco\n\n        - \nAdaptive Security Appliance (ASA)\n\n        - \nIOS / IOS XE\n\n        - \nNX-OS\n\n        - \nWireless LAN Controller (WLC)\n\n    - \nHPE 3PAR\n\n        - \nInform OS 3.2.x\n\n    - \nInfoblox\n\n        - \nNIOS 7.x+\n\n    - \nJuniper\n\n        - \nJunos OS\n\n    - \nMikrotik\n\n        - \nRouterOS 6.x\n\n    - \nPalo Alto\n\n        - \nPANOS 6.x/7.x\n\n- \nOperating systems\n\n    - \nLinux (snmpd v2)\n\n    - \nLinux (snmpd v3)\n\n    - \nWindows Server 2008 R2\n\n    - \nWindows Server 2012 R2 and 2016\n\n    - \nMac OSX\n\n\nDevices\n\n\nCisco\n\n\nAdaptive Security Appliance (ASA)\n\n\nASDM\n\n\n\n\nLaunch ASDM and connect to your device\n\n\nGo to Configuration \n Management Access \n SNMP\n\n\nAdd your community string\n\n\nAdd in the \"SNMP Host Access List\" section your LibreNMS server IP address\n\n\nClick Apply and Save\n\n\n\n\nCLI \n\n\n# SNMPv2c\n\nsnmp-server community \nYOUR-COMMUNITY\n\nsnmp-server contact \nYOUR-CONTACT\n\nsnmp-server location \nYOUR-LOCATION\n\nsnmp-server host \nINTERFACE\n \nLIBRENMS-IP\n poll community \nYOUR-COMMUNITY\n version 2c\n\n# SNMPv3\n\nsnmp-server group \nGROUP-NAME\n v3 priv\nsnmp-server user \nUSER-NAME\n \nGROUP-NAME\n v3 auth sha \nAUTH-PASSWORD\n priv aes 128 \nPRIV-PASSWORD\n\nsnmp-server contact \nYOUR-CONTACT\n\nsnmp-server location \nYOUR-LOCATION\n\nsnmp-server host \nINTERFACE\n \nLIBRENMS-IP\n poll version 3 \nUSER-NAME\n\n\n\n\n\nIOS / IOS XE\n\n\n# SNMPv2c\n\nsnmp-server community \nYOUR-COMMUNITY\n RO\nsnmp-server contact \nYOUR-CONTACT\n\nsnmp-server location \nYOUR-LOCATION\n\n\n# SNMPv3\n\nsnmp-server group \nGROUP-NAME\n v3 priv\nsnmp-server user \nUSER-NAME\n \nGROUP-NAME\n v3 auth sha \nAUTH-PASSWORD\n priv aes 128 \nPRIV-PASSWORD\n\nsnmp-server contact \nYOUR-CONTACT\n\nsnmp-server location \nYOUR-LOCATION\n\n\n# Note: The following is also required if using SNMPv3 and you want to populate the FDB table.\n\nsnmp-server group \nGROUP-NAME\n v3 priv context vlan- match prefix \n\n\n\n\nNX-OS\n\n\n# SNMPv2c\n\nsnmp-server community \nYOUR-COMMUNITY\n RO\nsnmp-server contact \nYOUR-CONTACT\n\nsnmp-server location \nYOUR-LOCATION\n\n\n# SNMPv3\n\nsnmp-server user \nUSER-NAME\n \nGROUP-NAME\n v3 auth sha \nAUTH-PASSWORD\n priv aes 128 \nPRIV-PASSWORD\n\nsnmp-server contact \nYOUR-CONTACT\n\nsnmp-server location \nYOUR-LOCATION\n\n\n\n\n\nWireless LAN Controller (WLC)\n\n\n\n\nAccess the web admin page and log in\n\n\nIf you are running version 8.1 and later, on the new dashboard click \"Advanced\"\n\n\nGo to management Tab\n\n\nOn SNMP sub-menu, select \"Communities\"\n\n\nClick \"New...\"\n\n\nAdd your community name and leave IP addresses empty\n\n\nClick Apply and Save\n\n\n\n\nHPE 3PAR\n\n\nInform OS 3.2.x\n\n\n\n\nAccess the CLI\n\n\nAdd an SNMP Manager with your LibreNMS IP address:\n\n\n\n\naddsnmpmgr \nlibrenms ip\n\n\n\n\n\n\n\nAdd your SNMP community:\n\n\n\n\nsetsnmppw \ncommunity\n\n\n\n\n\nInfoblox\n\n\nNIOS 7.x+\n\n\n\n\nAccess the web admin page and log in\n\n\nGo to Grid tab \n Grid Manager\n\n\nIn the right menu select \"Grid properties\"\n\n\nSelect \"SNMP\" menu\n\n\nClick \"Enable SNMPv1/SNMPv2 Queries\"\n\n\nAdd your community\n\n\nClick Save \n Close\n\n\n\n\nJuniper\n\n\nJunos OS\n\n\nset snmp description description\nset snmp location location\nset snmp contact contact\nset snmp community YOUR-COMMUNITY authorization read-only\n\n\n\n\nMikrotik\n\n\nRouterOS 6.x\n\n\n#Terminal SNMP v2 Configuration\n/snmp community\nset [ find default=yes ] read-access=no\nadd addresses=\nSRC IP/NETWORK\n name=\nCOMMUNITY\n\n/snmp\nset contact=\nNAME\n enabled=yes engine-id=\nENGINE ID\n location=\nLOCALTION\n\n\n\n\n\nPalo Alto\n\n\nPANOS 6.x/7.x\n\n\n\n\nAccess the web admin page and log in\n\n\nGo to Device tab \n Setup\n\n\nGo to the sub-tab \"Operations\"\n\n\nClick \"SNMP Setup\"   \n\n\nEnter your SNMP community and then click \"OK\"\n\n\nClick Apply\n\n\n\n\nNote that you need to allow SNMP on the needed interfaces. To do that you need to create a network \"Interface Mgmt\" profile for standard interface and allow SNMP under \"Device \n Management \n Management Interface Settings\" for out of band management interface.\n\n\nOperating systems\n\n\nLinux (snmpd v2)\n\n\nReplace your snmpd.conf file by the example below and edit it with appropriate community in \"RANDOMSTRINGGOESHERE\".\n\n\nvi /etc/snmp/snmpd.conf\n\n\n\n\n# Change RANDOMSTRINGGOESHERE to your preferred SNMP community string\ncom2sec readonly  default         RANDOMSTRINGGOESHERE\n\ngroup MyROGroup v2c        readonly\nview all    included  .1                               80\naccess MyROGroup \n      any       noauth    exact  all    none   none\n\nsyslocation Rack, Room, Building, City, Country [GPSX,Y]\nsyscontact Your Name \nyour@email.address\n\n\n#Distro Detection\nextend .1.3.6.1.4.1.2021.7890.1 distro /usr/bin/distro\n\n\n\n\nIf you have 'dmidecode' installed on your host, you can add the following lines for additional hardware detection.\n\n\nNOTE\n: On some systems the snmpd is running as an own user, making dmidecode unable to read out \n/dev/mem\n and thus showing multiple errors. Either add the snmp user to the \nkmem\n group or remove these lines again.\n\n\nextend .1.3.6.1.4.1.2021.7890.2 hardware '/usr/sbin/dmidecode -s system-product-name'\nextend .1.3.6.1.4.1.2021.7890.3 manufacturer '/usr/sbin/dmidecode -s system-manufacturer'\nextend .1.3.6.1.4.1.2021.7890.4 serial '/usr/sbin/dmidecode -s system-serial-number'\n\n\n\n\nThe LibreNMS server include a copy of this example here:\n\n\n/opt/librenms/snmpd.conf.example\n\n\n\n\nThe binary /usr/bin/distro must be copied from the original source repository:\n\n\ncurl -o /usr/bin/distro https://raw.githubusercontent.com/librenms/librenms-agent/master/snmp/distro\nchmod +x /usr/bin/distro\n\n\n\n\nLinux (snmpd v3)\n\n\nGo to /etc/snmp/snmpd.conf\n\n\nOpen the file in vi or nano /etc/snmp/snmpd.conf and add the following line to create SNMPV3 User (replace username and passwords with your own):\n\n\ncreateUser authPrivUser MD5 \nauthPassword\n DES \nprivPassword\n\n\n\n\n\nMake sure the agent listens to all interfaces by adding the following line inside snmpd.conf:\n\n\nagentAddress udp:161,udp6:[::1]:161\n\n\n\n\nThis line simply means listen to connections across all interfaces IPv4 and IPv6 respectively\n\n\nUncomment and change the following line to give read access to the username created above (rouser is what LibreNMS uses) :\n\n\n#rouser authPrivUser priv\n\n\n\n\nChange the following details inside snmpd.conf\n\n\nsyslocation Rack, Room, Building, City, Country [GPSX,Y]\nsyscontact Your Name \nyour@email.address\n\n\n\n\n\nSave and exit the file\n\n\nRestart the snmpd service:\n\n\nCentOS 6 / Red hat 6\n\n\nservice snmpd restart\n\n\n\n\nCentOS 7 / Red hat 7\n\n\nsystemctl restart snmpd\n\n\n\n\nUbuntu\n\n\nservice snmpd restart\n\n\n\n\nWindows Server 2008 R2\n\n\n\n\nLog in to your Windows Server 2008 R2\n\n\nStart \"Server Manager\" under \"Administrative Tools\"\n\n\nClick \"Features\" and then click \"Add Feature\"\n\n\nCheck (if not checked) \"SNMP Service\", click \"Next\" until \"Install\"\n\n\nStart \"Services\" under \"Administrative Tools\"\n\n\nEdit \"SNMP Service\" properties\n\n\nGo to the security tab\n\n\nIn \"Accepted community name\" click \"Add\" to add your community string and permission\n\n\nIn \"Accept SNMP packets from these hosts\" click \"Add\" and add your LibreNMS server IP address\n\n\nValidate change by clicking \"Apply\"\n\n\n\n\nWindows Server 2012 R2 and 2016\n\n\n\n\nLog in to your Windows Server 2012 R2\n\n\nStart \"Server Manager\" under \"Administrative Tools\"\n\n\nClick \"Manage\" and then \"Add Roles and Features\"\n\n\nContinue by pressing \"Next\" to the \"Features\" menu\n\n\nInstall (if not installed) \"SNMP Service\"\n\n\nStart \"Services\" under \"Administrative Tools\"\n\n\nEdit \"SNMP Service\" properties\n\n\nGo to the security tab\n\n\nIn \"Accepted community name\" click \"Add\" to add your community string and permission\n\n\nIn \"Accept SNMP packets from these hosts\" click \"Add\" and add your LibreNMS server IP address\n\n\nValidate change by clicking \"Apply\"\n\n\n\n\nMac OSX\n\n\nStep 1: \nsudo nano /etc/snmp/snmpd.conf\n\n\n#Allow read-access with the following SNMP Community String:\nrocommunity public\n\n# all other settings are optional but recommended.\n\n# Location of the device\nsyslocation data centre A\n\n# Human Contact for the device\nsyscontact SysAdmin\n\n# System Name of the device\nsysName SystemName\n\n# the system OID for this device. This is optional but recommended,\n# to identify this as a MAC OS system.\nsysobjectid 1.3.6.1.4.1.8072.3.2.16\n\n\n\n\nStep 2: \n\n\nsudo launchctl load -w /System/Library/LaunchDaemons/org.net-snmp.snmpd.plist", 
            "title": "SNMP configuration examples"
        }, 
        {
            "location": "/Support/SNMP-Configuration-Examples/#snmp-configuration-examples", 
            "text": "Table of Content:\n-  Devices \n    -  Cisco \n        -  Adaptive Security Appliance (ASA) \n        -  IOS / IOS XE \n        -  NX-OS \n        -  Wireless LAN Controller (WLC) \n    -  HPE 3PAR \n        -  Inform OS 3.2.x \n    -  Infoblox \n        -  NIOS 7.x+ \n    -  Juniper \n        -  Junos OS \n    -  Mikrotik \n        -  RouterOS 6.x \n    -  Palo Alto \n        -  PANOS 6.x/7.x \n-  Operating systems \n    -  Linux (snmpd v2) \n    -  Linux (snmpd v3) \n    -  Windows Server 2008 R2 \n    -  Windows Server 2012 R2 and 2016 \n    -  Mac OSX", 
            "title": "SNMP configuration examples"
        }, 
        {
            "location": "/Support/SNMP-Configuration-Examples/#devices", 
            "text": "", 
            "title": "Devices"
        }, 
        {
            "location": "/Support/SNMP-Configuration-Examples/#cisco", 
            "text": "", 
            "title": "Cisco"
        }, 
        {
            "location": "/Support/SNMP-Configuration-Examples/#adaptive-security-appliance-asa", 
            "text": "ASDM   Launch ASDM and connect to your device  Go to Configuration   Management Access   SNMP  Add your community string  Add in the \"SNMP Host Access List\" section your LibreNMS server IP address  Click Apply and Save   CLI   # SNMPv2c\n\nsnmp-server community  YOUR-COMMUNITY \nsnmp-server contact  YOUR-CONTACT \nsnmp-server location  YOUR-LOCATION \nsnmp-server host  INTERFACE   LIBRENMS-IP  poll community  YOUR-COMMUNITY  version 2c\n\n# SNMPv3\n\nsnmp-server group  GROUP-NAME  v3 priv\nsnmp-server user  USER-NAME   GROUP-NAME  v3 auth sha  AUTH-PASSWORD  priv aes 128  PRIV-PASSWORD \nsnmp-server contact  YOUR-CONTACT \nsnmp-server location  YOUR-LOCATION \nsnmp-server host  INTERFACE   LIBRENMS-IP  poll version 3  USER-NAME", 
            "title": "Adaptive Security Appliance (ASA)"
        }, 
        {
            "location": "/Support/SNMP-Configuration-Examples/#ios-ios-xe", 
            "text": "# SNMPv2c\n\nsnmp-server community  YOUR-COMMUNITY  RO\nsnmp-server contact  YOUR-CONTACT \nsnmp-server location  YOUR-LOCATION \n\n# SNMPv3\n\nsnmp-server group  GROUP-NAME  v3 priv\nsnmp-server user  USER-NAME   GROUP-NAME  v3 auth sha  AUTH-PASSWORD  priv aes 128  PRIV-PASSWORD \nsnmp-server contact  YOUR-CONTACT \nsnmp-server location  YOUR-LOCATION \n\n# Note: The following is also required if using SNMPv3 and you want to populate the FDB table.\n\nsnmp-server group  GROUP-NAME  v3 priv context vlan- match prefix", 
            "title": "IOS / IOS XE"
        }, 
        {
            "location": "/Support/SNMP-Configuration-Examples/#nx-os", 
            "text": "# SNMPv2c\n\nsnmp-server community  YOUR-COMMUNITY  RO\nsnmp-server contact  YOUR-CONTACT \nsnmp-server location  YOUR-LOCATION \n\n# SNMPv3\n\nsnmp-server user  USER-NAME   GROUP-NAME  v3 auth sha  AUTH-PASSWORD  priv aes 128  PRIV-PASSWORD \nsnmp-server contact  YOUR-CONTACT \nsnmp-server location  YOUR-LOCATION", 
            "title": "NX-OS"
        }, 
        {
            "location": "/Support/SNMP-Configuration-Examples/#wireless-lan-controller-wlc", 
            "text": "Access the web admin page and log in  If you are running version 8.1 and later, on the new dashboard click \"Advanced\"  Go to management Tab  On SNMP sub-menu, select \"Communities\"  Click \"New...\"  Add your community name and leave IP addresses empty  Click Apply and Save", 
            "title": "Wireless LAN Controller (WLC)"
        }, 
        {
            "location": "/Support/SNMP-Configuration-Examples/#hpe-3par", 
            "text": "", 
            "title": "HPE 3PAR"
        }, 
        {
            "location": "/Support/SNMP-Configuration-Examples/#inform-os-32x", 
            "text": "Access the CLI  Add an SNMP Manager with your LibreNMS IP address:   addsnmpmgr  librenms ip    Add your SNMP community:   setsnmppw  community", 
            "title": "Inform OS 3.2.x"
        }, 
        {
            "location": "/Support/SNMP-Configuration-Examples/#infoblox", 
            "text": "", 
            "title": "Infoblox"
        }, 
        {
            "location": "/Support/SNMP-Configuration-Examples/#nios-7x", 
            "text": "Access the web admin page and log in  Go to Grid tab   Grid Manager  In the right menu select \"Grid properties\"  Select \"SNMP\" menu  Click \"Enable SNMPv1/SNMPv2 Queries\"  Add your community  Click Save   Close", 
            "title": "NIOS 7.x+"
        }, 
        {
            "location": "/Support/SNMP-Configuration-Examples/#juniper", 
            "text": "", 
            "title": "Juniper"
        }, 
        {
            "location": "/Support/SNMP-Configuration-Examples/#junos-os", 
            "text": "set snmp description description\nset snmp location location\nset snmp contact contact\nset snmp community YOUR-COMMUNITY authorization read-only", 
            "title": "Junos OS"
        }, 
        {
            "location": "/Support/SNMP-Configuration-Examples/#mikrotik", 
            "text": "", 
            "title": "Mikrotik"
        }, 
        {
            "location": "/Support/SNMP-Configuration-Examples/#routeros-6x", 
            "text": "#Terminal SNMP v2 Configuration\n/snmp community\nset [ find default=yes ] read-access=no\nadd addresses= SRC IP/NETWORK  name= COMMUNITY \n/snmp\nset contact= NAME  enabled=yes engine-id= ENGINE ID  location= LOCALTION", 
            "title": "RouterOS 6.x"
        }, 
        {
            "location": "/Support/SNMP-Configuration-Examples/#palo-alto", 
            "text": "", 
            "title": "Palo Alto"
        }, 
        {
            "location": "/Support/SNMP-Configuration-Examples/#panos-6x7x", 
            "text": "Access the web admin page and log in  Go to Device tab   Setup  Go to the sub-tab \"Operations\"  Click \"SNMP Setup\"     Enter your SNMP community and then click \"OK\"  Click Apply   Note that you need to allow SNMP on the needed interfaces. To do that you need to create a network \"Interface Mgmt\" profile for standard interface and allow SNMP under \"Device   Management   Management Interface Settings\" for out of band management interface.", 
            "title": "PANOS 6.x/7.x"
        }, 
        {
            "location": "/Support/SNMP-Configuration-Examples/#operating-systems", 
            "text": "", 
            "title": "Operating systems"
        }, 
        {
            "location": "/Support/SNMP-Configuration-Examples/#linux-snmpd-v2", 
            "text": "Replace your snmpd.conf file by the example below and edit it with appropriate community in \"RANDOMSTRINGGOESHERE\".  vi /etc/snmp/snmpd.conf  # Change RANDOMSTRINGGOESHERE to your preferred SNMP community string\ncom2sec readonly  default         RANDOMSTRINGGOESHERE\n\ngroup MyROGroup v2c        readonly\nview all    included  .1                               80\naccess MyROGroup        any       noauth    exact  all    none   none\n\nsyslocation Rack, Room, Building, City, Country [GPSX,Y]\nsyscontact Your Name  your@email.address \n\n#Distro Detection\nextend .1.3.6.1.4.1.2021.7890.1 distro /usr/bin/distro  If you have 'dmidecode' installed on your host, you can add the following lines for additional hardware detection.  NOTE : On some systems the snmpd is running as an own user, making dmidecode unable to read out  /dev/mem  and thus showing multiple errors. Either add the snmp user to the  kmem  group or remove these lines again.  extend .1.3.6.1.4.1.2021.7890.2 hardware '/usr/sbin/dmidecode -s system-product-name'\nextend .1.3.6.1.4.1.2021.7890.3 manufacturer '/usr/sbin/dmidecode -s system-manufacturer'\nextend .1.3.6.1.4.1.2021.7890.4 serial '/usr/sbin/dmidecode -s system-serial-number'  The LibreNMS server include a copy of this example here:  /opt/librenms/snmpd.conf.example  The binary /usr/bin/distro must be copied from the original source repository:  curl -o /usr/bin/distro https://raw.githubusercontent.com/librenms/librenms-agent/master/snmp/distro\nchmod +x /usr/bin/distro", 
            "title": "Linux (snmpd v2)"
        }, 
        {
            "location": "/Support/SNMP-Configuration-Examples/#linux-snmpd-v3", 
            "text": "Go to /etc/snmp/snmpd.conf  Open the file in vi or nano /etc/snmp/snmpd.conf and add the following line to create SNMPV3 User (replace username and passwords with your own):  createUser authPrivUser MD5  authPassword  DES  privPassword   Make sure the agent listens to all interfaces by adding the following line inside snmpd.conf:  agentAddress udp:161,udp6:[::1]:161  This line simply means listen to connections across all interfaces IPv4 and IPv6 respectively  Uncomment and change the following line to give read access to the username created above (rouser is what LibreNMS uses) :  #rouser authPrivUser priv  Change the following details inside snmpd.conf  syslocation Rack, Room, Building, City, Country [GPSX,Y]\nsyscontact Your Name  your@email.address   Save and exit the file", 
            "title": "Linux (snmpd v3)"
        }, 
        {
            "location": "/Support/SNMP-Configuration-Examples/#restart-the-snmpd-service", 
            "text": "", 
            "title": "Restart the snmpd service:"
        }, 
        {
            "location": "/Support/SNMP-Configuration-Examples/#centos-6-red-hat-6", 
            "text": "service snmpd restart", 
            "title": "CentOS 6 / Red hat 6"
        }, 
        {
            "location": "/Support/SNMP-Configuration-Examples/#centos-7-red-hat-7", 
            "text": "systemctl restart snmpd", 
            "title": "CentOS 7 / Red hat 7"
        }, 
        {
            "location": "/Support/SNMP-Configuration-Examples/#ubuntu", 
            "text": "service snmpd restart", 
            "title": "Ubuntu"
        }, 
        {
            "location": "/Support/SNMP-Configuration-Examples/#windows-server-2008-r2", 
            "text": "Log in to your Windows Server 2008 R2  Start \"Server Manager\" under \"Administrative Tools\"  Click \"Features\" and then click \"Add Feature\"  Check (if not checked) \"SNMP Service\", click \"Next\" until \"Install\"  Start \"Services\" under \"Administrative Tools\"  Edit \"SNMP Service\" properties  Go to the security tab  In \"Accepted community name\" click \"Add\" to add your community string and permission  In \"Accept SNMP packets from these hosts\" click \"Add\" and add your LibreNMS server IP address  Validate change by clicking \"Apply\"", 
            "title": "Windows Server 2008 R2"
        }, 
        {
            "location": "/Support/SNMP-Configuration-Examples/#windows-server-2012-r2-and-2016", 
            "text": "Log in to your Windows Server 2012 R2  Start \"Server Manager\" under \"Administrative Tools\"  Click \"Manage\" and then \"Add Roles and Features\"  Continue by pressing \"Next\" to the \"Features\" menu  Install (if not installed) \"SNMP Service\"  Start \"Services\" under \"Administrative Tools\"  Edit \"SNMP Service\" properties  Go to the security tab  In \"Accepted community name\" click \"Add\" to add your community string and permission  In \"Accept SNMP packets from these hosts\" click \"Add\" and add your LibreNMS server IP address  Validate change by clicking \"Apply\"", 
            "title": "Windows Server 2012 R2 and 2016"
        }, 
        {
            "location": "/Support/SNMP-Configuration-Examples/#mac-osx", 
            "text": "Step 1:  sudo nano /etc/snmp/snmpd.conf  #Allow read-access with the following SNMP Community String:\nrocommunity public\n\n# all other settings are optional but recommended.\n\n# Location of the device\nsyslocation data centre A\n\n# Human Contact for the device\nsyscontact SysAdmin\n\n# System Name of the device\nsysName SystemName\n\n# the system OID for this device. This is optional but recommended,\n# to identify this as a MAC OS system.\nsysobjectid 1.3.6.1.4.1.8072.3.2.16  Step 2:   sudo launchctl load -w /System/Library/LaunchDaemons/org.net-snmp.snmpd.plist", 
            "title": "Mac OSX"
        }, 
        {
            "location": "/Support/SSL-Configuration/", 
            "text": "Ubuntu 16.04\n\n\nEnabling HTTPS - Nginx\n\n\nThis example is specifically for Ubuntu 16.04 with Nginx and uses an SSL certificate from Let's Encrypt.\nPlease follow \nthis\n excellent tutorial on setting up nginx with an SSL cert from LetsEncrypt.\n\n\nStep 1\n\n\nFollow the LetsEncrypt tutorial until you get to \nStep 2: Obtain and SSL Certificate.\n \nIn this section you need to change some config in the Nginx configuration. The tutorial directs you to edit \n/etc/nginx/sites-available/default\n however in the standard LibreNMS install, the file you need to edit is actually \n/etc/nginx/conf.d/librenms.conf\n.\n\n\nStep 2\n\n\nWhen you get to \nStep 3: Configure TLS/SSL on Web Server (Nginx)\n there are some differences again. \nFollow the instructions regarding the \"snippet\" configuration, the main differences come when you get to \nAdjust the Nginx Configuration to Use SSL\n.\nHere you are again directed to edit \n/etc/nginx/sites-available/default\n, so we need to go to \n/etc/nginx/conf.d/librenms.conf\n.\n\n\nsudo vi /etc/nginx/sites-available/default\n\n\nThe top section of this file will look like this:\n\n\nserver {\n    listen         80;\n    listen         [::]:80;\n    server_name    example.com;\n    root        /opt/librenms/html;\n    index       index.php;\n    access_log  /opt/librenms/logs/access_log;\n    error_log   /opt/librenms/logs/error_log;\n\n\n\n\nEdit it to look like this (obviously changing example.com to your actual domain name):\n\n\nserver {\n    listen         80;\n    listen         [::]:80;\n    server_name    example.com;\n    return         301 https://$server_name$request_uri;\n}\n\n\nserver {\n listen              443 ssl http2;\n listen              [::]:443 ssl http2;\n include snippets/ssl-example.com.conf;\n include snippets/ssl-params.conf;\n server_name example.com;\n root        /opt/librenms/html;\n index       index.php;\n access_log  /opt/librenms/logs/access_log;\n error_log   /opt/librenms/logs/error_log;\n\n\n\n\nThis config will redirect HTTP traffic to HTTPS and use the SSL config that you have just set up.\n\n\nCheck for syntax errors\n\nsudo nginx -t\n\n\nThen restart Nginx\n\nsudo systemctl restart nginx\n\n\nStep 3\n\n\nFollow the rest of the tutorial, especially if you have the server's firewall enabled.\n\n\nCentOS\n\n\nEnabling HTTPS - Apache\n\n\nThis example is specifically for CentOS 7 with Apache\nPlease follow \nthis\n How To from CentOS wiki on setting up Apache with a SSL cert.\n\n\nStep 1\n\n\nFollow the How to until you get to step 3. This is going to be little different with LibreNMS. \nYou will need to make changes in here \nsudo vi /etc/httpd/conf.d/librenms.conf\n\n\nYour VirtualHost for 443 will need to look something like this for LibreNMS\n(obviously changing librenms.example.com to your actual domain name)\n\n\nVirtualHost *:443\n\n        SSLEngine on\n        SSLCertificateFile /etc/pki/tls/certs/ca.crt\n        SSLCertificateKeyFile /etc/pki/tls/private/ca.key\n        \nDirectory \n/opt/librenms/html/\n\n        AllowOverride All\n        Require all granted\n        Options FollowSymLinks MultiViews\n        \n/Directory\n\n        DocumentRoot /opt/librenms/html/\n        AllowEncodedSlashes NoDecode\n        ServerName librenms.example.com\n        CustomLog /opt/librenms/logs/access_log combined\n        ErrorLog /opt/librenms/logs/error_log\n\n/VirtualHost\n\n\n\n\n\n\nStep 2\n\n\nThen restart Apache \nsudo systemctl restart httpd\n\n\nStep 3\n\n\nFollow the rest of the How To, especially if you have the server's firewall enabled.", 
            "title": "Ubuntu 16.04"
        }, 
        {
            "location": "/Support/SSL-Configuration/#ubuntu-1604", 
            "text": "", 
            "title": "Ubuntu 16.04"
        }, 
        {
            "location": "/Support/SSL-Configuration/#enabling-https-nginx", 
            "text": "This example is specifically for Ubuntu 16.04 with Nginx and uses an SSL certificate from Let's Encrypt.\nPlease follow  this  excellent tutorial on setting up nginx with an SSL cert from LetsEncrypt.", 
            "title": "Enabling HTTPS - Nginx"
        }, 
        {
            "location": "/Support/SSL-Configuration/#step-1", 
            "text": "Follow the LetsEncrypt tutorial until you get to  Step 2: Obtain and SSL Certificate.  \nIn this section you need to change some config in the Nginx configuration. The tutorial directs you to edit  /etc/nginx/sites-available/default  however in the standard LibreNMS install, the file you need to edit is actually  /etc/nginx/conf.d/librenms.conf .", 
            "title": "Step 1"
        }, 
        {
            "location": "/Support/SSL-Configuration/#step-2", 
            "text": "When you get to  Step 3: Configure TLS/SSL on Web Server (Nginx)  there are some differences again. \nFollow the instructions regarding the \"snippet\" configuration, the main differences come when you get to  Adjust the Nginx Configuration to Use SSL .\nHere you are again directed to edit  /etc/nginx/sites-available/default , so we need to go to  /etc/nginx/conf.d/librenms.conf .  sudo vi /etc/nginx/sites-available/default  The top section of this file will look like this:  server {\n    listen         80;\n    listen         [::]:80;\n    server_name    example.com;\n    root        /opt/librenms/html;\n    index       index.php;\n    access_log  /opt/librenms/logs/access_log;\n    error_log   /opt/librenms/logs/error_log;  Edit it to look like this (obviously changing example.com to your actual domain name):  server {\n    listen         80;\n    listen         [::]:80;\n    server_name    example.com;\n    return         301 https://$server_name$request_uri;\n}\n\n\nserver {\n listen              443 ssl http2;\n listen              [::]:443 ssl http2;\n include snippets/ssl-example.com.conf;\n include snippets/ssl-params.conf;\n server_name example.com;\n root        /opt/librenms/html;\n index       index.php;\n access_log  /opt/librenms/logs/access_log;\n error_log   /opt/librenms/logs/error_log;  This config will redirect HTTP traffic to HTTPS and use the SSL config that you have just set up.  Check for syntax errors sudo nginx -t  Then restart Nginx sudo systemctl restart nginx", 
            "title": "Step 2"
        }, 
        {
            "location": "/Support/SSL-Configuration/#step-3", 
            "text": "Follow the rest of the tutorial, especially if you have the server's firewall enabled.", 
            "title": "Step 3"
        }, 
        {
            "location": "/Support/SSL-Configuration/#centos", 
            "text": "", 
            "title": "CentOS"
        }, 
        {
            "location": "/Support/SSL-Configuration/#enabling-https-apache", 
            "text": "This example is specifically for CentOS 7 with Apache\nPlease follow  this  How To from CentOS wiki on setting up Apache with a SSL cert.", 
            "title": "Enabling HTTPS - Apache"
        }, 
        {
            "location": "/Support/SSL-Configuration/#step-1_1", 
            "text": "Follow the How to until you get to step 3. This is going to be little different with LibreNMS. \nYou will need to make changes in here  sudo vi /etc/httpd/conf.d/librenms.conf  Your VirtualHost for 443 will need to look something like this for LibreNMS\n(obviously changing librenms.example.com to your actual domain name)  VirtualHost *:443 \n        SSLEngine on\n        SSLCertificateFile /etc/pki/tls/certs/ca.crt\n        SSLCertificateKeyFile /etc/pki/tls/private/ca.key\n         Directory  /opt/librenms/html/ \n        AllowOverride All\n        Require all granted\n        Options FollowSymLinks MultiViews\n         /Directory \n        DocumentRoot /opt/librenms/html/\n        AllowEncodedSlashes NoDecode\n        ServerName librenms.example.com\n        CustomLog /opt/librenms/logs/access_log combined\n        ErrorLog /opt/librenms/logs/error_log /VirtualHost", 
            "title": "Step 1"
        }, 
        {
            "location": "/Support/SSL-Configuration/#step-2_1", 
            "text": "Then restart Apache  sudo systemctl restart httpd", 
            "title": "Step 2"
        }, 
        {
            "location": "/Support/SSL-Configuration/#step-3_1", 
            "text": "Follow the rest of the How To, especially if you have the server's firewall enabled.", 
            "title": "Step 3"
        }, 
        {
            "location": "/Support/Device-Troubleshooting/", 
            "text": "Capture Debug Information\n\n\nYou can use this feature to run Debug on Discovery, Poller, SNMP, Alerts.\nThis output information could be helpful for you in troubleshooting a device or when requesting help.\n\n\nThis feature can be found by going to the device that you are troubleshooting in the webui, clicking on the settings icon menu on far right and selecting \nCapture.\n\n\n\nDiscovery\n\n\nDiscovery will run and output debug infomation.\n\n\nPoller\n\n\nPoller will run and output debug information.\n\n\nSNMP\n\n\nSNMP will run SNMP Bulk Walk on the device and output the information.\n\n\nAlerts\n\n\nAlerts Capture is handy when you are creating alerts and need to see if your alert rule matches.", 
            "title": "Capture Debug Information"
        }, 
        {
            "location": "/Support/Device-Troubleshooting/#capture-debug-information", 
            "text": "You can use this feature to run Debug on Discovery, Poller, SNMP, Alerts.\nThis output information could be helpful for you in troubleshooting a device or when requesting help.  This feature can be found by going to the device that you are troubleshooting in the webui, clicking on the settings icon menu on far right and selecting \nCapture.", 
            "title": "Capture Debug Information"
        }, 
        {
            "location": "/Support/Device-Troubleshooting/#discovery", 
            "text": "Discovery will run and output debug infomation.", 
            "title": "Discovery"
        }, 
        {
            "location": "/Support/Device-Troubleshooting/#poller", 
            "text": "Poller will run and output debug information.", 
            "title": "Poller"
        }, 
        {
            "location": "/Support/Device-Troubleshooting/#snmp", 
            "text": "SNMP will run SNMP Bulk Walk on the device and output the information.", 
            "title": "SNMP"
        }, 
        {
            "location": "/Support/Device-Troubleshooting/#alerts", 
            "text": "Alerts Capture is handy when you are creating alerts and need to see if your alert rule matches.", 
            "title": "Alerts"
        }, 
        {
            "location": "/Support/Device-Sensors/", 
            "text": "Device Sensors\n\n\nLibreNMS has a standard for device sensors they are split into categories.\nThis doc is to help users understand device sensors in general, if you need help with developing sensors for a device please see the Contributing + Developing section. \n\n\nHealth Sensors\n\n\nThe High and Low values of these sensors can be edited in Web UI by going to the device settings -\n Health. There you can set your own custom\nHigh and Low values. List of these sensors can be found here \nLink\n\n\nNote\n Some values are defined by the manufactures and others are auto calculated when you add the device into librenms. Keep in mind every environment is different and may require user input.\n\n\nWireless Sensors\n\n\nSome Wireless have  High and Low values of these sensors can be edited in Web UI by going to the device settings -\n Health. There you can set your own custom High and Low values. List of these sensors can be found here \nLink\n\n\nNote\n Some values are defined by the manufactures and others are auto calculated when you add the device into librenms. Keep in mind every environment is different and may require user input.\n\n\nState Sensors\n\n\nReturn states of device entries sensors states. For example. \n\n\nDrive Status, Memory Status, Power Supply Status. \n\n\n0 = OK\n1 = Warning\n2 = Critical\n3 = Unknown\n\n\n\n\nAlerting Sensors\n\n\nThese alert rules can be found inside the Alert Rules Collection. The alert rules below are\nthe default alert rules, there are more device-specific alert rules in the alerts collection. \n\n\nSensor Over Limit Alert Rule:\n  Will alert on any sensor value that is over the limit.\n\n\nSensor Under Limit Alert Rule:\n Will alert on any sensor value that is under the limit.\n\n\nRemember\n you can set these limits inside device settings in the Web UI.\n\n\nState Sensor Critical:\n Will alert on any state that returns critical = 2\n\n\nState Sensor Warning:\n Will alert on any state that returns warning = 1", 
            "title": "Device Sensors"
        }, 
        {
            "location": "/Support/Device-Sensors/#device-sensors", 
            "text": "LibreNMS has a standard for device sensors they are split into categories.\nThis doc is to help users understand device sensors in general, if you need help with developing sensors for a device please see the Contributing + Developing section.", 
            "title": "Device Sensors"
        }, 
        {
            "location": "/Support/Device-Sensors/#health-sensors", 
            "text": "The High and Low values of these sensors can be edited in Web UI by going to the device settings -  Health. There you can set your own custom\nHigh and Low values. List of these sensors can be found here  Link  Note  Some values are defined by the manufactures and others are auto calculated when you add the device into librenms. Keep in mind every environment is different and may require user input.", 
            "title": "Health Sensors"
        }, 
        {
            "location": "/Support/Device-Sensors/#wireless-sensors", 
            "text": "Some Wireless have  High and Low values of these sensors can be edited in Web UI by going to the device settings -  Health. There you can set your own custom High and Low values. List of these sensors can be found here  Link  Note  Some values are defined by the manufactures and others are auto calculated when you add the device into librenms. Keep in mind every environment is different and may require user input.", 
            "title": "Wireless Sensors"
        }, 
        {
            "location": "/Support/Device-Sensors/#state-sensors", 
            "text": "Return states of device entries sensors states. For example.   Drive Status, Memory Status, Power Supply Status.   0 = OK\n1 = Warning\n2 = Critical\n3 = Unknown", 
            "title": "State Sensors"
        }, 
        {
            "location": "/Support/Device-Sensors/#alerting-sensors", 
            "text": "These alert rules can be found inside the Alert Rules Collection. The alert rules below are\nthe default alert rules, there are more device-specific alert rules in the alerts collection.   Sensor Over Limit Alert Rule:   Will alert on any sensor value that is over the limit.  Sensor Under Limit Alert Rule:  Will alert on any sensor value that is under the limit.  Remember  you can set these limits inside device settings in the Web UI.  State Sensor Critical:  Will alert on any state that returns critical = 2  State Sensor Warning:  Will alert on any state that returns warning = 1", 
            "title": "Alerting Sensors"
        }, 
        {
            "location": "/Developing/", 
            "text": "Copyright and Licensing\n\n\nAll contributors to LibreNMS retain copyright to their own code and are not\nrequired to sign over their rights to any other party. Code should be licensed\nunder the GPLv3 and MUST not contain non-GPL Observium code or GPL incompatible code.\nTo be safe do not view Observium code at all.  See \nLicensing\n for more details.\n\n\nGeneral Guidelines\n\n\n\n\nTest your patches first.\n\n\nDon't break the poller.  User interface blemishes are not critical, but\n  losing data from network monitoring systems might be.\n\n\nAs a general rule, if you're replacing lines of code with new lines of\n  code, don't comment them out, just delete them.  Commented out code makes\n  the patch and the resultant code harder to read, and there's no good\n  reason to it since we can easily get them back from git.\n\n\nIf you're fixing a bug or making another minor change, don't reformat the\n  code at the same time.  This makes it harder to see what's changed.  If\n  you need to reformat it after making the change, do so in a separate\n  commit.\n\n\nPlease join us in \ndiscord\n if you're\n  able.  Collaborating in real time makes the coordination of contributions\n  easier.\n\n\nEnsure you read the \nCode Guidelines\n documentation and understand the code\n  style that should be adhered to. You can \nvalidate that your code adheres to these guidelines\n before submitting.\n\n\nCheck \nStyle Guidelines\n for Web UI guidelines and conventions.\n\n\n\n\nHow to Contribute?\n\n\n\n\nUsing Git\n gives you step-by-step instructions on using git to submit a pull request.\n\n\nCode Structure\n can help you understand where specific code exists in LibreNMS.\n\n\nCreating Documentation\n It is very important for the continued\n improvement of LibreNMS that we have good documentation.  If you see anything that that needs improvement\n please submit a pull request to fix it.\n\n\n\n\nDon't be afraid to submit a GitHub Pull Request.  We will help you with anything that needs to be change\nor suggest ways of improving your patch.  Because the maintainers are volunteers too sometimes response may\nbe delayed or brief, please be patient or ask for clarification if needed. Thanks!\n\n\nGood places to start to learn PHP or improve your coding\n\n\n\n\nPHP: The Right Way\n A community curated list of best practices and quick help.\n\n\nLaracasts\n Video coding tutorials that are easy to follow. Many of the beginner videos are free. Suggested Series:\n\n\nThe PHP Practitioner\n\n\nObject-Oriented Bootcamp\n\n\nSimple Rules for Simpler Code", 
            "title": "Contributing"
        }, 
        {
            "location": "/Developing/#copyright-and-licensing", 
            "text": "All contributors to LibreNMS retain copyright to their own code and are not\nrequired to sign over their rights to any other party. Code should be licensed\nunder the GPLv3 and MUST not contain non-GPL Observium code or GPL incompatible code.\nTo be safe do not view Observium code at all.  See  Licensing  for more details.", 
            "title": "Copyright and Licensing"
        }, 
        {
            "location": "/Developing/#general-guidelines", 
            "text": "Test your patches first.  Don't break the poller.  User interface blemishes are not critical, but\n  losing data from network monitoring systems might be.  As a general rule, if you're replacing lines of code with new lines of\n  code, don't comment them out, just delete them.  Commented out code makes\n  the patch and the resultant code harder to read, and there's no good\n  reason to it since we can easily get them back from git.  If you're fixing a bug or making another minor change, don't reformat the\n  code at the same time.  This makes it harder to see what's changed.  If\n  you need to reformat it after making the change, do so in a separate\n  commit.  Please join us in  discord  if you're\n  able.  Collaborating in real time makes the coordination of contributions\n  easier.  Ensure you read the  Code Guidelines  documentation and understand the code\n  style that should be adhered to. You can  validate that your code adheres to these guidelines  before submitting.  Check  Style Guidelines  for Web UI guidelines and conventions.", 
            "title": "General Guidelines"
        }, 
        {
            "location": "/Developing/#how-to-contribute", 
            "text": "Using Git  gives you step-by-step instructions on using git to submit a pull request.  Code Structure  can help you understand where specific code exists in LibreNMS.  Creating Documentation  It is very important for the continued\n improvement of LibreNMS that we have good documentation.  If you see anything that that needs improvement\n please submit a pull request to fix it.   Don't be afraid to submit a GitHub Pull Request.  We will help you with anything that needs to be change\nor suggest ways of improving your patch.  Because the maintainers are volunteers too sometimes response may\nbe delayed or brief, please be patient or ask for clarification if needed. Thanks!", 
            "title": "How to Contribute?"
        }, 
        {
            "location": "/Developing/#good-places-to-start-to-learn-php-or-improve-your-coding", 
            "text": "PHP: The Right Way  A community curated list of best practices and quick help.  Laracasts  Video coding tutorials that are easy to follow. Many of the beginner videos are free. Suggested Series:  The PHP Practitioner  Object-Oriented Bootcamp  Simple Rules for Simpler Code", 
            "title": "Good places to start to learn PHP or improve your coding"
        }, 
        {
            "location": "/Developing/Using-Git/", 
            "text": "Git can have a bit of a steep learning curve, stick with it as it is worth learning the \nbasics\n2\n at least.\n\n\nIf you want to help develop LibreNMS and haven't really used Git before then this quick primer will help you get started.\n\n\nSome assumptions:\n\n\n\n\nWork is being done on a Linux box.\n\n\nLibreNMS is to be installed in /opt/librenms\n\n\nYou have git installed.\n\n\nYou have a \nGitHub Account\n.\n\n\nYou are using ssh to connect to GitHub (If not, replace git@github.com:/yourusername/librenms.git with\nhttps://github.com/yourusername/librenms.git.\n\n\n\n\n Replace yourusername with your GitHub username. \n\n\nFork LibreNMS repo\n\n\nYou do this directly within \nGitHub\n, click the 'Fork' button near the top right.\n\n\nIf you are associated with multiple organisations within GitHub then you might need to select which account you want to\npush the fork to.\n\n\nPrepare your git environment\n\n\nThese are the defaults that are recommended.\n\n\ngit config branch.autosetupmerge true\ngit config --global user.name \nJohn Doe\n\ngit config --global user.email johndoe@example.com\n\n\n\n\nClone the repo\n\n\nOk so now that you have forked the repo, you now need to clone it to your local install where you can then make the\nchanges you need and submit them back.\n\n\ncd /opt/\ngit clone git@github.com:/yourusername/librenms.git\n\n\n\n\nAdd Upstream repo\n\n\nTo be able to pull in changes from the master LibreNMS repo you need to have it setup on your system.\n\n\ngit remote add upstream https://github.com/librenms/librenms.git\n\n\n\n\nNow you have two configured remotes:\n\n\n\n\norigin: This is your repository, you can push and pull changes here.\n\n\nupstream: This is the main LibreNMS repository and you can only pull changes.\n\n\n\n\nWorkflow guide\n\n\nAs you become more familiar you may find a better workflow that fits your needs, until then this should be a safe\nworkflow for you to follow.\n\n\nBefore you start work on a new branch / feature. Make sure you are up to date.\n\n\ncd /opt/librenms\ngit checkout master\ngit pull upstream master\ngit push origin master\n\n\n\n\nAt this stage it's worth pointing out that we have some standard checks that are performed when you submit a \npull request, you can run these checks \nyourself\n to be sure no issues are present in your \npull request.\n\n\nNow, create a new branch to do you work on. It's important that you do this as you are then able to work on more than\none feature at a time and submit them as pull requests individually. If you did all your work in the master branch then\nit gets a bit messy!\n\n\nYou need to give your branch a name. If an issue is open (or closed on GitHub) then you can use that, in this example if the issue number is 123 then we will use issue-123. If a post exists on the community forum then you can use the post id like community-123. You're also welcome to use any arbitrary name for your branch but try and make it relevant to what the branch is.\n\n\ngit checkout -b issue-123\n\n\n\n\nNow, code away. Make the changes you need, test, change and test again :) When you are ready to submit the updates as a\npull request then commit away.\n\n\ngit add path/to/new/files/or/folders\ngit commit -a -m 'Added feature to do X, Y and Z'\ngit push origin issue-123\n\n\n\n\nIf you need to rebase against master then you can do this with:\n\n\ngit pull upstream master\ngit push origin issue-123\n\n\n\n\nIf after do this you get some merge conflicts then you need to resolve these before carrying on.\n\n\nPlease try to squash all commits into one, this isn't essential as we can do this when we merge but it would \nbe helpful to do this before you submit your pull request.\n\n\nNow you will be ready to submit a pull request from within GitHub. To do this, go to your GitHub page for the LibreNMS\nrepo. Now select the branch you have just been working on (issue-123) from the drop down to the left and then click\n'Pull Request'. Fill in the details to describe the work you have done and click 'Create pull request'.\n\n\nThanks for your first pull request :)\n\n\nOk, that should get you started on the contributing path. If you have any other questions then stop by our \nDiscord Server\n\n\nHints and tips\n\n\nUndo last commit\n\n\ngit reset --soft 'HEAD^'\n\n\nRemove specific commit\n\n\ngit revert \nHASH\n\n\nRestore deleted file\n\n\ngit checkout $(git rev-list -n 1 HEAD -- \"$file\")^ -- \"$file\"\n\n\nMerge last two commits\n\n\ngit rebase --interactive HEAD~2\n\nIn the text file that opens, change the last commit to squash from pick then save an exit.\n\n\nFor more tips take a look at \nOh shit, git!", 
            "title": "Using Git"
        }, 
        {
            "location": "/Developing/Using-Git/#fork-librenms-repo", 
            "text": "You do this directly within  GitHub , click the 'Fork' button near the top right.  If you are associated with multiple organisations within GitHub then you might need to select which account you want to\npush the fork to.", 
            "title": "Fork LibreNMS repo"
        }, 
        {
            "location": "/Developing/Using-Git/#prepare-your-git-environment", 
            "text": "These are the defaults that are recommended.  git config branch.autosetupmerge true\ngit config --global user.name  John Doe \ngit config --global user.email johndoe@example.com", 
            "title": "Prepare your git environment"
        }, 
        {
            "location": "/Developing/Using-Git/#clone-the-repo", 
            "text": "Ok so now that you have forked the repo, you now need to clone it to your local install where you can then make the\nchanges you need and submit them back.  cd /opt/\ngit clone git@github.com:/yourusername/librenms.git", 
            "title": "Clone the repo"
        }, 
        {
            "location": "/Developing/Using-Git/#add-upstream-repo", 
            "text": "To be able to pull in changes from the master LibreNMS repo you need to have it setup on your system.  git remote add upstream https://github.com/librenms/librenms.git  Now you have two configured remotes:   origin: This is your repository, you can push and pull changes here.  upstream: This is the main LibreNMS repository and you can only pull changes.", 
            "title": "Add Upstream repo"
        }, 
        {
            "location": "/Developing/Using-Git/#workflow-guide", 
            "text": "As you become more familiar you may find a better workflow that fits your needs, until then this should be a safe\nworkflow for you to follow.  Before you start work on a new branch / feature. Make sure you are up to date.  cd /opt/librenms\ngit checkout master\ngit pull upstream master\ngit push origin master  At this stage it's worth pointing out that we have some standard checks that are performed when you submit a \npull request, you can run these checks  yourself  to be sure no issues are present in your \npull request.  Now, create a new branch to do you work on. It's important that you do this as you are then able to work on more than\none feature at a time and submit them as pull requests individually. If you did all your work in the master branch then\nit gets a bit messy!  You need to give your branch a name. If an issue is open (or closed on GitHub) then you can use that, in this example if the issue number is 123 then we will use issue-123. If a post exists on the community forum then you can use the post id like community-123. You're also welcome to use any arbitrary name for your branch but try and make it relevant to what the branch is.  git checkout -b issue-123  Now, code away. Make the changes you need, test, change and test again :) When you are ready to submit the updates as a\npull request then commit away.  git add path/to/new/files/or/folders\ngit commit -a -m 'Added feature to do X, Y and Z'\ngit push origin issue-123  If you need to rebase against master then you can do this with:  git pull upstream master\ngit push origin issue-123  If after do this you get some merge conflicts then you need to resolve these before carrying on.  Please try to squash all commits into one, this isn't essential as we can do this when we merge but it would \nbe helpful to do this before you submit your pull request.  Now you will be ready to submit a pull request from within GitHub. To do this, go to your GitHub page for the LibreNMS\nrepo. Now select the branch you have just been working on (issue-123) from the drop down to the left and then click\n'Pull Request'. Fill in the details to describe the work you have done and click 'Create pull request'.  Thanks for your first pull request :)  Ok, that should get you started on the contributing path. If you have any other questions then stop by our  Discord Server", 
            "title": "Workflow guide"
        }, 
        {
            "location": "/Developing/Using-Git/#hints-and-tips", 
            "text": "Undo last commit  git reset --soft 'HEAD^'  Remove specific commit  git revert  HASH  Restore deleted file  git checkout $(git rev-list -n 1 HEAD -- \"$file\")^ -- \"$file\"  Merge last two commits  git rebase --interactive HEAD~2 \nIn the text file that opens, change the last commit to squash from pick then save an exit.  For more tips take a look at  Oh shit, git!", 
            "title": "Hints and tips"
        }, 
        {
            "location": "/Developing/Code-Guidelines/", 
            "text": "Coding guidelines\n\n\nThis document is here to help code standards for contributions towards LibreNMS. The original code base that we forked from had a lack of standards and as such the code base has a variety of different styles. Whilst we don't want to restrict how people write code, these guidelines should mean we have a good standard going forward that makes reading the code easier. All modern day ide's should be able to assist in these guidelines without breaking your usual workflow.\n\n\nPHP-FIG PSR-2 Coding Style\n\n\nAll new code should follow the \nPHP-FIG PSR-2 standard\n.\nBelow are a few key items from that specification, please make sure to follow the full spec.\n\n\nIndentation\n\n\nPlease use four (4) spaces to indent code rather than a tab. Ensure you increase indentation for nested code blocks.\n\n\nif ($foo == 5) {\n    if ($foo == 5) {\n        if ($foo == 5) {\n\n\n\n\nLine length\n\n\nTry to keep the length of a line under 80 characters. If you must exceed 80 characters, please keep it under 120 characters.  This makes reading the code easier and also enables compatibility for all screen sizes.\n\n\nControl structures\n\n\nA space must be used both before and after the parenthesis and also surrounding the condition operator.\n\n\nif ($foo == 5) {\n\n\n\n\nDo not put blocks of code on a single line, do use parenthesis\n\n\nif ($foo == 5) {\n    echo 'foo is 5';\n}\n\n\n\n\nelse and elseif should start on the same line as ending of the previous code block.\n\n\nif ($foo == 5) {\n    echo 'foo is 5';\n} elsif ($foo == 4) {\n    echo 'foo is 4';\n} else {\n    echo 'foo is something else';\n}\n\n\n\n\nIncluding files\n\n\nUsing parenthesis around file includes isn't required, instead just place the file in between ''\n\n\nrequire_once 'includes/snmp.inc.php';\n\n\n\n\nPHP tags\n\n\nEnsure you use \n?php rather than the shorthand version \n?.\n\n\n?php\n\n\n\n\nThe \n?\n \nmust be excluded\n from all files that only include PHP (no html). For instance anything in includes/ or html/includes don't need the tag along with config.php.", 
            "title": "Coding guidelines"
        }, 
        {
            "location": "/Developing/Code-Guidelines/#coding-guidelines", 
            "text": "This document is here to help code standards for contributions towards LibreNMS. The original code base that we forked from had a lack of standards and as such the code base has a variety of different styles. Whilst we don't want to restrict how people write code, these guidelines should mean we have a good standard going forward that makes reading the code easier. All modern day ide's should be able to assist in these guidelines without breaking your usual workflow.", 
            "title": "Coding guidelines"
        }, 
        {
            "location": "/Developing/Code-Guidelines/#php-fig-psr-2-coding-style", 
            "text": "All new code should follow the  PHP-FIG PSR-2 standard .\nBelow are a few key items from that specification, please make sure to follow the full spec.", 
            "title": "PHP-FIG PSR-2 Coding Style"
        }, 
        {
            "location": "/Developing/Code-Guidelines/#indentation", 
            "text": "Please use four (4) spaces to indent code rather than a tab. Ensure you increase indentation for nested code blocks.  if ($foo == 5) {\n    if ($foo == 5) {\n        if ($foo == 5) {", 
            "title": "Indentation"
        }, 
        {
            "location": "/Developing/Code-Guidelines/#line-length", 
            "text": "Try to keep the length of a line under 80 characters. If you must exceed 80 characters, please keep it under 120 characters.  This makes reading the code easier and also enables compatibility for all screen sizes.", 
            "title": "Line length"
        }, 
        {
            "location": "/Developing/Code-Guidelines/#control-structures", 
            "text": "A space must be used both before and after the parenthesis and also surrounding the condition operator.  if ($foo == 5) {  Do not put blocks of code on a single line, do use parenthesis  if ($foo == 5) {\n    echo 'foo is 5';\n}  else and elseif should start on the same line as ending of the previous code block.  if ($foo == 5) {\n    echo 'foo is 5';\n} elsif ($foo == 4) {\n    echo 'foo is 4';\n} else {\n    echo 'foo is something else';\n}", 
            "title": "Control structures"
        }, 
        {
            "location": "/Developing/Code-Guidelines/#including-files", 
            "text": "Using parenthesis around file includes isn't required, instead just place the file in between ''  require_once 'includes/snmp.inc.php';", 
            "title": "Including files"
        }, 
        {
            "location": "/Developing/Code-Guidelines/#php-tags", 
            "text": "Ensure you use  ?php rather than the shorthand version  ?.  ?php  The  ?   must be excluded  from all files that only include PHP (no html). For instance anything in includes/ or html/includes don't need the tag along with config.php.", 
            "title": "PHP tags"
        }, 
        {
            "location": "/Developing/Style-Guidelines/", 
            "text": "Style guidelines\n\n\nThis document is here to help style standards for contributions towards LibreNMS. These aren't strict rules but it is in\nthe users interest that a consistent well thought out Web UI is available.\n\n\nResponsiveness\n\n\nThe Web UI is designed to be mobile friendly and for the most part is and works well. It's worth spending sometime to\nread through the \nBootstrap website\n to learn more about how to keep things responsive.\n\n\nNavigation bar\n\n\n\n\n\n\nAlways pick the best location for new links to go, think about where users would expect the link to be located and name\nit so that it's obvious what it does.\n\n\n\n\n\n\nEnsure sub sections within the Navigation are separated correctly using \nli role=\"presentation\" class=\"divider\"\n/li\n.\n\n\n\n\n\n\nOnly use \nFont Awesome icons\n within the Navigation. It speeds up page load times quite\nconsiderably.\n\n\n\n\n\n\nButtons\n\n\nTry to keep buttons colored to reflect the action they will take. Buttons are set using Bootstrap classes. The size of\nthe buttons will depend on the area of the website being used but btn-sm is probably the most common.\n\n\n\n\n\n\nDelete / Remove buttons: btn btn-danger\n\n\n\n\n\n\nEdit / Update buttons: btn btn-primary\n\n\n\n\n\n\nAdd / Create buttons: btn btn-success\n\n\n\n\n\n\nTables\n\n\nUnless the table being used will only ever display a handful of items - yeah that's what we all said, then you need to\nwrite your table using \nJQuery Bootgrid\n. This shouldn't take that much more code to\ndo this but provides so much flexibility along with stopping the need for retrieving all the data from SQL in the first\nplace.\n\n\nAs an example pull request, see \nPR 706\n to get an idea of what\nit's like to convert an existing pure html table to Bootgrid.\n\n\nDatetime format\n\n\nWhen displaying datetimes, please ensure you use the format YYYY-MM-DD mm:hh:ss where possible, you shouldn't change the\norder of this as it will be confusing to users. Cutting it short to just display YYYY-MM-DD mm:hh is fine :).\n\n\nTo keep things consistent we have the following variables which should be used rather than to format dates yourself.\nThis has the added benefit that users can customise the format:\n\n\n# Date format for PHP date()s\n$config['dateformat']['long']                             = \nr\n; # RFC2822 style\n$config['dateformat']['compact']                          = \nY-m-d H:i:s\n;\n$config['dateformat']['byminute']                         = \nY-m-d H:i\n;\n$config['dateformat']['time']                             = \nH:i:s\n;\n\n# Date format for MySQL DATE_FORMAT\n$config['dateformat']['mysql']['compact']                 = \n%Y-%m-%d %H:%i:%s\n;\n$config['dateformat']['mysql']['date']                 = \n%Y-%m-%d\n;\n$config['dateformat']['mysql']['time']                 = \n%H:%i:%s\n;", 
            "title": "Style guidelines"
        }, 
        {
            "location": "/Developing/Style-Guidelines/#style-guidelines", 
            "text": "This document is here to help style standards for contributions towards LibreNMS. These aren't strict rules but it is in\nthe users interest that a consistent well thought out Web UI is available.", 
            "title": "Style guidelines"
        }, 
        {
            "location": "/Developing/Style-Guidelines/#responsiveness", 
            "text": "The Web UI is designed to be mobile friendly and for the most part is and works well. It's worth spending sometime to\nread through the  Bootstrap website  to learn more about how to keep things responsive.", 
            "title": "Responsiveness"
        }, 
        {
            "location": "/Developing/Style-Guidelines/#navigation-bar", 
            "text": "Always pick the best location for new links to go, think about where users would expect the link to be located and name\nit so that it's obvious what it does.    Ensure sub sections within the Navigation are separated correctly using  li role=\"presentation\" class=\"divider\" /li .    Only use  Font Awesome icons  within the Navigation. It speeds up page load times quite\nconsiderably.", 
            "title": "Navigation bar"
        }, 
        {
            "location": "/Developing/Style-Guidelines/#buttons", 
            "text": "Try to keep buttons colored to reflect the action they will take. Buttons are set using Bootstrap classes. The size of\nthe buttons will depend on the area of the website being used but btn-sm is probably the most common.    Delete / Remove buttons: btn btn-danger    Edit / Update buttons: btn btn-primary    Add / Create buttons: btn btn-success", 
            "title": "Buttons"
        }, 
        {
            "location": "/Developing/Style-Guidelines/#tables", 
            "text": "Unless the table being used will only ever display a handful of items - yeah that's what we all said, then you need to\nwrite your table using  JQuery Bootgrid . This shouldn't take that much more code to\ndo this but provides so much flexibility along with stopping the need for retrieving all the data from SQL in the first\nplace.  As an example pull request, see  PR 706  to get an idea of what\nit's like to convert an existing pure html table to Bootgrid.", 
            "title": "Tables"
        }, 
        {
            "location": "/Developing/Style-Guidelines/#datetime-format", 
            "text": "When displaying datetimes, please ensure you use the format YYYY-MM-DD mm:hh:ss where possible, you shouldn't change the\norder of this as it will be confusing to users. Cutting it short to just display YYYY-MM-DD mm:hh is fine :).  To keep things consistent we have the following variables which should be used rather than to format dates yourself.\nThis has the added benefit that users can customise the format:  # Date format for PHP date()s\n$config['dateformat']['long']                             =  r ; # RFC2822 style\n$config['dateformat']['compact']                          =  Y-m-d H:i:s ;\n$config['dateformat']['byminute']                         =  Y-m-d H:i ;\n$config['dateformat']['time']                             =  H:i:s ;\n\n# Date format for MySQL DATE_FORMAT\n$config['dateformat']['mysql']['compact']                 =  %Y-%m-%d %H:%i:%s ;\n$config['dateformat']['mysql']['date']                 =  %Y-%m-%d ;\n$config['dateformat']['mysql']['time']                 =  %H:%i:%s ;", 
            "title": "Datetime format"
        }, 
        {
            "location": "/Developing/Validating-Code/", 
            "text": "Validating Code\n\n\nAs part of the pull request process with GitHub we run some automated build tests to ensure that \nthe code is error free, standards \ncompliant\n\nand our test suite builds successfully.\n\n\nRather than submit a pull request and wait for the results, you can run these checks yourself to ensure \na more seamless merge.\n\n\n\n\nAll of these commands should be run from within the librenms directory and can be run as the librenms user \nunless otherwise noted.\n\n\n\n\nInstall composer (you can skip this if composer is already installed).\n\n\ncurl -sS https://getcomposer.org/installer | php\n\n\nComposer will now be installed into /opt/librenms/composer.phar.\n\n\nNow install the dependencies we require:\n\n\n./composer.phar install\n\n\nOnce composer is installed you can now run the code validation script:\n\n\n./scripts/pre-commit.php\n\n\nIf you see \nTests ok, submit away :)\n then all is well. If you see other output then it should contain \nwhat you need to resolve the issues and re-test.\n\n\nGit Hooks\n\n\nGit has a hook system which you can use to trigger checks at various stages. Utilising the \npre-commit.php\n \nyou can make this part of your commit process. You can do this in two ways:\n\n\n\n\nIf you already make use of \n.git/hooks/pre-commit\n then you can add:\n\n\n\n\n./scripts/pre-commit.php\n\n\nto be excecuted when you run \ngit commit\n.\n\n\n\n\nYou can symlink the \npre-commit.php\n file so it's executed directly on a \ngit commit\n:\n\n\n\n\nln -s /opt/librenms/scripts/pre-commit.php /opt/librenms/.git/hooks/pre-commit", 
            "title": "Validating Code"
        }, 
        {
            "location": "/Developing/Validating-Code/#validating-code", 
            "text": "As part of the pull request process with GitHub we run some automated build tests to ensure that \nthe code is error free, standards  compliant \nand our test suite builds successfully.  Rather than submit a pull request and wait for the results, you can run these checks yourself to ensure \na more seamless merge.   All of these commands should be run from within the librenms directory and can be run as the librenms user \nunless otherwise noted.   Install composer (you can skip this if composer is already installed).  curl -sS https://getcomposer.org/installer | php  Composer will now be installed into /opt/librenms/composer.phar.  Now install the dependencies we require:  ./composer.phar install  Once composer is installed you can now run the code validation script:  ./scripts/pre-commit.php  If you see  Tests ok, submit away :)  then all is well. If you see other output then it should contain \nwhat you need to resolve the issues and re-test.", 
            "title": "Validating Code"
        }, 
        {
            "location": "/Developing/Validating-Code/#git-hooks", 
            "text": "Git has a hook system which you can use to trigger checks at various stages. Utilising the  pre-commit.php  \nyou can make this part of your commit process. You can do this in two ways:   If you already make use of  .git/hooks/pre-commit  then you can add:   ./scripts/pre-commit.php  to be excecuted when you run  git commit .   You can symlink the  pre-commit.php  file so it's executed directly on a  git commit :   ln -s /opt/librenms/scripts/pre-commit.php /opt/librenms/.git/hooks/pre-commit", 
            "title": "Git Hooks"
        }, 
        {
            "location": "/Developing/Code-Structure/", 
            "text": "Code structure.\n\n\nThis document will try and provide a good overview of how the code is structured within LibreNMS. We will go through the main directories and provide information on how and when they are used.\n\n\ndoc/\n\n\nThis is the location of all the documentation for LibreNMS, this is in GitHub markdown format and can be viewed \nonline\n\n\nLibreNMS/\n\n\nAny classes should be under this directory, with a directory structure that matches the namespace.  One class per file. See \nPSR-0\n for details.\n\n\nhtml/\n\n\nAll web accessible files are located here.\n\n\nhtml/api_v0.php\n\n\nThis is the API routing file which directs users to the correct API function based on the API endpoint call.\n\n\nhtml/index.php\n\n\nThis is the main file which all links within LibreNMS are parsed through. It loads the majority of the relevant includes needed for the control panel to function. CSS and JS files are also loaded here.\n\n\nhtml/css\n\n\nAll used css files are located here. Apart from legacy files, anything in here is now a symlink.\n\n\nhtml/css/custom\n\n\nThis is a folder you can put custom css files into that won't interfere with auto updates\n\n\nhtml/forms\n\n\nThis folder contains all of the files that are dynamically included from an ajax call to html/ajax_form.php.\n\n\nhtml/includes\n\n\nThis is where the majority of the website core files are located. These tend to be files that contain functions or often used code segments that can be included where needed rather than duplicating code.\n\n\nhtml/includes/api_functions.inc.php\n\n\nAll of the functions and calls for the API are located here.\n\n\nhtml/includes/authenticate.inc.php, html/includes/authentication/\n\n\nThese files are what provides the authentication layer to the user. In the folder are separate files based on the auth type used, this means new authentication types can be added easily enough.\n\n\nhtml/includes/functions.inc.php\n\n\nThis contains the majority of functions used throughout the standard web ui.\n\n\nhtml/includes/reports/\n\n\nIn here is a list of of files that generate PDF reports available to the user. These are dynamically called in from html/pdf.pdf based on the report the user requests.\n\n\nhtml/includes/table/\n\n\nThis folder contains all of the ajax calls when generating the table of data. Most have been converted over so if you are planning to add a new table of data then you will do so here for all of the back end data calls.\n\n\nhtml/js/\n\n\nAll used JS files are located here. Apart from legacy files, anything in here is now a symlink.\n\n\nhtml/pages\n\n\nThis folder contains the URL structure when browsing the Web UI. So for example /devices/ is actually a call to html/pages/devices.inc.php, /device/tab=ports/ is html/pages/device/ports.inc.php.\n\n\nincludes/\n\n\nThis folder is quite big and contains all the files to make the cli and polling / discovery to work.\n\n\nincludes/discovery/, includes/polling/\n\n\nAll the discovery and polling code. The format is usually quite similar between discovery and polling. Both are made up of modules and the files within the relevant directories will match that module. So for instance if you want to update the os detection for a device, you would look in includes/discovery/os/ for a file named after the operating system such as linux: includes/discovery/linux.inc.php. Within here you would update or add support for newer OS'. This is the same for polling as well.\n\n\nlib/\n\n\nThis is for all of the libraries used by LibreNMS. If you are including a 3rd party module, you would add the files in here either via git subtree if it's hosted on GitHub or just by copying the folder. Please ensure you maintain any copyright notices. You will then need to either reference the files in this folder directly from where you need them or alternatively as is the case with css and js libraries then symlink the needed files.\n\n\nlogs/\n\n\nUsually contains your web servers logs but can also contain poller logs and other items,\n\n\nmibs/\n\n\nHere is where all of the mibs are located, traditionally this has meant having all mibs in one directory but for certain vendors this has changed and these are now located in sub folders.\n\n\nrrd/\n\n\nSimple enough, this is where all of the rrd files are created. They are stored in folders based on the device hostname.\n\n\nsql-schema/\n\n\nIn here are all of the SQL schema files. These are used to setup a new instance of LibreNMS automatically when build-base.php is called or when an update is done and includes/sql-schema/update.php is called.", 
            "title": "Code structure."
        }, 
        {
            "location": "/Developing/Code-Structure/#code-structure", 
            "text": "This document will try and provide a good overview of how the code is structured within LibreNMS. We will go through the main directories and provide information on how and when they are used.", 
            "title": "Code structure."
        }, 
        {
            "location": "/Developing/Code-Structure/#doc", 
            "text": "This is the location of all the documentation for LibreNMS, this is in GitHub markdown format and can be viewed  online", 
            "title": "doc/"
        }, 
        {
            "location": "/Developing/Code-Structure/#librenms", 
            "text": "Any classes should be under this directory, with a directory structure that matches the namespace.  One class per file. See  PSR-0  for details.", 
            "title": "LibreNMS/"
        }, 
        {
            "location": "/Developing/Code-Structure/#html", 
            "text": "All web accessible files are located here.", 
            "title": "html/"
        }, 
        {
            "location": "/Developing/Code-Structure/#htmlapi_v0php", 
            "text": "This is the API routing file which directs users to the correct API function based on the API endpoint call.", 
            "title": "html/api_v0.php"
        }, 
        {
            "location": "/Developing/Code-Structure/#htmlindexphp", 
            "text": "This is the main file which all links within LibreNMS are parsed through. It loads the majority of the relevant includes needed for the control panel to function. CSS and JS files are also loaded here.", 
            "title": "html/index.php"
        }, 
        {
            "location": "/Developing/Code-Structure/#htmlcss", 
            "text": "All used css files are located here. Apart from legacy files, anything in here is now a symlink.", 
            "title": "html/css"
        }, 
        {
            "location": "/Developing/Code-Structure/#htmlcsscustom", 
            "text": "This is a folder you can put custom css files into that won't interfere with auto updates", 
            "title": "html/css/custom"
        }, 
        {
            "location": "/Developing/Code-Structure/#htmlforms", 
            "text": "This folder contains all of the files that are dynamically included from an ajax call to html/ajax_form.php.", 
            "title": "html/forms"
        }, 
        {
            "location": "/Developing/Code-Structure/#htmlincludes", 
            "text": "This is where the majority of the website core files are located. These tend to be files that contain functions or often used code segments that can be included where needed rather than duplicating code.", 
            "title": "html/includes"
        }, 
        {
            "location": "/Developing/Code-Structure/#htmlincludesapi_functionsincphp", 
            "text": "All of the functions and calls for the API are located here.", 
            "title": "html/includes/api_functions.inc.php"
        }, 
        {
            "location": "/Developing/Code-Structure/#htmlincludesauthenticateincphp-htmlincludesauthentication", 
            "text": "These files are what provides the authentication layer to the user. In the folder are separate files based on the auth type used, this means new authentication types can be added easily enough.", 
            "title": "html/includes/authenticate.inc.php, html/includes/authentication/"
        }, 
        {
            "location": "/Developing/Code-Structure/#htmlincludesfunctionsincphp", 
            "text": "This contains the majority of functions used throughout the standard web ui.", 
            "title": "html/includes/functions.inc.php"
        }, 
        {
            "location": "/Developing/Code-Structure/#htmlincludesreports", 
            "text": "In here is a list of of files that generate PDF reports available to the user. These are dynamically called in from html/pdf.pdf based on the report the user requests.", 
            "title": "html/includes/reports/"
        }, 
        {
            "location": "/Developing/Code-Structure/#htmlincludestable", 
            "text": "This folder contains all of the ajax calls when generating the table of data. Most have been converted over so if you are planning to add a new table of data then you will do so here for all of the back end data calls.", 
            "title": "html/includes/table/"
        }, 
        {
            "location": "/Developing/Code-Structure/#htmljs", 
            "text": "All used JS files are located here. Apart from legacy files, anything in here is now a symlink.", 
            "title": "html/js/"
        }, 
        {
            "location": "/Developing/Code-Structure/#htmlpages", 
            "text": "This folder contains the URL structure when browsing the Web UI. So for example /devices/ is actually a call to html/pages/devices.inc.php, /device/tab=ports/ is html/pages/device/ports.inc.php.", 
            "title": "html/pages"
        }, 
        {
            "location": "/Developing/Code-Structure/#includes", 
            "text": "This folder is quite big and contains all the files to make the cli and polling / discovery to work.", 
            "title": "includes/"
        }, 
        {
            "location": "/Developing/Code-Structure/#includesdiscovery-includespolling", 
            "text": "All the discovery and polling code. The format is usually quite similar between discovery and polling. Both are made up of modules and the files within the relevant directories will match that module. So for instance if you want to update the os detection for a device, you would look in includes/discovery/os/ for a file named after the operating system such as linux: includes/discovery/linux.inc.php. Within here you would update or add support for newer OS'. This is the same for polling as well.", 
            "title": "includes/discovery/, includes/polling/"
        }, 
        {
            "location": "/Developing/Code-Structure/#lib", 
            "text": "This is for all of the libraries used by LibreNMS. If you are including a 3rd party module, you would add the files in here either via git subtree if it's hosted on GitHub or just by copying the folder. Please ensure you maintain any copyright notices. You will then need to either reference the files in this folder directly from where you need them or alternatively as is the case with css and js libraries then symlink the needed files.", 
            "title": "lib/"
        }, 
        {
            "location": "/Developing/Code-Structure/#logs", 
            "text": "Usually contains your web servers logs but can also contain poller logs and other items,", 
            "title": "logs/"
        }, 
        {
            "location": "/Developing/Code-Structure/#mibs", 
            "text": "Here is where all of the mibs are located, traditionally this has meant having all mibs in one directory but for certain vendors this has changed and these are now located in sub folders.", 
            "title": "mibs/"
        }, 
        {
            "location": "/Developing/Code-Structure/#rrd", 
            "text": "Simple enough, this is where all of the rrd files are created. They are stored in folders based on the device hostname.", 
            "title": "rrd/"
        }, 
        {
            "location": "/Developing/Code-Structure/#sql-schema", 
            "text": "In here are all of the SQL schema files. These are used to setup a new instance of LibreNMS automatically when build-base.php is called or when an update is done and includes/sql-schema/update.php is called.", 
            "title": "sql-schema/"
        }, 
        {
            "location": "/Developing/Creating-Documentation/", 
            "text": "Creating Documentation\n\n\nOne of the goals of the LibreNMS project is to enable users to get all of the help they need from our documentation.\n\n\nWriting docs\n\n\nWhen you are adding a new feature or extension, we need to have full documentation to go along with it. It's quite \nsimple to do this:\n\n\n\n\nFind the relevant directory to store your new document in, General, Support and Extensions are the most likely choices.\n\n\nThink of a descriptive name that's not too long, it should match what they may be looking for or describes the feature.\n\n\nEnsure the first line contains: \nsource: path/to/file.md\n - don't include the intial \ndoc/\n.\n\n\nIn the body of the document, be descriptive but keep things simple. Some tips:\n\n\nIf the document could cover different distros like CentOS and Ubuntu please try and include the information for them all.\n  If that's not possible then at least put a placeholder in asking for contributions.\n\n\nEnsure you use the correct formating for \ncommands\n and \ncode blocks\n by wrapping one liners in backticks or blocks in ```.\n\n\nPut content into sub-headings where possible to organise the content.\n\n\n\n\n\n\nIf you rename a file, please add a redirect in for the old file by using \nmeta http-equiv=\"refresh\" content=\"0; url=/NewLocation/\" /\n within the old file name.\n\n\n\n\nPlease ensure you add the document to the relevant section within \npages\n of \nmkdocs.yml\n so that it's in the correct menu and is built.\nForgetting this step will result in your document never seeing the light of day :)\n\n\nFormatting docs\n\n\nOur docs are based on Markdown using mkdocs which adheres to markdown specs and nothing more, because of that we also import a \ncouple of extra libraries:\n\n\n\n\npymdownx.tasklist\n\n\npymdownx.tilde\n\n\n\n\nThis means you can use:\n\n\n\n\n~~strikethrough~~\n to perform \nstrikethrough\n\n\n \n- [X] List items\n \n\n\nUrl's can be made \n[like this](http://www.librenms.org)\n \nlike this\n\n\nCode can be placed in `` for single line or ``` for multiline.\n\n\n#\n Can be used for main headings which translates to a \nh1\n tag, increasing the \n#\n's will increase the hX tags.\n\n\n###\n Can be used for sub-headings which will appear in the TOC to the left.\n\n\n\n\nMarkdown CheatSheet Link", 
            "title": "Creating Documentation"
        }, 
        {
            "location": "/Developing/Creating-Documentation/#creating-documentation", 
            "text": "One of the goals of the LibreNMS project is to enable users to get all of the help they need from our documentation.", 
            "title": "Creating Documentation"
        }, 
        {
            "location": "/Developing/Creating-Documentation/#writing-docs", 
            "text": "When you are adding a new feature or extension, we need to have full documentation to go along with it. It's quite \nsimple to do this:   Find the relevant directory to store your new document in, General, Support and Extensions are the most likely choices.  Think of a descriptive name that's not too long, it should match what they may be looking for or describes the feature.  Ensure the first line contains:  source: path/to/file.md  - don't include the intial  doc/ .  In the body of the document, be descriptive but keep things simple. Some tips:  If the document could cover different distros like CentOS and Ubuntu please try and include the information for them all.\n  If that's not possible then at least put a placeholder in asking for contributions.  Ensure you use the correct formating for  commands  and  code blocks  by wrapping one liners in backticks or blocks in ```.  Put content into sub-headings where possible to organise the content.    If you rename a file, please add a redirect in for the old file by using  meta http-equiv=\"refresh\" content=\"0; url=/NewLocation/\" /  within the old file name.   Please ensure you add the document to the relevant section within  pages  of  mkdocs.yml  so that it's in the correct menu and is built.\nForgetting this step will result in your document never seeing the light of day :)", 
            "title": "Writing docs"
        }, 
        {
            "location": "/Developing/Creating-Documentation/#formatting-docs", 
            "text": "Our docs are based on Markdown using mkdocs which adheres to markdown specs and nothing more, because of that we also import a \ncouple of extra libraries:   pymdownx.tasklist  pymdownx.tilde   This means you can use:   ~~strikethrough~~  to perform  strikethrough    - [X] List items    Url's can be made  [like this](http://www.librenms.org)   like this  Code can be placed in `` for single line or ``` for multiline.  #  Can be used for main headings which translates to a  h1  tag, increasing the  # 's will increase the hX tags.  ###  Can be used for sub-headings which will appear in the TOC to the left.   Markdown CheatSheet Link", 
            "title": "Formatting docs"
        }, 
        {
            "location": "/Developing/Licensing/", 
            "text": "Contributor Agreement\n\n\nBy contributing code to LibreNMS (whether by a GitHub pull request, or by\nany other means), you assert that:\n\n\n\n\n\n\nYou have the rights to include the code, either as its original author,\n  or due to it being released to you under a compatible license.\n\n\n\n\n\n\nYou are not aware of any third party claims on the code, including\n  copyright, patent, trademark, or any other legal claim.\n\n\n\n\n\n\nYou have acknowledged in the content of your contribution (usually as a\n  source code comment) any and all sources and influences used in the\n  production of that contribution.\n\n\n\n\n\n\nYou have not viewed code written under the \nObservium License\n in the\n  production of contributed code.  This includes all Observium code after\n  Subversion revision 3250 and any patches or other code covered by that\n  license after Tue May 29 13:08:01 2012 +0000 (the date of Observium r3250).\n\n\n\n\n\n\nYou are not running a copy of non-GPLed Observium, whether as part of your\n  work duties, or personally, or in any other capacity, and you have removed\n  any copies of non-GPLed Observium source code from your personal and work\n  systems.\n\n\n\n\n\n\nTo agree with these assertions, when you submit your first pull request you \nwill be asked after submitting to sign the CLA, you do this by following the \nlink provided in the PR and agreeing to the CLA using your GitHub account. \n\n\nLocal patches\n\n\nPlease note that the above contributor agreement means that if you have\ndeveloped a feature for a non-GPL version of Observium, we can't include it\nin LibreNMS, even if you have not released it to the public.  If there's a\nfeature you use to which this applies, please document its functionality in\nan issue, and we'll do our best to include equivalent functionality in\nLibreNMS.\n\n\nCopyright\n\n\nWe recommend that if you add a new file containing original code to the code\nbase that you include a copyright notice in it as per the Free Software\nFoundation's guidelines.  You might find something like the following header\nappropriate (although this is not legal advice ;-). Please also ensure you add \nthe package information to the header.\n\n\n?php\n/*\n * This program is free software: you can redistribute it and/or modify it\n * under the terms of the GNU General Public License as published by the\n * Free Software Foundation, either version 3 of the License, or (at your\n * option) any later version.  Please see LICENSE.txt at the top level of\n * the source code distribution for details.\n */\n\n * @package    LibreNMS\n * @subpackage webui\n * @link       http://librenms.org\n * @copyright  2017 Internet Widgitz Pty Ltd \ninfo@widgitz.com\n\n * @author     Me \nme@infowidgitz.com\n\n\n\n\n\n\nThe GPLv3 itself also contains recommendations about applying the GPL to\nyour code.  Please see LICENSE.txt at the top of this source code\ndistribution for details.\n\n\nIntegrating other code\n\n\nGiving credit where credit is due is critical to the Free Software\nphilosophy.  If you use code from somewhere else, even if it's trivial,\nbe sure to note this as a comment in the code (preferably) or the commit\nmessage.  Accurate attribution is crucial to our success as a Free Software\nproject.\n\n\n\n\n\n\nFor any dependency\n\n\n\n\nInclude its name, source URL, copyright notice, and license in \ndoc/General/Credits.md\n\n\n\n\n\n\n\n\nTo add a php dependency, please use composer\n\n\n\n\nAdd the dependency \ncomposer require --update-no-dev slim/slim\n\n\n\n\nAdd the files and commit \ncomposer commit\n or \ngit add -f vendor/ composer.json; git commit\n\n\n\n\n\n\nUpdating php dependencies\n\n\n\n\nUpdate dependencies \ncomposer update --no-dev\n\n\nAdd the files and commit \ncomposer commit\n or \ngit add -f vendor/; git commit\n\n\n\n\n\n\n\n\n\n\n\n\nTo add a javascript dependency\n\n\n\n\nWhere possible please include minimized libraries in the html/js/ folder.\n\n\n\n\n\n\n\n\nDon't submit code whose license conflicts with the GPLv3.  If you're not\n  sure, consult the \nFree Software Foundation's license list\n and see if\n  your code's license is on the compatible or incompatible list.  If you\n  prefer a non-copyleft license, Apache 2.0 is the recommended choice as per\n  the FSF guidelines.\n\n\n\n\n\n\nThe current Observium license is incompatible with GPLv3.  Don't submit\n  code from current Observium unless you are the copyright holder, and you\n  specifically state in the code that you are releasing it under GPLv3 (or a\n  compatible license).\n\n\n\n\n\n\nBecause contributing to Observium requires that you reassign copyright to\n  Adam Armstrong, if you want to release the same code for both Observium\n  and LibreNMS, you need to release it for LibreNMS first and mark it with\n  your own copyright notice, then release it to Observium and remove your\n  copyright, granting Adam ownership.\n\n\nPlease note that the above is necessary even if you don't care about\n  keeping the copyright to your code, because otherwise we could be accused\n  of misappropriating Observium's code.  As the code bases develop, we\n  expect them to diverge, which means this will become less of an issue\n  anyway.\n\n\n\n\nBecause the GPL's provisions about linking don't apply to PHP-based\n  projects, we interpret the linking provisions of the license to refer to\n  the use of PHP library functions called from LibreNMS code.\n\n\n\n\nWe consider inclusion of files such as MIBs in the LibreNMS repository to\n  be merely aggregation in a distribution medium as per the last paragraph\n  of the GPLv3 section 5 (\"Conveying Modified Source Versions\"), and because\n  they are not combined with LibreNMS to form a larger program, the GPLv3\n  does not apply to them.  This is not a legal ruling - it is simply a\n  statement of our intent and current interpretation.", 
            "title": "Licensing"
        }, 
        {
            "location": "/Developing/Licensing/#contributor-agreement", 
            "text": "By contributing code to LibreNMS (whether by a GitHub pull request, or by\nany other means), you assert that:    You have the rights to include the code, either as its original author,\n  or due to it being released to you under a compatible license.    You are not aware of any third party claims on the code, including\n  copyright, patent, trademark, or any other legal claim.    You have acknowledged in the content of your contribution (usually as a\n  source code comment) any and all sources and influences used in the\n  production of that contribution.    You have not viewed code written under the  Observium License  in the\n  production of contributed code.  This includes all Observium code after\n  Subversion revision 3250 and any patches or other code covered by that\n  license after Tue May 29 13:08:01 2012 +0000 (the date of Observium r3250).    You are not running a copy of non-GPLed Observium, whether as part of your\n  work duties, or personally, or in any other capacity, and you have removed\n  any copies of non-GPLed Observium source code from your personal and work\n  systems.    To agree with these assertions, when you submit your first pull request you \nwill be asked after submitting to sign the CLA, you do this by following the \nlink provided in the PR and agreeing to the CLA using your GitHub account.", 
            "title": "Contributor Agreement"
        }, 
        {
            "location": "/Developing/Licensing/#local-patches", 
            "text": "Please note that the above contributor agreement means that if you have\ndeveloped a feature for a non-GPL version of Observium, we can't include it\nin LibreNMS, even if you have not released it to the public.  If there's a\nfeature you use to which this applies, please document its functionality in\nan issue, and we'll do our best to include equivalent functionality in\nLibreNMS.", 
            "title": "Local patches"
        }, 
        {
            "location": "/Developing/Licensing/#copyright", 
            "text": "We recommend that if you add a new file containing original code to the code\nbase that you include a copyright notice in it as per the Free Software\nFoundation's guidelines.  You might find something like the following header\nappropriate (although this is not legal advice ;-). Please also ensure you add \nthe package information to the header.  ?php\n/*\n * This program is free software: you can redistribute it and/or modify it\n * under the terms of the GNU General Public License as published by the\n * Free Software Foundation, either version 3 of the License, or (at your\n * option) any later version.  Please see LICENSE.txt at the top level of\n * the source code distribution for details.\n */\n\n * @package    LibreNMS\n * @subpackage webui\n * @link       http://librenms.org\n * @copyright  2017 Internet Widgitz Pty Ltd  info@widgitz.com \n * @author     Me  me@infowidgitz.com   The GPLv3 itself also contains recommendations about applying the GPL to\nyour code.  Please see LICENSE.txt at the top of this source code\ndistribution for details.", 
            "title": "Copyright"
        }, 
        {
            "location": "/Developing/Licensing/#integrating-other-code", 
            "text": "Giving credit where credit is due is critical to the Free Software\nphilosophy.  If you use code from somewhere else, even if it's trivial,\nbe sure to note this as a comment in the code (preferably) or the commit\nmessage.  Accurate attribution is crucial to our success as a Free Software\nproject.    For any dependency   Include its name, source URL, copyright notice, and license in  doc/General/Credits.md     To add a php dependency, please use composer   Add the dependency  composer require --update-no-dev slim/slim   Add the files and commit  composer commit  or  git add -f vendor/ composer.json; git commit    Updating php dependencies   Update dependencies  composer update --no-dev  Add the files and commit  composer commit  or  git add -f vendor/; git commit       To add a javascript dependency   Where possible please include minimized libraries in the html/js/ folder.     Don't submit code whose license conflicts with the GPLv3.  If you're not\n  sure, consult the  Free Software Foundation's license list  and see if\n  your code's license is on the compatible or incompatible list.  If you\n  prefer a non-copyleft license, Apache 2.0 is the recommended choice as per\n  the FSF guidelines.    The current Observium license is incompatible with GPLv3.  Don't submit\n  code from current Observium unless you are the copyright holder, and you\n  specifically state in the code that you are releasing it under GPLv3 (or a\n  compatible license).    Because contributing to Observium requires that you reassign copyright to\n  Adam Armstrong, if you want to release the same code for both Observium\n  and LibreNMS, you need to release it for LibreNMS first and mark it with\n  your own copyright notice, then release it to Observium and remove your\n  copyright, granting Adam ownership.  Please note that the above is necessary even if you don't care about\n  keeping the copyright to your code, because otherwise we could be accused\n  of misappropriating Observium's code.  As the code bases develop, we\n  expect them to diverge, which means this will become less of an issue\n  anyway.   Because the GPL's provisions about linking don't apply to PHP-based\n  projects, we interpret the linking provisions of the license to refer to\n  the use of PHP library functions called from LibreNMS code.   We consider inclusion of files such as MIBs in the LibreNMS repository to\n  be merely aggregation in a distribution medium as per the last paragraph\n  of the GPLv3 section 5 (\"Conveying Modified Source Versions\"), and because\n  they are not combined with LibreNMS to form a larger program, the GPLv3\n  does not apply to them.  This is not a legal ruling - it is simply a\n  statement of our intent and current interpretation.", 
            "title": "Integrating other code"
        }, 
        {
            "location": "/Extensions/Component/", 
            "text": "About\n\n\nThe Component extension provides a generic database storage mechanism for discovery and poller modules.\nThe Driver behind this extension was to provide the features of ports, in a generic manner to discovery/poller modules.\n\n\nIt provides a status (Nagios convention), the ability to Disable (do not poll), or Ignore (do not Alert).\n\n\nDatabase Structure\n\n\nThe database structure contains the component table:\n\n\nmysql\n select * from component limit 1;\n+----+-----------+------+------------+--------+----------+--------+-------+\n| id | device_id | type | label      | status | disabled | ignore | error |\n+----+-----------+------+------------+--------+----------+--------+-------+\n|  9 |         1 | TEST | TEST LABEL |      0 |        1 |      1 |       |\n+----+-----------+------+------------+--------+----------+--------+-------+\n1 row in set (0.00 sec)\n\n\n\n\nThese fields are described below:\n\n\n\n\nid\n - ID for each component, unique index\n\n\ndevice_id\n - device_id from the devices table\n\n\ntype\n - name from the component_type table\n\n\nlabel\n - Display label for the component\n\n\nstatus\n - The status of the component, retrieved from the device\n\n\ndisabled\n - Should this component be polled?\n\n\nignore\n - Should this component be alerted on\n\n\nerror\n - Error message if in Alert state\n\n\n\n\nThe component_prefs table holds custom data in an Attribute/Value format:\n\n\nmysql\n select * from component_prefs limit 1;\n+----+-----------+-----------+-----------+\n| id | component | attribute | value     |\n+----+-----------+-----------+-----------+\n|  4 |         9 | TEST_ATTR | TEST_ATTR |\n+----+-----------+-----------+-----------+\n2 rows in set (0.00 sec)\n\n\n\n\nReserved Fields\n\n\nWhen this data from both the \ncomponent\n and \ncomponent_prefs\n tables is returned in one single consolidated array, there is the potential for someone to attempt to set an attribute (in the \ncomponent_prefs\n) table that is used in the \ncomponent\n table.\nBecause of this all fields of the \ncomponent\n table are reserved, they cannot be used as custom attributes, if you update these the module will attempt to write them to the \ncomponent\n table, not the \ncomponent_prefs\n table.\n\n\nUsing Components\n\n\nCreate an instance of the component class:\n\n\n$COMPONENT = new LibreNMS\\Component();\n\n\n\n\nRetrieving Components\n\n\nNow you can retrieve an array of the available components:\n\n\n$ARRAY = $COMPONENT-\ngetComponents($DEVICE_ID, $OPTIONS);\n\n\n\n\ngetComponents\n takes 2 arguments:\n\n\n\n\nDEVICE_ID\n or null for all devices.\n\n\nOPTIONS\n - an array of various options.\n\n\n\n\ngetComponents\n will return an array containing components in the following format:\n\n\nArray\n(\n    [X] =\n Array\n    (\n        [Y1] =\n Array\n        (\n            [device_id] =\n 1\n            [TEST_ATTR] =\n TEST_ATTR\n            [type] =\n TEST\n            [label] =\n TEST LABEL\n            [status] =\n 0\n            [ignore] =\n 1\n            [disabled] =\n 1\n            [error] =\n\n        ),\n        [Y2] =\n Array\n        (\n            [device_id] =\n 1\n            [TEST_ATTR] =\n TEST_ATTR\n            [type] =\n TESTING\n            [label] =\n TEST LABEL\n            [status] =\n 0\n            [ignore] =\n 1\n            [disabled] =\n 0\n            [error] =\n\n        ),\n    )\n)\n\n\n\n\nWhere X is the Device ID and Y1/Y2 is the Component ID. In the example above, \nTEST_ATTR\n is a custom field, the rest are reserved fields.\n\n\nOptions\n\n\nOptions can be supplied to \ngetComponents\n to influence which and how components are returned.\n\n\nFiltering\n\n\nYou can filter on any of the \nreserved\n fields. Filters are created in the following format:\n\n\n$options['filter']['FIELD'] = array ('OPERATOR', 'CRITERIA');\n\n\n\n\nWhere:\n\n\n\n\nFIELD\n - The \nreserved\n field to filter on\n\n\nOPERATOR\n - 'LIKE' or '=', are we checking if the FIELD equals or contains the CRITERIA.\n\n\nCRITERIA\n - The criteria to search on\n\n\n\n\nThere are 2 filtering shortcuts:\n\n\n$DEVICE_ID\n is a synonym for:\n\n\n$OPTIONS['filter']['device_id'] = array ('=', $DEVICE_ID);\n\n\n\n\n$OPTIONS['type'] = $TYPE\n is a synonym for:\n\n\n$OPTIONS['filter']['type'] = array ('=', $TYPE);\n\n\n\n\nSorting\n\n\nYou can sort the records that are returned by specifying the following option:\n\n\n$OPTIONS['sort'][FIELD] = 'DIRECTION';\n\n\n\n\nWhere Direction is one of:\n\n\n\n\nASC\n - Ascending, from Low to High\n\n\nDESC\n - Descending, from High to Low\n\n\n\n\nCreating Components\n\n\nTo create a new component, run the \ncreateComponent\n function.\n\n\n$ARRAY = $COMPONENT-\ncreateComponent($DEVICE_ID, $TYPE);\n\n\n\n\ncreateComponent\n takes 2 arguments:\n\n\n\n\nDEVICE_ID\n - The ID of the device to attach the component to.\n\n\nTYPE\n - The unique type for your module.\n\n\n\n\nThis will return a new, empty array with a component ID and Type set, all other fields will be set to defaults.\n\n\nArray\n(\n    [1] =\n Array\n    (\n        [type] =\n TESTING\n        [label] =\n\n        [status] =\n 1\n        [ignore] =\n 0\n        [disabled] =\n 0\n        [error] =\n\n    )\n)\n\n\n\n\nDeleting Components\n\n\nWhen a component is no longer needed, it can be deleted.\n\n\n$COMPONENT-\ndeleteComponent($COMPONENT_ID)\n\n\n\n\nThis will return \nTrue\n on success or \nFalse\n on failure.\n\n\nEditing Components\n\n\nTo edit a component, the procedure is:\n\n\n\n\nGet the Current Components\n\n\nEdit the array\n\n\nWrite the components\n\n\n\n\nEdit the Array\n\n\nOnce you have a component array from \ngetComponents\n the first thing to do is extract the components for only the single device you are editing. This is required because the \nsetComponentPrefs\n function only saves a single device at a time.\n\n\n$ARRAY = $COMPONENT-\ngetComponents($DEVICE_ID, $OPTIONS);\n$ARRAY = $ARRAY[$DEVICE_ID];\n\n\n\n\nThen simply edit this array to suit your needs.\nIf you need to add a new Attribute/Value pair you can:\n\n\n$ARRAY[COMPONENT_ID]['New Attribute'] = \nValue\n;\n\n\n\n\nIf you need to delete a previously set Attribute/Value pair you can:\n\n\nunset($ARRAY[COMPONENT_ID]['New Attribute']);\n\n\n\n\nIf you need to edit a previously set Attribute/Value pair you can:\n\n\n$ARRAY[COMPONENT_ID]['Existing Attribute'] = \nNew Value\n;\n\n\n\n\nWrite the components\n\n\nTo write component changes back to the database simply:\n\n\n$COMPONENT-\nsetComponentPrefs($DEVICE_ID, $ARRAY)\n\n\n\n\nWhen writing the component array there are several caveats to be aware of, these are:\n\n\n\n\n$ARRAY\n must be in the format of a single device ID - \n$ARRAY[$COMPONENT_ID][Attribute] = 'Value';\n NOT in the multi device format returned by \ngetComponents\n - \n$ARRAY[$DEVICE_ID][$COMPONENT_ID][Attribute] = 'Value';\n\n\nYou cannot edit the Component ID or the Device ID\n\n\nreserved\n fields can not be removed\n\n\nif a change is found an entry will be written to the eventlog.\n\n\n\n\nAPI\n\n\nComponent details are available via the API.\nPlease see the \nAPI-Docs\n for details.\n\n\nAlerting\n\n\nIt is intended that discovery/poller modules will detect the status of a component during the polling cycle.\nStatus is logged using the Nagios convention for status codes, where:\n    0 = Ok,\n    1 = Warning,\n    2 = Critical\n\n\nIf you are creating a poller module which can detect a fault condition simply set STATUS to something other than 0 and ERROR to a message that indicates the problem.\n\n\nTo actually raise an alert, the user will need to create an alert rule. To assist with this several Alerting Macro's have been created:\n\n\n\n\n%macro.component_normal\n - A component that is not disabled or ignored and in a Normal state.\n\n\n%macro.component_warning\n - A component that is not disabled or ignored and NOT in a Warning state.\n\n\n%macro.component_critical\n - A component that is not disabled or ignored and NOT in a Critical state.\n\n\n\n\nTo raise alerts for components, the following rules could be created:\n\n\n\n\n%macros.component_critical = \"1\"\n - To alert on all Critical components\n\n\n%macros.component_critical = \"1\" \n %component.type = \"\nType of Component\n\"\n - To alert on all Critical components of a particular type.\n\n\n\n\nIf there is a particular component you would like excluded from alerting, simply set the ignore field to 1.\n\n\nThe data that is written to each alert when it is raised is in the following format:\n\n\nCOMPONENT_TYPE - LABEL - ERROR\n\n\nExample Code\n\n\nTo see an example of how the component module can used, please see the following modules:\n\n\n\n\nCisco CBQoS\n\n\nincludes/discovery/cisco-cbqos.inc.php\n\n\nincludes/polling/cisco-cbqos.inc.php\n\n\nhtml/includes/graphs/device/cbqos_traffic.inc.php\n\n\n\n\n\n\nCisco OTV\n\n\nincludes/discovery/cisco-otv.inc.php\n\n\nincludes/polling/cisco-otv.inc.php\n\n\nhtml/includes/graphs/device/cisco-otv-mac.inc.php\n\n\nhtml/pages/routing/cisco-otv.inc.php", 
            "title": "About"
        }, 
        {
            "location": "/Extensions/Component/#about", 
            "text": "The Component extension provides a generic database storage mechanism for discovery and poller modules.\nThe Driver behind this extension was to provide the features of ports, in a generic manner to discovery/poller modules.  It provides a status (Nagios convention), the ability to Disable (do not poll), or Ignore (do not Alert).", 
            "title": "About"
        }, 
        {
            "location": "/Extensions/Component/#database-structure", 
            "text": "The database structure contains the component table:  mysql  select * from component limit 1;\n+----+-----------+------+------------+--------+----------+--------+-------+\n| id | device_id | type | label      | status | disabled | ignore | error |\n+----+-----------+------+------------+--------+----------+--------+-------+\n|  9 |         1 | TEST | TEST LABEL |      0 |        1 |      1 |       |\n+----+-----------+------+------------+--------+----------+--------+-------+\n1 row in set (0.00 sec)  These fields are described below:   id  - ID for each component, unique index  device_id  - device_id from the devices table  type  - name from the component_type table  label  - Display label for the component  status  - The status of the component, retrieved from the device  disabled  - Should this component be polled?  ignore  - Should this component be alerted on  error  - Error message if in Alert state   The component_prefs table holds custom data in an Attribute/Value format:  mysql  select * from component_prefs limit 1;\n+----+-----------+-----------+-----------+\n| id | component | attribute | value     |\n+----+-----------+-----------+-----------+\n|  4 |         9 | TEST_ATTR | TEST_ATTR |\n+----+-----------+-----------+-----------+\n2 rows in set (0.00 sec)", 
            "title": "Database Structure"
        }, 
        {
            "location": "/Extensions/Component/#reserved-fields", 
            "text": "When this data from both the  component  and  component_prefs  tables is returned in one single consolidated array, there is the potential for someone to attempt to set an attribute (in the  component_prefs ) table that is used in the  component  table.\nBecause of this all fields of the  component  table are reserved, they cannot be used as custom attributes, if you update these the module will attempt to write them to the  component  table, not the  component_prefs  table.", 
            "title": "Reserved Fields"
        }, 
        {
            "location": "/Extensions/Component/#using-components", 
            "text": "Create an instance of the component class:  $COMPONENT = new LibreNMS\\Component();", 
            "title": "Using Components"
        }, 
        {
            "location": "/Extensions/Component/#retrieving-components", 
            "text": "Now you can retrieve an array of the available components:  $ARRAY = $COMPONENT- getComponents($DEVICE_ID, $OPTIONS);  getComponents  takes 2 arguments:   DEVICE_ID  or null for all devices.  OPTIONS  - an array of various options.   getComponents  will return an array containing components in the following format:  Array\n(\n    [X] =  Array\n    (\n        [Y1] =  Array\n        (\n            [device_id] =  1\n            [TEST_ATTR] =  TEST_ATTR\n            [type] =  TEST\n            [label] =  TEST LABEL\n            [status] =  0\n            [ignore] =  1\n            [disabled] =  1\n            [error] = \n        ),\n        [Y2] =  Array\n        (\n            [device_id] =  1\n            [TEST_ATTR] =  TEST_ATTR\n            [type] =  TESTING\n            [label] =  TEST LABEL\n            [status] =  0\n            [ignore] =  1\n            [disabled] =  0\n            [error] = \n        ),\n    )\n)  Where X is the Device ID and Y1/Y2 is the Component ID. In the example above,  TEST_ATTR  is a custom field, the rest are reserved fields.", 
            "title": "Retrieving Components"
        }, 
        {
            "location": "/Extensions/Component/#options", 
            "text": "Options can be supplied to  getComponents  to influence which and how components are returned.", 
            "title": "Options"
        }, 
        {
            "location": "/Extensions/Component/#filtering", 
            "text": "You can filter on any of the  reserved  fields. Filters are created in the following format:  $options['filter']['FIELD'] = array ('OPERATOR', 'CRITERIA');  Where:   FIELD  - The  reserved  field to filter on  OPERATOR  - 'LIKE' or '=', are we checking if the FIELD equals or contains the CRITERIA.  CRITERIA  - The criteria to search on   There are 2 filtering shortcuts:  $DEVICE_ID  is a synonym for:  $OPTIONS['filter']['device_id'] = array ('=', $DEVICE_ID);  $OPTIONS['type'] = $TYPE  is a synonym for:  $OPTIONS['filter']['type'] = array ('=', $TYPE);", 
            "title": "Filtering"
        }, 
        {
            "location": "/Extensions/Component/#sorting", 
            "text": "You can sort the records that are returned by specifying the following option:  $OPTIONS['sort'][FIELD] = 'DIRECTION';  Where Direction is one of:   ASC  - Ascending, from Low to High  DESC  - Descending, from High to Low", 
            "title": "Sorting"
        }, 
        {
            "location": "/Extensions/Component/#creating-components", 
            "text": "To create a new component, run the  createComponent  function.  $ARRAY = $COMPONENT- createComponent($DEVICE_ID, $TYPE);  createComponent  takes 2 arguments:   DEVICE_ID  - The ID of the device to attach the component to.  TYPE  - The unique type for your module.   This will return a new, empty array with a component ID and Type set, all other fields will be set to defaults.  Array\n(\n    [1] =  Array\n    (\n        [type] =  TESTING\n        [label] = \n        [status] =  1\n        [ignore] =  0\n        [disabled] =  0\n        [error] = \n    )\n)", 
            "title": "Creating Components"
        }, 
        {
            "location": "/Extensions/Component/#deleting-components", 
            "text": "When a component is no longer needed, it can be deleted.  $COMPONENT- deleteComponent($COMPONENT_ID)  This will return  True  on success or  False  on failure.", 
            "title": "Deleting Components"
        }, 
        {
            "location": "/Extensions/Component/#editing-components", 
            "text": "To edit a component, the procedure is:   Get the Current Components  Edit the array  Write the components", 
            "title": "Editing Components"
        }, 
        {
            "location": "/Extensions/Component/#edit-the-array", 
            "text": "Once you have a component array from  getComponents  the first thing to do is extract the components for only the single device you are editing. This is required because the  setComponentPrefs  function only saves a single device at a time.  $ARRAY = $COMPONENT- getComponents($DEVICE_ID, $OPTIONS);\n$ARRAY = $ARRAY[$DEVICE_ID];  Then simply edit this array to suit your needs.\nIf you need to add a new Attribute/Value pair you can:  $ARRAY[COMPONENT_ID]['New Attribute'] =  Value ;  If you need to delete a previously set Attribute/Value pair you can:  unset($ARRAY[COMPONENT_ID]['New Attribute']);  If you need to edit a previously set Attribute/Value pair you can:  $ARRAY[COMPONENT_ID]['Existing Attribute'] =  New Value ;", 
            "title": "Edit the Array"
        }, 
        {
            "location": "/Extensions/Component/#write-the-components", 
            "text": "To write component changes back to the database simply:  $COMPONENT- setComponentPrefs($DEVICE_ID, $ARRAY)  When writing the component array there are several caveats to be aware of, these are:   $ARRAY  must be in the format of a single device ID -  $ARRAY[$COMPONENT_ID][Attribute] = 'Value';  NOT in the multi device format returned by  getComponents  -  $ARRAY[$DEVICE_ID][$COMPONENT_ID][Attribute] = 'Value';  You cannot edit the Component ID or the Device ID  reserved  fields can not be removed  if a change is found an entry will be written to the eventlog.", 
            "title": "Write the components"
        }, 
        {
            "location": "/Extensions/Component/#api", 
            "text": "Component details are available via the API.\nPlease see the  API-Docs  for details.", 
            "title": "API"
        }, 
        {
            "location": "/Extensions/Component/#alerting", 
            "text": "It is intended that discovery/poller modules will detect the status of a component during the polling cycle.\nStatus is logged using the Nagios convention for status codes, where:\n    0 = Ok,\n    1 = Warning,\n    2 = Critical  If you are creating a poller module which can detect a fault condition simply set STATUS to something other than 0 and ERROR to a message that indicates the problem.  To actually raise an alert, the user will need to create an alert rule. To assist with this several Alerting Macro's have been created:   %macro.component_normal  - A component that is not disabled or ignored and in a Normal state.  %macro.component_warning  - A component that is not disabled or ignored and NOT in a Warning state.  %macro.component_critical  - A component that is not disabled or ignored and NOT in a Critical state.   To raise alerts for components, the following rules could be created:   %macros.component_critical = \"1\"  - To alert on all Critical components  %macros.component_critical = \"1\"   %component.type = \" Type of Component \"  - To alert on all Critical components of a particular type.   If there is a particular component you would like excluded from alerting, simply set the ignore field to 1.  The data that is written to each alert when it is raised is in the following format:  COMPONENT_TYPE - LABEL - ERROR", 
            "title": "Alerting"
        }, 
        {
            "location": "/Extensions/Component/#example-code", 
            "text": "To see an example of how the component module can used, please see the following modules:   Cisco CBQoS  includes/discovery/cisco-cbqos.inc.php  includes/polling/cisco-cbqos.inc.php  html/includes/graphs/device/cbqos_traffic.inc.php    Cisco OTV  includes/discovery/cisco-otv.inc.php  includes/polling/cisco-otv.inc.php  html/includes/graphs/device/cisco-otv-mac.inc.php  html/pages/routing/cisco-otv.inc.php", 
            "title": "Example Code"
        }, 
        {
            "location": "/Extensions/MIB-based-polling/", 
            "text": "WARNING\n\n\nMIB-based polling is unmaintained and may be removed in the future.  It might overload your LibreNMS server,\ndestroy your data, set your routers on fire, and kick your cat.  It has been\ntested against a very limited set of devices (namely Ruckus ZD1000 wireless\ncontrollers, and \nnet-snmp\n on Linux).  It may fail badly on other hardware.\n\n\nThe approach taken is fairly simplistic and I claim no special expertise in\nunderstanding MIBs.  Most of my knowledge of SNMP comes from reading net-snmp\nman pages, and reverse engineering the output of snmptranslate and snmpwalk\nand trying to make devices work with LibreNMS.  I may have made false\nassumptions and probably use wrong terminology in many places.  Feel free to\noffer corrections/suggestions via pull requests or email.\n\n\nPaul Gear \n\n\nOverview\n\n\nThis is the 2nd experimental release of MIB polling.  If you used the 1st\nrelease, you MUST perform a data conversion of the MIB-based polling files\nusing the script \ncontrib/convert-mib-graphs.sh\n.  Failure to do so will\nresult in your data collection silently stopping.\n\n\nMIB-based polling is disabled by default; you must set\n    \n$config['poller_modules']['mib'] = 1;\n\nin \nconfig.php\n to enable it.\n\n\nPreparation\n\n\nMIB-based polling results in the creation of a separate RRD file for each\ndevice-MIB-OID-index combination encountered by LibreNMS.  Thus it can cause\nyour disk space requirements to grow enormously and rapidly.  As an example,\nenabling MIB-based polling on my test Ruckus ZD1000 wireless controller with\none (1) AP and one (1) user on that AP resulted in a 5 MB increase in RRD\nspace usage for that device.  Each RRD file is around 125 KB in size (on\nx64-64 systems) and is pre-allocated, so after the first discovery and poller\nrun of each device with MIB-based polling enabled, disk space should be stable.\nHowever, monitoring disk usage is your responsibility.  (The good news: you\ncan do this with LibreNMS. :-)\n\n\nUnless you are running LibreNMS on a powerful system with pure SSD for RRD\nstorage, it is strongly recommended that you enable rrdcached and ensure it is\nworking \nbefore\n enabling MIB-based polling.\n\n\nComponents\n\n\nThe components involved in MIB-based polling are:\n\n\nDiscovery\n\n\n\n\n\n\nOS discovery determines whether there are MIBs which should be polled.  If\n    so, they are registered in the \ndevice_mibs\n association table as relevant\n    to that device.  MIB associations for each device can be viewed at:\n    http://your.librenms.server/device/device=XXXX/tab=mib/\n    All MIBs used by MIB-based polling may be viewed at:\n    http://your.librenms.server/mibs/\n    All device associations created by MIB-based polling may be viewed at:\n    http://your.librenms.server/mib_assoc/ (Devices -\n MIB associations)\n\n\n\n\n\n\nIn addition, all devices are checked for a MIB matching their sysObjectID.\n    If there is a matching MIB available, it is automatically included.\n    The sysObjectID for each device is now displayed on the overview page:\n    http://your.librenms.server/device/device=XXXX/\n\n\n\n\n\n\nNote that the above means that no MIB-based polling will occur until the\n    devices in question are rediscovered.  If you want to begin MIB-based\n    polling immediately, you must force rediscovery from the web UI, or run it\n    from the CLI using \n./discovery.php -h HOSTNAME\n\n\n\n\n\n\nDuring discovery, relevant MIBs are parsed using \nsnmptranslate\n, and the\n    data returned is used to populate a database which guides the poller in\n    what to store.  At the moment, only OIDs of INTEGER, Integer32, Gauge32,\n    Unsigned32, Counter32, and Counter64 data types are parsed, and negative\n    values are untested.\n\n\n\n\n\n\nDevices may be excluded from MIB polling by changing the setting in the\n    device edit screen:\n    http://your.librenms.server/device/device=XXXX/tab=edit/section=modules/\n\n\n\n\n\n\nPolling\n\n\n\n\n\n\nDuring polling the MIB associations for the device are looked up, and the\n    MIB is polled for current values.  You can see the values which LibreNMS\n    has retrieved from the MIB poller in the \"Device MIB values\" section of\n    http://your.librenms.server/device/device=XXXX/tab=mib/\n\n\n\n\n\n\nData from the latest poll is saved in the table \ndevice_oids\n, and RRD\n    files are saved in the relevant device directory as\n    mibName-oidName-index.rrd\n\n\n\n\n\n\nGraphing\n\n\n\n\nFor each graph type defined in the database, a graph will appear in:\n    http://your.librenms.server/device/device=XXXX/tab=graphs/group=mib/\n\n\nMIB graphs are generated generically by\n    \nhtml/includes/graphs/device/mib.inc.php\n\n    There is presently no customisation of graphs available.\n\n\nIf there is only one index under a given OID, it is displayed as a normal\n    line graph; if there multiple OIDs, they are displayed as a stacked graph.\n    At the moment, all indices are placed in the same graph.  This is\n    non-optimal for, e.g., wifi controllers with hundreds of APs attached.\n\n\n\n\nAlerting\n\n\nThere is no specific support for alerting in the MIB-based polling engine, but\nthe data it collects may be used in alerts.  Here's an example of an alert\nwhich detects when a Ruckus wireless controller reports meshing disabled on an\naccess point:\n    http://libertysys.com.au/imagebin/3btw98DR.png\n\n\nAdding/testing other device types\n\n\nOne of the goals of this work is to help take out the heavy lifting of adding\nnew device types.  Even if you want fully-customised graphs or tables, you can\nstill use the MIB-based poller to make it easy to gather the data you want to\ngraph.\n\n\nHow to add a new device MIB\n\n\n\n\nEnsure the manufacturer's MIB is present in the mibs directory.  If you\n    plan to submit your work to LibreNMS, make sure you attribute the source\n    of the MIB, including the exact download URL if possible, or explicit\n    instructions about how to obtain it.\n\n\nCheck that \nsnmptranslate -Ts -M mibs -m MODULE | grep mibName\n produces\n    a named list of OIDs.  See the comments on \nsnmp_mib_walk()\n in\n    \nincludes/snmp.inc.php\n for an example.\n\n\nCheck that \nsnmptranslate -Td -On -M mibs -m MODULE MODULE::mibName\n\n    produces a parsed description of the OID values.  An example can be\n    found in the comments for \nsnmp_mib_parse()\n in \nincludes/snmp.inc.php\n.\n\n\nGet the \nsysObjectID\n from a device, for example:\n    \nsnmpget -v2c -c public -OUsb -m SNMPv2-MIB -M /opt/librenms/mibs -t 30 hostname sysObjectID.0\n\n\nEnsure \nsnmptranslate -m all -M /opt/librenms/mibs OID 2\n/dev/null\n\n    (where OID is the value returned for sysObjectID above) results in a\n    valid name for the MIB.  See the comments for \nsnmp_translate()\n in\n    \nincludes/snmp.inc.php\n for an example.  If this step fails, it means\n    there is something wrong with the MIB and \nnet-snmp\n cannot parse it.\n\n\nAdd any additional MIBs you wish to poll for specific device types to\n    \nincludes/discovery/os/OSNAME.inc.php\n by calling \npoll_mibs()\n with the\n    MIB module and name.  See \nincludes/discovery/os/ruckuswireless.inc.php\n\n    for an example.\n\n\nThat should be all you need to see MIB graphs!\n\n\nIf you want to develop more customised support for a particular OS, you\n    can follow the above process, then use the resultant data collected by\n    LibreNMS in the RRD files or the database tables \ndevice_oids\n\n\n\n\nConfiguration\n\n\nMain Configuration\n\n\nIn \n/opt/librenms/config.php\n add \n$config['poller_modules']['mib'] = 1;\n to enable MIB polling globally.\nAlternatively you can enable MIB polling per device by enabling it within the modules section for the specific device.\n\n\nDiscovery\n\n\nYou need to add your desired MIBs to \n/opt/librenms/mibs\n folder. \nYou will then need to create a list of the OIDs you wish to use in the OS definition.\n\n\nExample\n\n\n/opt/librenms/includes/definitions/ruckuswireless.yaml\n\n\nregister_mibs:\n    ruckusZDSystemStats: RUCKUS-ZD-SYSTEM-MIB\n    ruckusZDWLANTable: RUCKUS-ZD-WLAN-MIB\n    ruckusZDWLANAPTable: RUCKUS-ZD-WLAN-MIB\n    ruckusZDWLANAPRadioStatsTable: RUCKUS-ZD-WLAN-MIB\n\n\n\n\nThese OIDs and MIBs will then be registered as part of the OS discovery ready for mib polling to work.\n\n\nTODO\n\n\nWhat's not included in MIB-based polling at present?  These may be present in\nfuture versions.  Pull requests gratefully accepted!\n\n\n\n\nParse and save integer and timetick data types.\n\n\nFilter MIBs/OIDs from being polled and/or saved.\n\n\nMove graphs from the MIB section to elsewhere. e.g. If a device uses a\n    unique MIB for CPU utilisation, we should display it under the relevant\n    health tab.\n\n\nCombine multiple MIB values into graphs automatically on a predefined or\n    user-defined basis.\n\n\nInclude MIB types in stats submissions.", 
            "title": "Mib Based Polling (ALPHA)"
        }, 
        {
            "location": "/Extensions/MIB-based-polling/#warning", 
            "text": "MIB-based polling is unmaintained and may be removed in the future.  It might overload your LibreNMS server,\ndestroy your data, set your routers on fire, and kick your cat.  It has been\ntested against a very limited set of devices (namely Ruckus ZD1000 wireless\ncontrollers, and  net-snmp  on Linux).  It may fail badly on other hardware.  The approach taken is fairly simplistic and I claim no special expertise in\nunderstanding MIBs.  Most of my knowledge of SNMP comes from reading net-snmp\nman pages, and reverse engineering the output of snmptranslate and snmpwalk\nand trying to make devices work with LibreNMS.  I may have made false\nassumptions and probably use wrong terminology in many places.  Feel free to\noffer corrections/suggestions via pull requests or email.  Paul Gear", 
            "title": "WARNING"
        }, 
        {
            "location": "/Extensions/MIB-based-polling/#overview", 
            "text": "This is the 2nd experimental release of MIB polling.  If you used the 1st\nrelease, you MUST perform a data conversion of the MIB-based polling files\nusing the script  contrib/convert-mib-graphs.sh .  Failure to do so will\nresult in your data collection silently stopping.  MIB-based polling is disabled by default; you must set\n     $config['poller_modules']['mib'] = 1; \nin  config.php  to enable it.", 
            "title": "Overview"
        }, 
        {
            "location": "/Extensions/MIB-based-polling/#preparation", 
            "text": "MIB-based polling results in the creation of a separate RRD file for each\ndevice-MIB-OID-index combination encountered by LibreNMS.  Thus it can cause\nyour disk space requirements to grow enormously and rapidly.  As an example,\nenabling MIB-based polling on my test Ruckus ZD1000 wireless controller with\none (1) AP and one (1) user on that AP resulted in a 5 MB increase in RRD\nspace usage for that device.  Each RRD file is around 125 KB in size (on\nx64-64 systems) and is pre-allocated, so after the first discovery and poller\nrun of each device with MIB-based polling enabled, disk space should be stable.\nHowever, monitoring disk usage is your responsibility.  (The good news: you\ncan do this with LibreNMS. :-)  Unless you are running LibreNMS on a powerful system with pure SSD for RRD\nstorage, it is strongly recommended that you enable rrdcached and ensure it is\nworking  before  enabling MIB-based polling.", 
            "title": "Preparation"
        }, 
        {
            "location": "/Extensions/MIB-based-polling/#components", 
            "text": "The components involved in MIB-based polling are:", 
            "title": "Components"
        }, 
        {
            "location": "/Extensions/MIB-based-polling/#discovery", 
            "text": "OS discovery determines whether there are MIBs which should be polled.  If\n    so, they are registered in the  device_mibs  association table as relevant\n    to that device.  MIB associations for each device can be viewed at:\n    http://your.librenms.server/device/device=XXXX/tab=mib/\n    All MIBs used by MIB-based polling may be viewed at:\n    http://your.librenms.server/mibs/\n    All device associations created by MIB-based polling may be viewed at:\n    http://your.librenms.server/mib_assoc/ (Devices -  MIB associations)    In addition, all devices are checked for a MIB matching their sysObjectID.\n    If there is a matching MIB available, it is automatically included.\n    The sysObjectID for each device is now displayed on the overview page:\n    http://your.librenms.server/device/device=XXXX/    Note that the above means that no MIB-based polling will occur until the\n    devices in question are rediscovered.  If you want to begin MIB-based\n    polling immediately, you must force rediscovery from the web UI, or run it\n    from the CLI using  ./discovery.php -h HOSTNAME    During discovery, relevant MIBs are parsed using  snmptranslate , and the\n    data returned is used to populate a database which guides the poller in\n    what to store.  At the moment, only OIDs of INTEGER, Integer32, Gauge32,\n    Unsigned32, Counter32, and Counter64 data types are parsed, and negative\n    values are untested.    Devices may be excluded from MIB polling by changing the setting in the\n    device edit screen:\n    http://your.librenms.server/device/device=XXXX/tab=edit/section=modules/", 
            "title": "Discovery"
        }, 
        {
            "location": "/Extensions/MIB-based-polling/#polling", 
            "text": "During polling the MIB associations for the device are looked up, and the\n    MIB is polled for current values.  You can see the values which LibreNMS\n    has retrieved from the MIB poller in the \"Device MIB values\" section of\n    http://your.librenms.server/device/device=XXXX/tab=mib/    Data from the latest poll is saved in the table  device_oids , and RRD\n    files are saved in the relevant device directory as\n    mibName-oidName-index.rrd", 
            "title": "Polling"
        }, 
        {
            "location": "/Extensions/MIB-based-polling/#graphing", 
            "text": "For each graph type defined in the database, a graph will appear in:\n    http://your.librenms.server/device/device=XXXX/tab=graphs/group=mib/  MIB graphs are generated generically by\n     html/includes/graphs/device/mib.inc.php \n    There is presently no customisation of graphs available.  If there is only one index under a given OID, it is displayed as a normal\n    line graph; if there multiple OIDs, they are displayed as a stacked graph.\n    At the moment, all indices are placed in the same graph.  This is\n    non-optimal for, e.g., wifi controllers with hundreds of APs attached.", 
            "title": "Graphing"
        }, 
        {
            "location": "/Extensions/MIB-based-polling/#alerting", 
            "text": "There is no specific support for alerting in the MIB-based polling engine, but\nthe data it collects may be used in alerts.  Here's an example of an alert\nwhich detects when a Ruckus wireless controller reports meshing disabled on an\naccess point:\n    http://libertysys.com.au/imagebin/3btw98DR.png", 
            "title": "Alerting"
        }, 
        {
            "location": "/Extensions/MIB-based-polling/#addingtesting-other-device-types", 
            "text": "One of the goals of this work is to help take out the heavy lifting of adding\nnew device types.  Even if you want fully-customised graphs or tables, you can\nstill use the MIB-based poller to make it easy to gather the data you want to\ngraph.", 
            "title": "Adding/testing other device types"
        }, 
        {
            "location": "/Extensions/MIB-based-polling/#how-to-add-a-new-device-mib", 
            "text": "Ensure the manufacturer's MIB is present in the mibs directory.  If you\n    plan to submit your work to LibreNMS, make sure you attribute the source\n    of the MIB, including the exact download URL if possible, or explicit\n    instructions about how to obtain it.  Check that  snmptranslate -Ts -M mibs -m MODULE | grep mibName  produces\n    a named list of OIDs.  See the comments on  snmp_mib_walk()  in\n     includes/snmp.inc.php  for an example.  Check that  snmptranslate -Td -On -M mibs -m MODULE MODULE::mibName \n    produces a parsed description of the OID values.  An example can be\n    found in the comments for  snmp_mib_parse()  in  includes/snmp.inc.php .  Get the  sysObjectID  from a device, for example:\n     snmpget -v2c -c public -OUsb -m SNMPv2-MIB -M /opt/librenms/mibs -t 30 hostname sysObjectID.0  Ensure  snmptranslate -m all -M /opt/librenms/mibs OID 2 /dev/null \n    (where OID is the value returned for sysObjectID above) results in a\n    valid name for the MIB.  See the comments for  snmp_translate()  in\n     includes/snmp.inc.php  for an example.  If this step fails, it means\n    there is something wrong with the MIB and  net-snmp  cannot parse it.  Add any additional MIBs you wish to poll for specific device types to\n     includes/discovery/os/OSNAME.inc.php  by calling  poll_mibs()  with the\n    MIB module and name.  See  includes/discovery/os/ruckuswireless.inc.php \n    for an example.  That should be all you need to see MIB graphs!  If you want to develop more customised support for a particular OS, you\n    can follow the above process, then use the resultant data collected by\n    LibreNMS in the RRD files or the database tables  device_oids", 
            "title": "How to add a new device MIB"
        }, 
        {
            "location": "/Extensions/MIB-based-polling/#configuration", 
            "text": "", 
            "title": "Configuration"
        }, 
        {
            "location": "/Extensions/MIB-based-polling/#main-configuration", 
            "text": "In  /opt/librenms/config.php  add  $config['poller_modules']['mib'] = 1;  to enable MIB polling globally.\nAlternatively you can enable MIB polling per device by enabling it within the modules section for the specific device.", 
            "title": "Main Configuration"
        }, 
        {
            "location": "/Extensions/MIB-based-polling/#discovery_1", 
            "text": "You need to add your desired MIBs to  /opt/librenms/mibs  folder. \nYou will then need to create a list of the OIDs you wish to use in the OS definition.", 
            "title": "Discovery"
        }, 
        {
            "location": "/Extensions/MIB-based-polling/#example", 
            "text": "/opt/librenms/includes/definitions/ruckuswireless.yaml  register_mibs:\n    ruckusZDSystemStats: RUCKUS-ZD-SYSTEM-MIB\n    ruckusZDWLANTable: RUCKUS-ZD-WLAN-MIB\n    ruckusZDWLANAPTable: RUCKUS-ZD-WLAN-MIB\n    ruckusZDWLANAPRadioStatsTable: RUCKUS-ZD-WLAN-MIB  These OIDs and MIBs will then be registered as part of the OS discovery ready for mib polling to work.", 
            "title": "Example"
        }, 
        {
            "location": "/Extensions/MIB-based-polling/#todo", 
            "text": "What's not included in MIB-based polling at present?  These may be present in\nfuture versions.  Pull requests gratefully accepted!   Parse and save integer and timetick data types.  Filter MIBs/OIDs from being polled and/or saved.  Move graphs from the MIB section to elsewhere. e.g. If a device uses a\n    unique MIB for CPU utilisation, we should display it under the relevant\n    health tab.  Combine multiple MIB values into graphs automatically on a predefined or\n    user-defined basis.  Include MIB types in stats submissions.", 
            "title": "TODO"
        }, 
        {
            "location": "/Developing/Support-New-OS/", 
            "text": "This document is broken down into the relevant sections depending on what support you are adding.\nDuring all of these examples we will be using the OS of \npulse\n as the example OS we will add. \n\n\n\n\n\n\nAdding the initial detection.\n\n\nAdding Memory and CPU information.\n\n\nAdding Health / Sensor information.\n\n\nAdding Wireless Sensor information.\n\n\nAdding custom graphs.\n\n\nAdding Unit tests (required).\n\n\nOptional Settings\n\n\n\n\n\n\nWe currently have a script in pre-beta stages that can help speed up the process of deploying a new OS.\nIt has support for add sensors in a basic form (except state sensors).\n\n\nIn this example, we will add a new OS called test-os using the device ID 101 that has already been added.\nIt will be of the type network and belongs to the vendor, Cisco:\n\n\n./scripts/new-os.php -h 101 -o test-os -t network -v cisco\n\n\nThe process will then step you through the process with some more questions. Please be warned, this is \ncurrently pre-beta and may cause some issues. Please let us know of any on \nDiscord\n.", 
            "title": "Intro"
        }, 
        {
            "location": "/Developing/os/Initial-Detection/", 
            "text": "This document will provide the information you should need to add basic detection for a new OS.\n\n\nDiscovery\n\n\nDiscovery is now all done by yaml files, you do not and should not create a php file for discovery.\n\n\nCreate the new OS file which should be called \nincludes/definitions/pulse.yaml\n. Here is a working example:\n\n\nos: pulse\ntext: 'Pulse Secure'\ntype: firewall\nicon: pulse\nover:\n    - { graph: device_bits, text: 'Device Traffic' }\n    - { graph: device_processor, text: 'CPU Usage' }\n    - { graph: device_mempool, text: 'Memory Usage' }\ndiscovery:\n    - sysObjectID:\n        - .1.3.6.1.4.1.12532.\n\n\n\n\nover\n: This is a list of the graphs which will be shown within the device header bar (mini graphs top right).\n\n\ndiscovery\n: Here we are detecting this new OS using sysObjectID, this is the preferred method for detection. \nOther options are available:\n\n\n\n\nsysObjectID\n The preferred operator. Checks if the sysObjectID starts with one of the strings under this item\n\n\nsysDescr\n Use this in addition to sysObjectID if required. Check that the sysDescr contains one of the strings under this item\n\n\nsysObjectID_regex\n Please avoid use of this. Checks if the sysObjectID matches one of the regex statements under this item\n\n\nsysDescr_regex\n Please avoid use of this. Checks if the sysDescr matches one of the regex statements under this item\n\n\nsnmpget\n Do not use this unless none of the other methods work. Fetch an oid and compare it against a value.\n\n\n_except\n You can add this to any of the above to exclude that element. As an example:\n\n\n\n\ndiscovery:\n    - \n      sysObjectID:\n          - .1.3.6.1.4.1.12532.\n      sysDescr_except:\n          - 'Not some pulse'\n\n\n\n\ngroup\n: You can group certain OS' together by using group, for instance ios, nx-os, iosxr are all within a group \ncalled cisco.\n\n\nbad_ifXEntry\n: This is a list of models for which to tell LibreNMS that the device doesn't support ifXEntry and to \n ignore it:\n\n\n bad_ifXEntry:\n     - cisco1941\n     - cisco886Va\n     - cisco2811\n\n\n\n\nmib_dir\n: You can use this to specify the additional directories to look in for MIBs:\n\n\nmib_dir:\n    - juniper\n    - cisco\n\n\n\n\npoller_modules\n: This is a list of poller modules to either enable (1) or disable (0). Check \nincludes/defaults.inc.php\n to see which modules are enabled/disabled by default.\n\n\npoller_modules:\n    cisco-ace-serverfarms: 0\n    cisco-ace-loadbalancer: 0\n\n\n\n\ndiscovery_modules\n: This is the list of discovery modules to either enable (1) or disable (0). Check \nincludes/defaults.inc.php\n to see which modules are enabled/disabled by default.\n\n\ndiscovery_modules:\n     cisco-cef: 1\n     cisco-sla: 1\n     cisco-mac-accounting: 0\n\n\n\n\nDiscovery Logic\n\n\nYAML is converted to an array in PHP.  Consider the following YAML:\n\n\ndiscovery: \n  - sysObjectID: foo\n  - \n    sysDescr: [ snafu, exodar ]\n    sysObjectID: bar\n\n\n\n\n\nThis is how the discovery array would look in PHP:\n\n\n[\n     [\n       \nsysObjectID\n =\n \nfoo\n,\n     ],\n     [\n       \nsysDescr\n =\n [\n         \nsnafu\n,\n         \nexodar\n,\n       ],\n       \nsysObjectID\n =\n \nbar\n,\n     ]\n]\n\n\n\n\nThe logic for the discovery is as follows:\n1. One of the first level items must match\n2. ALL of the second level items must match (sysObjectID, sysDescr)\n3. One of the third level items (foo, [snafu,exodar], bar) must match\n\n\nSo, considering the example:\n - \nsysObjectID: foo, sysDescr: ANYTHING\n matches\n - \nsysObjectID: bar, sysDescr: ANYTHING\n does not match\n - \nsysObjectID: bar, sysDescr: exodar\n matches \n - \nsysObjectID: bar, sysDescr: snafu\n matches \n\n\nDiscovery helpers\n\n\nWithin the discovery code base if you are using php then the following helpers are available:\n\n\n$device['sysObjectID]\n: This will contain the full numerical sysObjectID for this device.\n\n$device['sysDescr']\n: This will contain the full sysDescr for this device.\n\n\nPoller\n\n\nOS polling is done within \nincludes/polling/os/$os.inc.php\n and is where we detect certain values.\n\n\n?php\n\n$version = preg_replace('/[\\r\\n\\\n]+/', ' ', snmp_get($device, \nproductVersion.0\n, \n-OQv\n, \nPULSESECURE-PSG-MIB\n));\n$hardware = \nJuniper \n . preg_replace('/[\\r\\n\\\n]+/', ' ', snmp_get($device, \nproductName.0\n, \n-OQv\n, \nPULSESECURE-PSG-MIB\n));\n\n\n\n\n\n$version\n: The version of the OS running on the device.\n\n\n$hardware\n: The hardware version for the device. For example: 'WS-C3560X-24T-S'\n\n\n$features\n: Features for the device, for example a list of cards in the slots of a modular chassis.\n\n\n$serial\n: The main serial number of the device.\n\n\nMIBs\n\n\nIf the device has MIBs available and you use it in the detection then you can add these in. It is highly \nrecommended that you add mibs to a vendor specific directory. For instance HP mibs are in \nmibs/hp\n. Please \n ensure that these directories are specified in the yaml detection file, see \nmib_dir\n above.\n\n\nIcon and Logo\n\n\nIt is highly recommended to use SVG images where possible, these scale and provide a nice visual image for users \nwith HiDPI screens. If you can't find SVG images then please use png.\n\n\nCreate an SVG image of the icon and logo.  Legacy PNG bitmaps are also supported but look bad on HiDPI.\n- A vector image should not contain padding.\n\n- The file should not be larger than 20 Kb. Simplify paths to reduce large files.\n- Use plain SVG without gzip compression.\n- The SVG root element must not contain length and width attributes, only viewBox.\n\n\nIcon\n\n\n\n\nSave the icon SVG to \nhtml/images/os/$os.svg\n.\n\n\nIcons should look good when viewed at 32x32 px.\n\n\nSquare icons are preferred to full logos with text.\n\n\nRemove small ornaments that are almost not visible when displayed with 32px width (e.g. \u00ae or \u2122).\n\n\n\n\nLogo\n\n\n\n\nSave the logo SVG to \nhtml/images/logos/$os.svg\n.\n\n\nLogos can be any dimension, but often are wide and contain the company name.\n\n\nIf a logo is not present, the icon will be used.\n\n\n\n\nHints\n\n\nHints for \nInkscape\n:\n\n\n\n\nYou can open a PDF or EPS to extract the logo.\n\n\nUngroup elements to isolate the logo.\n\n\nUse \nPath -\n Simplify\n to simplify paths of large files.\n\n\nUse \nFile -\n Document Properties\u2026 -\n Resize page to content\u2026\n to remove padding.\n\n\nUse \nFile -\n Clean up document\n to remove unused gradients, patterns, or markers.\n\n\nUse \nFile -\n Save As -\n Plain SVG\n to save the final image.\n\n\n\n\nBy optimizing the SVG you can shrink the file size in some cases to less than 20 %.\n\nSVG Optimizer\n does a great job. There is also an \nonline version\n.\n\n\nThe final check\n\n\nDiscovery\n\n\n./discovery.php -h HOSTNAME\n\n\n\n\nPolling\n\n\n./poller.php -h HOSTNAME\n\n\n\n\nAt this step we should see all the values retrieved in LibreNMS.\n\n\nNote: If you have made a number of changes to either the OS's Discovery files, it's possible earlier edits have been cached. As such, if you do not get expected behaviour when completing the final check above, try removing the cache file first:\n\n\nrm -f cache/os_defs.cache", 
            "title": "Initial Detection"
        }, 
        {
            "location": "/Developing/os/Initial-Detection/#discovery", 
            "text": "Discovery is now all done by yaml files, you do not and should not create a php file for discovery.  Create the new OS file which should be called  includes/definitions/pulse.yaml . Here is a working example:  os: pulse\ntext: 'Pulse Secure'\ntype: firewall\nicon: pulse\nover:\n    - { graph: device_bits, text: 'Device Traffic' }\n    - { graph: device_processor, text: 'CPU Usage' }\n    - { graph: device_mempool, text: 'Memory Usage' }\ndiscovery:\n    - sysObjectID:\n        - .1.3.6.1.4.1.12532.  over : This is a list of the graphs which will be shown within the device header bar (mini graphs top right).  discovery : Here we are detecting this new OS using sysObjectID, this is the preferred method for detection. \nOther options are available:   sysObjectID  The preferred operator. Checks if the sysObjectID starts with one of the strings under this item  sysDescr  Use this in addition to sysObjectID if required. Check that the sysDescr contains one of the strings under this item  sysObjectID_regex  Please avoid use of this. Checks if the sysObjectID matches one of the regex statements under this item  sysDescr_regex  Please avoid use of this. Checks if the sysDescr matches one of the regex statements under this item  snmpget  Do not use this unless none of the other methods work. Fetch an oid and compare it against a value.  _except  You can add this to any of the above to exclude that element. As an example:   discovery:\n    - \n      sysObjectID:\n          - .1.3.6.1.4.1.12532.\n      sysDescr_except:\n          - 'Not some pulse'  group : You can group certain OS' together by using group, for instance ios, nx-os, iosxr are all within a group \ncalled cisco.  bad_ifXEntry : This is a list of models for which to tell LibreNMS that the device doesn't support ifXEntry and to \n ignore it:   bad_ifXEntry:\n     - cisco1941\n     - cisco886Va\n     - cisco2811  mib_dir : You can use this to specify the additional directories to look in for MIBs:  mib_dir:\n    - juniper\n    - cisco  poller_modules : This is a list of poller modules to either enable (1) or disable (0). Check  includes/defaults.inc.php  to see which modules are enabled/disabled by default.  poller_modules:\n    cisco-ace-serverfarms: 0\n    cisco-ace-loadbalancer: 0  discovery_modules : This is the list of discovery modules to either enable (1) or disable (0). Check  includes/defaults.inc.php  to see which modules are enabled/disabled by default.  discovery_modules:\n     cisco-cef: 1\n     cisco-sla: 1\n     cisco-mac-accounting: 0", 
            "title": "Discovery"
        }, 
        {
            "location": "/Developing/os/Initial-Detection/#discovery-logic", 
            "text": "YAML is converted to an array in PHP.  Consider the following YAML:  discovery: \n  - sysObjectID: foo\n  - \n    sysDescr: [ snafu, exodar ]\n    sysObjectID: bar  This is how the discovery array would look in PHP:  [\n     [\n        sysObjectID  =   foo ,\n     ],\n     [\n        sysDescr  =  [\n          snafu ,\n          exodar ,\n       ],\n        sysObjectID  =   bar ,\n     ]\n]  The logic for the discovery is as follows:\n1. One of the first level items must match\n2. ALL of the second level items must match (sysObjectID, sysDescr)\n3. One of the third level items (foo, [snafu,exodar], bar) must match  So, considering the example:\n -  sysObjectID: foo, sysDescr: ANYTHING  matches\n -  sysObjectID: bar, sysDescr: ANYTHING  does not match\n -  sysObjectID: bar, sysDescr: exodar  matches \n -  sysObjectID: bar, sysDescr: snafu  matches", 
            "title": "Discovery Logic"
        }, 
        {
            "location": "/Developing/os/Initial-Detection/#discovery-helpers", 
            "text": "Within the discovery code base if you are using php then the following helpers are available:  $device['sysObjectID] : This will contain the full numerical sysObjectID for this device. $device['sysDescr'] : This will contain the full sysDescr for this device.", 
            "title": "Discovery helpers"
        }, 
        {
            "location": "/Developing/os/Initial-Detection/#poller", 
            "text": "OS polling is done within  includes/polling/os/$os.inc.php  and is where we detect certain values.  ?php\n\n$version = preg_replace('/[\\r\\n\\ ]+/', ' ', snmp_get($device,  productVersion.0 ,  -OQv ,  PULSESECURE-PSG-MIB ));\n$hardware =  Juniper   . preg_replace('/[\\r\\n\\ ]+/', ' ', snmp_get($device,  productName.0 ,  -OQv ,  PULSESECURE-PSG-MIB ));  $version : The version of the OS running on the device.  $hardware : The hardware version for the device. For example: 'WS-C3560X-24T-S'  $features : Features for the device, for example a list of cards in the slots of a modular chassis.  $serial : The main serial number of the device.", 
            "title": "Poller"
        }, 
        {
            "location": "/Developing/os/Initial-Detection/#mibs", 
            "text": "If the device has MIBs available and you use it in the detection then you can add these in. It is highly \nrecommended that you add mibs to a vendor specific directory. For instance HP mibs are in  mibs/hp . Please \n ensure that these directories are specified in the yaml detection file, see  mib_dir  above.", 
            "title": "MIBs"
        }, 
        {
            "location": "/Developing/os/Initial-Detection/#icon-and-logo", 
            "text": "It is highly recommended to use SVG images where possible, these scale and provide a nice visual image for users \nwith HiDPI screens. If you can't find SVG images then please use png.  Create an SVG image of the icon and logo.  Legacy PNG bitmaps are also supported but look bad on HiDPI.\n- A vector image should not contain padding. \n- The file should not be larger than 20 Kb. Simplify paths to reduce large files.\n- Use plain SVG without gzip compression.\n- The SVG root element must not contain length and width attributes, only viewBox.", 
            "title": "Icon and Logo"
        }, 
        {
            "location": "/Developing/os/Initial-Detection/#icon", 
            "text": "Save the icon SVG to  html/images/os/$os.svg .  Icons should look good when viewed at 32x32 px.  Square icons are preferred to full logos with text.  Remove small ornaments that are almost not visible when displayed with 32px width (e.g. \u00ae or \u2122).", 
            "title": "Icon"
        }, 
        {
            "location": "/Developing/os/Initial-Detection/#logo", 
            "text": "Save the logo SVG to  html/images/logos/$os.svg .  Logos can be any dimension, but often are wide and contain the company name.  If a logo is not present, the icon will be used.", 
            "title": "Logo"
        }, 
        {
            "location": "/Developing/os/Initial-Detection/#hints", 
            "text": "Hints for  Inkscape :   You can open a PDF or EPS to extract the logo.  Ungroup elements to isolate the logo.  Use  Path -  Simplify  to simplify paths of large files.  Use  File -  Document Properties\u2026 -  Resize page to content\u2026  to remove padding.  Use  File -  Clean up document  to remove unused gradients, patterns, or markers.  Use  File -  Save As -  Plain SVG  to save the final image.   By optimizing the SVG you can shrink the file size in some cases to less than 20 %. SVG Optimizer  does a great job. There is also an  online version .", 
            "title": "Hints"
        }, 
        {
            "location": "/Developing/os/Initial-Detection/#the-final-check", 
            "text": "Discovery  ./discovery.php -h HOSTNAME  Polling  ./poller.php -h HOSTNAME  At this step we should see all the values retrieved in LibreNMS.  Note: If you have made a number of changes to either the OS's Discovery files, it's possible earlier edits have been cached. As such, if you do not get expected behaviour when completing the final check above, try removing the cache file first:  rm -f cache/os_defs.cache", 
            "title": "The final check"
        }, 
        {
            "location": "/Developing/os/Mem-CPU-Information/", 
            "text": "This document will guide you through adding detection for Memory / Processor for your new device.\n\n\nMemory\n\n\nDetection for memory is done via two php scripts, one for discovery and the other for polling:\n\n\nincludes/discovery/mempools/pulse.inc.php\n\n\n?php\n\nif ($device['os'] === 'pulse') {\n    echo 'PULSE-MEMORY-POOL: ';\n\n    $usage = str_replace('\n', \n, snmp_get($device, 'iveMemoryUtil.0', '-OvQ', 'PULSESECURE-PSG-MIB'));\n\n    if (is_numeric($usage)) {\n        discover_mempool($valid_mempool, $device, 0, 'pulse-mem', 'Main Memory', '100', null, null);\n    }\n}\n\n\n\n\nincludes/polling/mempools/pulse.inc.php\n\n\n?php\n\necho 'Pulse Secure MemPool\\n';\n\n$perc = str_replace('\n', \n, snmp_get($device, \niveMemoryUtil.0\n, '-OvQ', 'PULSESECURE-PSG-MIB'));\n\nif (is_numeric($perc)) {\n    $memory_available = str_replace('\n', \n, snmp_get($device, \nmemTotalReal.0\n, '-OvQ', 'UCD-SNMP-MIB'));\n    $mempool['total'] = $memory_available;\n    $mempool['used'] = ($memory_available / 100 * $perc);\n    $mempool['free'] = ($memory_available - $mempool['used']);\n}\n\n\n\n\nProcessor\n\n\nDetection for processors is done via a single script unless custom processing of data is required (as in this example).\n\n\nincludes/discovery/processors/pulse.inc.php\n\n\n?php\n\nif ($device['os'] === 'pulse') {\n    echo 'Pulse Secure : ';\n\n    $descr = 'Processor';\n    $usage = str_replace('\n', \n, snmp_get($device, 'iveCpuUtil.0', '-OvQ', 'PULSESECURE-PSG-MIB'));\n\n    if (is_numeric($usage)) {\n        discover_processor($valid['processor'], $device, 'iveCpuUtil.0', '0', 'pulse-cpu', $descr, '100', $usage, null, null);\n    }\n}\n\n\n\n\nincludes/polling/processors/pulse.inc.php\n\n\n?php\n\necho 'Pulse Secure CPU Usage';\n\n$usage = str_replace('\n', \n, snmp_get($device, 'iveCpuUtil.0', '-OvQ', 'PULSESECURE-PSG-MIB'));\n\nif (is_numeric($usage)) {\n    $proc = ($usage * 100);\n}", 
            "title": "Mem CPU Information"
        }, 
        {
            "location": "/Developing/os/Mem-CPU-Information/#memory", 
            "text": "Detection for memory is done via two php scripts, one for discovery and the other for polling:  includes/discovery/mempools/pulse.inc.php  ?php\n\nif ($device['os'] === 'pulse') {\n    echo 'PULSE-MEMORY-POOL: ';\n\n    $usage = str_replace(' ',  , snmp_get($device, 'iveMemoryUtil.0', '-OvQ', 'PULSESECURE-PSG-MIB'));\n\n    if (is_numeric($usage)) {\n        discover_mempool($valid_mempool, $device, 0, 'pulse-mem', 'Main Memory', '100', null, null);\n    }\n}  includes/polling/mempools/pulse.inc.php  ?php\n\necho 'Pulse Secure MemPool\\n';\n\n$perc = str_replace(' ',  , snmp_get($device,  iveMemoryUtil.0 , '-OvQ', 'PULSESECURE-PSG-MIB'));\n\nif (is_numeric($perc)) {\n    $memory_available = str_replace(' ',  , snmp_get($device,  memTotalReal.0 , '-OvQ', 'UCD-SNMP-MIB'));\n    $mempool['total'] = $memory_available;\n    $mempool['used'] = ($memory_available / 100 * $perc);\n    $mempool['free'] = ($memory_available - $mempool['used']);\n}", 
            "title": "Memory"
        }, 
        {
            "location": "/Developing/os/Mem-CPU-Information/#processor", 
            "text": "Detection for processors is done via a single script unless custom processing of data is required (as in this example).  includes/discovery/processors/pulse.inc.php  ?php\n\nif ($device['os'] === 'pulse') {\n    echo 'Pulse Secure : ';\n\n    $descr = 'Processor';\n    $usage = str_replace(' ',  , snmp_get($device, 'iveCpuUtil.0', '-OvQ', 'PULSESECURE-PSG-MIB'));\n\n    if (is_numeric($usage)) {\n        discover_processor($valid['processor'], $device, 'iveCpuUtil.0', '0', 'pulse-cpu', $descr, '100', $usage, null, null);\n    }\n}  includes/polling/processors/pulse.inc.php  ?php\n\necho 'Pulse Secure CPU Usage';\n\n$usage = str_replace(' ',  , snmp_get($device, 'iveCpuUtil.0', '-OvQ', 'PULSESECURE-PSG-MIB'));\n\nif (is_numeric($usage)) {\n    $proc = ($usage * 100);\n}", 
            "title": "Processor"
        }, 
        {
            "location": "/Developing/os/Test-Units/", 
            "text": "Tests\n\n\nTests ensure LibreNMS works as expected, now and in the future.  New OS should provide as much test data as needed and\nadded test data for existing OS is welcome.\n\n\nSaved snmp data can be found in \ntests/snmpsim/*.snmprec\n and saved database data can be found in \ntests/data/*.json\n.\nPlease review this for any sensitive data \nbefore\n submitting.  When replacing data, make sure it is modified in a\nconsistent manner.\n\n\n\n\nWe utilise \nsnmpsim\n to do unit testing. For OS discovery, we can mock snmpsim, but\nfor other tests you will need it installed and functioning.  We run snmpsim during our integration tests, but not by\ndefault when running \n./scripts/pre-commit.php\n.\n\n\n\n\nCapturing test data\n\n\n./scripts/collect-snmp-data.php\n is provided to make it easy to collect data for tests.  Running collect-snmp-data.php\n with the --hostname (-h) allows you to capture all data used to discover and poll a device already added to LibreNMS.\n Make sure to re-run the script if you add additional support. Check the command-line help for more options.\n\n\nAfter you have collected snmp data, run \n./scripts/save-test-data.php\n with the --os (-o) option to dump the post discovery\nand post poll database entries to json files.\n\n\nGenerally, you will only need to capture data once.  After you have the data you need in the snmprec file, you can\njust use save-test-data.php to update the database dump (json) after that.\n\n\nOS Variants\n\n\nIf test data already exists, but is for a different device/configuration then you should use the --variant (-v) option to\nspecify a different variant of the os, this will be tested completely separate from other variants.  If there is only\none variant, please do not specify one.\n\n\nRunning tests\n\n\nAfter you have saved your test data, you should run \n./scripts/pre-commit.php -p -u\n verify they pass.\n\n\nTo run the full suite of tests enable database and snmpsim reliant tests: \n./scripts/pre-commit.php --db --snmpsim -p -u\n\n\nSpecific OS\n\n\n./scripts/pre-commit.php -p -o osname\n\n\nSpecific Module\n\n\n./scripts/pre-commit.php -p -m modulename\n\n\nUsing snmpsim for testing\n\n\nYou can run snmpsim to access test data by running \n./scripts/collect-snmp-data.php --snmpsim\n\n\nYou may then run snmp queries against it using the os (and variant) as the community and 127.1.6.1:1161 as the host.\n\n\nsnmpget -v 2c -c ios_c3560e 127.1.6.1:1161 sysDescr.0\n\n\n\n\nSnmprec format\n\n\nSnmprec files are simple files that store the snmp data. The data format is simple with three columns: numeric oid, type\ncode, and data. Here is an example snippet.\n\n\n1.3.6.1.2.1.1.1.0|4|Pulse Secure,LLC,MAG-2600,8.0R14 (build 41869)\n1.3.6.1.2.1.1.2.0|6|1.3.6.1.4.1.12532.254.1.1\n\n\n\n\nDuring testing LibreNMS will use any info in the snmprec file for snmp calls.  This one provides\nsysDescr (\n.1.3.6.1.2.1.1.1.0\n, 4 = Octet String) and sysObjectID (\n.1.3.6.1.2.1.1.2.0\n, 6 = Object Identifier),\n which is the minimum that should be provided for new snmprec files.\n\n\nTo look up the numeric OID and type of an string OID with snmptranslate:\n\n\nsnmptranslate -On -Td SNMPv2-MIB::sysDescr.0\n\n\n\n\nList of SNMP data types:\n\n\n\n\n\n\n\n\nType\n\n\nValue\n\n\n\n\n\n\n\n\n\n\nOCTET STRING\n\n\n4\n\n\n\n\n\n\nHEX STRING\n\n\n4x\n\n\n\n\n\n\nInteger32\n\n\n2\n\n\n\n\n\n\nNULL\n\n\n5\n\n\n\n\n\n\nOBJECT IDENTIFIER\n\n\n6\n\n\n\n\n\n\nIpAddress\n\n\n64\n\n\n\n\n\n\nCounter32\n\n\n65\n\n\n\n\n\n\nGauge32\n\n\n66\n\n\n\n\n\n\nTimeTicks\n\n\n67\n\n\n\n\n\n\nOpaque\n\n\n68\n\n\n\n\n\n\nCounter64\n\n\n70\n\n\n\n\n\n\n\n\nHex encoded strings (4x) should be used for any strings that contain line returns.\n\n\nNew discovery/poller modules\n\n\nNew discovery or poller modules should define database capture parameters in \n/tests/module_tables.yaml\n.\n\n\nExample workflow\n\n\nIf the base os (\n.snmprec) already contains test data for the module you are testing or that data conflicts with your new\ndata, you must use a variant to store your test data (-v).\n\n\nAdd initial detection\n\n\n\n\nAdd device to LibreNMS. It is generic and device_id = 42\n\n\nRun \n./scripts/collect-snmp-data.php -h 42 -m os\n, initial snmprec will be created\n\n\nAdd initial detection\n for \nexample-os\n\n\nRun discovery to make sure it detects properly \n./discovery.php -h 42\n\n\nAdd any additional os items like version, hardware, features, or serial.\n\n\nIf there is additional snmp data required, run \n./scripts/collect-snmp-data.php -h 42 -m os\n\n\nRun \n./scripts/save-test-data.php -o example-os -m os\n to update the dumped database data.\n\n\nReview data. If you modified the snmprec or code (don't modify json manually) run \n./scripts/save-test-data.php -o example-os -m os\n\n\nRun \n./scripts/pre-commit.php --db --snmpsim\n\n\nIf the tests succeed submit a pull request\n\n\n\n\nAdditional module support or test data\n\n\n\n\nAdd code to support module or support already exists.\n\n\n./scripts/collect-snmp-data.php -h 42 -m \nmodule\n, this will add more data to the snmprec file\n\n\nReview data. If you modified the snmprec (don't modify json manually) run \n./scripts/save-test-data.php -o example-os -m \nmodule\n\n\nRun \n./scripts/pre-commit.php --db --snmpsim\n\n\nIf the tests succeed submit a pull request", 
            "title": "Tests"
        }, 
        {
            "location": "/Developing/os/Test-Units/#tests", 
            "text": "Tests ensure LibreNMS works as expected, now and in the future.  New OS should provide as much test data as needed and\nadded test data for existing OS is welcome.  Saved snmp data can be found in  tests/snmpsim/*.snmprec  and saved database data can be found in  tests/data/*.json .\nPlease review this for any sensitive data  before  submitting.  When replacing data, make sure it is modified in a\nconsistent manner.   We utilise  snmpsim  to do unit testing. For OS discovery, we can mock snmpsim, but\nfor other tests you will need it installed and functioning.  We run snmpsim during our integration tests, but not by\ndefault when running  ./scripts/pre-commit.php .", 
            "title": "Tests"
        }, 
        {
            "location": "/Developing/os/Test-Units/#capturing-test-data", 
            "text": "./scripts/collect-snmp-data.php  is provided to make it easy to collect data for tests.  Running collect-snmp-data.php\n with the --hostname (-h) allows you to capture all data used to discover and poll a device already added to LibreNMS.\n Make sure to re-run the script if you add additional support. Check the command-line help for more options.  After you have collected snmp data, run  ./scripts/save-test-data.php  with the --os (-o) option to dump the post discovery\nand post poll database entries to json files.  Generally, you will only need to capture data once.  After you have the data you need in the snmprec file, you can\njust use save-test-data.php to update the database dump (json) after that.", 
            "title": "Capturing test data"
        }, 
        {
            "location": "/Developing/os/Test-Units/#os-variants", 
            "text": "If test data already exists, but is for a different device/configuration then you should use the --variant (-v) option to\nspecify a different variant of the os, this will be tested completely separate from other variants.  If there is only\none variant, please do not specify one.", 
            "title": "OS Variants"
        }, 
        {
            "location": "/Developing/os/Test-Units/#running-tests", 
            "text": "After you have saved your test data, you should run  ./scripts/pre-commit.php -p -u  verify they pass.  To run the full suite of tests enable database and snmpsim reliant tests:  ./scripts/pre-commit.php --db --snmpsim -p -u", 
            "title": "Running tests"
        }, 
        {
            "location": "/Developing/os/Test-Units/#specific-os", 
            "text": "./scripts/pre-commit.php -p -o osname", 
            "title": "Specific OS"
        }, 
        {
            "location": "/Developing/os/Test-Units/#specific-module", 
            "text": "./scripts/pre-commit.php -p -m modulename", 
            "title": "Specific Module"
        }, 
        {
            "location": "/Developing/os/Test-Units/#using-snmpsim-for-testing", 
            "text": "You can run snmpsim to access test data by running  ./scripts/collect-snmp-data.php --snmpsim  You may then run snmp queries against it using the os (and variant) as the community and 127.1.6.1:1161 as the host.  snmpget -v 2c -c ios_c3560e 127.1.6.1:1161 sysDescr.0", 
            "title": "Using snmpsim for testing"
        }, 
        {
            "location": "/Developing/os/Test-Units/#snmprec-format", 
            "text": "Snmprec files are simple files that store the snmp data. The data format is simple with three columns: numeric oid, type\ncode, and data. Here is an example snippet.  1.3.6.1.2.1.1.1.0|4|Pulse Secure,LLC,MAG-2600,8.0R14 (build 41869)\n1.3.6.1.2.1.1.2.0|6|1.3.6.1.4.1.12532.254.1.1  During testing LibreNMS will use any info in the snmprec file for snmp calls.  This one provides\nsysDescr ( .1.3.6.1.2.1.1.1.0 , 4 = Octet String) and sysObjectID ( .1.3.6.1.2.1.1.2.0 , 6 = Object Identifier),\n which is the minimum that should be provided for new snmprec files.  To look up the numeric OID and type of an string OID with snmptranslate:  snmptranslate -On -Td SNMPv2-MIB::sysDescr.0  List of SNMP data types:     Type  Value      OCTET STRING  4    HEX STRING  4x    Integer32  2    NULL  5    OBJECT IDENTIFIER  6    IpAddress  64    Counter32  65    Gauge32  66    TimeTicks  67    Opaque  68    Counter64  70     Hex encoded strings (4x) should be used for any strings that contain line returns.", 
            "title": "Snmprec format"
        }, 
        {
            "location": "/Developing/os/Test-Units/#new-discoverypoller-modules", 
            "text": "New discovery or poller modules should define database capture parameters in  /tests/module_tables.yaml .", 
            "title": "New discovery/poller modules"
        }, 
        {
            "location": "/Developing/os/Test-Units/#example-workflow", 
            "text": "If the base os ( .snmprec) already contains test data for the module you are testing or that data conflicts with your new\ndata, you must use a variant to store your test data (-v).", 
            "title": "Example workflow"
        }, 
        {
            "location": "/Developing/os/Test-Units/#add-initial-detection", 
            "text": "Add device to LibreNMS. It is generic and device_id = 42  Run  ./scripts/collect-snmp-data.php -h 42 -m os , initial snmprec will be created  Add initial detection  for  example-os  Run discovery to make sure it detects properly  ./discovery.php -h 42  Add any additional os items like version, hardware, features, or serial.  If there is additional snmp data required, run  ./scripts/collect-snmp-data.php -h 42 -m os  Run  ./scripts/save-test-data.php -o example-os -m os  to update the dumped database data.  Review data. If you modified the snmprec or code (don't modify json manually) run  ./scripts/save-test-data.php -o example-os -m os  Run  ./scripts/pre-commit.php --db --snmpsim  If the tests succeed submit a pull request", 
            "title": "Add initial detection"
        }, 
        {
            "location": "/Developing/os/Test-Units/#additional-module-support-or-test-data", 
            "text": "Add code to support module or support already exists.  ./scripts/collect-snmp-data.php -h 42 -m  module , this will add more data to the snmprec file  Review data. If you modified the snmprec (don't modify json manually) run  ./scripts/save-test-data.php -o example-os -m  module  Run  ./scripts/pre-commit.php --db --snmpsim  If the tests succeed submit a pull request", 
            "title": "Additional module support or test data"
        }, 
        {
            "location": "/Developing/os/Health-Information/", 
            "text": "Sensors\n\n\nThis document will guide you through adding health / sensor information for your new device.\n\n\nCurrently we have support for the following health metrics along with the values we expect to see the data in:\n\n\n\n\n\n\n\n\nClass\n\n\nMeasurement\n\n\n\n\n\n\n\n\n\n\nairflow\n\n\ncfm\n\n\n\n\n\n\ncharge\n\n\n%\n\n\n\n\n\n\ncooling\n\n\nW\n\n\n\n\n\n\ncurrent\n\n\nA\n\n\n\n\n\n\ndbm\n\n\ndBm\n\n\n\n\n\n\nfanspeed\n\n\nrpm\n\n\n\n\n\n\nfrequency\n\n\nHz\n\n\n\n\n\n\nhumidity\n\n\n%\n\n\n\n\n\n\nload\n\n\n%\n\n\n\n\n\n\npower\n\n\nW\n\n\n\n\n\n\npressure\n\n\nkPa\n\n\n\n\n\n\nruntime\n\n\nMin\n\n\n\n\n\n\nsignal\n\n\ndBm\n\n\n\n\n\n\nsnr\n\n\nSNR\n\n\n\n\n\n\nstate\n\n\n#\n\n\n\n\n\n\ntemperature\n\n\nC\n\n\n\n\n\n\nvoltage\n\n\nV\n\n\n\n\n\n\ndelay\n\n\ns\n\n\n\n\n\n\nquality_factor\n\n\ndB\n\n\n\n\n\n\nchromatic_disperision\n\n\nps/nm\n\n\n\n\n\n\nber\n\n\nratio\n\n\n\n\n\n\neer\n\n\neer\n\n\n\n\n\n\nwaterflow\n\n\nl/m\n\n\n\n\n\n\n\n\nSimple health discovery\n\n\nWe have support for defining health / sensor discovery using YAML files so that you don't need to know how to write PHP.\n\n\n\n\nPlease note that DISPLAY-HINTS are disabled so ensure you use the correct divisor / multiplier if applicable.\n\n\n\n\nAll yaml files are located in \nincludes/definitions/discovery/$os.yaml\n. Defining the information hear is not always \npossible and is heavily reliant on vendors being sensible with the MIBs they generate. Only snmp walks are supported \nand you must provide a sane table that can be traversed and contains all of the data you need. We will use netbotz as \nan example here.\n\n\nincludes/definitions/discovery/netbotz.yaml\n\n\nmib: NETBOTZV2-MIB\nmodules:\n    sensors:\n        airflow:\n            options:\n                skip_values_lt: 0\n            data:\n                -\n                    oid: airFlowSensorTable\n                    value: airFlowSensorValue\n                    divisor: 10\n                    num_oid: .1.3.6.1.4.1.5528.100.4.1.5.1.2.\n                    descr: airFlowSensorLabel\n                    index: 'airFlowSensorValue.{{ $index }}'\n\n\n\n\nAt the top you can define one or more mibs to be used in the lookup of data:\n\n\nmib: NETBOTZV2-MIB\n\n\nFor \ndata:\n you have the following options:\n\n\nThe only sensor we have defined here is airflow. The available options are as follows:\n\n\n\n\noid\n (required): This is the name of the table you want to do the snmp walk on.\n\n\nvalue\n (optional): This is the key within the table that contains the value. If not provided will use \noid\n\n\nnum_oid\n (required): This is the numerical OID that contains \nvalue\n. This should always be without the appended \nindex\n.\n\n\ndivisor\n (optional): This is the divisor to use against the returned \nvalue\n.\n\n\nmultiplier\n (optional): This is the multiplier to use against the returned \nvalue\n.\n\n\nlow_limit\n (optional): This is the critical low threshold that \nvalue\n should be (used in alerting).\n\n\nlow_warn_limit\n (optional): This is the warning low threshold that \nvalue\n should be (used in alerting).\n\n\nwarn_limit\n (optional): This is the warning high threshold that \nvalue\n should be (used in alerting).\n\n\nhigh_limit\n (optional): This is the critical high threshold that \nvalue\n should be (used in alerting).\n\n\ndescr\n (required): The visible label for this sensor. It can be a key with in the table or a static string, optionally using \n{{ index }}\n\n\nindex\n (optional): This is the index value we use to uniquely identify this sensor. \n{{ $index }}\n will be replaced by the \nindex\n from the snmp walk.\n\n\nskip_values\n (optional): This is an array of values we should skip over (see note below).\n\n\nskip_value_lt\n (optional): If sensor value is less than this, skip the discovery.\n\n\nskip_value_gt\n (optional): If sensor value is greater than this, skip the discovery.\n\n\nentPhysicalIndex\n (optional): If the sensor belongs to a physical entity then you can specify the index here.\n\n\nentPhysicalIndex_measured\n (optional): If the sensor belongs to a physical entity then you can specify the entity type here.\n\n\nuser_func\n (optional): You can provide a function name for the sensors value to be processed through (i.e. Convert fahrenheit to celsius use \nfahrenheit_to_celsius\n)\n\n\n\n\nFor \noptions:\n you have the following available:\n\n\n\n\ndivisor\n: This is the divisor to use against the returned \nvalue\n.\n\n\nmultiplier\n: This is the multiplier to use against the returned \nvalue\n.\n\n\nskip_values\n: This is an array of values we should skip over (see note below).\n\n\nskip_value_lt\n: If sensor value is less than this, skip the discovery.\n\n\nskip_value_gt\n: If sensor value is greater than this, skip the discovery.\n\n\n\n\n\n\nskip_values\n can also compare items within the OID table against values. One example of this is:\n\n\n\n\n                    skip_values:\n                    -\n                      oid: sensUnit\n                      op: '!='\n                      value: 4\n\n\n\n\nIf you aren't able to use yaml to perform the sensor discovery, you will most likely need to use Advanced health discovery. \n\n\nAdvanced health discovery\n\n\nIf you can't use the yaml files as above, then you will need to create the discovery code in php.\n\n\nThe directory structure for sensor information is \nincludes/discovery/sensors/$class/$os.inc.php\n. The format of all \nof the sensors follows the same code format which is to call the \ndiscover_sensor()\n function - with the \nexception of state which requires additional code.\n\n\ndiscover_sensor()\n Accepts the following arguments:\n\n\n\n\n$valid = This is always $valid['sensor'], do not pass any other values.\n\n\n$class = Required. This is the sensor class from the table above (i.e humidity).\n\n\n$device = Required. This is the $device array.\n\n\n$oid = Required. This must be the numerical OID for where the data can be found, i.e .1.2.3.4.5.6.7.0\n\n\n$index = Required. This must be unique for this sensor class, device and type.\n  Typically it's the index from the table being walked or it could be the name of the OID if it's a single value.\n\n\n$type = Required. This should be the OS name, i.e pulse.\n\n\n$descr = Required. This is a descriptive value for the sensor. Some devices will provide names to use.\n\n\n$divisor = Defaults to 1. This is used to divided the returned value.\n\n\n$multiplier = Defaults to 1. This is used to multiply the returned value.\n\n\n$low_limit = Defaults to null. Sets the low threshold limit for the sensor, used in alerting to report out range sensors.\n\n\n$low_warn_limit = Defaults to null. Sets the low warning limit for the sensor, used in alerting to report near out of range sensors.\n\n\n$warn_limit = Defaults to null. Sets the high warning limit for the sensor, used in alerting to report near out of range sensors.\n\n\n$high_limit = Defaults to null. Sets the high limit for the sensor, used in alerting to report out range sensors.\n\n\n$current = Defaults to null. Can be used to set the current value on discovery. Poller will update this on the next poll cycle anyway.\n\n\n$poller_type = Defaults to snmp. Things like the unix-agent can set different values but for the most part this should be left as snmp.\n\n\n$entPhysicalIndex = Defaults to null. Sets the entPhysicalIndex to be used to look up further hardware if available.\n\n\n$entPhysicalIndex_measured = Defaults to null. Sets the type of entPhysicalIndex used, i.e ports.\n\n\n\n\nFor the majority of devices, this is all that's required to add support for a sensor. Polling is done based on the data gathered using \ndiscover_sensor()\n.\nIf custom polling is needed then the file format is similar to discovery: \nincludes/polling/sensors/$class/$os.inc.php\n. Whilst it's possible to perform additional \nsnmp queries within polling this should be avoided where possible. The value for the OID is already available as \n$sensor_value\n.\n\n\nGraphing is performed automatically for sensors, no custom graphing is required or supported.", 
            "title": "Health Information"
        }, 
        {
            "location": "/Developing/os/Health-Information/#sensors", 
            "text": "This document will guide you through adding health / sensor information for your new device.  Currently we have support for the following health metrics along with the values we expect to see the data in:     Class  Measurement      airflow  cfm    charge  %    cooling  W    current  A    dbm  dBm    fanspeed  rpm    frequency  Hz    humidity  %    load  %    power  W    pressure  kPa    runtime  Min    signal  dBm    snr  SNR    state  #    temperature  C    voltage  V    delay  s    quality_factor  dB    chromatic_disperision  ps/nm    ber  ratio    eer  eer    waterflow  l/m", 
            "title": "Sensors"
        }, 
        {
            "location": "/Developing/os/Health-Information/#simple-health-discovery", 
            "text": "We have support for defining health / sensor discovery using YAML files so that you don't need to know how to write PHP.   Please note that DISPLAY-HINTS are disabled so ensure you use the correct divisor / multiplier if applicable.   All yaml files are located in  includes/definitions/discovery/$os.yaml . Defining the information hear is not always \npossible and is heavily reliant on vendors being sensible with the MIBs they generate. Only snmp walks are supported \nand you must provide a sane table that can be traversed and contains all of the data you need. We will use netbotz as \nan example here.  includes/definitions/discovery/netbotz.yaml  mib: NETBOTZV2-MIB\nmodules:\n    sensors:\n        airflow:\n            options:\n                skip_values_lt: 0\n            data:\n                -\n                    oid: airFlowSensorTable\n                    value: airFlowSensorValue\n                    divisor: 10\n                    num_oid: .1.3.6.1.4.1.5528.100.4.1.5.1.2.\n                    descr: airFlowSensorLabel\n                    index: 'airFlowSensorValue.{{ $index }}'  At the top you can define one or more mibs to be used in the lookup of data:  mib: NETBOTZV2-MIB  For  data:  you have the following options:  The only sensor we have defined here is airflow. The available options are as follows:   oid  (required): This is the name of the table you want to do the snmp walk on.  value  (optional): This is the key within the table that contains the value. If not provided will use  oid  num_oid  (required): This is the numerical OID that contains  value . This should always be without the appended  index .  divisor  (optional): This is the divisor to use against the returned  value .  multiplier  (optional): This is the multiplier to use against the returned  value .  low_limit  (optional): This is the critical low threshold that  value  should be (used in alerting).  low_warn_limit  (optional): This is the warning low threshold that  value  should be (used in alerting).  warn_limit  (optional): This is the warning high threshold that  value  should be (used in alerting).  high_limit  (optional): This is the critical high threshold that  value  should be (used in alerting).  descr  (required): The visible label for this sensor. It can be a key with in the table or a static string, optionally using  {{ index }}  index  (optional): This is the index value we use to uniquely identify this sensor.  {{ $index }}  will be replaced by the  index  from the snmp walk.  skip_values  (optional): This is an array of values we should skip over (see note below).  skip_value_lt  (optional): If sensor value is less than this, skip the discovery.  skip_value_gt  (optional): If sensor value is greater than this, skip the discovery.  entPhysicalIndex  (optional): If the sensor belongs to a physical entity then you can specify the index here.  entPhysicalIndex_measured  (optional): If the sensor belongs to a physical entity then you can specify the entity type here.  user_func  (optional): You can provide a function name for the sensors value to be processed through (i.e. Convert fahrenheit to celsius use  fahrenheit_to_celsius )   For  options:  you have the following available:   divisor : This is the divisor to use against the returned  value .  multiplier : This is the multiplier to use against the returned  value .  skip_values : This is an array of values we should skip over (see note below).  skip_value_lt : If sensor value is less than this, skip the discovery.  skip_value_gt : If sensor value is greater than this, skip the discovery.    skip_values  can also compare items within the OID table against values. One example of this is:                       skip_values:\n                    -\n                      oid: sensUnit\n                      op: '!='\n                      value: 4  If you aren't able to use yaml to perform the sensor discovery, you will most likely need to use Advanced health discovery.", 
            "title": "Simple health discovery"
        }, 
        {
            "location": "/Developing/os/Health-Information/#advanced-health-discovery", 
            "text": "If you can't use the yaml files as above, then you will need to create the discovery code in php.  The directory structure for sensor information is  includes/discovery/sensors/$class/$os.inc.php . The format of all \nof the sensors follows the same code format which is to call the  discover_sensor()  function - with the \nexception of state which requires additional code.  discover_sensor()  Accepts the following arguments:   $valid = This is always $valid['sensor'], do not pass any other values.  $class = Required. This is the sensor class from the table above (i.e humidity).  $device = Required. This is the $device array.  $oid = Required. This must be the numerical OID for where the data can be found, i.e .1.2.3.4.5.6.7.0  $index = Required. This must be unique for this sensor class, device and type.\n  Typically it's the index from the table being walked or it could be the name of the OID if it's a single value.  $type = Required. This should be the OS name, i.e pulse.  $descr = Required. This is a descriptive value for the sensor. Some devices will provide names to use.  $divisor = Defaults to 1. This is used to divided the returned value.  $multiplier = Defaults to 1. This is used to multiply the returned value.  $low_limit = Defaults to null. Sets the low threshold limit for the sensor, used in alerting to report out range sensors.  $low_warn_limit = Defaults to null. Sets the low warning limit for the sensor, used in alerting to report near out of range sensors.  $warn_limit = Defaults to null. Sets the high warning limit for the sensor, used in alerting to report near out of range sensors.  $high_limit = Defaults to null. Sets the high limit for the sensor, used in alerting to report out range sensors.  $current = Defaults to null. Can be used to set the current value on discovery. Poller will update this on the next poll cycle anyway.  $poller_type = Defaults to snmp. Things like the unix-agent can set different values but for the most part this should be left as snmp.  $entPhysicalIndex = Defaults to null. Sets the entPhysicalIndex to be used to look up further hardware if available.  $entPhysicalIndex_measured = Defaults to null. Sets the type of entPhysicalIndex used, i.e ports.   For the majority of devices, this is all that's required to add support for a sensor. Polling is done based on the data gathered using  discover_sensor() .\nIf custom polling is needed then the file format is similar to discovery:  includes/polling/sensors/$class/$os.inc.php . Whilst it's possible to perform additional \nsnmp queries within polling this should be avoided where possible. The value for the OID is already available as  $sensor_value .  Graphing is performed automatically for sensors, no custom graphing is required or supported.", 
            "title": "Advanced health discovery"
        }, 
        {
            "location": "/Developing/os/Wireless-Sensors/", 
            "text": "This document will guide you through adding wireless sensors for your new wireless device.\n\n\nCurrently we have support for the following wireless metrics along with the values we expect to see the data in:\n\n\n\n\n\n\n\n\nType\n\n\nMeasurement\n\n\nInterface\n\n\nDescription\n\n\n\n\n\n\n\n\n\n\nap-count\n\n\n%\n\n\nWirelessApCountDiscovery\n\n\nThe number of APs attached to this controller\n\n\n\n\n\n\ncapacity\n\n\n%\n\n\nWirelessCapacityDiscovery\n\n\nThe % of operating rate vs theoretical max\n\n\n\n\n\n\nccq\n\n\n%\n\n\nWirelessCcqDiscovery\n\n\nThe Client Connection Quality\n\n\n\n\n\n\nclients\n\n\ncount\n\n\nWirelessClientsDiscovery\n\n\nThe number of clients connected to/managed by this device\n\n\n\n\n\n\ndistance\n\n\nkm\n\n\nWirelessDistanceDiscovery\n\n\nThe distance of a radio link in Kilometers\n\n\n\n\n\n\nerror-ratio\n\n\n%\n\n\nWirelessErrorRatioDiscovery\n\n\nThe percent of errored packets or bits, etc\n\n\n\n\n\n\nfrequency\n\n\nMHz\n\n\nWirelessFrequencyDiscovery\n\n\nThe frequency of the radio in MHz, channels can be converted\n\n\n\n\n\n\nnoise-floor\n\n\ndBm/Hz\n\n\nWirelessNoiseFloorDiscovery\n\n\nThe amount of noise received by the radio\n\n\n\n\n\n\npower\n\n\ndBm\n\n\nWirelessPowerDiscovery\n\n\nThe power of transmit or receive, including signal level\n\n\n\n\n\n\nquality\n\n\n%\n\n\nWirelessQualityDiscovery\n\n\nThe % of quality of the link, 100% = perfect link\n\n\n\n\n\n\nrate\n\n\nbps\n\n\nWirelessRateDiscovery\n\n\nThe negotiated rate of the connection (not data transfer)\n\n\n\n\n\n\nrssi\n\n\ndBm\n\n\nWirelessRssiDiscovery\n\n\nThe Received Signal Strength Indicator\n\n\n\n\n\n\nsnr\n\n\ndBm\n\n\nWirelessSnrDiscovery\n\n\nThe Signal to Noise ratio, which is signal - noise floor\n\n\n\n\n\n\nssr\n\n\ndBm\n\n\nWirelessSsrDiscovery\n\n\nThe Signal strength ratio, the ratio(or difference) of Vertical rx power to Horizontal rx power\n\n\n\n\n\n\nutilization\n\n\n%\n\n\nWirelessUtilizationDiscovery\n\n\nThe % of utilization compared to the current rate\n\n\n\n\n\n\n\n\nYou will need to create a new OS class for your os if one doen't exist under \nLibreNMS/OS\n.  The name of this file\nshould be the os name in camel case for example \nairos -\n Airos\n, \nios-wlc -\n IosWlc\n.\n\n\nYour new OS class should extend LibreNMS\\OS and implement the interfaces for the sensors your os supports.\n\n\nnamespace LibreNMS\\OS;\n\nuse LibreNMS\\Device\\WirelessSensor;\nuse LibreNMS\\Interfaces\\Discovery\\Sensors\\WirelessClientsDiscovery;\nuse LibreNMS\\OS;\n\nclass Airos extends OS implements WirelessClientsDiscovery\n{\n    public function discoverWirelessClients()\n    {\n        $oid = '.1.3.6.1.4.1.41112.1.4.5.1.15.1'; //UBNT-AirMAX-MIB::ubntWlStatStaCount.1\n        return array(\n            new WirelessSensor('clients', $this-\ngetDeviceId(), $oid, 'airos', 1, 'Clients')\n        );\n    }\n}\n\n\n\n\nAll discovery interfaces will require you to return an array of WirelessSensor objects.\n\n\nnew WirelessSensor()\n Accepts the following arguments:\n\n\n\n\n$type = Required. This is the sensor class from the table above (i.e humidity).\n\n\n$device_id = Required. You can get this value with $this-\ngetDeviceId()\n\n\n$oids = Required. This must be the numerical OID for where the data can be found, i.e .1.2.3.4.5.6.7.0.\n  If this is an array of oids, you should probably specify an $aggregator.\n\n\n$index = Required. This must be unique for this sensor type, device and subtype.\n  Typically it's the index from the table being walked or it could be the name of the OID if it's a single value.\n\n\n$subtype = Required. This should be the OS name, i.e airos.\n\n\n$description = Required. This is a descriptive value for the sensor.\n  Shown to the user, if this is a per-ssid statistic, using \nSSID: $ssid\n here is appropriate\n\n\n$current = Defaults to null. Can be used to set the current value on discovery.\n  If this is null the values will be polled right away and if they do not return valid value(s), the sensor will not be discovered.\n  Supplying a value here implies you have already verified this sensor is valid.\n\n\n$multiplier = Defaults to 1. This is used to multiply the returned value.\n\n\n$divisor = Defaults to 1. This is used to divided the returned value.\n\n\n$aggregator = Defaults to sum. Valid values: sum, avg. This will combine multiple values from multiple oids into one.\n\n\n$access_point_id = Defaults to null. If this is a wireless controller, you can link sensors to entries in the access_points table.\n\n\n$high_limit = Defaults to null. Sets the high limit for the sensor, used in alerting to report out range sensors.\n\n\n$low_limit = Defaults to null. Sets the low threshold limit for the sensor, used in alerting to report out range sensors.\n\n\n$high_warn = Defaults to null. Sets the high warning limit for the sensor, used in alerting to report near out of range sensors.\n\n\n$low_warn = Defaults to null. Sets the low warning limit for the sensor, used in alerting to report near out of range sensors.\n\n\n$entPhysicalIndex = Defaults to null. Sets the entPhysicalIndex to be used to look up further hardware if available.\n\n\n$entPhysicalIndexMeasured = Defaults to null. Sets the type of entPhysicalIndex used, i.e ports.\n\n\n\n\nPolling is done automatically based on the discovered data.  If for some reason you need to override polling, you can implement \nthe required polling interface in \nLibreNMS/Interfaces/Polling/Sensors\n.  Using the polling interfaces should be avoided if possible.\n\n\nGraphing is performed automatically for wireless sensors, no custom graphing is required or supported.", 
            "title": "Wireless Sensors"
        }, 
        {
            "location": "/Developing/os/Custom-Graphs/", 
            "text": "If you are adding custom graphs, please add the following to \nincludes/definitions.inc.php\n:\n\n\n//Don't forget to declare the specific graphs if needed. It will be located near the end of the file.\n\n//Pulse Secure Graphs\n$config['graph_types']['device']['pulse_users']['section']         = 'firewall';\n$config['graph_types']['device']['pulse_users']['order']           = '0';\n$config['graph_types']['device']['pulse_users']['descr']           = 'Active Users';\n$config['graph_types']['device']['pulse_sessions']['section']      = 'firewall';\n$config['graph_types']['device']['pulse_sessions']['order']        = '0';\n$config['graph_types']['device']['pulse_sessions']['descr']        = 'Active Sessions';\n\n\n\n\nPolling OS\n\n\nOS polling is not necessarily where custom polling should be done, please speak to one of the core devs in \nDiscord\n for guidance.\n\n\nLet's update our example file to add additional polling:\n\n\nincludes/polling/os/pulse.inc.php\n\n\n\n\nWe declare two specific graphs for users and sessions numbers. Theses two graphs will be displayed on the firewall section of the graphs tab as it was written in the definition include file.\n\n\n?php\n\nuse LibreNMS\\RRD\\RrdDefinition;\n\n$users = snmp_get($device, 'iveConcurrentUsers.0', '-OQv', 'PULSESECURE-PSG-MIB');\n\nif (is_numeric($users)) {\n    $rrd_def = RrdDefinition::make()-\naddDataset('users', 'GAUGE', 0);\n\n    $fields = array(\n        'users' =\n $users,\n    );\n\n    $tags = compact('rrd_def');\n    data_update($device, 'pulse_users', $tags, $fields);\n    $graphs['pulse_users'] = true;\n}\n\n$sessions = snmp_get($device, 'iveConcurrentUsers.0', '-OQv', 'PULSESECURE-PSG-MIB');\n\nif (is_numeric($sessions)) {\n    $rrd_def = RrdDefinition::make()-\naddDataset('sessions', 'GAUGE', 0);\n\n    $fields = array(\n        'sessions' =\n $sessions,\n    );\n\n    $tags = compact('rrd_def');\n    data_update($device, 'pulse_sessions', $tags, $fields);\n    $graphs['pulse_sessions'] = true;\n}\n\n\n\n\nWe finish in the declaration of the two graph types in the database:\n\n\nWe can do that within a file to share our work and contribute in the development of LibreNMS. :-)\n\n\nsql-schema/xxx.sql\nphp includes/sql-schema/update.php\n./scripts/build-schema.php\n\n\n\n\nOr put the SQL commands directly in Mysql or PhpMyadmin for our tests:\n\n\nINSERT INTO `graph_types`(`graph_type`, `graph_subtype`, `graph_section`, `graph_descr`, `graph_order`) VALUES ('device',  'pulse_users',  'firewall',  'Active Users',  0);\nINSERT INTO `graph_types`(`graph_type`, `graph_subtype`, `graph_section`, `graph_descr`, `graph_order`) VALUES ('device',  'pulse_sessions',  'firewall',  'Active Sessions',  0);\n\n\n\n\nDisplaying\n\n\nThe specific graphs are not displayed automatically so we need to write the following PHP code:\n\n\nPulse Sessions\n\n\nhtml/includes/graphs/device/pulse_sessions.inc.php\n\n\n\n\n?php\n\n$rrd_filename = rrd_name($device['hostname'], 'pulse_sessions');\n\nrequire 'includes/graphs/common.inc.php';\n\n$ds = 'sessions';\n\n$colour_area = '9999cc';\n$colour_line = '0000cc';\n\n$colour_area_max = '9999cc';\n\n$graph_max = 1;\n$graph_min = 0;\n\n$unit_text = 'Sessions';\n\nrequire 'includes/graphs/generic_simplex.inc.php';\n\n\n\n\nPulse Users\n\n\nhtml/includes/graphs/device/pulse_users.inc.php\n\n\n\n\n?php\n\n$rrd_filename = rrd_name($device['hostname'], 'pulse_users');\n\nrequire 'includes/graphs/common.inc.php';\n\n$ds = 'users';\n\n$colour_area = '9999cc';\n$colour_line = '0000cc';\n\n$colour_area_max = '9999cc';\n\n$graph_max = 1;\n\n$unit_text = 'Users';\n\nrequire 'includes/graphs/generic_simplex.inc.php';\n\n\n\n\nThat should be it, after data has started to be collected graphs should appear in the WebUI.", 
            "title": "Custom Graphs"
        }, 
        {
            "location": "/Developing/os/Custom-Graphs/#polling-os", 
            "text": "OS polling is not necessarily where custom polling should be done, please speak to one of the core devs in  Discord  for guidance.  Let's update our example file to add additional polling:  includes/polling/os/pulse.inc.php  We declare two specific graphs for users and sessions numbers. Theses two graphs will be displayed on the firewall section of the graphs tab as it was written in the definition include file.  ?php\n\nuse LibreNMS\\RRD\\RrdDefinition;\n\n$users = snmp_get($device, 'iveConcurrentUsers.0', '-OQv', 'PULSESECURE-PSG-MIB');\n\nif (is_numeric($users)) {\n    $rrd_def = RrdDefinition::make()- addDataset('users', 'GAUGE', 0);\n\n    $fields = array(\n        'users' =  $users,\n    );\n\n    $tags = compact('rrd_def');\n    data_update($device, 'pulse_users', $tags, $fields);\n    $graphs['pulse_users'] = true;\n}\n\n$sessions = snmp_get($device, 'iveConcurrentUsers.0', '-OQv', 'PULSESECURE-PSG-MIB');\n\nif (is_numeric($sessions)) {\n    $rrd_def = RrdDefinition::make()- addDataset('sessions', 'GAUGE', 0);\n\n    $fields = array(\n        'sessions' =  $sessions,\n    );\n\n    $tags = compact('rrd_def');\n    data_update($device, 'pulse_sessions', $tags, $fields);\n    $graphs['pulse_sessions'] = true;\n}  We finish in the declaration of the two graph types in the database:  We can do that within a file to share our work and contribute in the development of LibreNMS. :-)  sql-schema/xxx.sql\nphp includes/sql-schema/update.php\n./scripts/build-schema.php  Or put the SQL commands directly in Mysql or PhpMyadmin for our tests:  INSERT INTO `graph_types`(`graph_type`, `graph_subtype`, `graph_section`, `graph_descr`, `graph_order`) VALUES ('device',  'pulse_users',  'firewall',  'Active Users',  0);\nINSERT INTO `graph_types`(`graph_type`, `graph_subtype`, `graph_section`, `graph_descr`, `graph_order`) VALUES ('device',  'pulse_sessions',  'firewall',  'Active Sessions',  0);", 
            "title": "Polling OS"
        }, 
        {
            "location": "/Developing/os/Custom-Graphs/#displaying", 
            "text": "The specific graphs are not displayed automatically so we need to write the following PHP code:  Pulse Sessions  html/includes/graphs/device/pulse_sessions.inc.php  ?php\n\n$rrd_filename = rrd_name($device['hostname'], 'pulse_sessions');\n\nrequire 'includes/graphs/common.inc.php';\n\n$ds = 'sessions';\n\n$colour_area = '9999cc';\n$colour_line = '0000cc';\n\n$colour_area_max = '9999cc';\n\n$graph_max = 1;\n$graph_min = 0;\n\n$unit_text = 'Sessions';\n\nrequire 'includes/graphs/generic_simplex.inc.php';  Pulse Users  html/includes/graphs/device/pulse_users.inc.php  ?php\n\n$rrd_filename = rrd_name($device['hostname'], 'pulse_users');\n\nrequire 'includes/graphs/common.inc.php';\n\n$ds = 'users';\n\n$colour_area = '9999cc';\n$colour_line = '0000cc';\n\n$colour_area_max = '9999cc';\n\n$graph_max = 1;\n\n$unit_text = 'Users';\n\nrequire 'includes/graphs/generic_simplex.inc.php';  That should be it, after data has started to be collected graphs should appear in the WebUI.", 
            "title": "Displaying"
        }, 
        {
            "location": "/Developing/os/Settings/", 
            "text": "Optional OS Settings\n\n\nThis page documents settings that can be set in the os yaml files or in config.php.\nAll settings listed here are optional. If they are not set, the global default will be used.\n\n\nUsers can override these settings in their config.php.\n\n\nFor example, to set an alternate icon for ios:\n\n\n$config['os']['ios']['icon'] = 'fuzzybunny';\n\n\n\n\nIgnoring Interfaces\n\n\nSee also: \nGlobal Ignoring Interfaces Config\n\n\n\n\nThese settings are merged with the global settings, so you can only undo global ones with good_if\n\n\n\n\nempty_ifdescr: false # allow empty ifDescr\nbad_if: # ifDescr (substring, case insensitive)\n    - lp0\nbad_if_regexp: # ifDescr (regex, case insensitive)\n    - \n/^ng[0-9]+$/\n\nbad_ifname_regexp: # ifName (regex, case insensitive)\n    - \n/^xdsl_channel /\n\nbad_ifalias_regexp: # ifAlias (regex, case insensitive)\n    - \n/^vlan/\n\nbad_iftype: # ifType (substring)\n    - sonet\ngood_if: # ignore all other bad_if settings ifDescr (substring, case insensitive)\n    - virtual\n\n\n\n\n\nDisable snmpbulkwalk\n\n\nSome devices have buggy snmp implementations and don't respond well to the more efficient snmpbulkwalk.\nTo disable snmpbulkwalk and only use snmpwalk for an os set the following.\n\n\nnobulk: true\n\n\n\n\nPoller and Discovery Modules\n\n\nThe various discovery and poller modules can be enabled or disabled per OS.  The defaults are usually reasonable, so likely you won't want to change more than a few.\nThese modules can be enabled or disabled per-device in the webui and per os or globally in config.php.\nUsually, a poller module will not work if it's corresponding discovery module is not enabled.\n\n\npoller_modules:\n    bgp-peers: 1\ndiscovery_modules:\n    arp-table: 0\n\n\n\n\nStorage Settings\n\n\nSee also: \nGlobal Storage Config\n\n\nignore_mount array: # exact match\n    - /var/run\nignore_mount_string: # substring\n    - run\nignore_mount_regexp: # regex\n    - \n/^\\/var/", 
            "title": "Optional OS Settings"
        }, 
        {
            "location": "/Developing/os/Settings/#optional-os-settings", 
            "text": "This page documents settings that can be set in the os yaml files or in config.php.\nAll settings listed here are optional. If they are not set, the global default will be used.  Users can override these settings in their config.php.  For example, to set an alternate icon for ios:  $config['os']['ios']['icon'] = 'fuzzybunny';", 
            "title": "Optional OS Settings"
        }, 
        {
            "location": "/Developing/os/Settings/#ignoring-interfaces", 
            "text": "See also:  Global Ignoring Interfaces Config   These settings are merged with the global settings, so you can only undo global ones with good_if   empty_ifdescr: false # allow empty ifDescr\nbad_if: # ifDescr (substring, case insensitive)\n    - lp0\nbad_if_regexp: # ifDescr (regex, case insensitive)\n    -  /^ng[0-9]+$/ \nbad_ifname_regexp: # ifName (regex, case insensitive)\n    -  /^xdsl_channel / \nbad_ifalias_regexp: # ifAlias (regex, case insensitive)\n    -  /^vlan/ \nbad_iftype: # ifType (substring)\n    - sonet\ngood_if: # ignore all other bad_if settings ifDescr (substring, case insensitive)\n    - virtual", 
            "title": "Ignoring Interfaces"
        }, 
        {
            "location": "/Developing/os/Settings/#disable-snmpbulkwalk", 
            "text": "Some devices have buggy snmp implementations and don't respond well to the more efficient snmpbulkwalk.\nTo disable snmpbulkwalk and only use snmpwalk for an os set the following.  nobulk: true", 
            "title": "Disable snmpbulkwalk"
        }, 
        {
            "location": "/Developing/os/Settings/#poller-and-discovery-modules", 
            "text": "The various discovery and poller modules can be enabled or disabled per OS.  The defaults are usually reasonable, so likely you won't want to change more than a few.\nThese modules can be enabled or disabled per-device in the webui and per os or globally in config.php.\nUsually, a poller module will not work if it's corresponding discovery module is not enabled.  poller_modules:\n    bgp-peers: 1\ndiscovery_modules:\n    arp-table: 0", 
            "title": "Poller and Discovery Modules"
        }, 
        {
            "location": "/Developing/os/Settings/#storage-settings", 
            "text": "See also:  Global Storage Config  ignore_mount array: # exact match\n    - /var/run\nignore_mount_string: # substring\n    - run\nignore_mount_regexp: # regex\n    -  /^\\/var/", 
            "title": "Storage Settings"
        }, 
        {
            "location": "/Developing/Sensor-State-Support/", 
            "text": "Sensor State Support\n\n\nIntroduction\n\n\nIn this section we are briefly going to walk through, what it takes to write sensor state support.\nWe will also briefly get around the concepts of the current sensor state monitoring.\n\n\nLogic\n\n\nFor sensor state monitoring, we have 4 DB tables we need to concentrate about.\n- sensors\n- state_indexes\n- state_translations\n- sensors_to_state_indexes\n\n\nWe will just briefly tie a comment to each one of them.\n\n\nSensors\n\n\nEach time a sensor needs to be polled, the system needs to know which sensor is it that it need to poll, at what oid is this sensor located and what class the sensor is etc.\nThis information is fetched from the sensors table.\n\n\nstate_indexes\n\n\nIs where we keep track of which state sensors we monitor.\n\n\nstate_translations\n\n\nIs where we map the possible returned state sensor values to a generic LibreNMS value, in order to make displaying and alerting more generic.\nWe also map these values to the actual state sensor(state_index) where these values are actually returned from.\n\n\nThe LibreNMS generic states are derived from Nagios:\n\n\n0 = OK\n1 = Warning\n2 = Critical\n3 = Unknown\n\n\n\n\nsensors_to_state_indexes\n\n\nIs as you might have guessed, where the sensor_id is mapped to a state_index_id.\n\n\nExample\n\n\nFor YAML based state discovery:\n\n\nmib: NETBOTZV2-MIB\nmodules:\n    sensors:\n        state:\n            data:\n                -\n                    oid: dryContactSensorTable\n                    value: dryContactSensorValue\n                    num_oid: .1.3.6.1.4.1.5528.100.4.2.1.1.2.\n                    descr: dryContactSensorLabel\n                    index: 'dryContactSensor.{{ $index }}'\n                    state_name: dryContactSensor\n                    states:\n                        - { value: -1, generic: 3, graph: 0, descr: 'null' }\n                        - { value:  0, generic: 0, graph: 0, descr: open }\n                        - { value:  1, generic: 2, graph: 0, descr: closed }\n                -\n                    oid: doorSwitchSensorTable\n                    value: doorSwitchSensorValue\n                    num_oid: .1.3.6.1.4.1.5528.100.4.2.2.1.2.\n                    descr: doorSwitchSensorLabel\n                    index: 'doorSwitchSensor.{{ $index }}'\n                    state_name: doorSwitchSensor\n                    states:\n                        - { value: -1, generic: 3, graph: 0, descr: 'null' }\n                        - { value:  0, generic: 0, graph: 0, descr: open }\n                        - { value:  1, generic: 2, graph: 0, descr: closed }\n                -\n                    oid: cameraMotionSensorTable\n                    value: cameraMotionSensorValue\n                    num_oid: .1.3.6.1.4.1.5528.100.4.2.3.1.2.\n                    descr: cameraMotionSensorLabel\n                    index: 'cameraMotionSensor.{{ $index }}'\n                    state_name: cameraMotionSensor\n                    states:\n                        - { value: -1, generic: 3, graph: 0, descr: 'null' }\n                        - { value:  0, generic: 0, graph: 0, descr: noMotion }\n                        - { value:  1, generic: 2, graph: 0, descr: motionDetected }\n                -\n                    oid: otherStateSensorTable\n                    value: otherStateSensorErrorStatus\n                    num_oid: .1.3.6.1.4.1.5528.100.4.2.10.1.3.\n                    descr: otherStateSensorLabel\n                    index: '{{ $index }}'\n                    state_name: otherStateSensorErrorStatus\n                    states:\n                        - { value: 0, generic: 0, graph: 0, descr: normal }\n                        - { value: 1, generic: 1, graph: 0, descr: info }\n                        - { value: 2, generic: 1, graph: 0, descr: warning }\n                        - { value: 3, generic: 2, graph: 0, descr: error }\n                        - { value: 4, generic: 2, graph: 0, descr: critical }\n                        - { value: 5, generic: 2, graph: 0, descr: failure }\n\n\n\n\nAdvanced Example\n\n\nFor advanced state discovery:\n\n\nThis example will be based on a Cisco power supply sensor and is all it takes to have sensor state support for Cisco power supplys in Cisco switches.\nThe file should be located in /includes/discovery/sensors/state/cisco.inc.php.\n\n\n?php\n\n$oids = snmpwalk_group($device, 'ciscoEnvMonSupplyStatusTable', 'CISCO-ENVMON-MIB');\n\nif (!empty($oids)) {\n    //Create State Index\n    $state_name = 'ciscoEnvMonSupplyState';\n    $states = array(\n         array('value' =\n 1, 'generic' =\n 0, 'graph' =\n 0, 'descr' =\n 'normal'),\n         array('value' =\n 2, 'generic' =\n 1, 'graph' =\n 0, 'descr' =\n 'warning'),\n         array('value' =\n 3, 'generic' =\n 2, 'graph' =\n 0, 'descr' =\n 'critical'),\n         array('value' =\n 4, 'generic' =\n 3, 'graph' =\n 0, 'descr' =\n 'shutdown'),\n         array('value' =\n 5, 'generic' =\n 3, 'graph' =\n 0, 'descr' =\n 'notPresent'),\n         array('value' =\n 6, 'generic' =\n 2, 'graph' =\n 0, 'descr' =\n 'notFunctioning'),\n     );\n    create_state_index($state_name, $states);\n\n    $num_oid = '.1.3.6.1.4.1.9.9.13.1.5.1.3.';\n    foreach ($oids as $index =\n $entry) {\n        //Discover Sensors\n        discover_sensor($valid['sensor'], 'state', $device, $num_oid.$index, $index, $state_name, $entry['ciscoEnvMonSupplyStatusDescr'], '1', '1', null, null, null, null, $entry['ciscoEnvMonSupplyState'], 'snmp', $index);\n\n        //Create Sensor To State Index\n        create_sensor_to_state_index($device, $state_name, $index);\n    }\n}", 
            "title": "Sensor State Support"
        }, 
        {
            "location": "/Developing/Sensor-State-Support/#sensor-state-support", 
            "text": "", 
            "title": "Sensor State Support"
        }, 
        {
            "location": "/Developing/Sensor-State-Support/#introduction", 
            "text": "In this section we are briefly going to walk through, what it takes to write sensor state support.\nWe will also briefly get around the concepts of the current sensor state monitoring.", 
            "title": "Introduction"
        }, 
        {
            "location": "/Developing/Sensor-State-Support/#logic", 
            "text": "For sensor state monitoring, we have 4 DB tables we need to concentrate about.\n- sensors\n- state_indexes\n- state_translations\n- sensors_to_state_indexes  We will just briefly tie a comment to each one of them.", 
            "title": "Logic"
        }, 
        {
            "location": "/Developing/Sensor-State-Support/#sensors", 
            "text": "Each time a sensor needs to be polled, the system needs to know which sensor is it that it need to poll, at what oid is this sensor located and what class the sensor is etc.\nThis information is fetched from the sensors table.", 
            "title": "Sensors"
        }, 
        {
            "location": "/Developing/Sensor-State-Support/#state_indexes", 
            "text": "Is where we keep track of which state sensors we monitor.", 
            "title": "state_indexes"
        }, 
        {
            "location": "/Developing/Sensor-State-Support/#state_translations", 
            "text": "Is where we map the possible returned state sensor values to a generic LibreNMS value, in order to make displaying and alerting more generic.\nWe also map these values to the actual state sensor(state_index) where these values are actually returned from.  The LibreNMS generic states are derived from Nagios:  0 = OK\n1 = Warning\n2 = Critical\n3 = Unknown", 
            "title": "state_translations"
        }, 
        {
            "location": "/Developing/Sensor-State-Support/#sensors_to_state_indexes", 
            "text": "Is as you might have guessed, where the sensor_id is mapped to a state_index_id.", 
            "title": "sensors_to_state_indexes"
        }, 
        {
            "location": "/Developing/Sensor-State-Support/#example", 
            "text": "For YAML based state discovery:  mib: NETBOTZV2-MIB\nmodules:\n    sensors:\n        state:\n            data:\n                -\n                    oid: dryContactSensorTable\n                    value: dryContactSensorValue\n                    num_oid: .1.3.6.1.4.1.5528.100.4.2.1.1.2.\n                    descr: dryContactSensorLabel\n                    index: 'dryContactSensor.{{ $index }}'\n                    state_name: dryContactSensor\n                    states:\n                        - { value: -1, generic: 3, graph: 0, descr: 'null' }\n                        - { value:  0, generic: 0, graph: 0, descr: open }\n                        - { value:  1, generic: 2, graph: 0, descr: closed }\n                -\n                    oid: doorSwitchSensorTable\n                    value: doorSwitchSensorValue\n                    num_oid: .1.3.6.1.4.1.5528.100.4.2.2.1.2.\n                    descr: doorSwitchSensorLabel\n                    index: 'doorSwitchSensor.{{ $index }}'\n                    state_name: doorSwitchSensor\n                    states:\n                        - { value: -1, generic: 3, graph: 0, descr: 'null' }\n                        - { value:  0, generic: 0, graph: 0, descr: open }\n                        - { value:  1, generic: 2, graph: 0, descr: closed }\n                -\n                    oid: cameraMotionSensorTable\n                    value: cameraMotionSensorValue\n                    num_oid: .1.3.6.1.4.1.5528.100.4.2.3.1.2.\n                    descr: cameraMotionSensorLabel\n                    index: 'cameraMotionSensor.{{ $index }}'\n                    state_name: cameraMotionSensor\n                    states:\n                        - { value: -1, generic: 3, graph: 0, descr: 'null' }\n                        - { value:  0, generic: 0, graph: 0, descr: noMotion }\n                        - { value:  1, generic: 2, graph: 0, descr: motionDetected }\n                -\n                    oid: otherStateSensorTable\n                    value: otherStateSensorErrorStatus\n                    num_oid: .1.3.6.1.4.1.5528.100.4.2.10.1.3.\n                    descr: otherStateSensorLabel\n                    index: '{{ $index }}'\n                    state_name: otherStateSensorErrorStatus\n                    states:\n                        - { value: 0, generic: 0, graph: 0, descr: normal }\n                        - { value: 1, generic: 1, graph: 0, descr: info }\n                        - { value: 2, generic: 1, graph: 0, descr: warning }\n                        - { value: 3, generic: 2, graph: 0, descr: error }\n                        - { value: 4, generic: 2, graph: 0, descr: critical }\n                        - { value: 5, generic: 2, graph: 0, descr: failure }", 
            "title": "Example"
        }, 
        {
            "location": "/Developing/Sensor-State-Support/#advanced-example", 
            "text": "For advanced state discovery:  This example will be based on a Cisco power supply sensor and is all it takes to have sensor state support for Cisco power supplys in Cisco switches.\nThe file should be located in /includes/discovery/sensors/state/cisco.inc.php.  ?php\n\n$oids = snmpwalk_group($device, 'ciscoEnvMonSupplyStatusTable', 'CISCO-ENVMON-MIB');\n\nif (!empty($oids)) {\n    //Create State Index\n    $state_name = 'ciscoEnvMonSupplyState';\n    $states = array(\n         array('value' =  1, 'generic' =  0, 'graph' =  0, 'descr' =  'normal'),\n         array('value' =  2, 'generic' =  1, 'graph' =  0, 'descr' =  'warning'),\n         array('value' =  3, 'generic' =  2, 'graph' =  0, 'descr' =  'critical'),\n         array('value' =  4, 'generic' =  3, 'graph' =  0, 'descr' =  'shutdown'),\n         array('value' =  5, 'generic' =  3, 'graph' =  0, 'descr' =  'notPresent'),\n         array('value' =  6, 'generic' =  2, 'graph' =  0, 'descr' =  'notFunctioning'),\n     );\n    create_state_index($state_name, $states);\n\n    $num_oid = '.1.3.6.1.4.1.9.9.13.1.5.1.3.';\n    foreach ($oids as $index =  $entry) {\n        //Discover Sensors\n        discover_sensor($valid['sensor'], 'state', $device, $num_oid.$index, $index, $state_name, $entry['ciscoEnvMonSupplyStatusDescr'], '1', '1', null, null, null, null, $entry['ciscoEnvMonSupplyState'], 'snmp', $index);\n\n        //Create Sensor To State Index\n        create_sensor_to_state_index($device, $state_name, $index);\n    }\n}", 
            "title": "Advanced Example"
        }, 
        {
            "location": "/Developing/Dynamic-Config/", 
            "text": "Adding new config options to WebUI\n\n\nAdding support for users to update a new config option via the WebUI is now a lot easier for general options. This\ndocument shows you how to add a new config option and even section to the WebUI.\n\n\nUpdate DB\n\n\nFirstly you will need to add the config option to the database. Here's an example:\n\n\ninsert into config (config_name,config_value,config_default,config_descr,config_group,config_group_order,config_sub_group,config_sub_group_order,config_hidden,config_disabled) values ('alert.tolerance_window','','','Tolerance window in seconds','alerting',0,'general',0,'0','0');\n\n\n\n\nThis will determine the default config option for \n$config['alert']['tolerance_window']\n.\n\n\nUpdate WebUI\n\n\nIf the sub-section you want to add the new config option already exists then update the relevant file within\n\nhtml/pages/settings/\n otherwise you will need to create the new sub-section page. Here's an example of this:\n\n\nCommit example\n\n\n?php\n\n$no_refresh = true;\n\n$config_groups = get_config_by_group('alerting');\n\n$mail_conf = array(\n    array('name'               =\n 'alert.tolerance_window',\n          'descr'              =\n 'Tolerance window for cron',\n          'type'               =\n 'text',\n    ),\n);\n\necho '\n\ndiv class=\npanel-group\n id=\naccordion\n\n    \nform class=\nform-horizontal\n role=\nform\n action=\n method=\npost\n\n';\n\necho generate_dynamic_config_panel('Email transport',$config_groups,$mail_conf,'mail');\n\necho '\n    \n/form\n\n\n/div\n\n';\n\n\n\n\nAnd that should be it!", 
            "title": "Adding new config options to WebUI"
        }, 
        {
            "location": "/Developing/Dynamic-Config/#adding-new-config-options-to-webui", 
            "text": "Adding support for users to update a new config option via the WebUI is now a lot easier for general options. This\ndocument shows you how to add a new config option and even section to the WebUI.", 
            "title": "Adding new config options to WebUI"
        }, 
        {
            "location": "/Developing/Dynamic-Config/#update-db", 
            "text": "Firstly you will need to add the config option to the database. Here's an example:  insert into config (config_name,config_value,config_default,config_descr,config_group,config_group_order,config_sub_group,config_sub_group_order,config_hidden,config_disabled) values ('alert.tolerance_window','','','Tolerance window in seconds','alerting',0,'general',0,'0','0');  This will determine the default config option for  $config['alert']['tolerance_window'] .", 
            "title": "Update DB"
        }, 
        {
            "location": "/Developing/Dynamic-Config/#update-webui", 
            "text": "If the sub-section you want to add the new config option already exists then update the relevant file within html/pages/settings/  otherwise you will need to create the new sub-section page. Here's an example of this:  Commit example  ?php\n\n$no_refresh = true;\n\n$config_groups = get_config_by_group('alerting');\n\n$mail_conf = array(\n    array('name'               =  'alert.tolerance_window',\n          'descr'              =  'Tolerance window for cron',\n          'type'               =  'text',\n    ),\n);\n\necho ' div class= panel-group  id= accordion \n     form class= form-horizontal  role= form  action=  method= post \n';\n\necho generate_dynamic_config_panel('Email transport',$config_groups,$mail_conf,'mail');\n\necho '\n     /form  /div \n';  And that should be it!", 
            "title": "Update WebUI"
        }, 
        {
            "location": "/Developing/Merging-Pull-Requests/", 
            "text": "Merging Pull Requests\n\n\nGitHub\n\n\nWe will now build the monthly change log from our GitHub commits. When merging a commit, please \nensure you:\n\n\n\n\nClick the \nMerge pull request\n button\n\n\nGive the merge a descriptive but short title\n\n\nFor the commit message prepend it with one of the following tags for the pull request to appear in the changelog:\n\n\ndevices: or newdevice: For new device support.\n\n\nfeature: or feat: To indicate this is a new or updated feature\n\n\nwebui: or web: To indicate this is an update to the WebUI\n\n\nfix: or bugfix: To show this is a bug fix.\n\n\nrefactoring: or refactor: When the changes are refactoring a large portion of code\n\n\n\n\n\n\nYou can reference an issue number with \n#xyz\n, i.e \n#1234\n\n\nUse the \nConfirm squash and merge\n button to merge.\n\n\n\n\nExample commits\n\n\nFeature\n\n\nfeature: Added new availability map #4401\n\n\nNew device\n\n\nnewdevice: Added support for Cisco ASA #4402", 
            "title": "Merging Pull Requests"
        }, 
        {
            "location": "/Developing/Merging-Pull-Requests/#merging-pull-requests", 
            "text": "", 
            "title": "Merging Pull Requests"
        }, 
        {
            "location": "/Developing/Merging-Pull-Requests/#github", 
            "text": "We will now build the monthly change log from our GitHub commits. When merging a commit, please \nensure you:   Click the  Merge pull request  button  Give the merge a descriptive but short title  For the commit message prepend it with one of the following tags for the pull request to appear in the changelog:  devices: or newdevice: For new device support.  feature: or feat: To indicate this is a new or updated feature  webui: or web: To indicate this is an update to the WebUI  fix: or bugfix: To show this is a bug fix.  refactoring: or refactor: When the changes are refactoring a large portion of code    You can reference an issue number with  #xyz , i.e  #1234  Use the  Confirm squash and merge  button to merge.", 
            "title": "GitHub"
        }, 
        {
            "location": "/Developing/Merging-Pull-Requests/#example-commits", 
            "text": "", 
            "title": "Example commits"
        }, 
        {
            "location": "/Developing/Merging-Pull-Requests/#feature", 
            "text": "feature: Added new availability map #4401", 
            "title": "Feature"
        }, 
        {
            "location": "/Developing/Merging-Pull-Requests/#new-device", 
            "text": "newdevice: Added support for Cisco ASA #4402", 
            "title": "New device"
        }, 
        {
            "location": "/Developing/Creating-Release/", 
            "text": "Creating a release\n\n\nGitHub\n\n\nYou can create a new release on \nGitHub\n.\n\n\nEnter the tag version that month, i.e for September 2016 you would enter \n201609\n.\n\n\nEnter a title, we usually use \nAugust 2016 Release\n\n\nEnter a placeholder for the body, we will edit this later.\n\n\nCreate changelog\n\n\nWe utilise \nReadmegen\n to automatically populate the Changelog.\n\n\nInstall \nreadmegen\n using \ncomposer\n:\n\n\n./composer.phar update\n\n\n\n\nYou can now create the update change log by running (201608 was our last release):\n\n\n./vendor/bin/readmegen --from 201608 --release 201609\n\n\n\n\nNow commit and push the change that has been made to \ndoc\\General\\Changelog.md", 
            "title": "Creating a release"
        }, 
        {
            "location": "/Developing/Creating-Release/#creating-a-release", 
            "text": "", 
            "title": "Creating a release"
        }, 
        {
            "location": "/Developing/Creating-Release/#github", 
            "text": "You can create a new release on  GitHub .  Enter the tag version that month, i.e for September 2016 you would enter  201609 .  Enter a title, we usually use  August 2016 Release  Enter a placeholder for the body, we will edit this later.", 
            "title": "GitHub"
        }, 
        {
            "location": "/Developing/Creating-Release/#create-changelog", 
            "text": "We utilise  Readmegen  to automatically populate the Changelog.  Install  readmegen  using  composer :  ./composer.phar update  You can now create the update change log by running (201608 was our last release):  ./vendor/bin/readmegen --from 201608 --release 201609  Now commit and push the change that has been made to  doc\\General\\Changelog.md", 
            "title": "Create changelog"
        }, 
        {
            "location": "/Extensions/Plugin-System/", 
            "text": "Developing for the Plugin System\n\n\n\n\nThis will most likely be deprecated in favour of adding the possible extensions to the core code base.\n\n\n\n\nThis documentation will hopefully give you a basis for how to write a plugin for LibreNMS.\n\n\nA test plugin is available on GitHub: https://github.com/laf/Test\n\n\nPlugins need to be installed into html/plugins\n\n\nThe structure of a plugin is follows:\n\n\nhtml/plugins\n            /PluginName\n                       /PluginName.php\n                       /PluginName.inc.php\n\n\n\n\nThe above structure is checked before a plugin can be installed.\n\n\nAll files / folder names are case sensitive and must match.\n\n\nPluginName - This is a directory and needs to be named as per the plugin you are creating.\n\n\nPluginName.php - This file is used to process calls into the plugin from the main LibreNMS install.\n                 Here only functions within the class for your plugin that LibreNMS calls will be executed.\n                 For a list of currently enabled system hooks, please see further down.\n                 The minimum code required in this file is (replace Test with the name of your plugin):\n\n\n?php\n\nclass Test {\n}\n\n?\n\n\n\n\n\nPluginName.inc.php - This file is the main included file when browsing to the plugin itself.\n                     You can use this to display / edit / remove whatever you like.\n                     The minimum code required in this file is:\n\n\n?php\n\n?\n\n\n\n\n\nSystem Hooks\n\n\nSystem hooks are called as functions within your plugin class, so for example to create a menu entry within the Plugin dropdown you would do:\n\n\n  public function menu() {\n    echo('\nli\na href=\nplugin/p='.get_class().'\n'.get_class().'\n/a\n/li\n');\n  }\n\n\n\n\nThis would then add the name and a link to your plugin.\n\n\nThe following system hooks are currently available:\n\n\nmenu()\n* This is called to build the plugin menu system and you can use this to link to your plugin (you don't have to).", 
            "title": "Developing for the Plugin System"
        }, 
        {
            "location": "/Extensions/Plugin-System/#developing-for-the-plugin-system", 
            "text": "This will most likely be deprecated in favour of adding the possible extensions to the core code base.   This documentation will hopefully give you a basis for how to write a plugin for LibreNMS.  A test plugin is available on GitHub: https://github.com/laf/Test  Plugins need to be installed into html/plugins  The structure of a plugin is follows:  html/plugins\n            /PluginName\n                       /PluginName.php\n                       /PluginName.inc.php  The above structure is checked before a plugin can be installed.  All files / folder names are case sensitive and must match.  PluginName - This is a directory and needs to be named as per the plugin you are creating.  PluginName.php - This file is used to process calls into the plugin from the main LibreNMS install.\n                 Here only functions within the class for your plugin that LibreNMS calls will be executed.\n                 For a list of currently enabled system hooks, please see further down.\n                 The minimum code required in this file is (replace Test with the name of your plugin):  ?php\n\nclass Test {\n}\n\n?   PluginName.inc.php - This file is the main included file when browsing to the plugin itself.\n                     You can use this to display / edit / remove whatever you like.\n                     The minimum code required in this file is:  ?php\n\n?", 
            "title": "Developing for the Plugin System"
        }, 
        {
            "location": "/Extensions/Plugin-System/#system-hooks", 
            "text": "System hooks are called as functions within your plugin class, so for example to create a menu entry within the Plugin dropdown you would do:    public function menu() {\n    echo(' li a href= plugin/p='.get_class().' '.get_class().' /a /li ');\n  }  This would then add the name and a link to your plugin.  The following system hooks are currently available:  menu()\n* This is called to build the plugin menu system and you can use this to link to your plugin (you don't have to).", 
            "title": "System Hooks"
        }, 
        {
            "location": "/General/Security/", 
            "text": "General\n\n\nLike any good software we take security seriously. However, bugs do make it into the software \nalong with the history of the code base we inherited. It's how we deal with identified vulnerabilities \nthat should show that we take things seriously. \n\n\nSecuring your install\n\n\nAs with any system of this nature, we highly recommend that you restrict access to the install via \na firewall or VPN.\n\n\nIt is also highly recommended that the Web interface is protected with an SSL certificate such as ones \nprovided by \nLetsEncrypt\n.\n\n\nWhen using HTTPS, it is recommended that you use secure, encrypted cookies to prevent session\nhijacking attacks. Set \n$config['secure_cookies'] = true\n in \nconfig.php\n to enable these.\n\n\nPlease ensure you keep your install \nup to date\n.\n\n\nReporting vulnerabilities\n\n\nLike anyone, we appreciate the work people put in to find flaws in software and welcome anyone \nto do so with LibreNMS, this will lead to better quality and more secure software for everyone.\n\n\nIf you think you've found a vulnerability and want to discuss it with some of the core team then \nyou can email us at \nteam@librenms.org\n and we will endeavour to get back to \nas quick as we can, this is usually within 24 hours.\n\n\nWe are happy to attribute credit to the findings but we ask that we're given a chance to patch \nany vulnerability before public disclosure so that our users can update as soon as a fix is \navailable.", 
            "title": "Security information"
        }, 
        {
            "location": "/General/Security/#general", 
            "text": "Like any good software we take security seriously. However, bugs do make it into the software \nalong with the history of the code base we inherited. It's how we deal with identified vulnerabilities \nthat should show that we take things seriously.", 
            "title": "General"
        }, 
        {
            "location": "/General/Security/#securing-your-install", 
            "text": "As with any system of this nature, we highly recommend that you restrict access to the install via \na firewall or VPN.  It is also highly recommended that the Web interface is protected with an SSL certificate such as ones \nprovided by  LetsEncrypt .  When using HTTPS, it is recommended that you use secure, encrypted cookies to prevent session\nhijacking attacks. Set  $config['secure_cookies'] = true  in  config.php  to enable these.  Please ensure you keep your install  up to date .", 
            "title": "Securing your install"
        }, 
        {
            "location": "/General/Security/#reporting-vulnerabilities", 
            "text": "Like anyone, we appreciate the work people put in to find flaws in software and welcome anyone \nto do so with LibreNMS, this will lead to better quality and more secure software for everyone.  If you think you've found a vulnerability and want to discuss it with some of the core team then \nyou can email us at  team@librenms.org  and we will endeavour to get back to \nas quick as we can, this is usually within 24 hours.  We are happy to attribute credit to the findings but we ask that we're given a chance to patch \nany vulnerability before public disclosure so that our users can update as soon as a fix is \navailable.", 
            "title": "Reporting vulnerabilities"
        }, 
        {
            "location": "/Support/CLI-Tools/", 
            "text": "Command line tools\n\n\nHere's a brief list of command line tools, some might be missing.\nIf you think something is missing, feel free to ask us or send a pull request :-)\n\n\npurge-ports.php\n\n\nThis script provides CLI access to the \"delete port\" function of the WebUI.\nThis might come in handy when trying to clean up old ports after large changes\nwithin the network or when hacking on the poller/discovery functions.\n\n\n\nLibreNMS Port purge tool\n-p port_id  Purge single port by it's port-id\n-f file     Purge a list of ports, read port-ids from _file_, one on each line\n            A filename of - means reading from STDIN.\n\n\n\n\nQuerying port IDs from the database\n\n\nOne simple way to obtain port IDs is by querying the SQL database.\n\n\nIf you wanted to query all deleted ports from the database, you could to\nthis with the following query:\n\n\necho 'SELECT port_id, hostname, ifDescr FROM ports, devices WHERE devices.device_id = ports.device_id AND deleted = 1' | mysql -h your_DB_server -u your_DB_user -p --skip-column-names your_DB_name\n\n\n\n\nWhen you are sure that the list of ports is correct and you want to delete all of them,\nyou can write the list into a file and call purge-ports.php with that file as input:\n\n\necho 'SELECT port_id FROM ports, devices WHERE devices.device_id = ports.device_id AND deleted = 1' | mysql -h your_DB_server -u your_DB_user -p --skip-column-names your_DB_name \n ports_to_delete\n./purge-ports.php -f ports_to_delete", 
            "title": "CLI Scripts"
        }, 
        {
            "location": "/Support/CLI-Tools/#command-line-tools", 
            "text": "Here's a brief list of command line tools, some might be missing.\nIf you think something is missing, feel free to ask us or send a pull request :-)", 
            "title": "Command line tools"
        }, 
        {
            "location": "/Support/CLI-Tools/#purge-portsphp", 
            "text": "This script provides CLI access to the \"delete port\" function of the WebUI.\nThis might come in handy when trying to clean up old ports after large changes\nwithin the network or when hacking on the poller/discovery functions.  \nLibreNMS Port purge tool\n-p port_id  Purge single port by it's port-id\n-f file     Purge a list of ports, read port-ids from _file_, one on each line\n            A filename of - means reading from STDIN.", 
            "title": "purge-ports.php"
        }, 
        {
            "location": "/Support/CLI-Tools/#querying-port-ids-from-the-database", 
            "text": "One simple way to obtain port IDs is by querying the SQL database.  If you wanted to query all deleted ports from the database, you could to\nthis with the following query:  echo 'SELECT port_id, hostname, ifDescr FROM ports, devices WHERE devices.device_id = ports.device_id AND deleted = 1' | mysql -h your_DB_server -u your_DB_user -p --skip-column-names your_DB_name  When you are sure that the list of ports is correct and you want to delete all of them,\nyou can write the list into a file and call purge-ports.php with that file as input:  echo 'SELECT port_id FROM ports, devices WHERE devices.device_id = ports.device_id AND deleted = 1' | mysql -h your_DB_server -u your_DB_user -p --skip-column-names your_DB_name   ports_to_delete\n./purge-ports.php -f ports_to_delete", 
            "title": "Querying port IDs from the database"
        }, 
        {
            "location": "/Support/Device-Notes/", 
            "text": "Additional device notes\n\n\nIn this section you will find notes and information on devices that may require special attention.", 
            "title": "Intro"
        }, 
        {
            "location": "/Support/Device-Notes/#additional-device-notes", 
            "text": "In this section you will find notes and information on devices that may require special attention.", 
            "title": "Additional device notes"
        }, 
        {
            "location": "/Support/Device-Notes/Carel-pCOweb-Devices/", 
            "text": "Carel pCOweb Devices\n\n\nThe pCOWeb card is used to interface the pCO system to networks that use the HVAC protocols based on the Ethernet physical standard such the SNMP. The problem with this card is that the implementation is based on the final manufacturer of the HVAC (Heating, Ventilation and Air Conditioning) and not based on a standard given by Carel. So each pCOweb card has a different configuration that needs a different MIB depending on the manufacturer implementation.\n\n\nThe main problem is that LibreNMS will discover this card as pCOweb and not as your real manufacturer like it should. A solution was found to bypass this issue, but it's LibreNMS independent and you need to first configure your pCOWeb through the admin interface.\n\n\nConfiguring the pCOweb card SNMP for LibreNMS\n\n\nFirst you need to configure your SNMP card using the admin interface. An SNMP tab in the configuration menu leaves you the choice to choose a System OID. This is a little tricky but based on this information we defined a \"standard\" for all implementation of Carel products with LibreNMS.\n\n\n\n\nThe base Carel OID is 1.3.6.1.4.1.9839. To this OID we will add the final manufacturer Enterprise OID. You can find all enterprise OID \nfollowing this link\n. This will allow us to create a specific support for this device.\n\n\nExample for the Rittal IT Chiller that uses a pCOweb card:\n1. Base Carel OID : \n1.3.6.1.4.1.9839\n\n2. Rittal (the manufacturer) base enterprise OID : \n2606\n\n3. Adding value to identify this device in LibreNMS : \n1\n\n4. Complete System OID for a Rittal Chiller using a Carel pCOweb card: \n1.3.6.1.4.1.9839.2606.1\n\n\nAfter constructing the correct System OID for your SNMP card, you can start the LibreNMS \nnew OS implementation\n and use this new OID as sysObjectID for the YAML definition file.\n\n\npCOweb card already supported\n\n\nLibreNMS is ready for the devices listed in this table. You only need to configure your pCOweb card with the accorded System OID:\n\n\n\n\n\n\n\n\nManufacturer\n\n\nDescription\n\n\nSystem OID\n\n\n\n\n\n\n\n\n\n\nRittal\n\n\nIT Chiller\n\n\n1.3.6.1.4.1.9839.2606.1", 
            "title": "Carel pCOweb"
        }, 
        {
            "location": "/Support/Device-Notes/Carel-pCOweb-Devices/#carel-pcoweb-devices", 
            "text": "The pCOWeb card is used to interface the pCO system to networks that use the HVAC protocols based on the Ethernet physical standard such the SNMP. The problem with this card is that the implementation is based on the final manufacturer of the HVAC (Heating, Ventilation and Air Conditioning) and not based on a standard given by Carel. So each pCOweb card has a different configuration that needs a different MIB depending on the manufacturer implementation.  The main problem is that LibreNMS will discover this card as pCOweb and not as your real manufacturer like it should. A solution was found to bypass this issue, but it's LibreNMS independent and you need to first configure your pCOWeb through the admin interface.", 
            "title": "Carel pCOweb Devices"
        }, 
        {
            "location": "/Support/Device-Notes/Carel-pCOweb-Devices/#configuring-the-pcoweb-card-snmp-for-librenms", 
            "text": "First you need to configure your SNMP card using the admin interface. An SNMP tab in the configuration menu leaves you the choice to choose a System OID. This is a little tricky but based on this information we defined a \"standard\" for all implementation of Carel products with LibreNMS.   The base Carel OID is 1.3.6.1.4.1.9839. To this OID we will add the final manufacturer Enterprise OID. You can find all enterprise OID  following this link . This will allow us to create a specific support for this device.  Example for the Rittal IT Chiller that uses a pCOweb card:\n1. Base Carel OID :  1.3.6.1.4.1.9839 \n2. Rittal (the manufacturer) base enterprise OID :  2606 \n3. Adding value to identify this device in LibreNMS :  1 \n4. Complete System OID for a Rittal Chiller using a Carel pCOweb card:  1.3.6.1.4.1.9839.2606.1  After constructing the correct System OID for your SNMP card, you can start the LibreNMS  new OS implementation  and use this new OID as sysObjectID for the YAML definition file.", 
            "title": "Configuring the pCOweb card SNMP for LibreNMS"
        }, 
        {
            "location": "/Support/Device-Notes/Carel-pCOweb-Devices/#pcoweb-card-already-supported", 
            "text": "LibreNMS is ready for the devices listed in this table. You only need to configure your pCOweb card with the accorded System OID:     Manufacturer  Description  System OID      Rittal  IT Chiller  1.3.6.1.4.1.9839.2606.1", 
            "title": "pCOweb card already supported"
        }, 
        {
            "location": "/API/API-Docs/", 
            "text": "", 
            "title": "API Docs"
        }, 
        {
            "location": "/Installation/Installing-LibreNMS/", 
            "text": "", 
            "title": "Installing LibreNMS"
        }, 
        {
            "location": "/Extensions/Alerting/", 
            "text": "", 
            "title": "Alerting"
        }, 
        {
            "location": "/Extensions/Email-Alerting/", 
            "text": "", 
            "title": "Email Alerting"
        }, 
        {
            "location": "/Extensions/Port-Description-Parser/", 
            "text": "", 
            "title": "Parsing Port Descriptions"
        }, 
        {
            "location": "/Extensions/RRDCached-Security/", 
            "text": "Securing with nginx\n\n\nAccording to the \nman page\n, under \"SECURITY CONSIDERATIONS\", rrdcached has no authentication or security except for running under a unix socket. To secure your rrdcached installation, you can proxy it using nginx to allow only specific IPs to connect.\n\n\nusing the same setup above, using nginx version 1.9.0 or later, you can follow this setup to proxy the default rrdcached port to the local unix socket.\n\n\n(You can use \n./conf.d\n for your configuration as well)\n\n\nmkdir /etc/nginx/streams-{available,enabled}\n\n\nadd the following to your nginx.conf file:\n\n\n#/etc/nginx/nginx.conf\n...\nstream {\n    include /etc/nginx/streams-enabled/*;\n}\n\n\n\n\nadd this to \n/etc/nginx/streams-available/rrd\n\n\nserver {\n    listen 42217;\n\n    error_log  /var/log/nginx/rrd.stream.error.log;\n\n    allow $LibreNMS_IP;\n    deny all;\n\n    proxy_pass unix:/var/run/rrdcached/rrdcached.sock;\n}\n\n\n\n\nreplace \n$LibreNMS_IP\n with the ip of the server that will be using rrdcached. You can specify more than one \nallow\n statement.\nThis will bind nginx to TCP 42217 (the default rrdcached port), allow the specified IPs to connect, and deny all others.\n\n\nnext, we'll symlink the config to streams-enabled:\n\nln -s /etc/nginx/streams-{available,enabled}/rrd\n\n\nand reload nginx\n\nservice nginx reload", 
            "title": "RRDCached Security"
        }, 
        {
            "location": "/Extensions/RRDCached-Security/#securing-with-nginx", 
            "text": "According to the  man page , under \"SECURITY CONSIDERATIONS\", rrdcached has no authentication or security except for running under a unix socket. To secure your rrdcached installation, you can proxy it using nginx to allow only specific IPs to connect.  using the same setup above, using nginx version 1.9.0 or later, you can follow this setup to proxy the default rrdcached port to the local unix socket.  (You can use  ./conf.d  for your configuration as well)  mkdir /etc/nginx/streams-{available,enabled}  add the following to your nginx.conf file:  #/etc/nginx/nginx.conf\n...\nstream {\n    include /etc/nginx/streams-enabled/*;\n}  add this to  /etc/nginx/streams-available/rrd  server {\n    listen 42217;\n\n    error_log  /var/log/nginx/rrd.stream.error.log;\n\n    allow $LibreNMS_IP;\n    deny all;\n\n    proxy_pass unix:/var/run/rrdcached/rrdcached.sock;\n}  replace  $LibreNMS_IP  with the ip of the server that will be using rrdcached. You can specify more than one  allow  statement.\nThis will bind nginx to TCP 42217 (the default rrdcached port), allow the specified IPs to connect, and deny all others.  next, we'll symlink the config to streams-enabled: ln -s /etc/nginx/streams-{available,enabled}/rrd  and reload nginx service nginx reload", 
            "title": "Securing with nginx"
        }, 
        {
            "location": "/General/Credits/", 
            "text": "", 
            "title": "Credits"
        }, 
        {
            "location": "/Installation/Installation-Ubuntu-1404-Nginx/", 
            "text": "NOTE: These instructions assume you are the \nroot\n user.  If you are not, prepend \nsudo\n to the shell commands (the ones that aren't at \nmysql\n prompts) or temporarily become a user with root privileges with \nsudo -s\n or \nsudo -i\n.\n\n\n\n\nPlease note the minimum supported PHP version is 5.6.4\n\n\nOn the DB Server\n\n\nThis host is where the MySQL database runs.  It could be the same machine as your network management server (this is the most common initial deployment scenario).\n\n\n\n\n** Whilst we are working on ensuring LibreNMS is compatible with MySQL strict mode, for now, please disable this after mysql is installed.\n\n\n\n\nYou are free to choose between using MySQL or MariaDB:\n\n\nMySQL\n\n\napt-get install mysql-server mysql-client\nmysql -uroot -p\n\n\n\n\nMariaDB\n\n\napt-get install mariadb-server mariadb-client\nmysql -uroot -p\n\n\n\n\nInput the MySQL root password to enter the MySQL command-line interface.\n\n\nCreate the database:\n\n\nCREATE DATABASE librenms CHARACTER SET utf8 COLLATE utf8_unicode_ci;\nCREATE USER 'librenms'@'localhost' IDENTIFIED BY 'password';\nGRANT ALL PRIVILEGES ON librenms.* TO 'librenms'@'localhost';\nFLUSH PRIVILEGES;\nexit\n\n\n\n\nReplace \nip\n above with the IP or DNS name of the server running LibreNMS.  If your database is on the same server as LibreNMS, you can use \nlocalhost\n.\n\n\nIf you are deploying a separate database server, you need to change the \nbind-address\n.  If your MySQL database resides on the same server as LibreNMS, you should skip this step.\n\n\nvim /etc/mysql/my.cnf\n\n\n\nWithin the [mysqld] section please add:\n\n\ninnodb_file_per_table=1\n\n\n\nFind the line: \nbind-address = 127.0.0.1\n\n\nChange \n127.0.0.1\n to the IP address that your MySQL server should listen on.  Restart MySQL:\n\n\nIf you see a line that starts \nsql-mode\n then change this to \nsql-mode=\"\"\n.\n\n\nservice mysql restart\n\n\n\nOn the NMS\n\n\nThis host is where the web server and SNMP poller run.  It could be the same machine as your database server.\n\n\nInstall the required software:\n\n\napt-get install nginx-full php5-fpm php5-cli php5-mysql php5-gd php5-snmp php-pear php5-curl php5-mcrypt php5-json php-net-ipv4 php-net-ipv6 snmp snmpd graphviz fping imagemagick whois mtr-tiny nmap python-mysqldb rrdtool git\n\n\n\nThe packages listed above are an all-inclusive list of packages that were necessary on a clean install of Ubuntu 12.04/14.04.\n\n\nYou need to configure snmpd appropriately if you have not already done so.  An absolute minimal config for snmpd is:\n\n\nrocommunity public 127.0.0.1\n\n\n\nAdding the above line to \n/etc/snmp/snmpd.conf\n and running \nservice snmpd restart\n will activate this config.\n\n\nIn \n/etc/php5/fpm/php.ini\n and \n/etc/php5/cli/php.ini\n, ensure date.timezone is set to your preferred time zone.  See http://php.net/manual/en/timezones.php for a list of supported timezones.  Valid\nexamples are: \"America/New York\", \"Australia/Brisbane\", \"Etc/UTC\".\nPlease also ensure that \nallow_url_fopen\n is enabled. Other functions needed for LibreNMS include \nexec,passthru,shell_exec,escapeshellarg,escapeshellcmd,proc_close,proc_open,popen\n.\n\n\nAdding the librenms-user\n\n\nuseradd librenms -d /opt/librenms -M -r\nusermod -a -G librenms www-data\n\n\n\nCloning\n\n\nLibreNMS is installed using git.  If you're not familiar with git, check out the \ngit book\n or the tips at \ngit ready\n.  The initial install from github.com is called a \ngit clone\n; subsequent updates are done through \ngit pull\n.\n\n\nYou can clone the repository via HTTPS or SSH.  In either case, you need to ensure that the appropriate port (443 for HTTPS, 22 for SSH) is open in the outbound direction for your server.\n\n\ncd /opt\ngit clone https://github.com/librenms/librenms.git librenms\ncd /opt/librenms\n\n\n\nThe recommended method of cloning a git repository is HTTPS.  If you would like to clone via SSH instead, use the command \ngit clone git@github.com:librenms/librenms.git librenms\n instead.\n\n\nSometimes the initial clone can take quite a while (nearly 3 minutes on a 10 Mbps fibre connection in Australia is a recent example).  If it's a big problem to you, you can save about 50% of the bandwidth by not pulling down the full git history.  This comes with some limitations (namely that you can't use it as the basis for further git repos), but if you're not planning to develop for LibreNMS it's an acceptable option.  To perform the initial clone without full history, run the following instead:\n\n\ncd /opt\ngit clone --depth 1 https://github.com/librenms/librenms.git librenms\ncd /opt/librenms\n\n\n\nWeb Interface\n\n\nTo prepare the web interface (and adding devices shortly), you'll need to create and chown a directory as well as create a Nginx vhost.\n\n\nFirst, create and chown the \nrrd\n directory and create the \nlogs\n directory:\n\n\nmkdir rrd logs\nchown -R librenms:librenms /opt/librenms\nchmod 775 rrd\n\n\n\n\n\nNOTE: If you're not running Ubuntu or Debian, you will need to change \nwww-data\n to the user and group which run the Nginx web server.\nIf you're planing on running rrdcached, make sure that the path is also chmod'ed to 775 and chown'ed to librenms:librenms.\n\n\n\n\nAdd configuration for \nnginx\n at \n/etc/nginx/conf.d/librenms.conf\n with the following content:\n\n\nserver {\n listen      80;\n server_name librenms.example.com;\n root        /opt/librenms/html;\n index       index.php;\n access_log  /opt/librenms/logs/access_log;\n error_log   /opt/librenms/logs/error_log;\n gzip on;\n gzip_types text/css application/x-javascript text/richtext image/svg+xml text/plain    text/xsd text/xsl text/xml image/x-icon;\n location / {\n  try_files $uri $uri/ @librenms;\n }\n location ~ \\.php {\n  fastcgi_param PATH_INFO $fastcgi_path_info;\n  include fastcgi_params;\n  fastcgi_split_path_info ^(.+\\.php)(/.+)$;\n  fastcgi_pass unix:/var/run/php5-fpm.sock;\n }\n location ~ /\\.ht {\n  deny all;\n }\n location @librenms {\n  rewrite api/v0(.*)$ /api_v0.php/$1 last;\n  rewrite ^(.+)$ /index.php/$1 last;\n }\n}\n\n\n\n\nOn at least Ubuntu 14.04 (and possibly other distributions and versions as well), mcrypt is not enabled on install.  Run the following to enable it:\n\n\nphp5enmod mcrypt\n\n\n\n(To get to your LibreNMS install externally, you'll also need add it to your DNS or hosts file.)\n\n\nStart the web-server:\n\n\nRestart nginx:\n\n\nservice nginx restart\n\n\n\nRestart php5-fpm:\n\n\nservice php5-fpm restart\n\n\n\nManual vs. web installer\n\n\nAt this stage you can either launch the web installer by going to http://librenms.example.com/install.php, follow the onscreen instructions then skip to the 'Add localhost' section. Alternatively if you want to continue the setup manually then just keep following these instructions.\n\n\ncp config.php.default config.php\nvim config.php\n\n\n\nChange the values to the right of the equal sign for lines beginning with \n$config[db_]\n to match your database information as setup above.\n\n\nChange the value of \n$config['snmp']['community']\n from \npublic\n to whatever your read-only SNMP community is.  If you have multiple communities, set it to the most common.\n\n\n Be sure you have no characters (including whitespace like: newlines, spaces, tabs, etc) outside of the \n?php?\n blocks. Your graphs will break otherwise. \n\n\nInitialise the database\n\n\nInitiate the follow database with the following command:\n\n\nphp build-base.php\n\n\n\nCreate admin user\n\n\nCreate the admin user - priv should be 10\n\n\nphp adduser.php \nname\n \npass\n 10 \nemail\n\n\n\n\nSubstitute your desired username, password and email address--and leave the angled brackets off.\n\n\nValidate your install\n\n\nRun validate.php as root in the librenms directory\n\n\nphp validate.php\n\n\n\nThis will check your install to verify it is set up correctly.\n\n\nAdd localhost\n\n\nphp addhost.php localhost public v2c\n\n\n\nThis assumes you haven't made community changes--if you have, replace \npublic\n with your community.  It also assumes SNMP v2c.  If you're using v3, there are additional steps (NOTE: instructions for SNMPv3 to come).\n\n\nDiscover localhost::\n\n\nphp discovery.php -h all\n\n\n\nCreate cronjob\n\n\nLibreNMS uses Job Snijders' \npoller-wrapper.py\n.  By default, the cron job runs \npoller-wrapper.py\n with 16 threads.  The current recommendation is to use 4 threads per core as a rule of thumb.  If the thread count needs to be changed, you can do so by editing the cron file (\n/etc/cron.d/librenms\n).  Just add a number after \npoller-wrapper.py\n, as in the example below:\n\n\n/opt/librenms/poller-wrapper.py 12 \n /dev/null 2\n1\n\n\n\nCreate the cronjob\n\n\ncp librenms.nonroot.cron /etc/cron.d/librenms\n\n\n\nCopy logrotate config\n\n\nLibreNMS keeps logs in \n/opt/librenms/logs\n. Over time these can become large and be rotated out.  To rotate out the old logs you can use the provided logrotate config file:\n\n\ncp misc/librenms.logrotate /etc/logrotate.d/librenms\n\n\n\nDaily Updates\n\n\nLibreNMS performs daily updates by default.  At 00:15 system time every day, a \ngit pull --no-edit --quiet\n is performed.  You can override this default by editing your \nconfig.php\n file.  Remove the comment (the \n#\n mark) on the line:\n\n\n#$config['update'] = 0;\n\n\n\nso that it looks like this:\n\n\n$config['update'] = 0;\n\n\n\nInstall complete\n\n\nPlease allow for 2-3 runs of the poller-wrapper for data to start appearing in the WebUI.\nIf you don't see data after this, please refer to the \nFAQ\n for assistance.\n\n\nThat's it!  You now should be able to log in to http://librenms.example.com/.  Please note that we have not covered HTTPS setup in this example, so your LibreNMS install is not secure by default.  Please do not expose it to the public Internet unless you have configured HTTPS and taken appropriate web server hardening steps.\n\n\nIt would be great if you would consider opting into the stats system we have, please see \nthis page\n on what it is and how to enable it.", 
            "title": "Installation Ubuntu 1404 Nginx"
        }, 
        {
            "location": "/Installation/Installation-Ubuntu-1404-Nginx/#on-the-db-server", 
            "text": "This host is where the MySQL database runs.  It could be the same machine as your network management server (this is the most common initial deployment scenario).   ** Whilst we are working on ensuring LibreNMS is compatible with MySQL strict mode, for now, please disable this after mysql is installed.   You are free to choose between using MySQL or MariaDB:  MySQL  apt-get install mysql-server mysql-client\nmysql -uroot -p  MariaDB  apt-get install mariadb-server mariadb-client\nmysql -uroot -p  Input the MySQL root password to enter the MySQL command-line interface.  Create the database:  CREATE DATABASE librenms CHARACTER SET utf8 COLLATE utf8_unicode_ci;\nCREATE USER 'librenms'@'localhost' IDENTIFIED BY 'password';\nGRANT ALL PRIVILEGES ON librenms.* TO 'librenms'@'localhost';\nFLUSH PRIVILEGES;\nexit  Replace  ip  above with the IP or DNS name of the server running LibreNMS.  If your database is on the same server as LibreNMS, you can use  localhost .  If you are deploying a separate database server, you need to change the  bind-address .  If your MySQL database resides on the same server as LibreNMS, you should skip this step.  vim /etc/mysql/my.cnf  Within the [mysqld] section please add:  innodb_file_per_table=1  Find the line:  bind-address = 127.0.0.1  Change  127.0.0.1  to the IP address that your MySQL server should listen on.  Restart MySQL:  If you see a line that starts  sql-mode  then change this to  sql-mode=\"\" .  service mysql restart", 
            "title": "On the DB Server"
        }, 
        {
            "location": "/Installation/Installation-Ubuntu-1404-Nginx/#on-the-nms", 
            "text": "This host is where the web server and SNMP poller run.  It could be the same machine as your database server.  Install the required software:  apt-get install nginx-full php5-fpm php5-cli php5-mysql php5-gd php5-snmp php-pear php5-curl php5-mcrypt php5-json php-net-ipv4 php-net-ipv6 snmp snmpd graphviz fping imagemagick whois mtr-tiny nmap python-mysqldb rrdtool git  The packages listed above are an all-inclusive list of packages that were necessary on a clean install of Ubuntu 12.04/14.04.  You need to configure snmpd appropriately if you have not already done so.  An absolute minimal config for snmpd is:  rocommunity public 127.0.0.1  Adding the above line to  /etc/snmp/snmpd.conf  and running  service snmpd restart  will activate this config.  In  /etc/php5/fpm/php.ini  and  /etc/php5/cli/php.ini , ensure date.timezone is set to your preferred time zone.  See http://php.net/manual/en/timezones.php for a list of supported timezones.  Valid\nexamples are: \"America/New York\", \"Australia/Brisbane\", \"Etc/UTC\".\nPlease also ensure that  allow_url_fopen  is enabled. Other functions needed for LibreNMS include  exec,passthru,shell_exec,escapeshellarg,escapeshellcmd,proc_close,proc_open,popen .", 
            "title": "On the NMS"
        }, 
        {
            "location": "/Installation/Installation-Ubuntu-1404-Nginx/#adding-the-librenms-user", 
            "text": "useradd librenms -d /opt/librenms -M -r\nusermod -a -G librenms www-data", 
            "title": "Adding the librenms-user"
        }, 
        {
            "location": "/Installation/Installation-Ubuntu-1404-Nginx/#cloning", 
            "text": "LibreNMS is installed using git.  If you're not familiar with git, check out the  git book  or the tips at  git ready .  The initial install from github.com is called a  git clone ; subsequent updates are done through  git pull .  You can clone the repository via HTTPS or SSH.  In either case, you need to ensure that the appropriate port (443 for HTTPS, 22 for SSH) is open in the outbound direction for your server.  cd /opt\ngit clone https://github.com/librenms/librenms.git librenms\ncd /opt/librenms  The recommended method of cloning a git repository is HTTPS.  If you would like to clone via SSH instead, use the command  git clone git@github.com:librenms/librenms.git librenms  instead.  Sometimes the initial clone can take quite a while (nearly 3 minutes on a 10 Mbps fibre connection in Australia is a recent example).  If it's a big problem to you, you can save about 50% of the bandwidth by not pulling down the full git history.  This comes with some limitations (namely that you can't use it as the basis for further git repos), but if you're not planning to develop for LibreNMS it's an acceptable option.  To perform the initial clone without full history, run the following instead:  cd /opt\ngit clone --depth 1 https://github.com/librenms/librenms.git librenms\ncd /opt/librenms", 
            "title": "Cloning"
        }, 
        {
            "location": "/Installation/Installation-Ubuntu-1404-Nginx/#web-interface", 
            "text": "To prepare the web interface (and adding devices shortly), you'll need to create and chown a directory as well as create a Nginx vhost.  First, create and chown the  rrd  directory and create the  logs  directory:  mkdir rrd logs\nchown -R librenms:librenms /opt/librenms\nchmod 775 rrd   NOTE: If you're not running Ubuntu or Debian, you will need to change  www-data  to the user and group which run the Nginx web server.\nIf you're planing on running rrdcached, make sure that the path is also chmod'ed to 775 and chown'ed to librenms:librenms.   Add configuration for  nginx  at  /etc/nginx/conf.d/librenms.conf  with the following content:  server {\n listen      80;\n server_name librenms.example.com;\n root        /opt/librenms/html;\n index       index.php;\n access_log  /opt/librenms/logs/access_log;\n error_log   /opt/librenms/logs/error_log;\n gzip on;\n gzip_types text/css application/x-javascript text/richtext image/svg+xml text/plain    text/xsd text/xsl text/xml image/x-icon;\n location / {\n  try_files $uri $uri/ @librenms;\n }\n location ~ \\.php {\n  fastcgi_param PATH_INFO $fastcgi_path_info;\n  include fastcgi_params;\n  fastcgi_split_path_info ^(.+\\.php)(/.+)$;\n  fastcgi_pass unix:/var/run/php5-fpm.sock;\n }\n location ~ /\\.ht {\n  deny all;\n }\n location @librenms {\n  rewrite api/v0(.*)$ /api_v0.php/$1 last;\n  rewrite ^(.+)$ /index.php/$1 last;\n }\n}  On at least Ubuntu 14.04 (and possibly other distributions and versions as well), mcrypt is not enabled on install.  Run the following to enable it:  php5enmod mcrypt  (To get to your LibreNMS install externally, you'll also need add it to your DNS or hosts file.)", 
            "title": "Web Interface"
        }, 
        {
            "location": "/Installation/Installation-Ubuntu-1404-Nginx/#start-the-web-server", 
            "text": "Restart nginx:  service nginx restart  Restart php5-fpm:  service php5-fpm restart", 
            "title": "Start the web-server:"
        }, 
        {
            "location": "/Installation/Installation-Ubuntu-1404-Nginx/#manual-vs-web-installer", 
            "text": "At this stage you can either launch the web installer by going to http://librenms.example.com/install.php, follow the onscreen instructions then skip to the 'Add localhost' section. Alternatively if you want to continue the setup manually then just keep following these instructions.  cp config.php.default config.php\nvim config.php  Change the values to the right of the equal sign for lines beginning with  $config[db_]  to match your database information as setup above.  Change the value of  $config['snmp']['community']  from  public  to whatever your read-only SNMP community is.  If you have multiple communities, set it to the most common.   Be sure you have no characters (including whitespace like: newlines, spaces, tabs, etc) outside of the  ?php?  blocks. Your graphs will break otherwise.", 
            "title": "Manual vs. web installer"
        }, 
        {
            "location": "/Installation/Installation-Ubuntu-1404-Nginx/#initialise-the-database", 
            "text": "Initiate the follow database with the following command:  php build-base.php", 
            "title": "Initialise the database"
        }, 
        {
            "location": "/Installation/Installation-Ubuntu-1404-Nginx/#create-admin-user", 
            "text": "Create the admin user - priv should be 10  php adduser.php  name   pass  10  email   Substitute your desired username, password and email address--and leave the angled brackets off.", 
            "title": "Create admin user"
        }, 
        {
            "location": "/Installation/Installation-Ubuntu-1404-Nginx/#validate-your-install", 
            "text": "Run validate.php as root in the librenms directory  php validate.php  This will check your install to verify it is set up correctly.", 
            "title": "Validate your install"
        }, 
        {
            "location": "/Installation/Installation-Ubuntu-1404-Nginx/#add-localhost", 
            "text": "php addhost.php localhost public v2c  This assumes you haven't made community changes--if you have, replace  public  with your community.  It also assumes SNMP v2c.  If you're using v3, there are additional steps (NOTE: instructions for SNMPv3 to come).  Discover localhost::  php discovery.php -h all", 
            "title": "Add localhost"
        }, 
        {
            "location": "/Installation/Installation-Ubuntu-1404-Nginx/#create-cronjob", 
            "text": "LibreNMS uses Job Snijders'  poller-wrapper.py .  By default, the cron job runs  poller-wrapper.py  with 16 threads.  The current recommendation is to use 4 threads per core as a rule of thumb.  If the thread count needs to be changed, you can do so by editing the cron file ( /etc/cron.d/librenms ).  Just add a number after  poller-wrapper.py , as in the example below:  /opt/librenms/poller-wrapper.py 12   /dev/null 2 1  Create the cronjob  cp librenms.nonroot.cron /etc/cron.d/librenms", 
            "title": "Create cronjob"
        }, 
        {
            "location": "/Installation/Installation-Ubuntu-1404-Nginx/#copy-logrotate-config", 
            "text": "LibreNMS keeps logs in  /opt/librenms/logs . Over time these can become large and be rotated out.  To rotate out the old logs you can use the provided logrotate config file:  cp misc/librenms.logrotate /etc/logrotate.d/librenms", 
            "title": "Copy logrotate config"
        }, 
        {
            "location": "/Installation/Installation-Ubuntu-1404-Nginx/#daily-updates", 
            "text": "LibreNMS performs daily updates by default.  At 00:15 system time every day, a  git pull --no-edit --quiet  is performed.  You can override this default by editing your  config.php  file.  Remove the comment (the  #  mark) on the line:  #$config['update'] = 0;  so that it looks like this:  $config['update'] = 0;", 
            "title": "Daily Updates"
        }, 
        {
            "location": "/Installation/Installation-Ubuntu-1404-Nginx/#install-complete", 
            "text": "Please allow for 2-3 runs of the poller-wrapper for data to start appearing in the WebUI.\nIf you don't see data after this, please refer to the  FAQ  for assistance.  That's it!  You now should be able to log in to http://librenms.example.com/.  Please note that we have not covered HTTPS setup in this example, so your LibreNMS install is not secure by default.  Please do not expose it to the public Internet unless you have configured HTTPS and taken appropriate web server hardening steps.  It would be great if you would consider opting into the stats system we have, please see  this page  on what it is and how to enable it.", 
            "title": "Install complete"
        }, 
        {
            "location": "/Installation/Installation-Ubuntu-1404-Apache/", 
            "text": "NOTE: These instructions assume you are the \nroot\n user.  If you are not, prepend \nsudo\n to the shell commands (the ones that aren't at \nmysql\n prompts) or temporarily become a user with root privileges with \nsudo -s\n or \nsudo -i\n.\n\n\n\n\nPlease note the minimum supported PHP version is 5.6.4\n\n\nOn the DB Server\n\n\nThis host is where the MySQL database runs.  It could be the same machine as your network management server (this is the most common initial deployment scenario).\n\n\n\n\n** Whilst we are working on ensuring LibreNMS is compatible with MySQL strict mode, for now, please disable this after mysql is installed.\n\n\n\n\nYou are free to choose between using MySQL or MariaDB:\n\n\nMySQL\n\n\napt-get install mysql-server mysql-client\nmysql -uroot -p\n\n\n\n\nMariaDB\n\n\napt-get install mariadb-server mariadb-client\nmysql -uroot -p\n\n\n\n\nInput the MySQL root password to enter the MySQL command-line interface.\n\n\nCreate the database:\n\n\nCREATE DATABASE librenms CHARACTER SET utf8 COLLATE utf8_unicode_ci;\nCREATE USER 'librenms'@'localhost' IDENTIFIED BY 'password';\nGRANT ALL PRIVILEGES ON librenms.* TO 'librenms'@'localhost';\nFLUSH PRIVILEGES;\nexit\n\n\n\n\nReplace \nip\n above with the IP or DNS name of the server running LibreNMS.  If your database is on the same server as LibreNMS, you can use \nlocalhost\n.\n\n\nIf you are deploying a separate database server, you need to change the \nbind-address\n.  If your MySQL database resides on the same server as LibreNMS, you should skip this step.\n\n\nvim /etc/mysql/my.cnf\n\n\n\nWithin the [mysqld] section please add:\n\n\ninnodb_file_per_table=1\n\n\n\nFind the line: \nbind-address = 127.0.0.1\n\n\nChange \n127.0.0.1\n to the IP address that your MySQL server should listen on.  Restart MySQL:\n\n\nIf you see a line that starts \nsql-mode\n then change this to \nsql-mode=\"\"\n.\n\n\nservice mysql restart\n\n\n\nOn the NMS\n\n\nThis host is where the web server and SNMP poller run.  It could be the same machine as your database server.\n\n\nInstall the required software:\n\n\napt-get install libapache2-mod-php5 php5-cli php5-mysql php5-gd php5-snmp php-pear php5-curl snmp graphviz php5-mcrypt php5-json apache2 fping imagemagick whois mtr-tiny nmap python-mysqldb snmpd php-net-ipv4 php-net-ipv6 rrdtool git\n\n\n\nThe packages listed above are an all-inclusive list of packages that were necessary on a clean install of Ubuntu 12.04/14.04.\n\n\nYou need to configure snmpd appropriately if you have not already done so.  An absolute minimal config for snmpd is:\n\n\nrocommunity public 127.0.0.1\n\n\n\nAdding the above line to \n/etc/snmp/snmpd.conf\n and running \nservice snmpd restart\n will activate this config.\n\n\nIn \n/etc/php5/apache2/php.ini\n and \n/etc/php5/cli/php.ini\n, ensure date.timezone is set to your preferred time zone.  See http://php.net/manual/en/timezones.php for a list of supported timezones.  Valid\nexamples are: \"America/New York\", \"Australia/Brisbane\", \"Etc/UTC\".\nPlease also ensure that \nallow_url_fopen\n is enabled. Other functions needed for LibreNMS include \nexec,passthru,shell_exec,escapeshellarg,escapeshellcmd,proc_close,proc_open,popen\n.\n\n\nAdding the librenms-user\n\n\nuseradd librenms -d /opt/librenms -M -r\nusermod -a -G librenms www-data\n\n\n\nCloning\n\n\nLibreNMS is installed using git.  If you're not familiar with git, check out the \ngit book\n or the tips at \ngit ready\n.  The initial install from github.com is called a \ngit clone\n; subsequent updates are done through \ngit pull\n.\n\n\nYou can clone the repository via HTTPS or SSH.  In either case, you need to ensure that the appropriate port (443 for HTTPS, 22 for SSH) is open in the outbound direction for your server.\n\n\ncd /opt\ngit clone https://github.com/librenms/librenms.git librenms\ncd /opt/librenms\n\n\n\nThe recommended method of cloning a git repository is HTTPS.  If you would like to clone via SSH instead, use the command \ngit clone git@github.com:librenms/librenms.git librenms\n instead.\n\n\nSometimes the initial clone can take quite a while (nearly 3 minutes on a 10 Mbps fibre connection in Australia is a recent example).  If it's a big problem to you, you can save about 50% of the bandwidth by not pulling down the full git history.  This comes with some limitations (namely that you can't use it as the basis for further git repos), but if you're not planning to develop for LibreNMS it's an acceptable option.  To perform the initial clone without full history, run the following instead:\n\n\ncd /opt\ngit clone --depth 1 https://github.com/librenms/librenms.git librenms\ncd /opt/librenms\n\n\n\nWeb Interface\n\n\nTo prepare the web interface (and adding devices shortly), you'll need to create and chown a directory as well as create an Apache vhost.\n\n\nFirst, create and chown the \nrrd\n directory and create the \nlogs\n directory:\n\n\nmkdir rrd logs\nchown -R librenms:librenms /opt/librenms\nchmod 775 rrd\n\n\n\n\n\nNOTE: If you're not running Ubuntu or Debian, you will need to change \nwww-data\n to the user and group which run the Apache web server.\nIf you're planing on running rrdcached, make sure that the path is also chmod'ed to 775 and chown'ed to librenms:librenms.\n\n\n\n\nNext, add the following to \n/etc/apache2/sites-available/librenms.conf\n:\n\n\nVirtualHost *:80\n\n  DocumentRoot /opt/librenms/html/\n  ServerName  librenms.example.com\n  CustomLog /opt/librenms/logs/access_log combined\n  ErrorLog /opt/librenms/logs/error_log\n  AllowEncodedSlashes On\n  \nDirectory \n/opt/librenms/html/\n\n    AllowOverride All\n    Options FollowSymLinks MultiViews\n  \n/Directory\n\n\n/VirtualHost\n\n\n\n\n\nIf you are running Apache 2.2.18 or higher then change \nAllowEncodedSlashes On\n to \nAllowEncodedSlashes NoDecode\n\n\nIf you have Apache 2.3 or newer then please add the following line before \nAllowOverride All\n:\n\n\nRequire all granted\n\n\n\nOn at least Ubuntu 14.04 (and possibly other distributions and versions as well), mcrypt is not enabled on install.  Run the following to enable it:\n\n\nphp5enmod mcrypt\n\n\n\nChange \nlibrenms.example.com\n to the appropriate hostname for your domain, then enable the vhost and restart Apache:\n\n\na2ensite librenms.conf\na2enmod rewrite\nservice apache2 restart\n\n\n\nIf this is the only site you are hosting on this server (it should be :)) then you will need to disable the default site setup in Ubuntu:\n\n\na2dissite 000-default\n\n\n\n(To get to your LibreNMS install externally, you'll also need add it to your DNS or hosts file.)\n\n\nManual vs. web installer\n\n\nAt this stage you can either launch the web installer by going to http://librenms.example.com/install.php, follow the onscreen instructions then skip to the 'Add localhost' section. Alternatively if you want to continue the setup manually then just keep following these instructions.\n\n\ncp config.php.default config.php\nvim config.php\n\n\n\nChange the values to the right of the equal sign for lines beginning with \n$config[db_]\n to match your database information as setup above.\n\n\nChange the value of \n$config['snmp']['community']\n from \npublic\n to whatever your read-only SNMP community is.  If you have multiple communities, set it to the most common.\n\n\n Be sure you have no characters (including whitespace like: newlines, spaces, tabs, etc) outside of the \n?php?\n blocks. Your graphs will break otherwise. \n\n\nInitialise the database\n\n\nInitiate the follow database with the following command:\n\n\nphp build-base.php\n\n\n\nCreate admin user\n\n\nCreate the admin user - priv should be 10\n\n\nphp adduser.php \nname\n \npass\n 10 \nemail\n\n\n\n\nSubstitute your desired username, password and email address--and leave the angled brackets off.\n\n\nValidate your install\n\n\nRun validate.php as root in the librenms directory\n\n\nphp validate.php\n\n\n\nThis will check your install to verify it is set up correctly.\n\n\nAdd localhost\n\n\nphp addhost.php localhost public v2c\n\n\n\nThis assumes you haven't made community changes--if you have, replace \npublic\n with your community.  It also assumes SNMP v2c.  If you're using v3, there are additional steps (NOTE: instructions for SNMPv3 to come).\n\n\nDiscover localhost::\n\n\nphp discovery.php -h all\n\n\n\nCreate cronjob\n\n\nLibreNMS uses Job Snijders' \npoller-wrapper.py\n.  By default, the cron job runs \npoller-wrapper.py\n with 16 threads.  The current recommendation is to use 4 threads per core as a rule of thumb.  If the thread count needs to be changed, you can do so by editing the cron file (\n/etc/cron.d/librenms\n).  Just add a number after \npoller-wrapper.py\n, as in the example below:\n\n\n/opt/librenms/poller-wrapper.py 12 \n /dev/null 2\n1\n\n\n\nCreate the cronjob\n\n\ncp librenms.nonroot.cron /etc/cron.d/librenms\n\n\n\nCopy logrotate config\n\n\nLibreNMS keeps logs in \n/opt/librenms/logs\n. Over time these can become large and be rotated out.  To rotate out the old logs you can use the provided logrotate config file:\n\n\ncp misc/librenms.logrotate /etc/logrotate.d/librenms\n\n\n\nDaily Updates\n\n\nLibreNMS performs daily updates by default.  At 00:15 system time every day, a \ngit pull --no-edit --quiet\n is performed.  You can override this default by editing your \nconfig.php\n file.  Remove the comment (the \n#\n mark) on the line:\n\n\n#$config['update'] = 0;\n\n\n\nso that it looks like this:\n\n\n$config['update'] = 0;\n\n\n\nInstall complete\n\n\nPlease allow for 2-3 runs of the poller-wrapper for data to start appearing in the WebUI.\nIf you don't see data after this, please refer to the \nFAQ\n for assistance.\n\n\nThat's it!  You now should be able to log in to http://librenms.example.com/.  Please note that we have not covered HTTPS setup in this example, so your LibreNMS install is not secure by default.  Please do not expose it to the public Internet unless you have configured HTTPS and taken appropriate web server hardening steps.\n\n\nIt would be great if you would consider opting into the stats system we have, please see \nthis page\n on what it is and how to enable it.", 
            "title": "Installation Ubuntu 1404 Apache"
        }, 
        {
            "location": "/Installation/Installation-Ubuntu-1404-Apache/#on-the-db-server", 
            "text": "This host is where the MySQL database runs.  It could be the same machine as your network management server (this is the most common initial deployment scenario).   ** Whilst we are working on ensuring LibreNMS is compatible with MySQL strict mode, for now, please disable this after mysql is installed.   You are free to choose between using MySQL or MariaDB:  MySQL  apt-get install mysql-server mysql-client\nmysql -uroot -p  MariaDB  apt-get install mariadb-server mariadb-client\nmysql -uroot -p  Input the MySQL root password to enter the MySQL command-line interface.  Create the database:  CREATE DATABASE librenms CHARACTER SET utf8 COLLATE utf8_unicode_ci;\nCREATE USER 'librenms'@'localhost' IDENTIFIED BY 'password';\nGRANT ALL PRIVILEGES ON librenms.* TO 'librenms'@'localhost';\nFLUSH PRIVILEGES;\nexit  Replace  ip  above with the IP or DNS name of the server running LibreNMS.  If your database is on the same server as LibreNMS, you can use  localhost .  If you are deploying a separate database server, you need to change the  bind-address .  If your MySQL database resides on the same server as LibreNMS, you should skip this step.  vim /etc/mysql/my.cnf  Within the [mysqld] section please add:  innodb_file_per_table=1  Find the line:  bind-address = 127.0.0.1  Change  127.0.0.1  to the IP address that your MySQL server should listen on.  Restart MySQL:  If you see a line that starts  sql-mode  then change this to  sql-mode=\"\" .  service mysql restart", 
            "title": "On the DB Server"
        }, 
        {
            "location": "/Installation/Installation-Ubuntu-1404-Apache/#on-the-nms", 
            "text": "This host is where the web server and SNMP poller run.  It could be the same machine as your database server.  Install the required software:  apt-get install libapache2-mod-php5 php5-cli php5-mysql php5-gd php5-snmp php-pear php5-curl snmp graphviz php5-mcrypt php5-json apache2 fping imagemagick whois mtr-tiny nmap python-mysqldb snmpd php-net-ipv4 php-net-ipv6 rrdtool git  The packages listed above are an all-inclusive list of packages that were necessary on a clean install of Ubuntu 12.04/14.04.  You need to configure snmpd appropriately if you have not already done so.  An absolute minimal config for snmpd is:  rocommunity public 127.0.0.1  Adding the above line to  /etc/snmp/snmpd.conf  and running  service snmpd restart  will activate this config.  In  /etc/php5/apache2/php.ini  and  /etc/php5/cli/php.ini , ensure date.timezone is set to your preferred time zone.  See http://php.net/manual/en/timezones.php for a list of supported timezones.  Valid\nexamples are: \"America/New York\", \"Australia/Brisbane\", \"Etc/UTC\".\nPlease also ensure that  allow_url_fopen  is enabled. Other functions needed for LibreNMS include  exec,passthru,shell_exec,escapeshellarg,escapeshellcmd,proc_close,proc_open,popen .", 
            "title": "On the NMS"
        }, 
        {
            "location": "/Installation/Installation-Ubuntu-1404-Apache/#adding-the-librenms-user", 
            "text": "useradd librenms -d /opt/librenms -M -r\nusermod -a -G librenms www-data", 
            "title": "Adding the librenms-user"
        }, 
        {
            "location": "/Installation/Installation-Ubuntu-1404-Apache/#cloning", 
            "text": "LibreNMS is installed using git.  If you're not familiar with git, check out the  git book  or the tips at  git ready .  The initial install from github.com is called a  git clone ; subsequent updates are done through  git pull .  You can clone the repository via HTTPS or SSH.  In either case, you need to ensure that the appropriate port (443 for HTTPS, 22 for SSH) is open in the outbound direction for your server.  cd /opt\ngit clone https://github.com/librenms/librenms.git librenms\ncd /opt/librenms  The recommended method of cloning a git repository is HTTPS.  If you would like to clone via SSH instead, use the command  git clone git@github.com:librenms/librenms.git librenms  instead.  Sometimes the initial clone can take quite a while (nearly 3 minutes on a 10 Mbps fibre connection in Australia is a recent example).  If it's a big problem to you, you can save about 50% of the bandwidth by not pulling down the full git history.  This comes with some limitations (namely that you can't use it as the basis for further git repos), but if you're not planning to develop for LibreNMS it's an acceptable option.  To perform the initial clone without full history, run the following instead:  cd /opt\ngit clone --depth 1 https://github.com/librenms/librenms.git librenms\ncd /opt/librenms", 
            "title": "Cloning"
        }, 
        {
            "location": "/Installation/Installation-Ubuntu-1404-Apache/#web-interface", 
            "text": "To prepare the web interface (and adding devices shortly), you'll need to create and chown a directory as well as create an Apache vhost.  First, create and chown the  rrd  directory and create the  logs  directory:  mkdir rrd logs\nchown -R librenms:librenms /opt/librenms\nchmod 775 rrd   NOTE: If you're not running Ubuntu or Debian, you will need to change  www-data  to the user and group which run the Apache web server.\nIf you're planing on running rrdcached, make sure that the path is also chmod'ed to 775 and chown'ed to librenms:librenms.   Next, add the following to  /etc/apache2/sites-available/librenms.conf :  VirtualHost *:80 \n  DocumentRoot /opt/librenms/html/\n  ServerName  librenms.example.com\n  CustomLog /opt/librenms/logs/access_log combined\n  ErrorLog /opt/librenms/logs/error_log\n  AllowEncodedSlashes On\n   Directory  /opt/librenms/html/ \n    AllowOverride All\n    Options FollowSymLinks MultiViews\n   /Directory  /VirtualHost   If you are running Apache 2.2.18 or higher then change  AllowEncodedSlashes On  to  AllowEncodedSlashes NoDecode  If you have Apache 2.3 or newer then please add the following line before  AllowOverride All :  Require all granted  On at least Ubuntu 14.04 (and possibly other distributions and versions as well), mcrypt is not enabled on install.  Run the following to enable it:  php5enmod mcrypt  Change  librenms.example.com  to the appropriate hostname for your domain, then enable the vhost and restart Apache:  a2ensite librenms.conf\na2enmod rewrite\nservice apache2 restart  If this is the only site you are hosting on this server (it should be :)) then you will need to disable the default site setup in Ubuntu:  a2dissite 000-default  (To get to your LibreNMS install externally, you'll also need add it to your DNS or hosts file.)", 
            "title": "Web Interface"
        }, 
        {
            "location": "/Installation/Installation-Ubuntu-1404-Apache/#manual-vs-web-installer", 
            "text": "At this stage you can either launch the web installer by going to http://librenms.example.com/install.php, follow the onscreen instructions then skip to the 'Add localhost' section. Alternatively if you want to continue the setup manually then just keep following these instructions.  cp config.php.default config.php\nvim config.php  Change the values to the right of the equal sign for lines beginning with  $config[db_]  to match your database information as setup above.  Change the value of  $config['snmp']['community']  from  public  to whatever your read-only SNMP community is.  If you have multiple communities, set it to the most common.   Be sure you have no characters (including whitespace like: newlines, spaces, tabs, etc) outside of the  ?php?  blocks. Your graphs will break otherwise.", 
            "title": "Manual vs. web installer"
        }, 
        {
            "location": "/Installation/Installation-Ubuntu-1404-Apache/#initialise-the-database", 
            "text": "Initiate the follow database with the following command:  php build-base.php", 
            "title": "Initialise the database"
        }, 
        {
            "location": "/Installation/Installation-Ubuntu-1404-Apache/#create-admin-user", 
            "text": "Create the admin user - priv should be 10  php adduser.php  name   pass  10  email   Substitute your desired username, password and email address--and leave the angled brackets off.", 
            "title": "Create admin user"
        }, 
        {
            "location": "/Installation/Installation-Ubuntu-1404-Apache/#validate-your-install", 
            "text": "Run validate.php as root in the librenms directory  php validate.php  This will check your install to verify it is set up correctly.", 
            "title": "Validate your install"
        }, 
        {
            "location": "/Installation/Installation-Ubuntu-1404-Apache/#add-localhost", 
            "text": "php addhost.php localhost public v2c  This assumes you haven't made community changes--if you have, replace  public  with your community.  It also assumes SNMP v2c.  If you're using v3, there are additional steps (NOTE: instructions for SNMPv3 to come).  Discover localhost::  php discovery.php -h all", 
            "title": "Add localhost"
        }, 
        {
            "location": "/Installation/Installation-Ubuntu-1404-Apache/#create-cronjob", 
            "text": "LibreNMS uses Job Snijders'  poller-wrapper.py .  By default, the cron job runs  poller-wrapper.py  with 16 threads.  The current recommendation is to use 4 threads per core as a rule of thumb.  If the thread count needs to be changed, you can do so by editing the cron file ( /etc/cron.d/librenms ).  Just add a number after  poller-wrapper.py , as in the example below:  /opt/librenms/poller-wrapper.py 12   /dev/null 2 1  Create the cronjob  cp librenms.nonroot.cron /etc/cron.d/librenms", 
            "title": "Create cronjob"
        }, 
        {
            "location": "/Installation/Installation-Ubuntu-1404-Apache/#copy-logrotate-config", 
            "text": "LibreNMS keeps logs in  /opt/librenms/logs . Over time these can become large and be rotated out.  To rotate out the old logs you can use the provided logrotate config file:  cp misc/librenms.logrotate /etc/logrotate.d/librenms", 
            "title": "Copy logrotate config"
        }, 
        {
            "location": "/Installation/Installation-Ubuntu-1404-Apache/#daily-updates", 
            "text": "LibreNMS performs daily updates by default.  At 00:15 system time every day, a  git pull --no-edit --quiet  is performed.  You can override this default by editing your  config.php  file.  Remove the comment (the  #  mark) on the line:  #$config['update'] = 0;  so that it looks like this:  $config['update'] = 0;", 
            "title": "Daily Updates"
        }, 
        {
            "location": "/Installation/Installation-Ubuntu-1404-Apache/#install-complete", 
            "text": "Please allow for 2-3 runs of the poller-wrapper for data to start appearing in the WebUI.\nIf you don't see data after this, please refer to the  FAQ  for assistance.  That's it!  You now should be able to log in to http://librenms.example.com/.  Please note that we have not covered HTTPS setup in this example, so your LibreNMS install is not secure by default.  Please do not expose it to the public Internet unless you have configured HTTPS and taken appropriate web server hardening steps.  It would be great if you would consider opting into the stats system we have, please see  this page  on what it is and how to enable it.", 
            "title": "Install complete"
        }, 
        {
            "location": "/Installation/Installation-Ubuntu-1404-Lighttpd/", 
            "text": "NOTE: These instructions assume you are the \nroot\n user.  If you are not, prepend \nsudo\n to the shell commands (the ones that aren't at \nmysql\n prompts) or temporarily become a user with root privileges with \nsudo -s\n or \nsudo -i\n.\n\n\n\n\nPlease note the minimum supported PHP version is 5.6.4\n\n\nOn the DB Server\n\n\nThis host is where the MySQL database runs.  It could be the same machine as your network management server (this is the most common initial deployment scenario).\n\n\n\n\n** Whilst we are working on ensuring LibreNMS is compatible with MySQL strict mode, for now, please disable this after mysql is installed.\n\n\n\n\nYou are free to choose between using MySQL or MariaDB:\n\n\nMySQL\n\n\napt-get install mysql-server mysql-client\nmysql -uroot -p\n\n\n\n\nMariaDB\n\n\napt-get install mariadb-server mariadb-client\nmysql -uroot -p\n\n\n\n\nEnter the MySQL root password to enter the MySQL command-line interface.\n\n\nCreate database.\n\n\nCREATE DATABASE librenms CHARACTER SET utf8 COLLATE utf8_unicode_ci;\nCREATE USER 'librenms'@'localhost' IDENTIFIED BY 'password';\nGRANT ALL PRIVILEGES ON librenms.* TO 'librenms'@'localhost';\nFLUSH PRIVILEGES;\nexit\n\n\n\n\nReplace \nip\n above with the IP of the server running LibreNMS.  If your database is on the same server as LibreNMS, you can just use \nlocalhost\n as the IP address.\n\n\nIf you are deploying a separate database server, you need to change the \nbind-address\n.  If your MySQL database resides on the same server as LibreNMS, you should skip this step.\n\n\nvim /etc/mysql/my.cnf\n\n\n\nWithin the [mysqld] section please add:\n\n\ninnodb_file_per_table=1\n\n\n\nFind the line: \nbind-address = 127.0.0.1\n\n\nChange \n127.0.0.1\n to the IP address that your MySQL server should listen on.  Restart MySQL:\n\n\nIf you see a line that starts \nsql-mode\n then change this to \nsql-mode=\"\"\n.\n\n\nservice mysql restart\n\n\n\nOn the NMS\n\n\nInstall necessary software.  The packages listed below are an all-inclusive list of packages that were necessary on a clean install of Debian 7.\n\n\napt-get install lighttpd php5-cli php5-mysql php5-gd php5-snmp php5-cgi php-pear php5-curl snmp graphviz rrdtool sendmail fping imagemagick whois mtr-tiny nmap ipmitool php5-mcrypt php5-json python-mysqldb snmpd php-net-ipv4 php-net-ipv6 rrdtool git\n\n\n\nAdding the librenms-user\n\n\nuseradd librenms -d /opt/librenms -M -r\nusermod -a -G librenms www-data\n\n\n\nCloning\n\n\nYou can clone the repository via HTTPS or SSH.  In either case, you need to ensure the appropriate port (443 for HTTPS, 22 for SSH) is open in the outbound direction for your server.\n\n\ncd /opt\ngit clone https://github.com/librenms/librenms.git librenms\ncd /opt/librenms\n\n\n\nAt this stage you can either launch the web installer by going to http://IP/install.php, follow the onscreen instructions then skip to the 'Web Interface' section further down. Alternatively if you want to continue the setup manually then just keep following these instructions.\n\n\ncp config.php.default config.php\nvim config.php\n\n\n\n\n\nNOTE: The recommended method of cloning a git repository is HTTPS.  If you would like to clone via SSH instead, use the command \ngit clone git@github.com:librenms/librenms.git librenms\n instead.\n\n\n\n\nChange the values to the right of the equal sign for lines beginning with \n$config[db_]\n to match your database information as setup above.\n\n\nChange the value of \n$config['snmp']['community']\n from \npublic\n to whatever your read-only SNMP community is.  If you have multiple communities, set it to the most common.\n\n\n Be sure you have no characters (including whitespace like: newlines, spaces, tabs, etc) outside of the \n?php?\n blocks. Your graphs will break otherwise. \n\n\nInitialise the database\n\n\nInitiate the follow database with the following command:\n\n\nphp build-base.php\n\n\n\nCreate admin user\n\n\nCreate the admin user - priv should be 10\n\n\nphp adduser.php \nname\n \npass\n 10 \nemail\n\n\n\n\nSubstitute your desired username, password and email address--and leave the angled brackets off.\n\n\nWeb Interface\n\n\nTo prepare the web interface (and adding devices shortly), you'll need to set up Lighttpd.\n\n\nFirst, create and chown the \nrrd\n directory and create the \nlogs\n directory\n\n\nmkdir rrd logs\nchown -R librenms:librenms /opt/librenms\nchmod 775 rrd\n\n\n\n\n\nNOTE: If you're planing on running rrdcached, make sure that the path is also chmod'ed to 775 and chown'ed to librenms:librenms.\n\n\n\n\nNext, add the following to \n/etc/lighttpd/librenms.conf\n\n\n server.document-root = \"/opt/librenms/html\"\n url.rewrite-once = (\n   \"^/(.*)\\.(gif|jpg|jpeg|tiff|svg|png|css|php)$\" =\n \"/$0\",\n   \"^/([a-z|0-9\\-]+)/(.+)/(.+)/(.+)/(.+)/(.+)/(.+)/(.+)/(.+)/(.+)/(.+)/\" =\n \"/?page=$1\n$2\n$3\n$4\n$5\n$6\n$7\n$8\n$9\n$10\",\n   \"^/([a-z|0-9\\-]+)/(.+)/(.+)/(.+)/(.+)/(.+)/(.+)/(.+)/(.+)/(.+)/\" =\n \"/?page=$1\n$2\n$3\n$4\n$5\n$6\n$7\n$8\n$9\",\n   \"^/([a-z|0-9\\-]+)/(.+)/(.+)/(.+)/(.+)/(.+)/(.+)/(.+)/(.+)/\" =\n \"/?page=$1\n$2\n$3\n$4\n$5\n$6\n$7\n$8\",\n   \"^/([a-z|0-9\\-]+)/(.+)/(.+)/(.+)/(.+)/(.+)/(.+)/(.+)/\" =\n \"/?page=$1\n$2\n$3\n$4\n$5\n$6\n$7\",\n   \"^/([a-z|0-9\\-]+)/(.+)/(.+)/(.+)/(.+)/(.+)/(.+)/\" =\n \"/?page=$1\n$2\n$3\n$4\n$5\n$6\",\n   \"^/([a-z|0-9\\-]+)/(.+)/(.+)/(.+)/(.+)/\" =\n \"/?page=$1\n$2\n$3\n$4\n$5\",\n   \"^/([a-z|0-9\\-]+)/(.+)/(.+)/(.+)/\" =\n \"/?page=$1\n$2\n$3\n$4\",\n   \"^/([a-z|0-9\\-]+)/(.+)/(.+)/\" =\n \"/?page=$1\n$2\n$3\",\n   \"^/([a-z|0-9\\-]+)/(.+)/\" =\n \"/?page=$1\n$2\",\n   \"^/([a-z|0-9\\-]+)/$\" =\n \"/?page=$1\"\n )\n\n\n\nNext, add the following to \n/etc/lighttpd/lighttpd.conf\n\n\n $HTTP[\"host\"] == \"example.com\" { include \"librenms.conf\" }\n\n\n\nAnd enable mod_rewrite by uncommenting\n     #       \"mod_rewrite\",\nto\n             \"mod_rewrite\",\n\n\nDon't forget to change 'example.com' to your domain\n\n\nEnable fastcgi in Lighttpd by running the following commands,\n\n\n lighty-enable-mod fastcgi\n lighty-enable-mod fastcgi-php\n\n\n\nAnd add the following to /etc/php5/cgi/php.ini\n\n\n cgi.fix_pathinfo = 1\n\n\n\nthen restart Lighttpd:\n\n\nservice lighttpd restart\n\n\n\nValidate your install\n\n\nRun validate.php as root in the librenms directory\n\n\nphp validate.php\n\n\n\nThis will check your install to verify it is set up correctly.\n\n\nAdd localhost\n\n\nphp addhost.php localhost public v2c\n\n\n\nThis assumes you haven't made community changes--if you have, replace \npublic\n with your community.  It also assumes SNMP v2c.  If you're using v3, there are additional steps (NOTE: instructions for SNMPv3 to come).\n\n\nDiscover localhost:\n\n\nphp discovery.php -h all\n\n\n\nCreate cronjob\n\n\nThe polling method used by LibreNMS is \npoller-wrapper.py\n, which was placed in the public domain by its author.  By default, the LibreNMS cronjob runs \npoller-wrapper.py\n with 16 threads.  The current LibreNMS recommendation is to use 4 threads per core.  The default if no thread count is \n16 threads\n.\n\n\nIf the thread count needs to be changed, you can do so by editing the cron file (\n/etc/cron.d/librenms\n).\n Just add a number after \npoller-wrapper.py\n, as in the below example:\n\n\n/opt/librenms/poller-wrapper.py 12 \n /dev/null 2\n1\n\n\n\nCreate the cronjob\n\n\ncp librenms.nonroot.cron /etc/cron.d/librenms\n\n\n\nCopy logrotate config\n\n\nLibreNMS keeps logs in \n/opt/librenms/logs\n. Over time these can become large and be rotated out.  To rotate out the old logs you can use the provided logrotate config file:\n\n\ncp misc/librenms.logrotate /etc/logrotate.d/librenms\n\n\n\nDaily Updates\n\n\nLibreNMS performs daily updates by default.  At 00:15 system time every day, a \ngit pull --no-edit --quiet\n is performed.  You can override this default by editing your \nconfig.php\n file.  Remove the comment (the \n#\n mark) on the line:\n\n\n#$config['update'] = 0;\n\n\n\nso that it looks like this:\n\n\n$config['update'] = 0;\n\n\n\nInstall complete\n\n\nPlease allow for 2-3 runs of the poller-wrapper for data to start appearing in the WebUI.\nIf you don't see data after this, please refer to the \nFAQ\n for assistance.\n\n\nThat's it!  You now should be able to log in to http://librenms.example.com/.  Please note that we have not covered HTTPS setup in this example, so your LibreNMS install is not secure by default.  Please do not expose it to the public Internet unless you have configured HTTPS and taken appropriate web server hardening steps.\n\n\nIt would be great if you would consider opting into the stats system we have, please see \nthis page\n on what it is and how to enable it.", 
            "title": "Installation Ubuntu 1404 Lighttpd"
        }, 
        {
            "location": "/Installation/Installation-Ubuntu-1404-Lighttpd/#on-the-db-server", 
            "text": "This host is where the MySQL database runs.  It could be the same machine as your network management server (this is the most common initial deployment scenario).   ** Whilst we are working on ensuring LibreNMS is compatible with MySQL strict mode, for now, please disable this after mysql is installed.   You are free to choose between using MySQL or MariaDB:  MySQL  apt-get install mysql-server mysql-client\nmysql -uroot -p  MariaDB  apt-get install mariadb-server mariadb-client\nmysql -uroot -p  Enter the MySQL root password to enter the MySQL command-line interface.  Create database.  CREATE DATABASE librenms CHARACTER SET utf8 COLLATE utf8_unicode_ci;\nCREATE USER 'librenms'@'localhost' IDENTIFIED BY 'password';\nGRANT ALL PRIVILEGES ON librenms.* TO 'librenms'@'localhost';\nFLUSH PRIVILEGES;\nexit  Replace  ip  above with the IP of the server running LibreNMS.  If your database is on the same server as LibreNMS, you can just use  localhost  as the IP address.  If you are deploying a separate database server, you need to change the  bind-address .  If your MySQL database resides on the same server as LibreNMS, you should skip this step.  vim /etc/mysql/my.cnf  Within the [mysqld] section please add:  innodb_file_per_table=1  Find the line:  bind-address = 127.0.0.1  Change  127.0.0.1  to the IP address that your MySQL server should listen on.  Restart MySQL:  If you see a line that starts  sql-mode  then change this to  sql-mode=\"\" .  service mysql restart", 
            "title": "On the DB Server"
        }, 
        {
            "location": "/Installation/Installation-Ubuntu-1404-Lighttpd/#on-the-nms", 
            "text": "Install necessary software.  The packages listed below are an all-inclusive list of packages that were necessary on a clean install of Debian 7.  apt-get install lighttpd php5-cli php5-mysql php5-gd php5-snmp php5-cgi php-pear php5-curl snmp graphviz rrdtool sendmail fping imagemagick whois mtr-tiny nmap ipmitool php5-mcrypt php5-json python-mysqldb snmpd php-net-ipv4 php-net-ipv6 rrdtool git", 
            "title": "On the NMS"
        }, 
        {
            "location": "/Installation/Installation-Ubuntu-1404-Lighttpd/#adding-the-librenms-user", 
            "text": "useradd librenms -d /opt/librenms -M -r\nusermod -a -G librenms www-data", 
            "title": "Adding the librenms-user"
        }, 
        {
            "location": "/Installation/Installation-Ubuntu-1404-Lighttpd/#cloning", 
            "text": "You can clone the repository via HTTPS or SSH.  In either case, you need to ensure the appropriate port (443 for HTTPS, 22 for SSH) is open in the outbound direction for your server.  cd /opt\ngit clone https://github.com/librenms/librenms.git librenms\ncd /opt/librenms  At this stage you can either launch the web installer by going to http://IP/install.php, follow the onscreen instructions then skip to the 'Web Interface' section further down. Alternatively if you want to continue the setup manually then just keep following these instructions.  cp config.php.default config.php\nvim config.php   NOTE: The recommended method of cloning a git repository is HTTPS.  If you would like to clone via SSH instead, use the command  git clone git@github.com:librenms/librenms.git librenms  instead.   Change the values to the right of the equal sign for lines beginning with  $config[db_]  to match your database information as setup above.  Change the value of  $config['snmp']['community']  from  public  to whatever your read-only SNMP community is.  If you have multiple communities, set it to the most common.   Be sure you have no characters (including whitespace like: newlines, spaces, tabs, etc) outside of the  ?php?  blocks. Your graphs will break otherwise.", 
            "title": "Cloning"
        }, 
        {
            "location": "/Installation/Installation-Ubuntu-1404-Lighttpd/#initialise-the-database", 
            "text": "Initiate the follow database with the following command:  php build-base.php", 
            "title": "Initialise the database"
        }, 
        {
            "location": "/Installation/Installation-Ubuntu-1404-Lighttpd/#create-admin-user", 
            "text": "Create the admin user - priv should be 10  php adduser.php  name   pass  10  email   Substitute your desired username, password and email address--and leave the angled brackets off.", 
            "title": "Create admin user"
        }, 
        {
            "location": "/Installation/Installation-Ubuntu-1404-Lighttpd/#web-interface", 
            "text": "To prepare the web interface (and adding devices shortly), you'll need to set up Lighttpd.  First, create and chown the  rrd  directory and create the  logs  directory  mkdir rrd logs\nchown -R librenms:librenms /opt/librenms\nchmod 775 rrd   NOTE: If you're planing on running rrdcached, make sure that the path is also chmod'ed to 775 and chown'ed to librenms:librenms.   Next, add the following to  /etc/lighttpd/librenms.conf   server.document-root = \"/opt/librenms/html\"\n url.rewrite-once = (\n   \"^/(.*)\\.(gif|jpg|jpeg|tiff|svg|png|css|php)$\" =  \"/$0\",\n   \"^/([a-z|0-9\\-]+)/(.+)/(.+)/(.+)/(.+)/(.+)/(.+)/(.+)/(.+)/(.+)/(.+)/\" =  \"/?page=$1 $2 $3 $4 $5 $6 $7 $8 $9 $10\",\n   \"^/([a-z|0-9\\-]+)/(.+)/(.+)/(.+)/(.+)/(.+)/(.+)/(.+)/(.+)/(.+)/\" =  \"/?page=$1 $2 $3 $4 $5 $6 $7 $8 $9\",\n   \"^/([a-z|0-9\\-]+)/(.+)/(.+)/(.+)/(.+)/(.+)/(.+)/(.+)/(.+)/\" =  \"/?page=$1 $2 $3 $4 $5 $6 $7 $8\",\n   \"^/([a-z|0-9\\-]+)/(.+)/(.+)/(.+)/(.+)/(.+)/(.+)/(.+)/\" =  \"/?page=$1 $2 $3 $4 $5 $6 $7\",\n   \"^/([a-z|0-9\\-]+)/(.+)/(.+)/(.+)/(.+)/(.+)/(.+)/\" =  \"/?page=$1 $2 $3 $4 $5 $6\",\n   \"^/([a-z|0-9\\-]+)/(.+)/(.+)/(.+)/(.+)/\" =  \"/?page=$1 $2 $3 $4 $5\",\n   \"^/([a-z|0-9\\-]+)/(.+)/(.+)/(.+)/\" =  \"/?page=$1 $2 $3 $4\",\n   \"^/([a-z|0-9\\-]+)/(.+)/(.+)/\" =  \"/?page=$1 $2 $3\",\n   \"^/([a-z|0-9\\-]+)/(.+)/\" =  \"/?page=$1 $2\",\n   \"^/([a-z|0-9\\-]+)/$\" =  \"/?page=$1\"\n )  Next, add the following to  /etc/lighttpd/lighttpd.conf   $HTTP[\"host\"] == \"example.com\" { include \"librenms.conf\" }  And enable mod_rewrite by uncommenting\n     #       \"mod_rewrite\",\nto\n             \"mod_rewrite\",  Don't forget to change 'example.com' to your domain  Enable fastcgi in Lighttpd by running the following commands,   lighty-enable-mod fastcgi\n lighty-enable-mod fastcgi-php  And add the following to /etc/php5/cgi/php.ini   cgi.fix_pathinfo = 1  then restart Lighttpd:  service lighttpd restart", 
            "title": "Web Interface"
        }, 
        {
            "location": "/Installation/Installation-Ubuntu-1404-Lighttpd/#validate-your-install", 
            "text": "Run validate.php as root in the librenms directory  php validate.php  This will check your install to verify it is set up correctly.", 
            "title": "Validate your install"
        }, 
        {
            "location": "/Installation/Installation-Ubuntu-1404-Lighttpd/#add-localhost", 
            "text": "php addhost.php localhost public v2c  This assumes you haven't made community changes--if you have, replace  public  with your community.  It also assumes SNMP v2c.  If you're using v3, there are additional steps (NOTE: instructions for SNMPv3 to come).  Discover localhost:  php discovery.php -h all", 
            "title": "Add localhost"
        }, 
        {
            "location": "/Installation/Installation-Ubuntu-1404-Lighttpd/#create-cronjob", 
            "text": "The polling method used by LibreNMS is  poller-wrapper.py , which was placed in the public domain by its author.  By default, the LibreNMS cronjob runs  poller-wrapper.py  with 16 threads.  The current LibreNMS recommendation is to use 4 threads per core.  The default if no thread count is  16 threads .  If the thread count needs to be changed, you can do so by editing the cron file ( /etc/cron.d/librenms ).\n Just add a number after  poller-wrapper.py , as in the below example:  /opt/librenms/poller-wrapper.py 12   /dev/null 2 1  Create the cronjob  cp librenms.nonroot.cron /etc/cron.d/librenms", 
            "title": "Create cronjob"
        }, 
        {
            "location": "/Installation/Installation-Ubuntu-1404-Lighttpd/#copy-logrotate-config", 
            "text": "LibreNMS keeps logs in  /opt/librenms/logs . Over time these can become large and be rotated out.  To rotate out the old logs you can use the provided logrotate config file:  cp misc/librenms.logrotate /etc/logrotate.d/librenms", 
            "title": "Copy logrotate config"
        }, 
        {
            "location": "/Installation/Installation-Ubuntu-1404-Lighttpd/#daily-updates", 
            "text": "LibreNMS performs daily updates by default.  At 00:15 system time every day, a  git pull --no-edit --quiet  is performed.  You can override this default by editing your  config.php  file.  Remove the comment (the  #  mark) on the line:  #$config['update'] = 0;  so that it looks like this:  $config['update'] = 0;", 
            "title": "Daily Updates"
        }, 
        {
            "location": "/Installation/Installation-Ubuntu-1404-Lighttpd/#install-complete", 
            "text": "Please allow for 2-3 runs of the poller-wrapper for data to start appearing in the WebUI.\nIf you don't see data after this, please refer to the  FAQ  for assistance.  That's it!  You now should be able to log in to http://librenms.example.com/.  Please note that we have not covered HTTPS setup in this example, so your LibreNMS install is not secure by default.  Please do not expose it to the public Internet unless you have configured HTTPS and taken appropriate web server hardening steps.  It would be great if you would consider opting into the stats system we have, please see  this page  on what it is and how to enable it.", 
            "title": "Install complete"
        }, 
        {
            "location": "/Installation/Installation-CentOS-6-Apache-Nginx/", 
            "text": "NOTE: These instructions assume you are the \nroot\n user.  If you are not, prepend \nsudo\n to the shell commands (the ones that aren't at \nmysql\n prompts) or temporarily become a user with root privileges with \nsudo -s\n or \nsudo -i\n.\n\n\n\n\nPlease note the minimum supported PHP version is 5.6.4\n\n\nOn the DB Server\n\n\nThis host is where the MySQL database runs.  It could be the same machine as your network management server (this is the most common initial deployment scenario).\n\n\n\n\n** Whilst we are working on ensuring LibreNMS is compatible with MySQL strict mode, for now, please disable this after mysql is installed.\n\n\n\n\nYou are free to choose between using MySQL or MariaDB:\n\n\nMySQL\n\n\nyum install net-snmp mysql-server mysql-client\nchkconfig mysqld on\nservice mysqld start\n\n\n\n\nMariaDB\n\n\nyum install net-snmp mariadb-server mariadb-client\nchkconfig mariadb on\nservice mariadb start\n\n\n\n\nNow continue with the installation:\n\n\nchkconfig snmpd on\nservice snmpd start\nmysql_secure_installation\nmysql -uroot -p\n\n\n\n\nEnter the MySQL/MariaDB root password to enter the command-line interface.\n\n\nCreate database.\n\n\nCREATE DATABASE librenms CHARACTER SET utf8 COLLATE utf8_unicode_ci;\nCREATE USER 'librenms'@'localhost' IDENTIFIED BY 'password';\nGRANT ALL PRIVILEGES ON librenms.* TO 'librenms'@'localhost';\nFLUSH PRIVILEGES;\nexit\n\n\n\n\nReplace \nip\n above with the IP of the server running LibreNMS.  If your database is on the same server as LibreNMS, use \nlocalhost\n as the IP address.\n\n\nEdit the mysql/mariadb configuration file:\n\n\nvim /etc/my.cnf\n\n\n\n\nAdd the following line:\n\n\ninnodb_file_per_table=1\n\n\n\nIf you are deploying a separate database server, you also need to specify the \nbind-address\n.  If your MySQL database resides on the same server as LibreNMS, you should skip this step.\n\n\nbind-address = \nip\n\n\n\n\nIf you see a line that starts \nsql-mode\n then change this to \nsql-mode=\"\"\n.\n\n\nSave, and restart MySQL/MariaDB to apply your changes:\n\n\nservice mysqld restart\n\n\n\nor\n\n\nservice mariadb restart\n\n\n\nOn the NMS\n\n\nInstall necessary software.  The packages listed below are an all-inclusive list of packages that were necessary on a clean install of CentOS 6.x.  It also requires the EPEL repository. Net_IPv6 is required even if your network environment does not support IPv6.\n\n\nNote if not using HTTPd (Apache): RHEL requires \nhttpd\n to be installed regardless of of \nnginx\n's (or any other web-server's) presence.\n\n\n    yum install epel-release\n    yum install php php-cli php-gd php-mysql php-snmp php-pear php-curl httpd net-snmp graphviz graphviz-php mysql ImageMagick jwhois nmap mtr rrdtool MySQL-python net-snmp-utils vixie-cron php-mcrypt fping git\n    pear install Net_IPv4-1.3.4\n    pear install Net_IPv6-1.2.2b2\n\n\n\n\nConfigure SNMPD on localhost\n\n\nEdit \n/etc/snmp/snmpd.conf\n to enable self-polling.  An absolute minimal config for snmpd is:\n\n\nrocommunity public 127.0.0.1\n\n\n\nYou may either edit the default configuration file to your liking, or backup the default config file and replace it entirely with your own. To apply your changes, run \nservice snmpd restart\n for Centos 6.x. If you have deployed a separate database server, you will likely want to configure snmpd on that host as well.\n\n\nAdding the librenms-user for Apache\n\n\n    useradd librenms -d /opt/librenms -M -r\n    usermod -a -G librenms apache\n\n\n\n\nAdding the librenms-user for Nginx\n\n\n    useradd librenms -d /opt/librenms -M -r\n    usermod -a -G librenms nginx\n\n\n\n\nUsing HTTPd (Apache2)\n\n\nSet \nhttpd\n to start on system boot.\n\n\nchkconfig --levels 235 httpd on\n\n\n\n\nIn \n/etc/php.ini\n, ensure \ndate.timezone\n is set to your preferred time zone.  See http://php.net/manual/en/timezones.php for a list of supported timezones.  Valid\nexamples are: \"America/New York\", \"Australia/Brisbane\", \"Etc/UTC\".\nPlease also ensure that \nallow_url_fopen\n is enabled. Other functions needed for LibreNMS include \nexec,passthru,shell_exec,escapeshellarg,escapeshellcmd,proc_close,proc_open,popen\n.\n\n\nNext, add the following to \n/etc/httpd/conf.d/librenms.conf\n\n\nIf you are running Apache below version 2.2.18:\n\n\nVirtualHost *:80\n\n  DocumentRoot /opt/librenms/html/\n  ServerName  librenms.example.com\n  CustomLog /opt/librenms/logs/access_log combined\n  ErrorLog /opt/librenms/logs/error_log\n  AllowEncodedSlashes On\n  \nDirectory \n/opt/librenms/html/\n\n    AllowOverride All\n    Options FollowSymLinks MultiViews\n  \n/Directory\n\n\n/VirtualHost\n\n\n\n\n\nIf you are running Apache 2.2.18 or higher:\n\n\nVirtualHost *:80\n\n  DocumentRoot /opt/librenms/html/\n  ServerName  librenms.example.com\n  CustomLog /opt/librenms/logs/access_log combined\n  ErrorLog /opt/librenms/logs/error_log\n  AllowEncodedSlashes NoDecode\n  \nDirectory \n/opt/librenms/html/\n\n    AllowOverride All\n    Options FollowSymLinks MultiViews\n    Require all granted\n  \n/Directory\n\n\n/VirtualHost\n\n\n\n\n\nIf the file \n/etc/httpd/conf.d/welcome.conf\n exists, you will want to remove that as well unless you're familiar with \nName-based Virtual Hosts\n.\n\n\nrn /etc/httpd/conf.d/welcome.conf /etc/httpd/conf.d/welcome.conf.bak\n\n\n\n\nUsing Nginx and PHP-FPM\n\n\nIf you choose to run Nginx, you will need to install necessary extra software and let it start on system boot.\n\n\n    yum install nginx php-fpm\n    chkconfig nginx on\n    chkconfig php-fpm on\n\n\n\n\nModify permissions and configuration for \nphp-fpm\n to use nginx credentials.\n\n\nmkdir /var/lib/php/session\nchown root:nginx /var/lib/php -R\nvim /etc/php-fpm.d/www.conf      # At line #12: Change `listen` to `/var/run/php5-fpm.sock`\n                                # At line #39-41: Change the `user` and `group` to `nginx`\n\n\n\nAdd configuration for \nnginx\n at \n/etc/nginx/conf.d/librenms.conf\n with the following content:\n\n\nserver {\n listen      80;\n server_name librenms.example.com;\n root        /opt/librenms/html;\n index       index.php;\n access_log  /opt/librenms/logs/access_log;\n error_log   /opt/librenms/logs/error_log;\n location / {\n  try_files $uri $uri/ @librenms;\n }\n location ~ \\.php {\n  fastcgi_param PATH_INFO $fastcgi_path_info;\n  include fastcgi.conf;\n  fastcgi_split_path_info ^(.+\\.php)(/.+)$;\n  fastcgi_pass unix:/var/run/php5-fpm.sock;\n }\n location ~ /\\.ht {\n  deny all;\n }\n location @librenms {\n  rewrite api/v0(.*)$ /api_v0.php/$1 last;\n  rewrite ^(.+)$ /index.php/$1 last;\n }\n}\n\n\n\n\nCloning\n\n\nYou can clone the repository via HTTPS or SSH.  In either case, you need to ensure the appropriate port (443 for HTTPS, 22 for SSH) is open in the outbound direction for your server.\n\n\n    cd /opt\n    git clone https://github.com/librenms/librenms.git librenms\n    cd /opt/librenms\n\n\n\n\nNOTE: The recommended method of cloning a git repository is HTTPS.  If you would like to clone via SSH instead, use the command \ngit clone git@github.com:librenms/librenms.git librenms\n instead.\n\n\nPrepare the Web Interface\n\n\nTo prepare the web interface, you'll need to create and chown a directory as well as create an Apache vhost.\n\n\nFirst, create and chown the \nrrd\n directory and create the \nlogs\n directory\n\n\n    mkdir rrd logs\n    chown -R librenms:librenms /opt/librenms\n    chmod 775 rrd\n\n\n\n\nIf you're planing on running rrdcached, make sure that the path is also chmod'ed to 775 and chown'ed to librenms:librenms.\n\n\nSELinux\n\n\n\n\nif you're using SELinux you need to allow web server user to write into logs directory.\nsemanage tool is a part of policycoreutils-python, so if don't have it, you can install it\n\nPlease note that running LibreNMS with SELinux is still experimental and we cannot guarantee that everything will be working fine for now.\n\n\n\n\n    yum install policycoreutils-python\n\n\n\n\n    semanage fcontext -a -t httpd_sys_content_t '/opt/librenms/logs(/.*)?'\n    semanage fcontext -a -t httpd_sys_rw_content_t '/opt/librenms/logs(/.*)?'\n    restorecon -RFvv /opt/librenms/logs/\n\n\n\n\nSet selinux to allow httpd to sendmail\n\n\n    setsebool -P httpd_can_sendmail=1\n\n\n\n\nStart the web-server:\n\n\n# For HTTPd (Apache):\nservice httpd restart\n\n# For Nginx:\nservice nginx restart\n\n\n\nWeb Installer\n\n\nAt this stage you can launch the web installer by going to \nhttp://IP/install.php\n and follow the on-screen instructions. Alternatively if you want to continue the setup manually then perform the manual install steps. If you cannot reach the installer, stop here and solve that problem before proceeding. Afterwards, Add the following line to the end of \nconfig.php\n:\n\n\n$config['fping'] = \"/usr/sbin/fping\";\n\n\n\nManual Install\n\n\nYou may skip this section if the web installer succeeded.\n\n\n    cp config.php.default config.php\n    vi config.php\n\n\n\n\nChange the values to the right of the equal sign for lines beginning with \n$config[db_]\n to match your database information as previously configured.\n\n\nChange the value of \n$config['snmp']['community']\n from \npublic\n to whatever your default read-only SNMP community is.  If you have multiple existing communities in your environment, set it to the most common.\n\n\nAdd the following line to the end of \nconfig.php\n:\n\n\n$config['fping'] = \"/usr/sbin/fping\";\n\n\n\nImportant: Be sure you have no characters (including whitespace like: newlines, spaces, tabs, etc) outside of the \n?php?\n blocks. Your graphs will break otherwise and there will be no error messages to indicate otherwise!\n\n\nInitialize the database\n\n\nInitiate the follow database with the following command:\n\n\nphp build-base.php\n\n\n\nCreate admin user\n\n\nCreate the admin user - priv should be 10\n\n\nphp adduser.php \nname\n \npass\n 10 \nemail\n\n\n\n\nSubstitute your desired username, password and email address--and leave the angled brackets off.\n\n\nValidate your install\n\n\nAfter performing the manual install or web install, be sure to run validate.php as root in the librenms directory:\n\n\nphp validate.php\n\n\n\nThis will check your install to verify it is set up correctly.\n\n\nAdd localhost\n\n\nphp addhost.php localhost public v2c\n\n\n\nReplace \npublic\n to match what you set in \n/etc/snmp/snmpd.conf\n.  This command also assumes you are using SNMP v2c.  If you're using v3, there are additional steps (NOTE: instructions for SNMPv3 to come).\n\n\nDiscover localhost:\n\n\nphp discovery.php -h all\n\n\n\nCreate cronjob\n\n\nThe polling method used by LibreNMS is \npoller-wrapper.py\n, which was placed in the public domain by its author.  By default, the LibreNMS cronjob runs \npoller-wrapper.py\n with 16 threads.  The current LibreNMS recommendation is to use 4 threads per core.  The default if no thread count is \n16 threads\n.\n\n\nIf the thread count needs to be changed, you can do so by editing the cron file (\n/etc/cron.d/librenms\n).\n Just add a number after \npoller-wrapper.py\n, as in the below example:\n\n\n/opt/librenms/poller-wrapper.py 12 \n /dev/null 2\n1\n\n\n\nCreate the cronjob\n\n\ncp librenms.nonroot.cron /etc/cron.d/librenms\n\n\n\nCopy logrotate config\n\n\nLibreNMS keeps logs in \n/opt/librenms/logs\n. Over time these can become large and be rotated out.  To rotate out the old logs you can use the provided logrotate config file:\n\n\ncp misc/librenms.logrotate /etc/logrotate.d/librenms\n\n\n\nDaily Updates\n\n\nLibreNMS performs daily updates by default.  At 00:15 system time every day, a \ngit pull --no-edit --quiet\n is performed.  You can override this default by editing\nyour \nconfig.php\n file.  Remove the comment (the \n#\n mark) on the line:\n\n\n#$config['update'] = 0;\n\n\n\nso that it looks like this:\n\n\n$config['update'] = 0;\n\n\n\nInstall complete\n\n\nPlease allow for 2-3 runs of the poller-wrapper for data to start appearing in the WebUI.\nIf you don't see data after this, please refer to the \nFAQ\n for assistance.\n\n\nThat's it!  You now should be able to log in to http://librenms.example.com/.  Please note that we have not covered HTTPS setup in this example, so your LibreNMS install is not secure by default.  Please do not expose it to the public Internet unless you have configured HTTPS and taken appropriate web server hardening steps.\n\n\nIt would be great if you would consider opting into the stats system we have, please see \nthis page\n on what it is and how to enable it.", 
            "title": "Installation CentOS 6 Apache Nginx"
        }, 
        {
            "location": "/Installation/Installation-CentOS-6-Apache-Nginx/#on-the-db-server", 
            "text": "This host is where the MySQL database runs.  It could be the same machine as your network management server (this is the most common initial deployment scenario).   ** Whilst we are working on ensuring LibreNMS is compatible with MySQL strict mode, for now, please disable this after mysql is installed.   You are free to choose between using MySQL or MariaDB:  MySQL  yum install net-snmp mysql-server mysql-client\nchkconfig mysqld on\nservice mysqld start  MariaDB  yum install net-snmp mariadb-server mariadb-client\nchkconfig mariadb on\nservice mariadb start  Now continue with the installation:  chkconfig snmpd on\nservice snmpd start\nmysql_secure_installation\nmysql -uroot -p  Enter the MySQL/MariaDB root password to enter the command-line interface.  Create database.  CREATE DATABASE librenms CHARACTER SET utf8 COLLATE utf8_unicode_ci;\nCREATE USER 'librenms'@'localhost' IDENTIFIED BY 'password';\nGRANT ALL PRIVILEGES ON librenms.* TO 'librenms'@'localhost';\nFLUSH PRIVILEGES;\nexit  Replace  ip  above with the IP of the server running LibreNMS.  If your database is on the same server as LibreNMS, use  localhost  as the IP address.  Edit the mysql/mariadb configuration file:  vim /etc/my.cnf  Add the following line:  innodb_file_per_table=1  If you are deploying a separate database server, you also need to specify the  bind-address .  If your MySQL database resides on the same server as LibreNMS, you should skip this step.  bind-address =  ip   If you see a line that starts  sql-mode  then change this to  sql-mode=\"\" .  Save, and restart MySQL/MariaDB to apply your changes:  service mysqld restart  or  service mariadb restart", 
            "title": "On the DB Server"
        }, 
        {
            "location": "/Installation/Installation-CentOS-6-Apache-Nginx/#on-the-nms", 
            "text": "Install necessary software.  The packages listed below are an all-inclusive list of packages that were necessary on a clean install of CentOS 6.x.  It also requires the EPEL repository. Net_IPv6 is required even if your network environment does not support IPv6.  Note if not using HTTPd (Apache): RHEL requires  httpd  to be installed regardless of of  nginx 's (or any other web-server's) presence.      yum install epel-release\n    yum install php php-cli php-gd php-mysql php-snmp php-pear php-curl httpd net-snmp graphviz graphviz-php mysql ImageMagick jwhois nmap mtr rrdtool MySQL-python net-snmp-utils vixie-cron php-mcrypt fping git\n    pear install Net_IPv4-1.3.4\n    pear install Net_IPv6-1.2.2b2", 
            "title": "On the NMS"
        }, 
        {
            "location": "/Installation/Installation-CentOS-6-Apache-Nginx/#configure-snmpd-on-localhost", 
            "text": "Edit  /etc/snmp/snmpd.conf  to enable self-polling.  An absolute minimal config for snmpd is:  rocommunity public 127.0.0.1  You may either edit the default configuration file to your liking, or backup the default config file and replace it entirely with your own. To apply your changes, run  service snmpd restart  for Centos 6.x. If you have deployed a separate database server, you will likely want to configure snmpd on that host as well.", 
            "title": "Configure SNMPD on localhost"
        }, 
        {
            "location": "/Installation/Installation-CentOS-6-Apache-Nginx/#adding-the-librenms-user-for-apache", 
            "text": "useradd librenms -d /opt/librenms -M -r\n    usermod -a -G librenms apache", 
            "title": "Adding the librenms-user for Apache"
        }, 
        {
            "location": "/Installation/Installation-CentOS-6-Apache-Nginx/#adding-the-librenms-user-for-nginx", 
            "text": "useradd librenms -d /opt/librenms -M -r\n    usermod -a -G librenms nginx", 
            "title": "Adding the librenms-user for Nginx"
        }, 
        {
            "location": "/Installation/Installation-CentOS-6-Apache-Nginx/#using-httpd-apache2", 
            "text": "Set  httpd  to start on system boot.  chkconfig --levels 235 httpd on  In  /etc/php.ini , ensure  date.timezone  is set to your preferred time zone.  See http://php.net/manual/en/timezones.php for a list of supported timezones.  Valid\nexamples are: \"America/New York\", \"Australia/Brisbane\", \"Etc/UTC\".\nPlease also ensure that  allow_url_fopen  is enabled. Other functions needed for LibreNMS include  exec,passthru,shell_exec,escapeshellarg,escapeshellcmd,proc_close,proc_open,popen .  Next, add the following to  /etc/httpd/conf.d/librenms.conf  If you are running Apache below version 2.2.18:  VirtualHost *:80 \n  DocumentRoot /opt/librenms/html/\n  ServerName  librenms.example.com\n  CustomLog /opt/librenms/logs/access_log combined\n  ErrorLog /opt/librenms/logs/error_log\n  AllowEncodedSlashes On\n   Directory  /opt/librenms/html/ \n    AllowOverride All\n    Options FollowSymLinks MultiViews\n   /Directory  /VirtualHost   If you are running Apache 2.2.18 or higher:  VirtualHost *:80 \n  DocumentRoot /opt/librenms/html/\n  ServerName  librenms.example.com\n  CustomLog /opt/librenms/logs/access_log combined\n  ErrorLog /opt/librenms/logs/error_log\n  AllowEncodedSlashes NoDecode\n   Directory  /opt/librenms/html/ \n    AllowOverride All\n    Options FollowSymLinks MultiViews\n    Require all granted\n   /Directory  /VirtualHost   If the file  /etc/httpd/conf.d/welcome.conf  exists, you will want to remove that as well unless you're familiar with  Name-based Virtual Hosts .  rn /etc/httpd/conf.d/welcome.conf /etc/httpd/conf.d/welcome.conf.bak", 
            "title": "Using HTTPd (Apache2)"
        }, 
        {
            "location": "/Installation/Installation-CentOS-6-Apache-Nginx/#using-nginx-and-php-fpm", 
            "text": "If you choose to run Nginx, you will need to install necessary extra software and let it start on system boot.      yum install nginx php-fpm\n    chkconfig nginx on\n    chkconfig php-fpm on  Modify permissions and configuration for  php-fpm  to use nginx credentials.  mkdir /var/lib/php/session\nchown root:nginx /var/lib/php -R\nvim /etc/php-fpm.d/www.conf      # At line #12: Change `listen` to `/var/run/php5-fpm.sock`\n                                # At line #39-41: Change the `user` and `group` to `nginx`  Add configuration for  nginx  at  /etc/nginx/conf.d/librenms.conf  with the following content:  server {\n listen      80;\n server_name librenms.example.com;\n root        /opt/librenms/html;\n index       index.php;\n access_log  /opt/librenms/logs/access_log;\n error_log   /opt/librenms/logs/error_log;\n location / {\n  try_files $uri $uri/ @librenms;\n }\n location ~ \\.php {\n  fastcgi_param PATH_INFO $fastcgi_path_info;\n  include fastcgi.conf;\n  fastcgi_split_path_info ^(.+\\.php)(/.+)$;\n  fastcgi_pass unix:/var/run/php5-fpm.sock;\n }\n location ~ /\\.ht {\n  deny all;\n }\n location @librenms {\n  rewrite api/v0(.*)$ /api_v0.php/$1 last;\n  rewrite ^(.+)$ /index.php/$1 last;\n }\n}", 
            "title": "Using Nginx and PHP-FPM"
        }, 
        {
            "location": "/Installation/Installation-CentOS-6-Apache-Nginx/#cloning", 
            "text": "You can clone the repository via HTTPS or SSH.  In either case, you need to ensure the appropriate port (443 for HTTPS, 22 for SSH) is open in the outbound direction for your server.      cd /opt\n    git clone https://github.com/librenms/librenms.git librenms\n    cd /opt/librenms  NOTE: The recommended method of cloning a git repository is HTTPS.  If you would like to clone via SSH instead, use the command  git clone git@github.com:librenms/librenms.git librenms  instead.", 
            "title": "Cloning"
        }, 
        {
            "location": "/Installation/Installation-CentOS-6-Apache-Nginx/#prepare-the-web-interface", 
            "text": "To prepare the web interface, you'll need to create and chown a directory as well as create an Apache vhost.  First, create and chown the  rrd  directory and create the  logs  directory      mkdir rrd logs\n    chown -R librenms:librenms /opt/librenms\n    chmod 775 rrd  If you're planing on running rrdcached, make sure that the path is also chmod'ed to 775 and chown'ed to librenms:librenms.  SELinux   if you're using SELinux you need to allow web server user to write into logs directory.\nsemanage tool is a part of policycoreutils-python, so if don't have it, you can install it Please note that running LibreNMS with SELinux is still experimental and we cannot guarantee that everything will be working fine for now.       yum install policycoreutils-python      semanage fcontext -a -t httpd_sys_content_t '/opt/librenms/logs(/.*)?'\n    semanage fcontext -a -t httpd_sys_rw_content_t '/opt/librenms/logs(/.*)?'\n    restorecon -RFvv /opt/librenms/logs/  Set selinux to allow httpd to sendmail      setsebool -P httpd_can_sendmail=1", 
            "title": "Prepare the Web Interface"
        }, 
        {
            "location": "/Installation/Installation-CentOS-6-Apache-Nginx/#start-the-web-server", 
            "text": "# For HTTPd (Apache):\nservice httpd restart\n\n# For Nginx:\nservice nginx restart", 
            "title": "Start the web-server:"
        }, 
        {
            "location": "/Installation/Installation-CentOS-6-Apache-Nginx/#web-installer", 
            "text": "At this stage you can launch the web installer by going to  http://IP/install.php  and follow the on-screen instructions. Alternatively if you want to continue the setup manually then perform the manual install steps. If you cannot reach the installer, stop here and solve that problem before proceeding. Afterwards, Add the following line to the end of  config.php :  $config['fping'] = \"/usr/sbin/fping\";", 
            "title": "Web Installer"
        }, 
        {
            "location": "/Installation/Installation-CentOS-6-Apache-Nginx/#manual-install", 
            "text": "You may skip this section if the web installer succeeded.      cp config.php.default config.php\n    vi config.php  Change the values to the right of the equal sign for lines beginning with  $config[db_]  to match your database information as previously configured.  Change the value of  $config['snmp']['community']  from  public  to whatever your default read-only SNMP community is.  If you have multiple existing communities in your environment, set it to the most common.  Add the following line to the end of  config.php :  $config['fping'] = \"/usr/sbin/fping\";  Important: Be sure you have no characters (including whitespace like: newlines, spaces, tabs, etc) outside of the  ?php?  blocks. Your graphs will break otherwise and there will be no error messages to indicate otherwise!  Initialize the database  Initiate the follow database with the following command:  php build-base.php  Create admin user  Create the admin user - priv should be 10  php adduser.php  name   pass  10  email   Substitute your desired username, password and email address--and leave the angled brackets off.", 
            "title": "Manual Install"
        }, 
        {
            "location": "/Installation/Installation-CentOS-6-Apache-Nginx/#validate-your-install", 
            "text": "After performing the manual install or web install, be sure to run validate.php as root in the librenms directory:  php validate.php  This will check your install to verify it is set up correctly.", 
            "title": "Validate your install"
        }, 
        {
            "location": "/Installation/Installation-CentOS-6-Apache-Nginx/#add-localhost", 
            "text": "php addhost.php localhost public v2c  Replace  public  to match what you set in  /etc/snmp/snmpd.conf .  This command also assumes you are using SNMP v2c.  If you're using v3, there are additional steps (NOTE: instructions for SNMPv3 to come).  Discover localhost:  php discovery.php -h all", 
            "title": "Add localhost"
        }, 
        {
            "location": "/Installation/Installation-CentOS-6-Apache-Nginx/#create-cronjob", 
            "text": "The polling method used by LibreNMS is  poller-wrapper.py , which was placed in the public domain by its author.  By default, the LibreNMS cronjob runs  poller-wrapper.py  with 16 threads.  The current LibreNMS recommendation is to use 4 threads per core.  The default if no thread count is  16 threads .  If the thread count needs to be changed, you can do so by editing the cron file ( /etc/cron.d/librenms ).\n Just add a number after  poller-wrapper.py , as in the below example:  /opt/librenms/poller-wrapper.py 12   /dev/null 2 1  Create the cronjob  cp librenms.nonroot.cron /etc/cron.d/librenms", 
            "title": "Create cronjob"
        }, 
        {
            "location": "/Installation/Installation-CentOS-6-Apache-Nginx/#copy-logrotate-config", 
            "text": "LibreNMS keeps logs in  /opt/librenms/logs . Over time these can become large and be rotated out.  To rotate out the old logs you can use the provided logrotate config file:  cp misc/librenms.logrotate /etc/logrotate.d/librenms", 
            "title": "Copy logrotate config"
        }, 
        {
            "location": "/Installation/Installation-CentOS-6-Apache-Nginx/#daily-updates", 
            "text": "LibreNMS performs daily updates by default.  At 00:15 system time every day, a  git pull --no-edit --quiet  is performed.  You can override this default by editing\nyour  config.php  file.  Remove the comment (the  #  mark) on the line:  #$config['update'] = 0;  so that it looks like this:  $config['update'] = 0;", 
            "title": "Daily Updates"
        }, 
        {
            "location": "/Installation/Installation-CentOS-6-Apache-Nginx/#install-complete", 
            "text": "Please allow for 2-3 runs of the poller-wrapper for data to start appearing in the WebUI.\nIf you don't see data after this, please refer to the  FAQ  for assistance.  That's it!  You now should be able to log in to http://librenms.example.com/.  Please note that we have not covered HTTPS setup in this example, so your LibreNMS install is not secure by default.  Please do not expose it to the public Internet unless you have configured HTTPS and taken appropriate web server hardening steps.  It would be great if you would consider opting into the stats system we have, please see  this page  on what it is and how to enable it.", 
            "title": "Install complete"
        }, 
        {
            "location": "/Installation/Installation-(Debian-Ubuntu)/", 
            "text": "", 
            "title": "Installation (Debian Ubuntu)"
        }, 
        {
            "location": "/Installation/Installation-(RHEL-CentOS)/", 
            "text": "", 
            "title": "Installation (RHEL CentOS)"
        }
    ]
}